{"version":3,"sources":["resources.jsx","assets/Logo.png","session/login.jsx","session/register.jsx","loading.jsx","doctorViews/citas/cita.create.jsx","doctorViews/citas/citas.jsx","assets/diagnosticos2.js","doctorViews/expedientes/nuevaNota.jsx","doctorViews/expedientes/detalleRecetaForPrint.jsx","doctorViews/expedientes/detalleReceta.jsx","doctorViews/expedientes/lastCita.jsx","doctorViews/expedientes/notasEvolucion.jsx","doctorViews/expedientes/hojaEnfermeriaPrint.jsx","doctorViews/expedientes/hojasEnfermeria.jsx","doctorViews/expedientes/detalleNota.jsx","doctorViews/expedientes/detalleHistoria.jsx","doctorViews/pacientes/detalles.paciente.jsx","doctorViews/expedientes/expedientes.jsx","doctorViews/perfil/perfilEdit.jsx","doctorViews/perfil/service.add.jsx","doctorViews/perfil/configuration.jsx","doctorViews/perfil/perfil.jsx","assets/Icon.png","doctorViews/home/home.jsx","doctorViews/pacientes/register.patient.jsx","doctorViews/pacientes/main.pacientes.jsx","escalas/escalasCreateGeneralLink.jsx","escalas/getEscalas.jsx","escalas/depresion/depresion_1/depresionResults.jsx","escalas/depresion/depresion_2/depresion2_results.jsx","escalas/depresion/depresionMenu.jsx","escalas/ketamina/ketamina_catalog.jsx","escalas/ketamina/ketaminaDetails.jsx","escalas/ketamina/ketaminaResults.jsx","escalas/estres_post_traumatico/post_traumatico/p_t_catalog.jsx","escalas/estres_post_traumatico/post_traumatico/p_t_details.jsx","escalas/estres_post_traumatico/post_traumatico/p_t_results.jsx","escalas/estres_post_traumatico/p_t_mexicana/p_t_mexicana_catalog.jsx","escalas/estres_post_traumatico/p_t_mexicana/p_t_mexicana_details.jsx","escalas/estres_post_traumatico/p_t_mexicana/p_t_mexicana_results.jsx","escalas/estres_post_traumatico/postTraumaticoMenu.jsx","escalas/dolor/dolor_catalog.jsx","escalas/dolor/dolorDetails.jsx","escalas/dolor/dolorResults.jsx","escalas/satisfaccion/satisfaccion_catalog.jsx","escalas/satisfaccion/satisfaccionDetails.jsx","escalas/satisfaccion/satisfaccionResults.jsx","escalas/escalasMenu.jsx","doctorViews/balances/create-balance.jsx","doctorViews/balances/ticket-for-print.jsx","doctorViews/balances/balances.jsx","doctorViews/cortes/corteForPrint.jsx","doctorViews/cortes/details.corte.jsx","doctorViews/cortes/main.cortes.jsx","doctorViews/doctorApp.js","recepcionViews/pacientesDash/register.patient.jsx","recepcionViews/pacientesDash/dash.patients.jsx","recepcionViews/pacientesDash/move.patients.jsx","recepcionViews/pacientesDash/detalles.paciente.jsx","recepcionViews/pacientesDash/side.patients.jsx","recepcionViews/pacientesDash/main.patients.jsx","recepcionViews/citas/create-cita-for-medic.jsx","recepcionViews/citas/hospital-tab.citas.jsx","recepcionViews/citas/main.citas.jsx","recepcionViews/perfilEdit.jsx","recepcionViews/perfil.jsx","recepcionViews/home/home.jsx","recepcionViews/historial.jsx","recepcionViews/pacientes/register.user.jsx","recepcionViews/pacientes/dash.patients.hospital-tab.jsx","recepcionViews/pacientes/dash.patients.main.jsx","recepcionViews/pacientes/main.pacientes.jsx","recepcionViews/ingresos/create-ingreso.jsx","recepcionViews/ingresos/ticket-for-print.jsx","recepcionViews/ingresos/ingresos.jsx","escalas/ketamina/ketaminaEncuesta.jsx","escalas/depresion/depresion_1/depresion_catalog.jsx","escalas/depresion/depresion_1/depresionEncuesta.jsx","escalas/depresion/depresion_2/depresion2_catalog.jsx","escalas/depresion/depresion_2/depresion2_encuesta.jsx","escalas/dolor/dolorEncuesta.jsx","escalas/estres_post_traumatico/post_traumatico/p_t_encuesta.jsx","escalas/estres_post_traumatico/p_t_clinico/p_t_clinico_catalog.jsx","escalas/estres_post_traumatico/p_t_clinico/p_t_clinico_encuesta.jsx","escalas/estres_post_traumatico/p_t_mexicana/p_t_mexicana_encuesta.jsx","escalas/satisfaccion/satisfaccionEncuesta.jsx","session/public_escalas_routes.jsx","recepcionViews/horarios/horarios.jsx","recepcionViews/recepcionApp.js","patientViews/misCitas.jsx","patientViews/recetas.jsx","patientViews/perfilEdit.jsx","patientViews/perfil.jsx","patientViews/home/home.jsx","patientViews/patientApp.js","admHospitalViews/citas/create-cita-for-medic.jsx","admHospitalViews/citas/hospital-tab.citas.jsx","admHospitalViews/citas/main.citas.jsx","admHospitalViews/patients/register.user.jsx","admHospitalViews/patients/dash.patients.hospital-tab.jsx","admHospitalViews/patients/dash.patients.main.jsx","admHospitalViews/patients/main.users.jsx","admHospitalViews/doctors/register.doctor.jsx","admHospitalViews/doctors/dash.doctors.hospitalTab.jsx","admHospitalViews/doctors/dash.doctors.main.jsx","admHospitalViews/doctors/main.doctors.jsx","admHospitalViews/sucursal.jsx","admHospitalViews/perfil/perfil.edit.jsx","admHospitalViews/perfil/perfil.administrador.jsx","admHospitalViews/ingresos/create-ingreso.jsx","admHospitalViews/ingresos/ticket-for-print.jsx","admHospitalViews/ingresos/ingresos.jsx","admHospitalViews/cortes/details.corte.jsx","admHospitalViews/cortes/main.cortes.jsx","admHospitalViews/receptionists/register.receptionist.jsx","admHospitalViews/receptionists/dash.receptionists.hospitalTab.jsx","admHospitalViews/receptionists/dash.receptionists.main.jsx","admHospitalViews/receptionists/horarios.receptionists.jsx","admHospitalViews/receptionists/main.receptionists.jsx","admHospitalViews/enfermeros/register.enfermero.jsx","admHospitalViews/enfermeros/dash.enfermeros.hospitalTab.jsx","admHospitalViews/enfermeros/dash.enfermeros.main.jsx","admHospitalViews/enfermeros/main.enfermeros.jsx","admHospitalViews/adminHospitalApp.js","superAdminViews/patients/register.patient.jsx","superAdminViews/patients/dash.patients.jsx","superAdminViews/patients/main.patients.jsx","superAdminViews/doctors/register.doctor.jsx","superAdminViews/doctors/dash.doctors.jsx","superAdminViews/doctors/side.doctors.jsx","superAdminViews/doctors/main.doctors.jsx","superAdminViews/hospitals/register.hospital.jsx","superAdminViews/hospitals/dash.hospitals.jsx","superAdminViews/hospitals/side.hospitals.jsx","superAdminViews/hospitals/main.hospitals.jsx","superAdminViews/admins/register.admin.jsx","superAdminViews/admins/dash.admins.jsx","superAdminViews/admins/side.admins.jsx","superAdminViews/admins/main.admins.jsx","superAdminViews/receptionists/register.receptionist.jsx","superAdminViews/receptionists/dash.receptionists.jsx","superAdminViews/receptionists/side.receptionists.jsx","superAdminViews/receptionists/main.receptionists.jsx","superAdminViews/superAdminApp.js","App.js","index.js"],"names":["API","S_API","IMAGE_API","logout","localStorage","getItem","sendSchedule","removeItem","window","location","href","_id","usuario","scheduleBody","fecha_hora_entrada","fecha_hora_salida","Date","notas","sendDataBody","then","JSON","parse","getData","endpoint","fetch","mode","response","json","data","deleteData","method","headers","res","console","log","message","info","catch","error","updateData","values","body","stringify","success","Footer","style","display","alignItems","justifyContent","height","backgroundColor","color","marginLeft","estados","myHospitals","horarios","map","item","ids_hospitales","Login","lg","span","offset","md","sm","xs","hoverable","justify","src","logo","alt","width","name","className","initialValues","remember","onFinish","setItem","user","rol","token","err","alert","Item","rules","required","prefix","UserOutlined","placeholder","Password","LockOutlined","valuePropName","noStyle","block","type","htmlType","Option","Select","formItemLayout","labelCol","wrapperCol","tailFormItemLayout","Register","Form","useForm","form","useState","sucursales","setSucursales","sucursalesLoading","setSucursalesLoading","useEffect","getHospitalesData","prefixSelector","value","avatar","estatus","confirm","agreement","sucursal","horario","scrollToFirstError","label","hasFeedback","dependencies","getFieldValue","validator","_","Promise","reject","Error","resolve","addonBefore","List","fields","add","remove","key","restField","marginBottom","align","s","nombre","MinusCircleOutlined","onClick","icon","PlusOutlined","Loading","margin","padding","textAlign","background","borderRadius","CreateCitaForm","props","configuracion","costo_cita","forEach","h","misPacientes","setMisPacientes","setIsOnline","setHospital","usesCostoBase","setUsesCostoBase","costo","setCosto","getPacientesOfDoctor","rs","p","createBalance","_cita","_fecha_hora","balanceBody","tipo","medico","cita","monto","forma_de_pago","fecha_hora","estado","tratamiento","finally","getCitasData","setIsModalOpen","setEditingCita","id_nueva_cita","onFinishFailed","errorInfo","autoComplete","isOnline","duracion","options","onChange","checked","showTime","format","use12Hours","tratamientos_ofrecidos","t","CreateCita","handCreateleCancel","title","open","isOpenModal","onOk","onCancel","destroyOnClose","footer","isCreateModalOpen","localizer","dayjsLocalizer","dayjs","Citas","citasData","setCitasData","loading","setLoading","editingCita","isModalOpen","handleCancel","citaForEdit","setCitaForEdit","setFecha_hora","setIsCreateModalOpen","start","endDate","setTime","getTime","end","id","selectEvent","e","hospital","sucursa","paciente","scrollToTime","now","defaultDate","selectable","events","startAccessor","endAccessor","messages","next","previous","today","month","week","day","defaultView","onDoubleClickEvent","onSelectEvent","onSelecting","onSelectSlot","action","description","onConfirm","okText","cancelText","danger","toLocaleDateString","toLocaleTimeString","comentarios","diagnosticos","F00","F01","F02","F03","F04","F05","F06","F07","F09","F40","F41","F42","F43","F45","F48","F50","F51","F52","F53","F54","F55","F59","F60","F70","F71","F72","F73","F78","F79","F80","F81","F82","F83","F84","F88","F89","F90","F91","F92","F93","F94","F95","F98","F99","X60","X61","X62","X63","X64","X65","X66","X67","X68","X69","X70","X71","X72","X73","X74","X75","X76","X77","X78","X79","X80","X81","X82","X83","X84","Y46","Y47","Y49","Y50","Y51","Y57","OptGroup","Dragger","Upload","TextArea","Input","handleChange","NuevaNota","estudiosFiles","setEstudiosFiles","nota","id_medico","id_usuario","recetas","estudios","newNota","prevExpNotas","push","id_nota","id_expediente","dragDropProps","multiple","status","file","fileList","onDrop","dataTransfer","files","InboxOutlined","setIsModalVisible","marginTop","rows","showSearch","Object","keys","k","sk","RecetaDocument","styles","StyleSheet","create","page","flexDirection","sectionFull","marginHorizontal","flexGrow","section","image","desc","fontSize","footText","prescription","Receta","size","orientation","logoHospital","borderBottomColor","borderBottomWidth","especialidad","universidades","u","length","carrera","universidad","toUpperCase","cedula","toLocaleString","lineHeight","receta","prescripcion","email","telefono","Logo","DetalleReceta","isDoctor","recetaData","setRecetaData","recetaLoading","setRecetaLoading","recetaForEdit","setRecetaForEdit","isModalVisible","isEditingModalVisible","setIsEditingModalVisible","isPrintingModalVisible","setIsPrintingModalVisible","handlePrintCancel","setIsLogoSelected","setLogoHospital","nombreHospital","setNombreHospital","isLogoSelected","getRecetasData","finifhGet","newReceta","id_receta","editReceta","r","printReceta","shape","ghost","whiteSpace","FormOutlined","PrinterOutlined","bordered","Grid","Paragraph","Typography","LastCita","setCita","lastBalance","setLastBalance","updateLastBalance","newMonto","newLastBalance","ultimaCita","eventos","fechaActual","eventosPasados","filter","evento","sort","a","b","fechaA","getLastCta","last","bl","LastBalance","columnGap","DollarOutlined","editable","CalendarOutlined","marginRight","ClockCircleOutlined","substring","NotasEvolucion","_notas_evolucion","evoForEdit","setEvoForEdit","showModal","nota_evo","createdAt","temperatura","frecuencia_respiratoria","frecuencia_cardiaca","presion_arterial","saturacion_oxigeno","EditOutlined","o","find","n","indexToUpdate","findIndex","notas_evolucion","HojaDocument","datosPaciente","peso","dosis","inicio","intermedio","termino","observaciones","aplicacion","medicos_asignados","header","marginVertical","subtitle","content","rowGap","text","table","borderStyle","borderWidth","borderRightWidth","tableRow","tableCol","borderLeftWidth","borderTopWidth","tableCell","tableContainer","tableHeader","View","borderColor","centeredText","textarea","fecha","weekday","year","timeZone","m","hora","alignSelf","HojasEnfermeria","hojas_enfermeria","hojaEdit","setHojaEdit","handleOk","isAddModalOpen","setIsAddModalOpen","handleAddOk","gridStyle","printHoja","hoja","i","gap","fontWeight","layout","locale","srules","DetalleNota","notaData","setNotaData","notaLoading","setnotaLoading","notaForEdit","isEditModalVisible","setIsEditModalVisible","id_paciente","getNotasData","finishGet","createNota","nt","newNotaBody","edad","talla","imc","Observaciones","items","children","gutter","reverse","DetalleHistoria","historia","detalles_paciente","historiaData","setHistoriaData","setHistoriaLoading","editing","setEditing","getHistoriaData","updateHistoria","DatosClinicos","sexo","HistoriaDetails","historial","wordWrap","disabled","position","bottom","right","DetallesPaciente","setIsEditModalOpen","paddingBottom","MailOutlined","MobileOutlined","paddingRight","Expedientes","expedientesData","setExpedientesData","expedientesLoading","setExpedientesLoading","setHistoria","setNotas","getExpedientesData","addHistoria","createPAtientData","usr","id_historia","PerfilEdit","perfil","setAvatar","AddService","isOpen","handleClose","service","profileData","getProfileData","setinitialService","newData","onFinishEdit","foundIndex","svc","maxWidth","Configuration","correo","setProfileData","editingCostoCita","setEditingCostoCita","setisModalOpen","servicioForEdit","setServicioForEdit","confirmDelete","val","splice","columns","dataIndex","render","record","handleEditService","CostoCitaForm","onFinishEditPrice","newConfig","assign","alignContent","dataSource","Perfil","isLoading","setIsLoading","editPerfil","MiniCard","borderBottom","DetailsProfile","Component","RegisterForm","postBody","setAdding","password","certificacion","responsable","res_name","res_phone","url","user_id","finishUpdate","getPacientesData","overflowY","UploadOutlined","whitespace","min","max","defaultChecked","errors","field","index","validateTrigger","ErrorList","MainPacientes","pacientesData","setPacientesData","isRegisterModalOpen","setIsRegisterModalOpen","isEditModalOpen","activePatient","setActivePatient","fecha_nacimiento","dropdownStyle","optionFilterProp","found","onSearch","filterOption","input","option","toLowerCase","includes","EscalasCreateGeneralLink","selectedPatient","setSelectedPatient","link","setLink","medicosData","setMedicosData","setMedico","imageRef","useRef","myDoctors","doctorsData","doctorsFound","id_hospital","doctor","handleDownload","toPng","current","dataUrl","document","createElement","download","click","handleCopy","toBlob","blob","navigator","clipboard","write","ClipboardItem","paddingTop","l","writeText","target","rel","ref","getAllEscalas","setData","ids_medicos","DepresionResults","encuestasData","setEncuestasData","getEncuestasData","Depresion2Results","setCountersData","setLoadingCounters","getCounters","allEncuestas","results","pac","aprs","enc","latest","at","respuestas_depresion2_gpc","hrsd","madrs","phq","DepresionMenu","catalogo_efectos","desrealizacion","despersonalizacion","amnesia","KetaminaDetails","respuestas_ketamina","escalaDetails","Aumento_de_la_Presión_Arterial","Debilidad_o_Mareos_ligeros","Dolor_de_cabeza","Mareos","Nauseas","Sentimientos_de_Ansiedad","preg","KetaminaResults","ketaminaData","setKetaminaData","escalaForDetails","setEscalaForDetails","isDetailsModalOpen","setIsDetailsModalOpen","detailsColumns","sorter","scroll","x","post_catalog","PTDetails","Number","PostTraumaticoResults","setColumns","addColumns","respuestas_ept1_davidson","catalog_ept_mexicana","PTMXDetails","PostTraumaticoMexicanaResults","respuestas_ept_3mx","PostTraumaticoMenu","dolor_catalog","initialDolorValues","reduce","obj","DolorDetails","q","String","DolorResults","respuestas_dolor","satisfaccion_catalog","SatisfaccionDetails","SatisfaccionResults","encuesta_satisfaccion","escalasMenuItems","Escalas","defaultActiveKey","tabPosition","CreateBalance","setBalanceForEdit","balanceForEdit","getBalancesData","titleContainer","reportTitle","fontFamily","textTransform","sellerBuyerInfo","infoTitle","infoText","tableColHeader","tableCellHeader","total","company","Ticket","ingresos","seller","buyer","concepto","toFixed","acc","Text","Balances","balancesData","setBalancesData","ingresoForEdit","setIngresoForEdit","isIngresoModalOpen","setIsIngresoModalOpen","showIngresoModal","egresoForEdit","setEgresoForEdit","isEgresoModalOpen","setIsEgresoModalOpen","ingresoForPrint","setIngresoForPrint","isTicketModalOpen","setIsTicketModalOpen","abono","factura","CheckCircleTwoTone","CorteDocument","totales","ingresosTotales","totalPendiente","totalPagados","totalPendientes","totalCobros","Detalles","isPrinting","setIsPrinting","setTotales","corte","totalIngresos","listOfDeudors","c","deudasTotales","cobrosTotales","pagados","pendientes","MatchPatient","patient","exportToExcel","ws","XLSX","utils","json_to_sheet","wb","Sheets","SheetNames","excelBuffer","bookType","Blob","FileSaver","Cortes","cortesData","setCortesData","corteForDetails","setCorteForDetails","getCortesData","fecha_inicio","fecha_cierre","placement","newCorte","comentario","Navigator","Navbar","bg","variant","expand","Container","Brand","Toggle","Collapse","Nav","Link","DoctorApp","path","suffixSelector","residence","addonAfter","Dash","MovePatients","getMedicosData","userMedicos","Header","Layout","Content","Sider","SideMenu","handleClick","state","collapsed","onCollapse","setState","toggle","minHeight","theme","collapsible","this","defaultSelectedKeys","to","UserAddOutlined","SwapOutlined","paddingLeft","MenuOutlined","cursor","exact","component","Patients","isCreating","medicos","setMedicos","servicios","setServicios","errorMessage","setErrorMessage","enableCreateCita","setEnableCreateCita","costoBaseCita","setCostoBaseCita","handlePatientChange","handleMedicochange","tipo_pago","_concepto","servicio","selected","labelInValue","enableCreate","HospitalTab","dl","med","findPatientsOfMyMedicos","setProfileForEdit","Historial","id_sucursales","findMyDoctors","arr","reload","errorFields","RegisterModal","setValue","setPaciente","editingProfile","setEditingProfile","searchText","setSearchText","getPacientes","meds","doc","onFilter","newPatients","deleteUser","pacientesDataFiltered","DetalleUsuario","SearchOutlined","pagination","Users","getIngresos","ingreso","userName","citaName","Ingresos","ingresosData","setIngresosData","promises","all","resultados","flat","defaultSortOrder","pagado","moment","utc","handleEditIngreso","KetaminaEncuesta","encuestaNotExists","setEncuestaNotExists","checking","setChecking","pacienteData","setPacienteData","medicoData","setMedicoData","checkEncuesta","idpaciente","idmedico","marks","ketamina","ketaminaiv","ketaminaivb","nk","replace","uuid","efk","checkedChildren","unCheckedChildren","pr","Group","direction","dots","defaultValue","depresion_catalog","disminucion_apetito","aumento_apetito","perdida_peso","aumento_peso","depresion_catalog2","DepresionEncuesta","pesoEnabled","setPesoEnabled","apetitoEnabled","setApetitoEnabled","_score","high1_4","high6_9","score","pregunta","respuestas","Card","depresion2_catalog","catalog2","descripcion","catalog3","preg10","Depresion2Encuesta","primeros","segundos","terceros","DolorEncuesta","checkedValues","PostTraumaticoEncuesta","newArr","str","compact","p_t_clinico_catalog","criterio","PTClinicoEncuesta","Radios","letra","numero","PTMexicanaEncuesta","SatisfaccionEncuesta","Button","KetaminaPublic","useParams","DepresionQidsPublic","DepresionEspanolPublic","HeadachePublic","PostTraumaticoPublic","PostTraumaticoClinicoPublic","PostTraumaticoMX","SatisfaccionPublic","age","address","Horarios","RecepcionApp","MisCitas","isDetailVisible","setIsDetailVisible","dateCellRender","hoy","listStyleType","monthCellRender","num","getMonthData","visible","dateString","id_reunion","Recetas","updatedAt","__v","municipio","colonia","calle","codigopostal","PatientApp","id_hospiatl","maxLength","minLength","setDoctorsData","getDoctorsData","doctoresData","TeamOutlined","Doctors","Sucursal","PerfilAdministrador","setLastFecha","setFirstFecha","subtractMonths","date","months","setMonth","getMonth","toString","lastFechaCierre","ids","_listOfDeudors","_listOfPagados","listOfPagados","idsMedicos","setIdsMedicos","receptorsrData","setReceptorsData","getReceptorsData","myReceptors","setReceptionist","shedule","setShedule","scheduleColumns","filteredReceptors","receptor","Receptionists","Enfermeros","AdminHospitalApp","formItemLayoutWithOutLabel","medicosDataLoading","setMedicosDataLoading","setILoading","patientForEdit","setPatientForEdit","editPatient","lenght","setDoctoresData","doctorForEdit","setDoctorForEdit","getDoctoresData","editDoctor","rd","d","HomeOutlined","profilePic","setProfilePic","beforeUpload","isPNGorJPG","LIST_IGNORE","setModalVisible","delete","warning","hospitalesData","setHospitalesData","hospitalForEdit","setHospitalForEdit","editHospital","cancel","filters","extra","BankOutlined","AppstoreAddOutlined","Hospitales","getAdminsData","Admins","SuperAdminApp","userType","App","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f78e1961.chunk.js","sourcesContent":["import { message } from 'antd'\r\nexport const API = \"https://api.recreamed.com/api/\"\r\nexport const S_API = \"https://api.recreamed.com/session/\"\r\nexport const IMAGE_API = \"https://api.recreamed.com/images/\"\r\n\r\nexport const logout = async () => {\r\n    // Send exit time to set schedule\r\n    const userType = localStorage.getItem('userType')\r\n    if (userType === 'Recepcion') await sendSchedule()\r\n\r\n    localStorage.removeItem('sessionToken');\r\n    localStorage.removeItem('userType');\r\n    localStorage.removeItem('userData');\r\n    window.location.href = '/';\r\n}\r\n\r\nconst sendSchedule = async () => {\r\n    const { _id } = usuario;\r\n    const scheduleBody = {\r\n        usuario: _id,\r\n        fecha_hora_entrada: localStorage.getItem(\"fecha_hora_entrada\"),\r\n        fecha_hora_salida: new Date(),\r\n        notas: ''\r\n    }\r\n    await sendDataBody('asistencias/add', scheduleBody).then(() => localStorage.removeItem('fecha_hora_entrada'))\r\n}\r\n\r\nexport const usuario = JSON.parse(localStorage.getItem('userData'));\r\n\r\nexport async function getData(endpoint) {\r\n    return await fetch(API + endpoint, { mode: 'cors' })\r\n        .then(response => response.json())\r\n        .then(data => { return data })\r\n}\r\n\r\nexport async function sendData(endpoint) {\r\n\r\n    return await fetch(API + endpoint, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' }\r\n    }).then(res => res.json())\r\n        .then((response) => {\r\n            return response;\r\n        })\r\n        .catch(error => console.error('Error:', error))\r\n}\r\n\r\nexport async function deleteData(endpoint) {\r\n\r\n    return await fetch(API + endpoint, {\r\n        method: 'DELETE',\r\n        headers: { 'Content-Type': 'application/json' }\r\n    }).then(res => res.json())\r\n        .then(response => {\r\n            console.log('Success:', response);\r\n            message.info(response.message)\r\n        })\r\n        .catch(error => console.error('Error:', error))\r\n}\r\n\r\nexport async function updateData(endpoint, values) {\r\n\r\n    return await fetch(API + endpoint, {\r\n        method: 'PUT',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(values)\r\n    }).then(res => res.json())\r\n        .then(response => {\r\n            // console.log('Success:', response);\r\n            message.success(response.message || response.error);\r\n            return response;\r\n        })\r\n        .catch(error => console.error('Error:', error))\r\n};\r\nexport async function sendDataBody(endpoint, values) {\r\n\r\n    return await fetch(API + endpoint, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(values)\r\n    }).then(res => res.json())\r\n        .then(response => {\r\n            return response\r\n        })\r\n        .catch(error => console.error('Error:', error))\r\n};\r\n\r\nexport const Footer = () =>\r\n    <div style={{\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        height: 88,\r\n        backgroundColor: '#3c75ef',\r\n    }}>\r\n\r\n        <p style={{ color: 'white' }}>\r\n            Desarrollado por <strong> <a href=\"https://www.realidadcreativa.com\" style={{ marginLeft: 6, color: 'white' }}>realidadcreativa.com</a></strong> | © Realidad Creativa - 2023\r\n        </p>\r\n\r\n    </div>\r\n\r\nexport const estados = [\"Aguascalientes\", \"Baja California\", \"Baja California Sur\", \"Campeche\", \"CDMX\", \"Chiapas\", \"Chihuahua\", \"Coahuila\", \"Colima\", \"Durango\", \"Estado de Mexico\", \"Guanajuato\", \"Guerrero\", \"Hidalgo\", \"Jalisco\", \"México\", \"Michoacán\", \"Morelos\", \"Nayarit\", \"Nuevo León\", \"Oaxaca\", \"Puebla\", \"Querétaro\", \"Quintana Roo\", \"San Luis Potosí\", \"Sinaloa\", \"Sonora\", \"Tabasco\", \"Tamaulipas\", \"Tlaxcala\", \"Veracruz\", \"Yucatán\", \"Zacatecas\"];\r\n\r\n// Only use for Doctors, Administrators and receptionists\r\nexport const myHorarios = usuario && usuario.horarios && usuario.horarios.map(function (item) {\r\n    return item;\r\n})\r\nexport const myHospitals = usuario && usuario.horarios && usuario.horarios.map(function (item) {\r\n    return item['sucursal'];\r\n})\r\nexport const ids_hospitales = usuario && usuario.horarios && usuario.horarios.map(function (item) {\r\n    return item['sucursal']['_id'];\r\n})\r\n","export default __webpack_public_path__ + \"static/media/Logo.bcbe104c.png\";","import { Form, Input, Button, Checkbox, Row, Col, Card, message } from 'antd';\r\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\r\nimport { S_API } from '../resources'\r\nimport logo from '../assets/Logo.png';\r\n\r\nexport function Login() {\r\n\r\n  const onFinish = (values) => {\r\n    delete values.remember;\r\n    console.log('Received values of form: ', values);\r\n\r\n    // Inicio de sesion\r\n    fetch(S_API + 'login', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(values)\r\n    })\r\n      .then((data) => { console.log(\"data\", data); return data.json() })\r\n      .then(res => {\r\n        console.log(\"resp\", res);\r\n        if (res.message === \"Bienvenido\") {\r\n          localStorage.setItem(\"userType\", res.user.rol);\r\n          localStorage.setItem('sessionToken', res.data.token);\r\n          localStorage.setItem('userData', JSON.stringify(res.user));\r\n\r\n          if (res.user.rol === 'Recepcion') // Save login time to schedule\r\n            localStorage.setItem('fecha_hora_entrada', new Date());\r\n\r\n          window.location.href = '/';\r\n        } else (message.info(res.error || res.message))\r\n      })\r\n      .catch(err => window.alert(\"Error: \", err))\r\n\r\n  };\r\n\r\n  return (\r\n    <Row>\r\n      <Col lg={{ span: 8, offset: 8 }} md={{ span: 10, offset: 7 }} sm={{ span: 16, offset: 4 }} xs={{ span: 16, offset: 4 }}>\r\n        <br />\r\n        <br />\r\n        <Card hoverable>\r\n          <br />\r\n          <Row justify=\"center\"> <img src={logo} alt=\"Logo\" width={160} /></Row>\r\n          <br />\r\n          <Row justify=\"center\">\r\n            <h3>Inicio de Sesion</h3>\r\n          </Row>\r\n          <br />\r\n          <br />\r\n          <Form\r\n            name=\"normal_login\"\r\n            className=\"login-form\"\r\n            initialValues={{\r\n              remember: true,\r\n            }}\r\n            onFinish={onFinish}\r\n          >\r\n            <Form.Item\r\n              name=\"email\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: 'Por favor ingresa el correo de tu cuenta!',\r\n                },\r\n              ]}\r\n            >\r\n              <Input prefix={<UserOutlined className=\"site-form-item-icon\" />} placeholder=\"Usuario\" />\r\n            </Form.Item>\r\n            <Form.Item\r\n              name=\"password\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: 'Por favor ingresa tu contraseña!',\r\n                },\r\n              ]}\r\n            >\r\n              <Input.Password\r\n                prefix={<LockOutlined className=\"site-form-item-icon\" />} placeholder=\"Contraseña\" />\r\n            </Form.Item>\r\n            <Form.Item>\r\n              <Form.Item name=\"remember\" valuePropName=\"checked\" noStyle>\r\n                <Checkbox>Mantener la sesion</Checkbox>\r\n              </Form.Item>\r\n\r\n              <a className=\"login-form-forgot\" href=\"\">\r\n                Recuperar contraseña\r\n              </a>\r\n            </Form.Item>\r\n\r\n            <Form.Item>\r\n              <Button block type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n                Iniciar Sesion\r\n              </Button>\r\n            </Form.Item>\r\n            <Form.Item>\r\n              <Row justify=\"center\"> O <a href=\"register\" style={{ marginLeft: 4 }}>Registrarse</a></Row>\r\n\r\n            </Form.Item>\r\n          </Form>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n\r\n  );\r\n};","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Card,\r\n  Form,\r\n  Input,\r\n  Select,\r\n  Row,\r\n  Col,\r\n  Checkbox,\r\n  Button,\r\n  message,\r\n  Space\r\n} from 'antd';\r\nimport { MinusCircleOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport { S_API, API } from '../resources'\r\nimport logo from '../assets/Logo.png';\r\nimport './login.css';\r\n\r\nconst { Option } = Select;\r\n\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    xs: {\r\n      span: 24,\r\n    },\r\n    sm: {\r\n      span: 8,\r\n    },\r\n  },\r\n  wrapperCol: {\r\n    xs: {\r\n      span: 24,\r\n    },\r\n    sm: {\r\n      span: 16,\r\n    },\r\n  },\r\n};\r\nconst tailFormItemLayout = {\r\n  wrapperCol: {\r\n    xs: {\r\n      span: 24,\r\n      offset: 0,\r\n    },\r\n    sm: {\r\n      span: 16,\r\n      offset: 8,\r\n    },\r\n  },\r\n};\r\n\r\nexport function Register() {\r\n  const [form] = Form.useForm();\r\n  const [sucursales, setSucursales] = useState([]);\r\n  const [sucursalesLoading, setSucursalesLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    getHospitalesData()\r\n\r\n  }, [])\r\n\r\n\r\n  const getHospitalesData = () => {\r\n    fetch(API + 'sucursales')\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        console.log(data);\r\n        setSucursales(data);\r\n        setSucursalesLoading(false);\r\n      });\r\n  }\r\n\r\n  const onFinish = (values) => {\r\n    values.rol = 'Medico';\r\n    values.avatar = 'https://';\r\n    values.estatus = '1';\r\n    delete values.confirm;\r\n    delete values.prefix;\r\n    delete values.agreement;\r\n\r\n    console.log(values)\r\n    fetch(S_API + 'register', {\r\n      method: 'POST',\r\n      body: JSON.stringify(values),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).then(res => res.json())\r\n      .then(response => {\r\n        console.log('Success:', response);\r\n        response.message ? message.success(response.message) : message.error(response.error);\r\n        if (response.message && response.message === 'Usuario creado correctamente') window.location.href = '/'\r\n      })\r\n      .catch(error => console.error('Error:', error))\r\n  };\r\n\r\n  const prefixSelector = (\r\n    <Form.Item name=\"prefix\" noStyle>\r\n      <Select\r\n        style={{\r\n          width: 70,\r\n        }}\r\n      >\r\n        <Option value=\"+52\">+52</Option>\r\n      </Select>\r\n    </Form.Item>\r\n  );\r\n\r\n  return (\r\n    <Row>\r\n      <Col span={12} offset={6}>\r\n        <br />\r\n        <br />\r\n        <Card hoverable>\r\n          <Row justify=\"center\"> <img src={logo} alt=\"Logo\" width={160} /></Row>\r\n          <br />\r\n          <br />\r\n          <Row justify=\"center\">\r\n            <h3>Registro de Medico</h3>\r\n          </Row>\r\n          <br />\r\n          <br />\r\n          <Form\r\n            {...formItemLayout}\r\n            form={form}\r\n            name=\"register\"\r\n            onFinish={onFinish}\r\n            initialValues={{\r\n              horarios: [{ sucursal: '', horario: '' }],\r\n              prefix: '+52',\r\n            }}\r\n            scrollToFirstError\r\n          >\r\n\r\n            <Form.Item name=\"name\" label=\"Nombre\" rules={[{ required: true, message: 'Ingresa Nombre y apellidos' }]}>\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            {/* <Form.Item name=\"rol\" label=\"Rol\" rules={[{ required: true, message: 'Elije el rol', },]}>\r\n              <Select placeholder=\"Elije el tipo de rol\">\r\n                <Option value=\"Administrador\">Administrador de Hospital</Option>\r\n                <Option value=\"Recepcion\">Recepcion</Option>\r\n                <Option value=\"Medico\">Medico</Option>\r\n                <Option value=\"Paciente\" disabled>Paciente</Option>\r\n              </Select>\r\n            </Form.Item> */}\r\n\r\n            <Form.Item name=\"email\" label=\"Correo\" rules={[{ type: 'email', message: 'The input is not valid E-mail!' }, { required: true, message: 'Please input your E-mail!' }]}>\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item name=\"password\" label=\"Contraseña\" rules={[{ required: true, message: 'Por favor ingrese su contraseña!', },]} hasFeedback >\r\n              <Input.Password />\r\n            </Form.Item>\r\n\r\n            <Form.Item name=\"confirm\" label=\"Confirmar contraseña\" dependencies={['password']} hasFeedback\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: 'Please confirm your password!',\r\n                },\r\n                ({ getFieldValue }) => ({\r\n                  validator(_, value) {\r\n                    if (!value || getFieldValue('password') === value) {\r\n                      return Promise.resolve();\r\n                    }\r\n                    return Promise.reject(new Error('Las contraseñas deben coincidir!'));\r\n                  },\r\n                }),\r\n              ]}\r\n            >\r\n              <Input.Password />\r\n            </Form.Item>\r\n\r\n            <Form.Item name=\"telefono\" label=\"Telefono\" rules={[{ required: true, message: 'Please input your phone number!', },]}>\r\n              <Input addonBefore={prefixSelector} style={{ width: '100%', }} />\r\n            </Form.Item>\r\n\r\n            <Form.Item label=\"horarios\" rules={[{ required: false, message: 'Ingresa al menos un horario', },]}>\r\n              <Form.List name=\"horarios\" label=\"horarios list\"\r\n              // rules={[\r\n              //   {\r\n              //     validator: async (_, horarios) => {\r\n              //       if (!horarios || horarios.length < 1) {\r\n              //         message.error('Debes Ingresar al menos un horario')\r\n              //         return Promise.reject(new Error('Debe haber al menos un horario'));\r\n              //       }\r\n              //     },\r\n              //   },\r\n              // ]}\r\n              >\r\n                {(fields, { add, remove }) => (\r\n                  <>\r\n                    {fields.map(({ key, name, ...restField }) => (\r\n                      <Space key={key} style={{ display: 'flex', marginBottom: 8 }} align=\"baseline\">\r\n                        <Form.Item\r\n                          {...restField}\r\n                          name={[name, 'sucursal']}\r\n                          rules={[{ required: true, message: 'Elije Sucursal' }]}\r\n                        >\r\n                          <Select placeholder=\"Elije Sucursal\" style={{ width: '180px' }} >\r\n                            {sucursalesLoading ? \"Cargando\" :\r\n                              sucursales.map(s => <Option value={s._id}>{s.nombre}</Option>)\r\n                            }\r\n                          </Select>\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                          {...restField}\r\n                          name={[name, 'horario']}\r\n                          rules={[{ required: false, message: 'Missing last name' }]}\r\n                        >\r\n                          <Input placeholder=\"Horario\" />\r\n                        </Form.Item>\r\n                        <MinusCircleOutlined onClick={() => remove(name)} />\r\n                      </Space>\r\n                    ))}\r\n                    <Form.Item>\r\n                      <Button type=\"dashed\" onClick={() => add()} block icon={<PlusOutlined />}>\r\n                        Agregar Horario\r\n                      </Button>\r\n                    </Form.Item>\r\n                  </>\r\n                )}\r\n              </Form.List>\r\n            </Form.Item>\r\n\r\n\r\n\r\n            <Form.Item name=\"cedula\" label=\"Cedula\" rules={[{ required: false, message: 'Ingresa cedula' }]}>\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            {/* <Form.Item name=\"calle\" label=\"Calle\" rules={[{ required: true, message: 'Ingresa calle', whitespace: true }]}>\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item name=\"numexterior\" label=\"Num Exterior\" rules={[{ required: true, message: 'Ingresa numero exterior' }]}>\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item name=\"numinterior\" label=\"Num Interior\" rules={[{ required: true, message: 'Ingresa numinterior' }]}>\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item label=\"Colonia\" name=\"colonia\" rules={[{ required: true, message: 'Please input your colobnia!' }]}            >\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item name=\"estado\" label=\"Estado\" rules={[{ required: true, message: 'Apellido materno', },]}>\r\n              <Select placeholder=\"Elije tu estado\">\r\n                {estados.map(e => <Option value={e}>{e}</Option>)}\r\n              </Select>\r\n            </Form.Item>\r\n\r\n            <Form.Item name=\"municipio\" label=\"Municipio\" rules={[{ required: true, message: 'Ingresa tu municipio' }]} >\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item name=\"codigopostal\" label=\"Codigo Postal\" rules={[{ required: true, message: 'Ingresa codigopostal', },]}>\r\n              <InputNumber addonAfter={suffixSelector} style={{ width: '100%', }} />\r\n            </Form.Item> */}\r\n\r\n            <Form.Item name=\"certificacion\" label=\"Certificacion\" rules={[{ required: false, message: 'Ingresa tu certificacion' }]}>\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item name=\"universidad\" label=\"Universidad\" rules={[{ required: false, message: 'Ingresa tu universidad' }]} >\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n              name=\"agreement\"\r\n              valuePropName=\"checked\"\r\n              rules={[\r\n                {\r\n                  validator: (_, value) =>\r\n                    value ? Promise.resolve() : Promise.reject(new Error('Tienes que aceptar los terminos y condiciones para registrarte')),\r\n                },\r\n              ]}\r\n              {...tailFormItemLayout}\r\n            >\r\n              <Checkbox>\r\n                He leído y acepto los <a href=\"https://recreamed.com\">terminos y condiciones</a>\r\n              </Checkbox>\r\n            </Form.Item>\r\n\r\n            <Form.Item {...tailFormItemLayout}>\r\n              <Button type=\"primary\" htmlType=\"submit\">\r\n                Registrar\r\n              </Button>\r\n            </Form.Item>\r\n          </Form>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n  );\r\n}; ","import React from 'react'\r\nimport { Spin } from 'antd';\r\n\r\nexport default function Loading() {\r\n    return (\r\n        <div style={{\r\n            margin: '20px 0',\r\n            marginBottom: '20px',\r\n            padding: '30px 50px',\r\n            textAlign: 'center',\r\n            background: 'rgba(0, 0, 0, 0.05)',\r\n            borderRadius: '4px',\r\n        }}>\r\n            <Spin />\r\n        </div >\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Modal, Form, Select, Input, Button, message, Switch, DatePicker, InputNumber } from 'antd'\r\nimport { getData, myHospitals, sendDataBody, updateData, usuario } from '../../resources';\r\nimport { UploadOutlined, PlusOutlined, MinusCircleOutlined } from '@ant-design/icons'\r\n\r\n\r\nexport function CreateCitaForm(props) {\r\n\r\n    const { configuracion: { costo_cita = 0 } } = usuario;\r\n    // const = configuracion;\r\n\r\n    myHospitals.forEach(h => { h.value = h._id; h.label = h.nombre; });\r\n\r\n    const [medicosData, setMedicosData] = useState([])\r\n    // Select patient for cerate cita\r\n    const [misPacientes, setMisPacientes] = useState([])\r\n\r\n\r\n    // Body of cita\r\n    const [isOnline, setIsOnline] = useState(false)\r\n    const [hospital, setHospital] = useState(null)\r\n    const [usesCostoBase, setUsesCostoBase] = useState(false)\r\n\r\n    const [costo, setCosto] = useState(0)\r\n\r\n    useEffect(() => {\r\n        getPacientesOfDoctor()\r\n    }, [])\r\n\r\n\r\n    // Get patients of specific doctor to populate the select\r\n    const getPacientesOfDoctor = () => { //Para el caso que la sesion sea de Medico\r\n        getData(`mispacientes/${usuario._id}`).then(rs => {\r\n            rs.forEach(p => { p.label = p.name; p.value = p._id })\r\n            setMisPacientes(rs);\r\n        })\r\n    }\r\n    // Form Methods\r\n    const onFinish = (values) => {\r\n        // let monto;\r\n        // if (values.tratamiento === 'Sin servicio') values.tratamiento = 0;\r\n        values.medico = usuario._id;\r\n\r\n        // const { configuracion } = usuario;\r\n        // const { costo_cita } = configuracion;\r\n        // const monto = costo_cita ? costo_cita + values.tratamiento : values.tratamiento\r\n\r\n        delete values.tratamiento;\r\n        // delete values.descuento;\r\n        console.log(values)\r\n\r\n        // Handle if its updating or creating cita\r\n        if (props.cita) {\r\n            updateData(`citas/update/${props.cita._id}`, values).then((response) => {\r\n                console.log(response)\r\n            }).finally(() => { props.getCitasData(); props.setIsModalOpen(false); props.setEditingCita(false) })\r\n        } else {\r\n            sendDataBody('citas/add', values).then((response) => {\r\n                message.success(response.message || response.error);\r\n                response.message && response.message === 'Cita creada correctamente' ? createBalance(response.id_nueva_cita, values.fecha_hora) : message.error('No se pudo crear registro de ingreso')\r\n                console.log(response)\r\n            }).finally(() => { props.getCitasData(); props.setIsModalOpen(false) })\r\n        }\r\n\r\n\r\n    };\r\n    // Create the respective balance for cita\r\n    const createBalance = (_cita, _fecha_hora) => {\r\n        const balanceBody = {\r\n            tipo: 'ingreso',\r\n            medico: usuario._id,\r\n            cita: _cita,\r\n            monto: usesCostoBase ? (costo + costo_cita) : costo,\r\n            forma_de_pago: 'efectivo',\r\n            fecha_hora: _fecha_hora,\r\n            estado: 'pendiente'\r\n        }\r\n        console.log('Balance ready to send: ', balanceBody)\r\n        sendDataBody('balances/add', balanceBody).then((rs) => { message.success(rs.message || rs.error); console.log(rs) })\r\n    }\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    const handleHospitalChange = (value) => { console.log('Selected Hospital: ', value); setHospital(value) };\r\n    const handlePacienteChange = (value) => { console.log('Selected Hospital: ', value); };\r\n\r\n    // Select tratamiento\r\n    const handleChange = (value) => {\r\n        // const { configuracion } = usuario;\r\n        // const { costo_cita } = configuracion;\r\n\r\n        // const monto = costo_cita + value;\r\n        setCosto(value)\r\n        console.log(`selected ${value}`);\r\n    };\r\n    const onSwitch = (checked) => {\r\n        console.log(`switch to ${checked}`);\r\n        setIsOnline(checked)\r\n    };\r\n    const onSwitchCosoBase = (checked) => {\r\n        // if(checked)se\r\n        console.log(`switch to ${checked}`);\r\n        setUsesCostoBase(checked)\r\n    };\r\n\r\n    const timeOptions = [\r\n        { label: 'Media Hora', value: 30 },\r\n        { label: 'Una Hora', value: 60 },\r\n        { label: 'Una Hora y Media', value: 90 },\r\n        { label: 'Dos Horas', value: 120 },\r\n        { label: 'Dos Horas Y Media', value: 150 },\r\n        { label: 'Tres Horas', value: 180 },\r\n    ]\r\n\r\n    return <Form name=\"nueva_cita_admin\" labelCol={{ span: 8 }} wrapperCol={{ span: 14 }} onFinish={onFinish} onFinishFailed={onFinishFailed} autoComplete=\"off\"\r\n        initialValues={props.cita ? props.cita : { isOnline: false, tratamiento: 'Sin servicio', fecha_hora: props.fecha_hora, duracion: 60 }}\r\n    >\r\n\r\n\r\n        <Form.Item label=\"Hospital\" name=\"sucursal\" rules={[{ required: true, message: 'Selecciona Sucursal' }]} >\r\n            <Select options={myHospitals} onChange={handleHospitalChange} />\r\n        </Form.Item>\r\n\r\n        <Form.Item label=\"Paciente\" name=\"usuario\" rules={[{ required: true, message: 'Selecciona Usuario' }]} >\r\n            <Select options={misPacientes} onChange={handlePacienteChange} />\r\n        </Form.Item>\r\n\r\n        <Form.Item label=\"VideoLlamada\" name=\"isOnline\" >\r\n            <Switch onChange={onSwitch} />\r\n        </Form.Item>\r\n\r\n        <Form.Item label=\"Comentarios\" name=\"comentarios\" rules={[{ required: false, message: 'Ingresa RFC' }]} >\r\n            <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item label=\"Fecha y Hora\" name=\"fecha_hora\" rules={[{ required: false, message: 'Selecciona Fecha y Hora' }]} >\r\n            <DatePicker showTime format=\"DD/MM/YYYY HH:mm\" use12Hours={true} style={{ width: '100%' }} />\r\n        </Form.Item>\r\n\r\n        <Form.Item label=\"Duracion\" name=\"duracion\" rules={[{ required: true, message: 'Selecciona la duracion de la cita' }]} >\r\n            <Select options={timeOptions} />\r\n        </Form.Item>\r\n\r\n        {/* {\r\n            usuario.configuracion.tratamientos_ofrecidos.map((t) => { return <p> `${t.tratamiento} $${t.costo} ${t._id}` </p> })\r\n\r\n        } */}\r\n\r\n        <Form.Item label=\"Servicio\" name=\"tratamiento\" rules={[{ required: false, message: 'Selecciona un servicio' }]} >\r\n            <Select\r\n                onChange={handleChange}\r\n                options={\r\n                    usuario.configuracion.tratamientos_ofrecidos.map((t) => { return { key: t._id, value: t.costo, label: `${t.tratamiento} $${t.costo} ${t._id}` } })\r\n                }\r\n            />\r\n        </Form.Item>\r\n\r\n\r\n\r\n\r\n        <Form.Item label={`costo de la cita $${costo_cita}`} >\r\n            <Switch onChange={onSwitchCosoBase} />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n            wrapperCol={{\r\n                offset: 8,\r\n                span: 16,\r\n            }}\r\n        >\r\n            <div className='fila'>\r\n                <h6>Costo Total: ${usesCostoBase ? (costo + costo_cita) : costo} </h6>\r\n            </div>\r\n        </Form.Item>\r\n\r\n        {\r\n            // Only if updating cita\r\n            props.cita && <Form.Item\r\n                wrapperCol={{\r\n                    offset: 8,\r\n                    span: 16,\r\n                }}\r\n            >\r\n                <Button type=\"primary\" htmlType=\"submit\" form='nueva_cita_admin'>\r\n                    Guardar\r\n                </Button>\r\n            </Form.Item>\r\n        }\r\n\r\n    </Form >\r\n}\r\nexport default function CreateCita(props) {\r\n\r\n    // Handle Modal Visibility\r\n    const handCreateleOk = () => { props.setIsModalOpen(false) }\r\n    const handCreateleCancel = () => { props.setIsModalOpen(false) }\r\n    return (\r\n        <Modal title={props.cita ? \"Editar Cita\" : \"Nueva Cita\"} open={props.isOpenModal} onOk={handCreateleOk} onCancel={handCreateleCancel} destroyOnClose width={600}\r\n            footer={[\r\n                <Button onClick={handCreateleCancel}>Cancelar</Button>,\r\n                <Button type=\"primary\" htmlType=\"submit\" form='nueva_cita_admin'>\r\n                    Guardar\r\n                </Button>\r\n            ]}\r\n        >\r\n\r\n            <CreateCitaForm setIsModalOpen={props.setIsModalOpen} isOpenModal={props.isCreateModalOpen} fecha_hora={props.fecha_hora} getCitasData={props.getCitasData} />\r\n        </Modal>\r\n    )\r\n}\r\n","import { useState, useEffect } from 'react';\r\nimport { Calendar, dayjsLocalizer } from 'react-big-calendar';\r\nimport { getData, usuario, deleteData } from '../../resources';\r\nimport Loading from '../../loading'\r\nimport CreateCita, { CreateCitaForm } from './cita.create'\r\nimport { Button, Modal, Popconfirm } from 'antd'\r\nimport dayjs from 'dayjs';\r\n\r\nconst localizer = dayjsLocalizer(dayjs)\r\nconst today = new Date();\r\n\r\n// To set rage for calendar\r\n// start time 8:00am\r\n// const min = new Date(\r\n//     today.getFullYear(),\r\n//     today.getMonth(),\r\n//     today.getDate(),\r\n//     8\r\n// )\r\n\r\n// end time 5:00pm\r\n// const max = new Date(\r\n//     today.getFullYear(),\r\n//     today.getMonth(),\r\n//     today.getDate(),\r\n//     21\r\n// )\r\n\r\n\r\nexport default function Citas() {\r\n    const [citasData, setCitasData] = useState([])\r\n    const [loading, setLoading] = useState(true)\r\n    const [editingCita, setEditingCita] = useState(false)\r\n\r\n    // Modal for details\r\n    const [isModalOpen, setIsModalOpen] = useState(false)\r\n    const showModal = () => { setIsModalOpen(true) }\r\n    const handleOk = () => { setIsModalOpen(false); setEditingCita(false); setEditingCita(false) }\r\n    const handleCancel = () => { setIsModalOpen(false); setEditingCita(false); setEditingCita(false) }\r\n    // Modal for edit and create\r\n    const [citaForEdit, setCitaForEdit] = useState(null)\r\n    const [fecha_hora, setFecha_hora] = useState(null)\r\n    const [isCreateModalOpen, setIsCreateModalOpen] = useState(false)\r\n\r\n\r\n    useEffect(() => { return getCitasData() }, [])\r\n\r\n    const getCitasData = () => {\r\n        getData(`citas/medico/${usuario._id}`).then((rs) => {\r\n            rs.forEach(cita => {\r\n                cita.start = new Date(Date.parse(cita.fecha_hora));\r\n                const endDate = new Date(cita.fecha_hora);\r\n                endDate.setTime(endDate.getTime() + 1 * (cita.duracion ?? 60) * 60 * 1000)\r\n                cita.end = new Date(Date.parse(endDate));\r\n                cita.title = cita.usuario.name;\r\n                cita.id = cita._id;\r\n                cita.key = cita._id;\r\n            });\r\n            console.log('getCitasData medico', rs)\r\n            setCitasData(rs)\r\n        }\r\n        ).finally(() => setLoading(false))\r\n    }\r\n\r\n    // Select cita to show details and to confirm\r\n    const selectEvent = async (e) => {\r\n        if (!e.hospital) e.hospital = e.sucursal._id; // For Edit\r\n        if (e.sucursa && e.sucursal._id) e.sucursal = e.sucursal._id; // For Edit\r\n        if (!e.paciente) e.paciente = e.usuario; // For details\r\n        if (e.usuario && e.usuario._id) e.usuario = e.usuario._id; // For Editing\r\n        e.fecha_hora = dayjs(e.fecha_hora) //For edit\r\n        await setCitaForEdit(e)\r\n        showModal()\r\n    }\r\n\r\n    // Select time hour, where cita will be created \r\n    const handleSlotSelection = ({ start, end, action }) => {\r\n        setFecha_hora(dayjs(start))\r\n        setIsCreateModalOpen(true)\r\n        return { style: { backgroundColor: 'red' } };\r\n    };\r\n\r\n    // Confirm servicio\r\n    // const confirmService = () => {\r\n    //     console.log('To confirm service', citaForEdit)\r\n    //     updateData(`balances/update/cita/${citaForEdit._id}`, { estado: 'pagado' })\r\n    // }\r\n\r\n    // Delete button\r\n    const confirm = (e) => {\r\n        deleteData(`citas/remove/${citaForEdit._id}`).then((rs) => { console.log(rs); getCitasData(); handleCancel() })\r\n        deleteData(`balances/remove/cita/${citaForEdit._id}`)\r\n\r\n    };\r\n\r\n    const cancel = (e) => { console.log(e) }\r\n\r\n    if (loading) return <Loading />;\r\n\r\n    return <div className='mainContainer'>\r\n        <Calendar\r\n            // min={min}\r\n            // max={max}\r\n            scrollToTime={new Date(Date.now())}\r\n            defaultDate={new Date(Date.now())}\r\n            selectable='true'\r\n            localizer={localizer}\r\n            events={citasData}\r\n            startAccessor=\"start\"\r\n            endAccessor=\"end\"\r\n            style={{ height: 500 }}\r\n            messages={{\r\n                next: \"Sig\",\r\n                previous: \"Ant\",\r\n                today: \"Hoy\",\r\n                month: \"Mes\",\r\n                week: \"Semana\",\r\n                day: \"Día\"\r\n            }}\r\n            defaultView=\"week\"\r\n            onDoubleClickEvent={(e) => console.log(e)}\r\n            onSelectEvent={selectEvent} // details cita\r\n            onSelecting={(e) => console.log(e)}\r\n            onSelectSlot={handleSlotSelection} // create cita\r\n        />\r\n\r\n\r\n        <Modal title=\"Detalles Cita\" open={isModalOpen} onOk={handleOk} onCancel={handleCancel} destroyOnClose\r\n            footer={[\r\n                <Popconfirm\r\n                    title=\"Eliminar Cita\"\r\n                    description=\"Seguro que quiere eliminar la cita?\"\r\n                    onConfirm={confirm}\r\n                    onCancel={cancel}\r\n                    okText=\"Si\"\r\n                    cancelText=\"No\"\r\n                >\r\n                    <Button danger>Eliminar</Button>\r\n                </Popconfirm>,\r\n                <Button onClick={() => setEditingCita(!editingCita)}>{editingCita ? \"Cancelar\" : \"Modificar\"}</Button>,\r\n                <Button onClick={handleCancel}>Cerrar</Button>\r\n            ]}>\r\n            {editingCita ?\r\n                <CreateCitaForm cita={citaForEdit} setIsModalOpen={setIsModalOpen} getCitasData={getCitasData} setEditingCita={setEditingCita} />\r\n                : <div>{citaForEdit && <div>\r\n                    <p><strong>Paciente </strong>{citaForEdit.paciente ? citaForEdit.paciente.name : 'Sin paciente'}</p>\r\n                    <p><strong>Fecha </strong>{new Date(citaForEdit.fecha_hora).toLocaleDateString()}</p>\r\n                    <p><strong>Hora </strong>{new Date(citaForEdit.fecha_hora).toLocaleTimeString()}</p>\r\n                    <p><strong>Comentarios </strong>{citaForEdit.comentarios}</p>\r\n                    {/* <Button type='primary' onClick={confirmService}>Confirmar Servicio</Button>, */}\r\n                </div>\r\n                }\r\n                </div>\r\n            }\r\n        </Modal>\r\n\r\n        <CreateCita setIsModalOpen={setIsCreateModalOpen} isOpenModal={isCreateModalOpen} fecha_hora={fecha_hora} getCitasData={getCitasData} />\r\n\r\n    </div>\r\n\r\n}\r\n","export const diagnosticos = {\r\n\r\n    \"Trastornos mentales orgánicos, incluyendo los sintomáticos\": {\r\n        F00: \"Demencia en la enfermedad de Alzheimer\",\r\n        F01: \"Demencia vascular\",\r\n        F02: \"Demencia en enfermedades clasificadas en otro lugar\",\r\n        F03: \"Demencia sin especificación\",\r\n        F04: \"Síndrome amnésico orgánico no inducido por alcohol u otras sustancias psicótropas\",\r\n        F05: \"Delirium no inducido por alcohol u otras sustancias psicótropas\",\r\n        F06: \"Otros trastornos mentales debidos a lesión o disfunción cerebral o enfermedad somática\",\r\n        F07: \"Trastornos de la personalidad y del comportamiento debidos a enfermedad, lesión o disfunción cerebral\",\r\n        F09: \"Trastorno mental orgánico o sintomático sin especificación\"\r\n    },\r\n\r\n    \"Trastornos mentales y del comportamiento debidos al consumo de sustancias psicótropas\": {\r\n        \"F10\": \"Trastornos mentales y del comportamiento debidos al consumo de alcohol\",\r\n        \"F11\": \"Trastornos mentales y del comportamiento debidos al consumo de opioides \",\r\n        \"F12\": \"Trastornos mentales y del comportamiento debidos al consumo de cannabinoides \",\r\n        \"F13\": \"Trastornos mentales y del comportamiento debidos al consumo de sedantes o hipnóticos\",\r\n        \"F14\": \"Trastornos mentales y del comportamiento debidos al consumo de cocaína\",\r\n        \"F15\": \"Trastornos mentales y del comportamiento debidos al consumo de otros estimulantes (incluida cafeína)\",\r\n        \"F16\": \"Trastornos mentales y del comportamiento debidos al consumo de alucinógenos\",\r\n        \"F17\": \"Trastornos mentales y del comportamiento debidos al consumo de tabaco\",\r\n        \"F18\": \"Trastornos mentales y del comportamiento debidos al consumo de disolventes volátiles\",\r\n        \"F19\": \"Trastornos mentales y del comportamiento debidos al consumo de múltiples drogas o de otras sustancias psicotrópicas\"\r\n    },\r\n    \"Esquizofrenia, trastorno esquizotípico y trastorno de ideas delirantes\": {\r\n        \"F20\": \"Esquizofrenia\",\r\n        \"F21\": \"Trastorno esquizotípico\",\r\n        \"F22\": \"Trastorno de ideas delirantes persistentes\",\r\n        \"F23\": \"Trastornos psicóticos agudos y transitorios\",\r\n        \"F24\": \"Trastorno de ideas delirantes inducidas\",\r\n        \"F25\": \"Trastornos esquizoafectivos\",\r\n        \"F28\": \"Otros trastornos psicóticos no orgánicos \",\r\n        \"F29\": \"Psicosis no orgánica sin especificación\"\r\n    },\r\n    \"F40-F48 Trastornos neuróticos, secundarios a situaciones estresantes y somatomorfos\": {\r\n        F40: \"Trastorno de ansiedad fóbica\",\r\n        \"F40.0\": \"Agorafobia\",\r\n        \"F40.1\": \"Fobias sociales\",\r\n        \"F40.2\": \"Fobias específicas\",\r\n        F41: \"Otros trastornos de ansiedad\",\r\n        \"F41.0\": \"Trastorno de pánico\",\r\n        \"F41.1\": \"Trastorno de ansiedad generalizada\",\r\n        \"F41.2\": \"Trastorno mixto ansioso-depresivo\",\r\n        F42: \"Trastorno obsesivo-compulsivo\",\r\n        F43: \"Reacción a estrés agudo\",\r\n        \"F43.1\": \"Trastornos estrés postraumático\",\r\n        \"F43.2\": \"Trastornos de adaptación\",\r\n        \"F43.8\": \"Otras reacciones a estrés grave\",\r\n        \"F43.9\": \"Reacción a estrés grave sin especificación\",\r\n        \"F44\": \"Trastornos disociativos (de conversión\",\r\n        F45: \"Trastornos somatomorfos\",\r\n        F48: \"Otros trastornos neuróticos\"\r\n    },\r\n    \"F50-F59 Trastornos del comportamiento asociados a disfunciones fisiológicas y a factores somáticos\": {\r\n        F50: \"Trastornos de la conducta alimentaria \",\r\n        \"F50.0\": \"Anorexia nerviosa\",\r\n        \"F50.1\": \"Anorexia nerviosa atípica\",\r\n        \"F50.2\": \"Bulimia nerviosa\",\r\n        \"F50.3\": \"Bulimia nerviosa atípica\",\r\n        F51: \"Trastornos no orgánicos del sueño\",\r\n        \"F51.0\": \"Insomnio no orgánico\",\r\n        \"F51.1\": \"Hipersomnia no orgánica\",\r\n        \"F51.2\": \"Trastorno no orgánico del ciclo sueño-vigilia\",\r\n        \"F51.3\": \"Sonambulismo\",\r\n        \"F51.4\": \"Terrores nocturnos\",\r\n        \"F51.5\": \"Pesadillas \",\r\n        F52: \"Disfunción sexual no orgánica\",\r\n        F53: \"Trastornos mentales y del comportamiento en el puerperio no clasificadas en otro lugar\",\r\n        F54: \" Factores psicológicos y del comportamiento en trastornos o enfermedades clasificadas en otro lugar\",\r\n        F55: \"Abuso de sustancias que no producen dependencia\",\r\n        F59: \"Trastornos del comportamiento asociados a disfunciones fisiológicas y a factores somáticos sin especificación\"\r\n    },\r\n    \"F60-F69 Trastornos de la personalidad y del comportamiento del adulto\": {\r\n        F60: \"Trastornos específicos de la personalidad\",\r\n        \"F60.0\": \"Trastorno paranoide de la personalidad\",\r\n        \"F60.1\": \"Trastorno esquizoide de la personalidad\",\r\n        \"F60.2\": \"Trastorno disocial de la personalidad\",\r\n        \"F60.3\": \"Trastorno de inestabilidad emocional de la personalidad\",\r\n        \"F60.4\": \"Trastorno histriónico de la personalidad\",\r\n        \"F60.5\": \"Trastorno anancástico de la personalidad\",\r\n        \"F60.6\": \"Trastorno ansioso de la personalidad\",\r\n        \"F60.7\": \"Trastorno dependiente de la personalidad\",\r\n        \"F60.8\": \"Otros trastornos específicos de la personalidad\",\r\n        \"F60.9\": \"Trastornos de la personalidad sin especificación \"\r\n    },\r\n    \"F61 Trastornos mixtos y otros trastornos de la personalidad\": {\r\n        \"F61.0\": \"Trastornos mixtos de la personalidad\"\r\n    },\r\n\r\n    \"F62 Transformación persistente de la personalidad no atribuible a lesión o enfermedad cerebral \": {\r\n        \"F62.0\": \"Transformación persistente de la personalidad no atribuible a lesión o enfermedad cerebral \"\r\n    },\r\n\r\n    \"F63 Trastorno de los hábitos y del control de los impulsos\": {\r\n        \"F63.0\": \"Trastorno de los hábitos y del control de los impulsos\"\r\n    },\r\n\r\n    \"F64 Trastorno de identidad sexual\": {\r\n        \"F64.0\": \"Trastorno de identidad sexual\"\r\n    },\r\n\r\n    \"F65 Trastornos de inclinación sexual\": {\r\n        \"F65.0\": \"Trastornos de inclinación sexual\"\r\n    },\r\n    \"F66 Trastornos psicológicos y del comportamiento del desarrollo y orientación sexuales\": {\r\n        \"F66.0\": \"Trastornos psicológicos y del comportamiento del desarrollo y orientación sexuales\"\r\n    },\r\n\r\n    \"F68 Otros trastornos de la personalidad y del comportamiento del adulto \": {\r\n        \"F68.0\": \"Otros trastornos de la personalidad y del comportamiento del adulto \"\r\n    },\r\n\r\n    \"F69 Trastorno de la personalidad y del comportamiento del adulto sin especificación\": {\r\n        \"F69.0\": \"Trastorno de la personalidad y del comportamiento del adulto sin especificación\"\r\n    },\r\n    \"F70-F79 Retraso mental\": {\r\n        F70: \"Retraso mental leve\",\r\n        F71: \"Retraso mental moderado \",\r\n        F72: \"Retraso mental grave \",\r\n        F73: \"Retraso mental profundo \",\r\n        F78: \"Otro retraso mental \",\r\n        F79: \"Retraso mental sin especificación \"\r\n    },\r\n    \"F80-F89 trastornos del desarrollo psicológico\": {\r\n        F80: \"Trastornos específicos del desarrollo del habla y de lenguaje\",\r\n        F81: \"Trastornos específicos del desarrollo del aprendizaje escolar\",\r\n        F82: \"Trastorno específico del desarrollo psicomotor\",\r\n        F83: \"Trastorno específico del desarrollo mixto\",\r\n        F84: \"Trastornos generalizados del desarrollo\",\r\n        F88: \"Otros trastornos del desarrollo psicológico\",\r\n        F89: \"Trastorno del desarrollo psicológico sin especificación\"\r\n    },\r\n\r\n    \"F90-F98 Trastornos del comportamiento y de las emociones de comienzo habitual en la infancia y adolescencia \": {\r\n        F90: \"Trastornos hipercinéticos \",\r\n        F91: \"Trastornos disociales \",\r\n        F92: \"Trastornos disociales y de las emociones mixtos \",\r\n        F93: \"Trastornos de las emociones de comienzo habitual en la infancia \",\r\n        F94: \"Trastornos del comportamiento social de comienzo habitual en la infancia y adolescencia \",\r\n        F95: \" Trastornos de tics\",\r\n        F98: \"Otros trastornos de las emociones y del comportamiento de comienzo habitual en la infancia y adolescencia \",\r\n        F99: \"Trastorno mental sin especificación\"\r\n    },\r\n    \"X60-X84 Autolesiones intencionales\": {\r\n        X60: \"Envenenamiento intencionalmente autoinfligido por analgésicos no opiáceos, antipiréticos o antirreumáticos \",\r\n        X61: \"Envenenamiento intencionalmente autoinfligido por fármacos antiepilépticos, sedantes, hipnóticos, antiparkinsonianos y psicotrópicos no clasificados en otro lugar\",\r\n        X62: \"Envenenamiento Intencional autoinfligido por narcóticosy psicodisléptlcos (alucinógenos) no clasificados en otro lugar\",\r\n        X63: \"\tEnvenenamiento Intencionalmente autoinfligido por otrosfármacos que actúan sobre el sistema nervioso autónomo\",\r\n        X64: \"Envenenamiento Intencionalmente autoinfligido por otras drogas, fármacos o productos biológicos\",\r\n        X65: \"Envenenamiento Intencionalmente autoinfligido por alcohol\",\r\n        X66: \"Envenenamiento Intencionalmente autoinfligido por solventes orgánicos, hidrocarburos halogenados o a sus vapores\",\r\n        X67: \"Envenenamiento Intencionalmente autoinfligido por exposición a otros gases y vapores\",\r\n        X68: \"Envenenamiento Intencionalmente autoinfligido por pesticidas\",\r\n        X69: \"\tEnvenenamiento Intencionalmente autoinfligido por otras sustancias químicas o nocivas no especificadas\",\r\n        X70: \"Daño intencionalmente autoinfligido por ahorcamiento, estrangulación o sofocación\",\r\n        X71: \"Daño intencionalmente autoinfligido por ahogamiento e inmersión\",\r\n        X72: \"Daño intencionalmente autoinfligido por disparo de arma corta\",\r\n        X73: \"Daño intencionalmente autoinfligido por disparo de rifles, escopetas o arma larga\",\r\n        X74: \"Daño intencionalmente autoinfligido por otras armas de fuego\",\r\n        X75: \"Daño intencionalmente autoinfligido por material explosivo\",\r\n        X76: \"Daño intencionalmente autoinfligido por fuego y llamas\",\r\n        X77: \"Daño intencionalmente autoinfligido por vapor de agua, vapores u objetos calientes\",\r\n        X78: \"Daño intencionalmente autoinfligido por un objeto cortante\",\r\n        X79: \"Daño intencionalmente autoinfligido por objetos romos\",\r\n        X80: \"Daño intencionalmente autoinfligido porsalto desde un lugar elevado\",\r\n        X81: \"Daño intencionalmente autoinfligido por arrojarse o tenderse ante un objeto en movimiento\",\r\n        X82: \"Daño intencionalmente autoinfligido por choque con vehículo de motor  \",\r\n        X83: \"Daño intencionalmente autoinfligido por otros medios específicos\",\r\n        X84: \"Daño intencionalmente autoinfligido por medios inespecíficos\"\r\n    },\r\n    \"Y06 Negligencia y abandono\": { \"Y06.0\": \"Negligencia y abandono\" },\r\n    \"Y07 Otros síndromes de malos tratos\": { \"Y07.0\": \"Otros síndromes de malos tratos\" },\r\n    \"Y40-Y59 Drogas, medicamentos y sustancias biológicas que causan efectos adversos en uso terapéutico\": {\r\n        Y46: \"Antiepilépticos y antiparkinsonianos\",\r\n        Y47: \"Sedantes, hipnóticos y ansiolíticos\",\r\n        Y49: \"Psicótropos no clasificados en otro lugar \",\r\n        Y50: \"Estimulantes del sistema nervioso central no clasificados en otro lugar\",\r\n        Y51: \"Fármacos que afectan primariamente al sistema nervioso autónomo \",\r\n        Y57: \"Otros fármacos y drogas sin especificar\"\r\n    },\r\n    \"Z00-Z99 Factores que influyen en el estado de salud y en el contacto con los servicios de salud\": {\r\n        \"Z55\": \"Problemas relacionados con la educación y la alfabetización\",\r\n        \"Z56\": \"Problemas relacionados con el empleo y desempleo\",\r\n        \"Z59\": \"Problemas relacionados con la vivienda y las condiciones económicas\",\r\n        \"Z60\": \"\tProblemas relacionados con el ambiente social\",\r\n        \"Z60.0\": \"Problemas de ajuste a las transiciones de los ciclos vitales\",\r\n        \"Z60.1\": \"Situaciones familiares atípicas\",\r\n        \"Z60.2\": \"Vivir solo\",\r\n        \"Z60.3\": \"Dificultades en la adaptación cultural\",\r\n        \"Z60.4\": \"Exclusión y rechazo social\",\r\n        \"Z60.5\": \"Ser blanco de discriminación adversa y persecución \",\r\n        \"Z61.0\": \"Pérdida de relaciones afectivas en la infancia\",\r\n        \"Z61.1\": \"Cambio de domicilio en la niñez\",\r\n        \"Z61.2\": \"Patrones de relaciones familiares alterados en la infancia\",\r\n        \"Z61.3\": \"Hechos contundentes a la pérdida de la autoestima en la niñez\",\r\n        \"Z61.4\": \"Problemas relacionados con presunto abuso sexual del niño por una persona dentro del grupo de apoyo primario\",\r\n        \"Z61.5\": \"Problemas relacionados con presunto abuso sexual del niño por una persona no perteneciente al grupo de apoyo primario\",\r\n        \"Z61.6\": \" Problemas relacionados con presunto abuso físico del niño\",\r\n        \"Z61.7\": \"Experiencias personales atemorizantes en la niñez\",\r\n        \"Z62.0\": \"\tSupervisión y control inadecuados por parte de los padres\",\r\n        \"Z62.1\": \"Sobreprotección parental\",\r\n        \"Z62.2\": \"Crianza en una institución\",\r\n        \"Z62.3\": \"Hostigamiento y acusación de culpabilidad al niño\",\r\n        \"Z62.4\": \"Abandono emocional del niño\",\r\n        \"Z62.5\": \"\tOtros problemas relacionados con la negligencia en la crianza del niño\",\r\n        \"Z62.6\": \"Presiones inapropiadas de los padres y otras anormalidades en la crianza\",\r\n        \"Z63.0\": \"Problemas en la relación entre esposos o pareja\",\r\n        \"Z63.1\": \"Problemas en la relación con los padres y los familiares políticos\",\r\n        \"Z63.2\": \"Problemas relacionados con el apoyo familiar inadecuado\",\r\n        \"Z63.3\": \"Problemas relacionados con la ausencia de un miembro de la familia\",\r\n        \"Z63.4\": \"Problemas relacionados con la desaparición o muerte de un miembro de la familia\",\r\n        \"Z63.5\": \"Problemas relacionados con la ruptura familiar por separación o divorcio\",\r\n        \"Z63.6\": \"Problemas relacionados con familiar dependiente, necesitado de cuidado en la casa\",\r\n        \"Z63.7\": \"Problemas relacionados con otros hechos estresantes que afectan a la familia y al hogar\",\r\n        \"Z64.0\": \"Problemas relacionados con embarazo no deseado\",\r\n        \"Z64.1\": \"Problemas relacionados con la multiparidad\",\r\n        \"Z64.2\": \"Problemas relacionados con la solicitud o aceptación de intervenciones físicas, nutricionales y químicas, conociendo su riesgo y peligro\",\r\n        \"Z64.3\": \"Problemas relacionados con la solicitud o aceptación de intervenciones psicológicas o de la conducta, conociendo su riesgo y peligro\",\r\n        \"Z64.4\": \"Problemas relacionados con el desacuerdo con consejeros\",\r\n        \"Z65.0\": \"Problemas relacionados con culpabilidad en procedimientos civiles o criminales sin prisión\",\r\n        \"Z65.1\": \"Problemas relacionados con prisión y otro encarcelamiento\",\r\n        \"Z65.2\": \"Problemas relacionados con la liberación de la prisión\",\r\n        \"Z65.3\": \"Problemas relacionados con otras circunstancias legales\",\r\n        \"Z65.4\": \"Problemas relacionados con víctima de crimen o terrorismo\",\r\n        \"Z65.5\": \"Problemas relacionados con la exposición a desastre, guerra u otras hostilidades\",\r\n        \"Z86.4\": \"Historia personal de abuso de sustancias psicoactivas\",\r\n        \"Z86.5\": \"Historia personal de otros trastornos mentales o del comportamiento\",\r\n        \"Z91.1\": \"Historia personal de incumplimiento del régimen o tratamiento médico\",\r\n        \"Z91.3\": \"Historia personal de ciclo sueño-vigilia no saludable\",\r\n        \"Z91.4\": \"Historia personal de trauma psicológico, no clasificado en otra parte\",\r\n        \"Z91.5\": \"HISTORIA PERSONAL DE LESIÓN AUTOINFLIGIDA INTENCIONALMENTE\",\r\n    }\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { Form, Input, Button, message, Select, Upload, Space } from 'antd';\r\nimport { API, usuario } from '../../resources';\r\nimport { InboxOutlined } from '@ant-design/icons';\r\nimport { diagnosticos } from '../../assets/diagnosticos2';\r\nconst { Option, OptGroup } = Select;\r\nconst { Dragger } = Upload;\r\nconst { TextArea } = Input;\r\n\r\nconst handleChange = (value) => {\r\n    // Select diagnostic\r\n    console.log(`selected ${value}`);\r\n};\r\n\r\nconst onFinishFailed = (errorInfo) => {\r\n    console.log('Failed:', errorInfo);\r\n};\r\n\r\n\r\n//List of Estudios styles\r\n// const formItemLayout = {\r\n//     labelCol: {\r\n//         xs: {\r\n//             span: 24,\r\n//         },\r\n//         sm: {\r\n//             span: 4,\r\n//         },\r\n//     },\r\n//     wrapperCol: {\r\n//         xs: {\r\n//             span: 24,\r\n//         },\r\n//         sm: {\r\n//             span: 20,\r\n//         },\r\n//     },\r\n// };\r\n// const formItemLayoutWithOutLabel = {\r\n//     wrapperCol: {\r\n//         xs: {\r\n//             span: 24,\r\n//             offset: 0,\r\n//         },\r\n//         sm: {\r\n//             span: 20,\r\n//             offset: 4,\r\n//         },\r\n//     },\r\n// };\r\n\r\n\r\n\r\nexport function NuevaNota(props) {\r\n    const [estudiosFiles, setEstudiosFiles] = useState([])\r\n\r\n    useEffect(() => {\r\n        console.log('Received nota on props: ', props.nota)\r\n    }, [])\r\n\r\n   \r\n    const onFinish = async (values) => {\r\n        // Create Nota\r\n        values.id_medico = usuario._id;\r\n        values.id_usuario = props.paciente;\r\n        values.recetas = [];\r\n        values.estudios = estudiosFiles;\r\n        console.log('ready To send: ', values)\r\n        const newNota = await fetch(API + 'notas/add', {\r\n            method: 'POST',\r\n            body: JSON.stringify(values),\r\n            headers: { 'Content-Type': 'application/json' }\r\n        }).then(res => res.json())\r\n            .then(response => {\r\n                message.success(response.message || response.error);\r\n                // response.message && response.message === ''\r\n                return response;\r\n            })\r\n            .catch(error => console.error('Error:', error))\r\n\r\n        // Add new nota to received notas\r\n        props.prevExpNotas.push(newNota.id_nota)\r\n        //Update nota at expedient\r\n        fetch(API + 'expedientes/updateNotas/' + props.id_expediente, {\r\n            method: 'PUT',\r\n            body: JSON.stringify({ \"notas\": props.prevExpNotas }),\r\n            headers: { 'Content-Type': 'application/json' }\r\n        }).then(res => res.json())\r\n            .then(response => {\r\n                console.log('Update Exp:', response);\r\n                message.success(response.message || response.error);\r\n            })\r\n            .catch(error => console.error('Error:', error))\r\n    };\r\n\r\n    const onFinishEdit = (values) => {\r\n        // Create Nota\r\n        console.log('ready To send: ', values)\r\n        fetch(API + 'notas/update/' + props.nota._id, {\r\n            method: 'PUT',\r\n            body: JSON.stringify(values),\r\n            headers: { 'Content-Type': 'application/json' }\r\n        }).then(res => res.json())\r\n            .then(response => {\r\n                message.success(response.message || response.error);\r\n                if (response.message && response.message === 'Nota Updated') props.setIsModalVisible(false)\r\n                console.log(response);\r\n            })\r\n            .catch(error => console.error('Error:', error))\r\n    };\r\n\r\n    // Upload File\r\n    const dragDropProps = {\r\n        name: 'file',\r\n        multiple: true,\r\n        action: API + 'notas/estudios/upload', // Production\r\n\r\n        onChange(info) {\r\n            const { status } = info.file;\r\n\r\n            if (status !== 'uploading') {\r\n                console.log(info.file, info.fileList);\r\n            }\r\n\r\n            if (status === 'done') {\r\n                message.success(`${info.file.name} file uploaded successfully.`);\r\n                console.log('New Files: ', info.file.response.file)\r\n                setEstudiosFiles([...estudiosFiles, info.file.response.file])\r\n            } else if (status === 'error') {\r\n                message.error(`${info.file.name} file upload failed.`);\r\n            }\r\n        },\r\n\r\n        onDrop(e) {\r\n            console.log('Dropped files', e.dataTransfer.files);\r\n        },\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h4 style={{ marginLeft: 20 }}>Detalles de la nota</h4>\r\n            {/* <p>Expediente received: {props.id_expediente}</p>\r\n            <p>Paciente received: {props.paciente}</p>\r\n            <p>Medico received: {usuario._id}</p>\r\n            <p>prevExpNotas received: {props.prevExpNotas}</p>\r\n            *La nota lleva el id del medico, obtenido de la sesion */}\r\n            {/* <p>Diag [0].clasificacion {diagnosticos[0]['clasificacion']}</p> */}\r\n\r\n            <br />\r\n            <Dragger {...dragDropProps}>\r\n                <p className=\"ant-upload-drag-icon\">\r\n                    <InboxOutlined />\r\n                </p>\r\n                <p className=\"ant-upload-text\">Arrastra los archivos de estudio aquí, o da click para buscar</p>\r\n                <p className=\"ant-upload-hint\">\r\n                    Selecciona archivos en pdf o imagen que sean menores a 2 MB para poder subirlos\r\n                </p>\r\n            </Dragger>\r\n            <Form name=\"basic\" labelCol={{ span: 8 }} wrapperCol={{ span: 14 }} initialValues={props.nota ? props.nota : { remember: true, estudios: [] }} onFinish={props.nota ? onFinishEdit : onFinish} onFinishFailed={onFinishFailed} autoComplete=\"off\" style={{ marginTop: 12 }} >\r\n\r\n                <Form.Item label=\"Edad\" name=\"edad\" rules={[{ required: true, message: 'Ingresa RFC' }]} >\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item label=\"Talla\" name=\"talla\" rules={[{ required: false, message: 'Ingresa RFC' }]} >\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item label=\"Peso\" name=\"peso\" rules={[{ required: false, message: 'Ingresa RFC' }]} >\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item label=\"IMC\" name=\"imc\" rules={[{ required: false, message: 'Ingresa RFC' }]} >\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item label=\"Temperatura\" name=\"temperatura\" rules={[{ required: false, message: 'Ingresa RFC' }]} >\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item label=\"Presion Arterial\" name=\"presion_arterial\" rules={[{ required: false, message: 'Ingresa RFC' }]} >\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item label=\"Frecuencia Cariaca\" name=\"frecuencia_cardiaca\" rules={[{ required: false, message: 'Ingresa RFC' }]} >\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item label=\"Frecuencia respiratoria\" name=\"frecuencia_respiratoria\" rules={[{ required: false, message: 'Ingresa RFC' }]} >\r\n                    <Input />\r\n                </Form.Item>\r\n\r\n                {/* <Form.Item label=\"Estudios\" name=\"estudios\" rules={[{ required: true, message: 'Ingresa RFC' }]} >\r\n                    <Input />\r\n                </Form.Item> */}\r\n\r\n                {/* \r\n                <Form.List\r\n                    name=\"estudios\"\r\n                    rules={[\r\n                        {\r\n                            validator: async (_, names) => {\r\n                                if (!names || names.length < 1) {\r\n                                    return Promise.reject(new Error('Ingresa al menos un estudio'));\r\n                                }\r\n                            },\r\n                        },\r\n                    ]}\r\n                >\r\n                    {(fields, { add, remove }, { errors }) => (\r\n                        <>\r\n                            {fields.map((field, index) => (\r\n                                <Form.Item\r\n                                    {...(index === 0 ? formItemLayout : formItemLayoutWithOutLabel)}\r\n                                    label={index === 0 ? 'Estudio' : ''}\r\n                                    required={false}\r\n                                    key={field.key}\r\n                                    getValueFromEvent={getFile}\r\n                                >\r\n                                    <Form.Item\r\n                                        {...field}\r\n                                        validateTrigger={['onChange', 'onBlur']}\r\n                                        rules={[\r\n                                            {\r\n                                                required: true,\r\n                                                whitespace: true,\r\n                                                message: \"Ingresa estudios\",\r\n                                            },\r\n                                        ]}\r\n                                        noStyle\r\n                                    >\r\n                                        <Upload {...UploadProps}>\r\n                                            <Button icon={<UploadOutlined />}>Click to Upload</Button>\r\n                                        </Upload>\r\n                                    </Form.Item>\r\n                                    {fields.length > 1 ? (\r\n                                        <MinusCircleOutlined\r\n                                            className=\"dynamic-delete-button\"\r\n                                            onClick={() => remove(field.name)}\r\n                                        />\r\n                                    ) : null}\r\n                                </Form.Item>\r\n                            ))}\r\n                            <Form.Item>\r\n                                <Button\r\n                                    type=\"dashed\"\r\n                                    onClick={() => add()}\r\n                                    style={{\r\n                                        // width: '100%',\r\n                                        position: 'relative',\r\n                                        alignItems: 'center',\r\n                                        justifyContent: 'flex-end'\r\n                                    }}\r\n                                    icon={<PlusOutlined />}\r\n                                >\r\n                                    Agregar Estudios\r\n                                </Button>\r\n                                <Form.ErrorList errors={errors} />\r\n                            </Form.Item>\r\n                        </>\r\n                    )}\r\n                </Form.List>\r\n */}\r\n\r\n                <Form.Item label=\"Observaciones\" name=\"Observaciones\" rules={[{ required: true, message: 'Ingresa Observaciones' }]} >\r\n                    <TextArea rows={4} />\r\n                </Form.Item>\r\n\r\n                <Form.Item label=\"Diagnostico\" name=\"diagnostico\" rules={[{ required: true, message: 'Selecciona Diagnostico' }]} >\r\n                    <Select\r\n                        showSearch\r\n                        style={{ width: 400 }}\r\n                        onChange={handleChange}\r\n                    >\r\n                        {\r\n                            Object.keys(diagnosticos).map((k) => {\r\n                                return <OptGroup label={k}>\r\n                                    {Object.keys(diagnosticos[k]).map((sk) => {\r\n                                        return <Option value={sk}>{diagnosticos[k][sk]}</Option>\r\n                                    })}\r\n                                </OptGroup>\r\n\r\n                            })\r\n                        }\r\n                    </Select>\r\n                </Form.Item>\r\n\r\n                <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\r\n                    <Space>\r\n                        <Button onClick={() => props.setIsModalVisible(false)}>\r\n                            Cancelar\r\n                        </Button>\r\n                        <Button type=\"primary\" htmlType=\"submit\">\r\n                            Guardar\r\n                        </Button>\r\n                    </Space>\r\n\r\n                </Form.Item>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport { Page, Text, View, Document, StyleSheet, Image } from '@react-pdf/renderer';\r\nimport { PDFViewer } from '@react-pdf/renderer';\r\nimport Logo from '../../assets/Logo.png'\r\nimport { usuario, IMAGE_API } from '../../resources';\r\n\r\nexport default function RecetaDocument(props) {\r\n\r\n    useEffect(() => {\r\n        console.log('receta props', props)\r\n    }, [])\r\n\r\n    // Create styles\r\n    // Styles for a4\r\n    // const styles = StyleSheet.create({\r\n    //     page: {\r\n    //         flexDirection: 'column',\r\n    //         backgroundColor: 'white'\r\n    //     },\r\n    //     block: {\r\n    //         flexDirection: 'row'\r\n    //     },\r\n    //     section: {\r\n    //         margin: 10,\r\n    //         padding: 10,\r\n    //         flexGrow: 1\r\n    //     },\r\n    //     image: {\r\n    //         // marginVertical: 15,\r\n    //         // marginHorizontal: 10,\r\n    //         width: 132\r\n    //     },\r\n    //     footText: {\r\n    //         fontSize: 14\r\n    //     }\r\n    // });\r\n    // Styles for a5\r\n    const styles = StyleSheet.create({\r\n        page: {\r\n            flexDirection: 'column',\r\n            backgroundColor: 'white'\r\n        },\r\n        block: {\r\n            flexDirection: 'row',\r\n            justifyContent: 'space-between'\r\n        },\r\n        sectionFull: {\r\n            marginHorizontal: 55,\r\n            // padding: 10,\r\n            flexGrow: 1\r\n        },\r\n        section: {\r\n            margin: 10,\r\n            padding: 10,\r\n        },\r\n        image: {\r\n            width: 64\r\n        },\r\n        desc: {\r\n            fontSize: 12\r\n        },\r\n        footText: {\r\n            fontSize: 14\r\n        },\r\n        prescription: {\r\n            fontSize: 16\r\n        },\r\n    });\r\n    // Create Document Component\r\n    function Receta() {\r\n        return <Document>\r\n            <Page size=\"A5\" orientation=\"landscape\" style={styles.page}>\r\n\r\n                <View style={styles.block}>\r\n                    <View style={[styles.section, { alignItems: 'center' }]}>\r\n                        <Image style={styles.image} src={IMAGE_API + props.logoHospital} />\r\n                        <Text style={styles.footText}>Dr. {usuario.name}</Text>\r\n                        <View style={{ color: 'black', width: '60%', backgroundColor: 'black', borderBottomColor: '#9bb4df', borderBottomWidth: 1 }}></View>\r\n                        {usuario.especialidad && <Text style={styles.footText}>{usuario.especialidad}</Text>}\r\n                    </View>\r\n                    <View style={[styles.section, { alignItems: 'center' }]}>\r\n                        {\r\n                            usuario.universidades && usuario.universidades.map((u) => <View style={{ alignItems: 'center' }}>\r\n                                <Text style={(usuario.universidades && usuario.universidades.length) > 1 ? styles.desc : styles.footText}>{u.carrera}</Text>\r\n                                <Text style={(usuario.universidades && usuario.universidades.length) > 1 ? styles.desc : styles.footText}>{u.universidad.toUpperCase()}</Text>\r\n                            </View>)\r\n                        }\r\n                        <Text style={(usuario.universidades && usuario.universidades.length) > 1 ? styles.desc : styles.footText}>Ced. Prof.: {usuario.cedula}</Text>\r\n                    </View>\r\n                </View>\r\n\r\n                <View style={styles.sectionFull}>\r\n                    <Text style={styles.footText}>Nombre: {props.paciente.name}</Text>\r\n                    <Text style={styles.footText}>Fecha: {new Date().toLocaleString()}</Text>\r\n                </View>\r\n\r\n                <View style={styles.sectionFull}>\r\n                    <Text style={[styles.prescription, { lineHeight: 2 }]}>{props.receta.prescripcion}</Text>\r\n                </View>\r\n\r\n                <View style={{ color: 'black', width: '94%', backgroundColor: 'black', borderBottomColor: '#9bb4df', borderBottomWidth: 1, marginHorizontal: 20 }}></View>\r\n                <View style={styles.block}>\r\n                    <View style={styles.section}>\r\n                        {/* <Text style={styles.footText}>José Rubén Romero #103, Bosque Camelinas</Text>\r\n                        <Text style={styles.footText}>Morelia, Mich. CP 58290</Text>\r\n                        <Text style={styles.footText}>Tel. (443) 3235088, Cel (443) 356 7822</Text> */}\r\n                        <Text style={styles.footText}>{usuario.email}</Text>\r\n                        <Text style={styles.footText}>{usuario.telefono}</Text>\r\n                    </View>\r\n                    <View style={styles.section}>\r\n                        <Image style={styles.image} src={Logo} />\r\n                        <Text style={{ fontSize: 10, }}>www.recreamed.com</Text>\r\n                    </View>\r\n                </View>\r\n            </Page>\r\n\r\n\r\n        </Document>\r\n    }\r\n    return <div>\r\n        <PDFViewer height={500} width={550}>\r\n            <Receta />\r\n        </PDFViewer>\r\n    </div>\r\n\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { Card, Button, Row, Col, Modal, Form, Input, message } from 'antd';\r\nimport { API, sendDataBody, updateData, usuario } from '../../resources';\r\nimport { PlusOutlined, FormOutlined, PrinterOutlined } from '@ant-design/icons';\r\nimport RecetaDocument from './detalleRecetaForPrint';\r\nconst { TextArea } = Input;\r\n//Los IDS de las recetas son tomados y enviados desde el expediente\r\n// Estan siendo agregadas y actualizadas directamente al expediente desde el form de detallenota->Agregar Receta\r\nexport default function DetalleReceta(props) {\r\n\r\n    const isDoctor = usuario && usuario.rol && usuario.rol === 'Medico';\r\n\r\n    const [recetaData, setRecetaData] = useState([]);\r\n    const [recetaLoading, setRecetaLoading] = useState(true);\r\n    const [recetaForEdit, setRecetaForEdit] = useState({});\r\n    const [isModalVisible, setIsModalVisible] = useState(false); // Modal For Add REcipe\r\n    const [isEditingModalVisible, setIsEditingModalVisible] = useState(false); // Modal For Edit Recipe\r\n    const [isPrintingModalVisible, setIsPrintingModalVisible] = useState(false)\r\n\r\n    // Add Recipe Modal\r\n    const handleOk = () => { setIsModalVisible(false); };\r\n    const handleCancel = () => { setIsModalVisible(false); };\r\n    // Edit Recipe Modal\r\n    const showEditModal = () => { console.log('BeforeEdit'); setIsEditingModalVisible(true); };\r\n    const handleEditOk = () => { setIsEditingModalVisible(false); };\r\n    const handleEditCancel = () => { setIsEditingModalVisible(false); };\r\n    // Print Receta Modal\r\n    const handlePrintOk = () => { setIsPrintingModalVisible(false); setIsLogoSelected(false) };\r\n    const handlePrintCancel = () => { setIsPrintingModalVisible(false); setIsLogoSelected(false) };\r\n    // Select logo for print in receta. Switches the modal view into select logo hospital/pdf recipe for print\r\n    const [logoHospital, setLogoHospital] = useState(null)\r\n    const [nombreHospital, setNombreHospital] = useState(null)\r\n    const [isLogoSelected, setIsLogoSelected] = useState(false)\r\n\r\n    useEffect(() => {\r\n        props.recetas ?\r\n            getRecetasData()\r\n            :\r\n            finifhGet()\r\n    }, [props.recetas])\r\n\r\n    const getRecetasData = () => {\r\n        sendDataBody('recetas/getMany', { 'ids': props.recetas }).then((response) => {\r\n            setRecetaData(response);\r\n            setRecetaLoading(false)\r\n        })\r\n    }\r\n\r\n    const finifhGet = () => { setRecetaData([]); setRecetaLoading(false); }\r\n\r\n    // New Receta\r\n    const onFinish = async (values) => {\r\n        values.id_nota = props.id_nota;\r\n        console.log('new Receta:', values);\r\n        console.log('new Recetas:', values);\r\n\r\n        const newReceta = await fetch(API + 'recetas/add', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(values)\r\n        }).then(res => res.json())\r\n            .then(response => {\r\n                console.log('Success:', response);\r\n                message.info(response.message || response.error)\r\n                response.message === 'Receta creada correctamente' ? setIsModalVisible(false) : console.log(response.error);\r\n                return response;\r\n            })\r\n            .catch(error => console.error('Error:', error))\r\n\r\n        props.recetas.push(newReceta.id_receta)\r\n        console.log('New Recetas: ', props.recetas);\r\n\r\n        // Update nota.recetas\r\n        fetch(API + 'notas/updateRecetas/' + props.id_nota, {\r\n            method: 'PUT',\r\n            body: JSON.stringify({ \"recetas\": props.recetas }),\r\n            headers: { 'Content-Type': 'application/json' }\r\n        }).then(res => res.json())\r\n            .then(response => {\r\n                console.log('Update Exp:', response);\r\n                message.success(response.message || response.error);\r\n            })\r\n            .catch(error => console.error('Error:', error))\r\n\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n    // End of Form\r\n\r\n    // Set Edit Receta and open modal\r\n    const editReceta = (r) => {\r\n        setRecetaForEdit(r)\r\n        console.log(r);\r\n        showEditModal();\r\n    }\r\n    // Send data for update Receta\r\n    const updateReceta = (values) => {\r\n        console.log('update', values);\r\n        updateData(`recetas/update/${recetaForEdit._id}`, values).then((rs) => {\r\n            // message.success(rs);\r\n            setIsEditingModalVisible(false)\r\n            getRecetasData()\r\n        })\r\n    }\r\n    // Print Receta\r\n    const printReceta = async (r) => {\r\n        setRecetaForEdit(r)\r\n        setIsPrintingModalVisible(true)\r\n        console.log(r);\r\n    }\r\n\r\n\r\n    const gridStyle = {\r\n        width: '100%',\r\n        height: '32',\r\n        textAlign: 'center',\r\n        display: 'inline-flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    };\r\n\r\n    return <div>\r\n        <Card\r\n        // title={<>Recetas <Button className='btnIconCentered' onClick={() => setIsModalVisible(true)} size='small' type=\"primary\" shape=\"circle\" icon={<PlusOutlined />} ghost /></>}\r\n        >\r\n            <div className='fila' style={{ marginBottom: 8 }}>\r\n                <h6>Recetas</h6>\r\n                {\r\n                    isDoctor && <Button className='btnIconCentered' onClick={() => setIsModalVisible(true)} size='small' type=\"primary\" shape=\"circle\" icon={<PlusOutlined />} ghost />\r\n                }\r\n            </div>\r\n            {\r\n                recetaLoading ? <h5>Cargando Receta...</h5> :\r\n                    recetaData.length > 0 ?\r\n\r\n                        recetaData.map((r) => {\r\n                            return <div key={r._id} style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between', alignItems: 'center' }}>\r\n                                <p style={{ whiteSpace: 'pre' }}>{r.prescripcion} </p>\r\n                                <div>\r\n                                    {\r\n                                        isDoctor && <Button style={{ marginLeft: 8 }} onClick={() => editReceta(r)} size='small' type=\"primary\" shape=\"circle\" icon={<FormOutlined />} className='btnIconCentered' ghost />\r\n                                    }\r\n                                    <Button style={{ marginLeft: 8 }} onClick={() => printReceta(r)} size='small' type=\"primary\" shape=\"circle\" icon={<PrinterOutlined />} className='btnIconCentered' ghost />\r\n                                </div>\r\n                            </div>\r\n                        })\r\n                        :\r\n                        <h6>No hay una receta asignada</h6>\r\n            }\r\n        </Card>\r\n\r\n        <Modal title=\"Nueva Receta\" open={isModalVisible} onOk={handleOk} onCancel={handleCancel}\r\n            footer={[\r\n                <Button type=\"primary\" htmlType=\"submit\" form='create_receta_medic'>\r\n                    Guardar\r\n                </Button>,\r\n                <Button onClick={handleCancel}>Cancelar</Button>\r\n            ]}>\r\n            <Form\r\n                name=\"create_receta_medic\"\r\n                labelCol={{ span: 8 }}\r\n                wrapperCol={{ span: 16 }}\r\n                initialValues={{ remember: true }}\r\n                onFinish={onFinish}\r\n                onFinishFailed={onFinishFailed}\r\n                autoComplete=\"off\"\r\n            >\r\n                <Form.Item\r\n                    label=\"Prescripcion\"\r\n                    name=\"prescripcion\"\r\n                    rules={[{ required: true, message: 'Ingresa la prescripcion' }]}\r\n                >\r\n                    <TextArea rows={4} />\r\n                </Form.Item>\r\n\r\n            </Form>\r\n        </Modal>\r\n\r\n        <Modal title=\"Editar Receta\" open={isEditingModalVisible} onOk={handleEditOk} onCancel={handleEditCancel} destroyOnClose\r\n            footer={[\r\n                <Button type=\"primary\" htmlType=\"submit\" form='update_receta_medic'>\r\n                    Actualizar\r\n                </Button>,\r\n            ]}>\r\n\r\n            <Form\r\n                name=\"update_receta_medic\"\r\n                labelCol={{ span: 8 }}\r\n                wrapperCol={{ span: 16 }}\r\n                initialValues={{ prescripcion: recetaForEdit.prescripcion }}\r\n                onFinish={updateReceta}\r\n                onFinishFailed={onFinishFailed}\r\n                autoComplete=\"off\"\r\n            >\r\n                <Form.Item\r\n                    label=\"Prescripcion\"\r\n                    name=\"prescripcion\"\r\n                    rules={[{ required: true, message: 'Ingresa la prescripcion' }]}\r\n                >\r\n                    <TextArea rows={4} />\r\n                </Form.Item>\r\n\r\n            </Form>\r\n        </Modal>\r\n\r\n        <Modal title=\"Imprimir Receta\" open={isPrintingModalVisible} onOk={handlePrintOk} onCancel={handlePrintCancel} width={600}\r\n            footer={[\r\n                <Button onClick={handlePrintCancel}>Cancelar</Button>\r\n            ]}\r\n        >\r\n            {\r\n                isLogoSelected ? // Si ya hay logo seleccionado, se pasa a la receta y se muestra en pdf\r\n                    <RecetaDocument receta={recetaForEdit} logoHospital={logoHospital} nombreHospital={nombreHospital} paciente={props.paciente} />\r\n                    :\r\n                    <div>\r\n                        <Card title='Selecciona un hospital' bordered={false}>\r\n                            {\r\n                                usuario.horarios.map((h) => {\r\n                                    return <Card.Grid style={{ width: '100%' }} onClick={() => { console.log(h.sucursal); setLogoHospital(h.sucursal.logo); setNombreHospital(h.sucursal.nombre); setIsLogoSelected(true) }} key={h._id}>\r\n                                        <Row align=\"middle\">\r\n                                            <Col span={6} offset={4}><img width={64} src={'https://api.recreamed.com/images/' + h.sucursal.logo} alt=\"Logo\" /></Col>\r\n                                            <Col span={10}>{h.sucursal.nombre} <br /> {h.horario}</Col>\r\n                                        </Row>\r\n                                    </Card.Grid>\r\n                                })\r\n                            }\r\n                        </Card>\r\n                    </div>\r\n            }\r\n        </Modal>\r\n    </div>\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { getData, updateData } from '../../resources'\r\nimport { Card, Typography } from 'antd'\r\nimport { CalendarOutlined, ClockCircleOutlined, DollarOutlined } from '@ant-design/icons'\r\nconst { Paragraph } = Typography;\r\n\r\n\r\nexport default function LastCita(props) {\r\n\r\n    const [cita, setCita] = useState({})\r\n    const [lastBalance, setLastBalance] = useState([])\r\n    // const [editableStr, setEditableStr] = useState('Sin costo registrado');\r\n    const [loading, setLoading] = useState(true)\r\n\r\n    useEffect(() => { getCitasData() }, [])\r\n\r\n    const updateLastBalance = (newMonto) => {\r\n\r\n        let newLastBalance = lastBalance;\r\n        newLastBalance.monto = newMonto;\r\n        updateData(`balances/update/${lastBalance._id}`, newLastBalance).then(getCitasData)\r\n    }\r\n\r\n    const getLastCta = (eventos) => {\r\n        var fechaActual = new Date();\r\n\r\n        // Filtrar los eventos que tienen una fecha menor o igual a la fecha actual\r\n        var eventosPasados = eventos.filter(function (evento) {\r\n            var fechaEvento = new Date(evento.fecha_hora);\r\n            return fechaEvento <= fechaActual;\r\n        });\r\n\r\n        // Ordenar los eventos pasados por fecha de forma descendente\r\n        eventosPasados.sort(function (a, b) {\r\n            var fechaA = new Date(a.fecha_hora);\r\n            var fechaB = new Date(b.fecha_hora);\r\n            return fechaB - fechaA;\r\n        });\r\n\r\n        // Obtener el evento más reciente\r\n        return eventosPasados[0]\r\n    }\r\n\r\n    const getCitasData = () => {\r\n        getData(`citas/${props.paciente}`).then((rs) => {\r\n            const ultimaCita = getLastCta(rs);\r\n            // console.log('lsat cita', ultimaCita)\r\n            setCita(ultimaCita)\r\n            return ultimaCita\r\n        }).then((last) => {\r\n            return getData('balances/cita/' + last?._id)\r\n        }).then((bl) => {\r\n            // console.log('balance', bl)\r\n            setLastBalance(bl[0])\r\n        }).finally(() => setLoading(false))\r\n    }\r\n\r\n    const LastBalance = () => {\r\n        return <div>\r\n            {\r\n                lastBalance && lastBalance.monto ?\r\n                    (\r\n                        // <div >\r\n\r\n                        <div style={{ display: 'flex', flexDirection: 'row', alignItems: 'center', columnGap: '10px' }}>\r\n                            <DollarOutlined style={{}} />\r\n                            Costo:\r\n                            <Paragraph\r\n                                style={{ marginTop: 14 }}\r\n                                editable={{\r\n                                    onChange: updateLastBalance,\r\n                                }}\r\n                            >\r\n                                {lastBalance.monto}\r\n                            </Paragraph>\r\n                        </div>\r\n                        // <div style={{ display: 'flex', flexDirection: 'row', alignItems: 'center', columnGap: '10px' }}>\r\n                        //     <CalendarOutlined /> {new Date(lastBalance.createdAt).toLocaleDateString()}\r\n                        // </div>\r\n                        // </div>\r\n                    ) : (\r\n                        <p>Sin Ultimo Balance</p>\r\n                    )\r\n            }\r\n\r\n        </div>\r\n    }\r\n\r\n\r\n    if (loading) return <p>Cargando...</p>\r\n    return (\r\n        <div style={{ marginTop: 8 }}>\r\n            <Card>\r\n                {\r\n                    cita ? <div>\r\n                        <h6>Cita más reciente</h6>\r\n                        <ul>\r\n                            <li className='btnIconCentered'><CalendarOutlined style={{ marginRight: 8 }} /> Fecha: {new Date(cita.fecha_hora).toLocaleDateString()}</li><br />\r\n\r\n                            <li className='btnIconCentered'><ClockCircleOutlined style={{ marginRight: 8 }} /> Hora: {cita.fecha_hora.substring(11, 16)}</li>\r\n\r\n                            <LastBalance />\r\n\r\n                        </ul>\r\n                    </div> : <h6>Sin cita recente registrada</h6>\r\n                }\r\n\r\n            </Card>\r\n        </div>\r\n    )\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { Card, Button, Tabs, Row, Col, Modal, Space, Typography, message, Upload, Input, Select, Form, Divider, InputNumber } from 'antd';\r\nimport { MinusCircleOutlined, PlusOutlined, EditOutlined } from '@ant-design/icons';\r\nimport { updateData, usuario } from '../../resources';\r\nconst { TextArea } = Input;\r\n\r\nconst numbers = ['Primera', 'Segunda', 'Tercera']\r\n\r\nexport default function NotasEvolucion({ _notas_evolucion, id_nota }) {\r\n\r\n    const [evoForEdit, setEvoForEdit] = useState(null)\r\n    const [isModalOpen, setIsModalOpen] = useState(false);\r\n    const showModal = () => { setIsModalOpen(true); };\r\n    const handleOk = () => { setIsModalOpen(false); setEvoForEdit(null) };\r\n    const handleCancel = () => { setIsModalOpen(false); setEvoForEdit(null) };\r\n\r\n    const onFinish = (values) => {\r\n\r\n        // console.log('Prev notas:', _notas_evolucion);\r\n        console.log('Received values of form:', values);\r\n        _notas_evolucion.push(values)\r\n        console.log('After notas:', _notas_evolucion);\r\n        updateData(`notas/update/${id_nota}`, { notas_evolucion: _notas_evolucion }).then((rs) => {\r\n            console.log(rs)\r\n            setIsModalOpen(false)\r\n        })\r\n    };\r\n\r\n    const onFinishEdit = (values) => {\r\n        const found = _notas_evolucion.find((n) => n._id === evoForEdit._id)\r\n\r\n        // Encuentra el índice del objeto a actualizar en el array\r\n        const indexToUpdate = _notas_evolucion.findIndex(item => item._id === evoForEdit._id);\r\n\r\n        if (indexToUpdate !== -1) {\r\n            // Actualiza el objeto con los nuevos datos\r\n            _notas_evolucion[indexToUpdate] = values;\r\n\r\n            console.log(\"Elemento actualizado:\", _notas_evolucion[indexToUpdate]);\r\n            updateData(`notas/update/${id_nota}`, { notas_evolucion: _notas_evolucion }).then((rs) => {\r\n\r\n                setIsModalOpen(false)\r\n            })\r\n        } else {\r\n            console.log(\"No se encontró el elemento con el ID proporcionado.\");\r\n        }\r\n    }\r\n\r\n    return <div>\r\n        {(_notas_evolucion && _notas_evolucion.length) > 0 ?\r\n            _notas_evolucion.map((nota_evo) => {\r\n                console.log('showing ', nota_evo)\r\n                return <Card title={`Nota de evolución \\t\\tcreada el: ${new Date(nota_evo.createdAt).toLocaleDateString()}\\t\\tActualizada el ${new Date(nota_evo.createdAt).toLocaleDateString()}`} size='small' style={{ marginBottom: 8 }} key={nota_evo._id}>\r\n\r\n\r\n\r\n                    <Card size='small'>\r\n                        <div className='fila' style={{ marginBottom: 8 }}>\r\n                            <span className='desc'>Signos Vitales</span>\r\n                        </div>\r\n\r\n                        <div className='fila'>\r\n\r\n                            <div><span className='desc'>Temperatura: </span>{nota_evo.temperatura}°</div>\r\n                            <div><span className='desc'>Frecuencia Respiratoria: </span>{nota_evo.frecuencia_respiratoria}</div>\r\n                            <div><span className='desc'>Frecuencia Cardiaca: </span>{nota_evo.frecuencia_cardiaca}</div>\r\n                            <div><span className='desc'>Presion Arterial: </span>{nota_evo.presion_arterial}</div>\r\n                            <div><span className='desc'>Saturacion de Oxigeno: </span>{nota_evo.saturacion_oxigeno}</div>\r\n                        </div>\r\n\r\n\r\n                        <div style={{ display: 'flex', flexDirection: 'row-reverse' }}>\r\n                            <Button onClick={() => { setEvoForEdit(nota_evo); console.log('For edit ', nota_evo); showModal(); }} style={{ marginTop: 4 }} className='btnIconCentered' size='small' type=\"primary\" shape=\"circle\" icon={<EditOutlined />} ghost />\r\n                        </div>\r\n                    </Card>\r\n\r\n\r\n                    <div style={{ marginTop: 8 }} >\r\n                        <div className='fila' style={{ marginBottom: 8 }}>\r\n                            <h6>S</h6> <Card size='small' style={{ width: '100%' }} className='textArea'>{nota_evo.s}</Card>\r\n                        </div>\r\n                        <div className='fila' style={{ marginBottom: 8 }}>\r\n                            <h6>O</h6><Card size='small' style={{ width: '100%' }} className='textArea'>{nota_evo.o}</Card>\r\n                        </div>\r\n                        <div className='fila' style={{ marginBottom: 8 }}>\r\n                            <h6>A</h6><Card size='small' style={{ width: '100%' }} className='textArea'>{nota_evo.a}</Card>\r\n                        </div>\r\n                        <div className='fila' style={{ marginBottom: 8 }}>\r\n                            <h6>P</h6><Card size='small' style={{ width: '100%' }} className='textArea'>{nota_evo.p}</Card>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* <Button style={{ marginTop: 4 }} >Agregar</Button> */}\r\n\r\n                </Card >\r\n            })\r\n            :\r\n            <Card title='Sin notas de evolucion'>\r\n\r\n            </Card>\r\n        }\r\n        <div style={{ display: 'flex', flexDirection: 'row-reverse' }}>\r\n            <Button onClick={showModal} style={{ marginTop: 4 }} className='btnIconCentered' size='small' type=\"primary\" shape=\"circle\" icon={<PlusOutlined />} ghost />\r\n        </div>\r\n\r\n\r\n        <Modal title=\"Agregar Nota de Evolución\" open={isModalOpen} onOk={handleOk} onCancel={handleCancel} destroyOnClose\r\n            footer={[\r\n                <Button onClick={handleCancel}>\r\n                    Cancelar\r\n                </Button>,\r\n                <Button type=\"primary\" htmlType=\"submit\" form='add_nota_evo_doc'>\r\n                    Guardar\r\n                </Button>\r\n            ]}\r\n        >\r\n            <Form\r\n                name=\"add_nota_evo_doc\"\r\n                onFinish={evoForEdit ? onFinishEdit : onFinish}\r\n                // style={{maxWidth: 600}}\r\n                autoComplete=\"off\"\r\n                labelCol={{ span: 8 }}\r\n                wrapperCol={{ span: 16 }}\r\n                initialValues={evoForEdit || {}}\r\n            >\r\n\r\n\r\n                <Form.Item name='temperatura' label=\"Temperatura\" rules={[{ required: true, message: 'Ingrese la temperatura' }]}>\r\n                    <InputNumber style={{ width: '100%' }} />\r\n                </Form.Item>\r\n                <Form.Item name='frecuencia_respiratoria' label=\"Frecuencia respiratoria\" rules={[{ required: true, message: 'Ingrese la frecuencia respiratoria' }]}>\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item name='frecuencia_cardiaca' label=\"Frecuencia cardiaca\" rules={[{ required: true, message: 'Ingrese la frecuencia cardiaca' }]}>\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item name='presion_arterial' label=\"Presion arterial\" rules={[{ required: true, message: 'Ingrese la presión arterial' }]}>\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item name='saturacion_oxigeno' label=\"Saturacion oxigeno\" rules={[{ required: true, message: 'Ingrese la saturacion de oxigeno' }]}>\r\n                    <Input />\r\n                </Form.Item>\r\n\r\n\r\n                {\r\n                    usuario.rol === 'Medico' && <div>\r\n                        <Form.Item label=\"S\" name=\"s\" rules={[{ required: true, message: 'Ingrese la respuesta' }]} >\r\n                            <Input.TextArea />\r\n                        </Form.Item>\r\n                        <Form.Item label=\"O\" name=\"o\" rules={[{ required: true, message: 'Ingrese la respuesta' }]} >\r\n                            <Input.TextArea />\r\n                        </Form.Item>\r\n                        <Form.Item label=\"A\" name=\"a\" rules={[{ required: true, message: 'Ingrese la respuesta' }]} >\r\n                            <Input.TextArea />\r\n                        </Form.Item>\r\n                        <Form.Item label=\"P\" name=\"p\" rules={[{ required: true, message: 'Ingrese la respuesta' }]} >\r\n                            <Input.TextArea />\r\n                        </Form.Item>\r\n                    </div>\r\n                }\r\n\r\n            </Form>\r\n        </Modal>\r\n\r\n\r\n    </div>\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport { Document, Page, Text, View, Image, StyleSheet } from '@react-pdf/renderer';\r\nimport { PDFViewer } from '@react-pdf/renderer';\r\nimport Logo from '../../assets/Logo.png'\r\nimport { usuario, IMAGE_API } from '../../resources';\r\n\r\n// export default function HojaDocument(receta, logoHospital, nombreHospital, datosPaciente) {\r\nexport default function HojaDocument({ nombreHospital, logoHospital, receta, datosPaciente }) {\r\n\r\n    const { createdAt, peso, dosis, inicio, intermedio, termino, observaciones, aplicacion } = receta;\r\n\r\n    const { name, medicos_asignados } = datosPaciente;\r\n\r\n    useEffect(() => {\r\n        // console.log('hoja enf props', props)\r\n        console.log('hoja enf ', receta)\r\n        // console.log('hoja enf logoHospital', logoHospital)\r\n        // console.log('hoja enf nombreHospital', nombreHospital)\r\n        console.log('hoja enf datosPaciente', datosPaciente)\r\n    }, [])\r\n\r\n\r\n    const styles = StyleSheet.create({\r\n        page: {\r\n            flexDirection: 'column',\r\n            justifyContent: 'space-between',\r\n            backgroundColor: '#ffffff',\r\n            padding: 30,\r\n        },\r\n        header: {\r\n            flexDirection: 'row',\r\n            justifyContent: 'center',\r\n            alignItems: 'flex-start',\r\n            marginBottom: 20,\r\n        },\r\n        title: {\r\n            flexDirection: 'row',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            marginVertical: 30,\r\n            fontSize: 18\r\n        },\r\n        subtitle: {\r\n            flexDirection: 'row',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            marginVertical: 15,\r\n            fontSize: 15\r\n        },\r\n        logo: {\r\n            width: 100,\r\n            // height: 100,\r\n        },\r\n        content: {\r\n            flexDirection: 'row',\r\n            rowGap: 12,\r\n            justifyContent: 'space-between',\r\n            marginBottom: 20,\r\n        },\r\n        text: {\r\n            fontSize: 14,\r\n        },\r\n        table: {\r\n            display: \"table\",\r\n            width: \"auto\",\r\n            borderStyle: \"solid\",\r\n            borderWidth: 1,\r\n            borderRightWidth: 0,\r\n            borderBottomWidth: 0,\r\n        },\r\n        tableRow: {\r\n            margin: \"auto\",\r\n            flexDirection: \"row\",\r\n        },\r\n        tableCol: {\r\n            width: \"14.285%\", // Cambiado para 7 columnas\r\n            borderStyle: \"solid\",\r\n            borderWidth: 1,\r\n            borderLeftWidth: 0,\r\n            borderTopWidth: 0,\r\n        },\r\n        tableCell: {\r\n            margin: \"auto\",\r\n            marginTop: 5,\r\n            fontSize: 10\r\n        },\r\n        tableContainer: {\r\n            marginBottom: 20,\r\n        },\r\n        tableHeader: {\r\n            backgroundColor: '#f0f0f0',\r\n            borderBottomWidth: 1,\r\n        },\r\n        View: {\r\n            margin: 5,\r\n            padding: 5,\r\n            borderWidth: 1,\r\n            borderColor: 'black',\r\n        },\r\n        centeredText: {\r\n            textAlign: 'center',\r\n            marginBottom: 20,\r\n        },\r\n        textarea: {\r\n            borderWidth: 1,\r\n            borderColor: 'black',\r\n            padding: 5,\r\n            height: 140,\r\n        },\r\n    });\r\n\r\n    // Create Document Component\r\n    function Receta() {\r\n        return <Document>\r\n            <Page size=\"A4\" style={styles.page}>\r\n\r\n                <View style={styles.header}>\r\n                    <Image style={styles.logo} src={IMAGE_API + logoHospital} />\r\n                    {/* <Text>{logoHospital}</Text> */}\r\n                </View>\r\n\r\n                <View style={styles.title}>\r\n                    <Text>HOJA DE ENFERMERÍA</Text>\r\n                </View>\r\n\r\n                <View style={[styles.content, { justifyContent: 'flex-end' }]}>\r\n                    <Text style={styles.fecha}>Fecha: {new Date(createdAt).toLocaleDateString('es-MX', { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric', timeZone: 'UTC' })}</Text>\r\n                </View>\r\n\r\n                <View style={styles.content}>\r\n                    <Text style={styles.text}>Nombre: {name}</Text>\r\n                </View>\r\n\r\n                <View style={styles.content}>\r\n                    <Text style={styles.text}>APLICACION: {aplicacion + 1}</Text>\r\n                    <Text style={styles.text}>PESO: {peso}</Text>\r\n                    <Text style={styles.text}>DOSIS: {dosis}</Text>\r\n                </View>\r\n\r\n                <View style={styles.content}>\r\n                    <Text style={styles.text}>MEDICO TRATANTE:</Text>\r\n                    {\r\n                        medicos_asignados.map((m) => {\r\n                            return <Text style={styles.text}>{m.name}</Text>\r\n                        })\r\n                    }\r\n                </View>\r\n\r\n                <View style={styles.table}>\r\n                    <View style={styles.tableRow}>\r\n                        <View style={styles.tableCol}>\r\n                            <Text style={styles.tableCell}></Text>\r\n                        </View>\r\n                        <View style={styles.tableCol}>\r\n                            <Text style={styles.tableCell}>Hora</Text>\r\n                        </View>\r\n                        <View style={styles.tableCol}>\r\n                            <Text style={styles.tableCell}>Temperatura</Text>\r\n                        </View>\r\n                        <View style={styles.tableCol}>\r\n                            <Text style={styles.tableCell}>Frecuencia Respiratoria</Text>\r\n                        </View>\r\n                        <View style={styles.tableCol}>\r\n                            <Text style={styles.tableCell}>Frecuencia Cardiaca</Text>\r\n                        </View>\r\n                        <View style={styles.tableCol}>\r\n                            <Text style={styles.tableCell}>Presión Arterial</Text>\r\n                        </View>\r\n                        <View style={styles.tableCol}>\r\n                            <Text style={styles.tableCell}>Saturación de Oxigeno</Text>\r\n                        </View>\r\n                    </View>\r\n                    <View style={styles.tableRow}>\r\n                        <View style={styles.tableCol}>\r\n                            <Text style={styles.tableCell}>Inicio</Text>\r\n                        </View>\r\n                        <View style={styles.tableCol}>\r\n                            <Text style={styles.tableCell}>{new Date(inicio.hora).toLocaleTimeString()}</Text>\r\n                        </View>\r\n                        <View style={styles.tableCol}>\r\n                            <Text style={styles.tableCell}>{inicio.temperatura}°</Text>\r\n                        </View>\r\n                        <View style={styles.tableCol}>\r\n                            <Text style={styles.tableCell}>{inicio.frecuencia_respiratoria}</Text>\r\n                        </View>\r\n                        <View style={styles.tableCol}>\r\n                            <Text style={styles.tableCell}>{inicio.frecuencia_cardiaca}</Text>\r\n                        </View>\r\n                        <View style={styles.tableCol}>\r\n                            <Text style={styles.tableCell}>{inicio.presion_arterial}</Text>\r\n                        </View>\r\n                        <View style={styles.tableCol}>\r\n                            <Text style={styles.tableCell}>{inicio.saturacion_oxigeno}</Text>\r\n                        </View>\r\n                    </View>\r\n                    <View style={styles.tableRow}>\r\n                        <View style={styles.tableCol}>\r\n                            <Text style={styles.tableCell}>Intermedio</Text>\r\n                        </View>\r\n                        <View style={styles.tableCol}>\r\n                            <Text style={styles.tableCell}>{new Date(intermedio.hora).toLocaleTimeString()}</Text>\r\n                        </View>\r\n                        <View style={styles.tableCol}>\r\n                            <Text style={styles.tableCell}>{intermedio.temperatura}°</Text>\r\n                        </View>\r\n                        <View style={styles.tableCol}>\r\n                            <Text style={styles.tableCell}>{intermedio.frecuencia_respiratoria}</Text>\r\n                        </View>\r\n                        <View style={styles.tableCol}>\r\n                            <Text style={styles.tableCell}>{intermedio.frecuencia_cardiaca}</Text>\r\n                        </View>\r\n                        <View style={styles.tableCol}>\r\n                            <Text style={styles.tableCell}>{intermedio.presion_arterial}</Text>\r\n                        </View>\r\n                        <View style={styles.tableCol}>\r\n                            <Text style={styles.tableCell}>{intermedio.saturacion_oxigeno}</Text>\r\n                        </View>\r\n                    </View>\r\n                    <View style={styles.tableRow}>\r\n                        <View style={styles.tableCol}>\r\n                            <Text style={styles.tableCell}>Término</Text>\r\n                        </View>\r\n                        <View style={styles.tableCol}>\r\n                            <Text style={styles.tableCell}>{new Date(termino.hora).toLocaleTimeString()}</Text>\r\n                        </View>\r\n                        <View style={styles.tableCol}>\r\n                            <Text style={styles.tableCell}>{termino.temperatura}°</Text>\r\n                        </View>\r\n                        <View style={styles.tableCol}>\r\n                            <Text style={styles.tableCell}>{termino.frecuencia_respiratoria}</Text>\r\n                        </View>\r\n                        <View style={styles.tableCol}>\r\n                            <Text style={styles.tableCell}>{termino.frecuencia_cardiaca}</Text>\r\n                        </View>\r\n                        <View style={styles.tableCol}>\r\n                            <Text style={styles.tableCell}>{termino.presion_arterial}</Text>\r\n                        </View>\r\n                        <View style={styles.tableCol}>\r\n                            <Text style={styles.tableCell}>{termino.saturacion_oxigeno}</Text>\r\n                        </View>\r\n                    </View>\r\n\r\n                </View>\r\n\r\n                <View style={styles.subtitle}>\r\n                    <Text>SIGNOS Y SÍNTOMAS (OBSERVACIONES DE ENFERMERÍA)</Text>\r\n                </View>\r\n\r\n                <View>\r\n                    <View style={styles.textarea} >\r\n                        <Text style={{ fontSize: 12 }}>{observaciones}</Text>\r\n                    </View>\r\n                </View>\r\n\r\n                <View style={styles.subtitle}>\r\n                    <Text>ENFERMERO RESPONSABLE</Text>\r\n                </View>\r\n                <View style={{ color: 'black', width: '94%', backgroundColor: 'black', borderBottomColor: 'black', borderBottomWidth: 2, marginHorizontal: 20, alignSelf: 'center' }}></View>\r\n                <View style={styles.subtitle}>\r\n                    <Text>NOMBRE Y FIRMA</Text>\r\n                </View>\r\n\r\n            </Page>\r\n\r\n\r\n        </Document>\r\n\r\n    }\r\n    return <div>\r\n        <PDFViewer height={700} width={550}>\r\n            <Receta />\r\n        </PDFViewer>\r\n    </div>\r\n\r\n}","import React, { useState } from 'react'\r\nimport { Card, Button, Modal, InputNumber, Row, Col } from 'antd';\r\nimport { PlusOutlined, PrinterOutlined } from '@ant-design/icons';\r\nimport { Form, Input, TimePicker } from 'antd';\r\nimport locale from 'antd/es/date-picker/locale/es_ES';\r\n\r\nimport { updateData, usuario } from '../../resources'\r\nimport HojaDocument from './hojaEnfermeriaPrint';\r\n\r\n\r\nexport default function HojasEnfermeria({ hojas_enfermeria, id_nota, datosPaciente }) {\r\n    const [hojaEdit, setHojaEdit] = useState(null)\r\n    const [isModalOpen, setIsModalOpen] = useState(false);\r\n\r\n    // Print Receta Modal\r\n    const [isPrintingModalVisible, setIsPrintingModalVisible] = useState(false)\r\n    const handlePrintOk = () => { setIsPrintingModalVisible(false); setIsLogoSelected(false) };\r\n    const handlePrintCancel = () => { setIsPrintingModalVisible(false); setIsLogoSelected(false) };\r\n    // Select logo for print in receta. Switches the modal view into select logo hospital/pdf recipe for print\r\n    const [logoHospital, setLogoHospital] = useState(null)\r\n    const [nombreHospital, setNombreHospital] = useState(null)\r\n    const [isLogoSelected, setIsLogoSelected] = useState(false)\r\n\r\n    // Modal for details\r\n    const showModal = () => { setIsModalOpen(true) };\r\n    const handleOk = () => { setIsModalOpen(false); setHojaEdit(null) };\r\n    const handleCancel = () => { setHojaEdit(null); setIsModalOpen(false) };\r\n\r\n    // Modal for Add\r\n    const [isAddModalOpen, setIsAddModalOpen] = useState(false);\r\n    const showAddModal = () => { setIsAddModalOpen(true) };\r\n    const handleAddOk = () => { setIsAddModalOpen(false) };\r\n    const handleAddCancel = () => { setIsAddModalOpen(false) };\r\n\r\n    const gridStyle = { width: '14%', textAlign: 'center', height: '40' }\r\n    const gridStyle2 = { width: '20%', textAlign: 'center', height: 60, padding: 4 }\r\n\r\n    const onFinish = (values) => {\r\n        console.log('prev hojas ', hojas_enfermeria)\r\n\r\n        console.log('Success:', values);\r\n        hojas_enfermeria.push(values)\r\n        updateData(`notas/update/${id_nota}`, { hojas_enfermeria: hojas_enfermeria }).then((rs) => {\r\n            console.log(rs)\r\n            setIsAddModalOpen(false)\r\n        })\r\n\r\n    };\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    }\r\n    // Print Receta\r\n    const printHoja = async (r) => {\r\n        setHojaEdit(r)\r\n        setIsPrintingModalVisible(true)\r\n        console.log(r);\r\n    }\r\n\r\n    return <Card style={{ marginTop: 8 }}>\r\n        <div className='fila' style={{ marginBottom: 8 }}>\r\n            <h6>Hojas de Enfermería</h6>\r\n        </div>\r\n\r\n        {\r\n            hojas_enfermeria && hojas_enfermeria.map((hoja, i) => {\r\n                hoja.aplicacion = i;\r\n                return <>\r\n                    <Button key={i} type='link' onClick={() => { setHojaEdit(hoja); console.log(hoja); setIsModalOpen(true) }}>Aplicacion {i + 1}  {new Date(hoja.inicio?.hora).toLocaleDateString('es-MX')}</Button>\r\n                    <Button style={{ marginLeft: 8 }} onClick={() => printHoja(hoja)} size='small' type=\"primary\" shape=\"circle\" icon={<PrinterOutlined />} className='btnIconCentered' ghost />\r\n                </>\r\n            })\r\n        }\r\n        <div style={{ display: 'flex', flexDirection: 'row-reverse' }}>\r\n            {/* <Button style={{ marginTop: 4 }}>Agregar</Button> */}\r\n            <Button className='btnIconCentered' onClick={showAddModal} size='small' type=\"primary\" shape=\"circle\" icon={<PlusOutlined />} ghost />\r\n        </div>\r\n\r\n        <Modal open={isModalOpen} onOk={handleOk} onCancel={handleCancel} width={1100} footer={[\r\n            <Button onClick={handleOk}>Cerrar</Button>\r\n        ]}>\r\n            {\r\n                hojaEdit && <div>\r\n                    <div style={{ display: 'flex', flexDirection: 'row', gap: 32, fontSize: 15, fontWeight: '500' }}>\r\n                        <span>Aplicacion {hojaEdit.aplicacion + 1}</span>\r\n                        <span>Peso: {hojaEdit.peso}kg</span>\r\n                        <span>Dosis: {hojaEdit.dosis}</span>\r\n                        <span>{new Date(hojaEdit.createdAt).toLocaleDateString('es-Mx')}</span>\r\n                    </div>\r\n\r\n                    <Card style={{ marginTop: 10 }} bordered={false}>\r\n                        <Card.Grid style={gridStyle}></Card.Grid>\r\n                        <Card.Grid style={gridStyle}>HORA</Card.Grid>\r\n                        <Card.Grid style={gridStyle}>TEMPERATURA</Card.Grid>\r\n                        <Card.Grid style={gridStyle}>FRECUENCIA CARDIACA</Card.Grid>\r\n                        <Card.Grid style={gridStyle}>FRECUENCIA RESPIRATORIA</Card.Grid>\r\n                        <Card.Grid style={gridStyle}>PRESIÓN ARTERIAL</Card.Grid>\r\n                        <Card.Grid style={gridStyle}>SATURACION O₂</Card.Grid>\r\n\r\n                        <Card.Grid style={gridStyle}>INICIO</Card.Grid>\r\n                        <Card.Grid style={gridStyle}>{new Date(hojaEdit.inicio.hora).toLocaleTimeString()}</Card.Grid>\r\n                        <Card.Grid style={gridStyle}>{hojaEdit.inicio.temperatura}</Card.Grid>\r\n                        <Card.Grid style={gridStyle}>{hojaEdit.inicio.frecuencia_cardiaca}</Card.Grid>\r\n                        <Card.Grid style={gridStyle}>{hojaEdit.inicio.frecuencia_respiratoria}</Card.Grid>\r\n                        <Card.Grid style={gridStyle}>{hojaEdit.inicio.presion_arterial}</Card.Grid>\r\n                        <Card.Grid style={gridStyle}>{hojaEdit.inicio.saturacion_oxigeno}</Card.Grid>\r\n\r\n                        <Card.Grid style={gridStyle}>INTERMEDIO</Card.Grid>\r\n                        <Card.Grid style={gridStyle}>{new Date(hojaEdit.intermedio.hora).toLocaleTimeString()}</Card.Grid>\r\n                        <Card.Grid style={gridStyle}>{hojaEdit.intermedio.temperatura}</Card.Grid>\r\n                        <Card.Grid style={gridStyle}>{hojaEdit.intermedio.frecuencia_cardiaca}</Card.Grid>\r\n                        <Card.Grid style={gridStyle}>{hojaEdit.intermedio.frecuencia_respiratoria}</Card.Grid>\r\n                        <Card.Grid style={gridStyle}>{hojaEdit.intermedio.presion_arterial}</Card.Grid>\r\n                        <Card.Grid style={gridStyle}>{hojaEdit.intermedio.saturacion_oxigeno}</Card.Grid>\r\n\r\n                        <Card.Grid style={gridStyle}>TERMINO</Card.Grid>\r\n                        <Card.Grid style={gridStyle}>{new Date(hojaEdit.termino.hora).toLocaleTimeString()}</Card.Grid>\r\n                        <Card.Grid style={gridStyle}>{hojaEdit.termino.temperatura}</Card.Grid>\r\n                        <Card.Grid style={gridStyle}>{hojaEdit.termino.frecuencia_cardiaca}</Card.Grid>\r\n                        <Card.Grid style={gridStyle}>{hojaEdit.termino.frecuencia_respiratoria}</Card.Grid>\r\n                        <Card.Grid style={gridStyle}>{hojaEdit.termino.presion_arterial}</Card.Grid>\r\n                        <Card.Grid style={gridStyle}>{hojaEdit.termino.saturacion_oxigeno}</Card.Grid>\r\n                    </Card>\r\n\r\n                    <div style={{ fontSize: 16, fontWeight: '500', marginTop: 8, marginBottom: 8 }}>Observaciones</div>\r\n\r\n                    <Card size='small' className='textArea'>\r\n                        {\r\n                            hojaEdit.observaciones\r\n                        }\r\n                    </Card>\r\n\r\n                </div>\r\n            }\r\n\r\n        </Modal>\r\n\r\n        <Modal title='Nueva hoja de enfermería' open={isAddModalOpen} onOk={handleAddOk} onCancel={handleAddCancel} width={1000} footer={[\r\n            <Button onClick={handleAddOk}>Cerrar</Button>,\r\n            <Button type=\"primary\" htmlType=\"submit\" form='add_hoja_enfermeria'>\r\n                Guardar\r\n            </Button>\r\n        ]} destroyOnClose>\r\n\r\n\r\n            <Form\r\n                name=\"add_hoja_enfermeria\"\r\n                labelCol={{ span: 24 }}\r\n                wrapperCol={{ span: 24 }}\r\n                // style={{ maxWidth: 600 }}\r\n                initialValues={{ remember: true }}\r\n                onFinish={onFinish}\r\n                onFinishFailed={onFinishFailed}\r\n                autoComplete=\"off\"\r\n                layout='vertical'\r\n            >\r\n                <Form.Item label=\"Peso\" name=\"peso\" rules={[{ required: true, message: 'Ingresa el peso' }]}>\r\n                    <InputNumber style={{ width: '100%' }} />\r\n                </Form.Item>\r\n\r\n                <Form.Item label=\"Dosis\" name=\"dosis\" rules={[{ required: true, message: 'Ingresa la dosis' }]}>\r\n                    <Input />\r\n                </Form.Item>\r\n\r\n\r\n                <div className='fila'>\r\n                    <span style={{ width: 100 }}>INICIO</span>\r\n                    <Form.Item label='Hora' name={['inicio', 'hora']} rules={[{ required: true }]} >\r\n                        <TimePicker format='HH:mm' placeholder='Hora de inicio' locale={locale} />\r\n                    </Form.Item>\r\n                    <Form.Item label='Temperatura' name={['inicio', 'temperatura']} rules={[{ required: true }]}>\r\n                        <InputNumber />\r\n                    </Form.Item>\r\n                    <Form.Item label='Frec. Respiratoria' name={['inicio', 'frecuencia_respiratoria']} rules={[{ required: true }]}>\r\n                        <Input />\r\n                    </Form.Item>\r\n                    <Form.Item label='Frecuencia cardiaca' name={['inicio', 'frecuencia_cardiaca']} rules={[{ required: true }]}>\r\n                        <Input />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item label='Presion arterial' name={['inicio', 'presion_arterial']} rules={[{ required: true }]}>\r\n                        <Input />\r\n                    </Form.Item>\r\n                    <Form.Item label='Saturacion O₂' name={['inicio', 'saturacion_oxigeno']} rules={[{ required: true }]}>\r\n                        <Input />\r\n                    </Form.Item>\r\n                </div>\r\n\r\n                <div style={{ display: 'flex', flexDirection: 'row', columnGap: '10px' }}>\r\n                    <span style={{ width: 100, }}>INTERMEDIO</span>\r\n                    <Form.Item name={['intermedio', 'hora']} rules={[{ required: true }]} >\r\n                        <TimePicker format='HH:mm' placeholder='Hora de aplicacion' locale={locale} />\r\n                    </Form.Item>\r\n                    <Form.Item name={['intermedio', 'temperatura']} rules={[{ required: true }]}>\r\n                        <InputNumber />\r\n                    </Form.Item>\r\n                    <Form.Item name={['intermedio', 'frecuencia_respiratoria']} rules={[{ required: true }]}>\r\n                        <Input />\r\n                    </Form.Item>\r\n                    <Form.Item name={['intermedio', 'frecuencia_cardiaca']} rules={[{ required: true }]}>\r\n                        <Input />\r\n                    </Form.Item>\r\n                    <Form.Item name={['intermedio', 'presion_arterial']} rules={[{ required: true }]}>\r\n                        <Input />\r\n                    </Form.Item>\r\n                    <Form.Item name={['intermedio', 'saturacion_oxigeno']} srules={[{ required: true }]}>\r\n                        <Input />\r\n                    </Form.Item>\r\n                </div>\r\n\r\n                <div style={{ display: 'flex', flexDirection: 'row', columnGap: '10px' }}>\r\n                    <span style={{ width: 100, }}>TERMINO</span>\r\n                    <Form.Item name={['termino', 'hora']} rules={[{ required: true }]} >\r\n                        <TimePicker format='HH:mm' placeholder='Hora de aplicacion' locale={locale} />\r\n                    </Form.Item>\r\n                    <Form.Item name={['termino', 'temperatura']} rules={[{ required: true }]}>\r\n                        <InputNumber />\r\n                    </Form.Item>\r\n                    <Form.Item name={['termino', 'frecuencia_respiratoria']} rules={[{ required: true }]}>\r\n                        <Input />\r\n                    </Form.Item>\r\n                    <Form.Item name={['termino', 'frecuencia_cardiaca']} rules={[{ required: true }]}>\r\n                        <Input />\r\n                    </Form.Item>\r\n                    <Form.Item name={['termino', 'presion_arterial']} rules={[{ required: true }]}>\r\n                        <Input />\r\n                    </Form.Item>\r\n                    <Form.Item name={['termino', 'saturacion_oxigeno']} srules={[{ required: true }]}>\r\n                        <Input />\r\n                    </Form.Item>\r\n                </div>\r\n\r\n                <Form.Item\r\n                    label=\"Observaciones\"\r\n                    name=\"observaciones\"\r\n                    rules={[{ required: true, message: 'Ingresa las observaciones' }]}\r\n                >\r\n                    <Input.TextArea />\r\n                </Form.Item>\r\n\r\n            </Form>\r\n        </Modal>\r\n\r\n        <Modal title=\"Imprimir Hoja de Enfermería\" open={isPrintingModalVisible} onOk={handlePrintOk} onCancel={handlePrintCancel} width={600}\r\n            footer={[\r\n                <Button onClick={handlePrintCancel}>Cancelar</Button>\r\n            ]} destroyOnClose\r\n        >\r\n            {\r\n                isLogoSelected ? // Si ya hay logo seleccionado, se pasa a la receta y se muestra en pdf\r\n                    <HojaDocument receta={hojaEdit} logoHospital={logoHospital} nombreHospital={nombreHospital} datosPaciente={datosPaciente} />\r\n                    :\r\n                    <div>\r\n                        <Card title='Selecciona un hospital' bordered={false}>\r\n                            {\r\n                                usuario.horarios.map((h) => {\r\n                                    return <Card.Grid style={{ width: '100%' }} onClick={() => { console.log('sucursal serlected', h.sucursal); setLogoHospital(h.sucursal.logo); setNombreHospital(h.sucursal.nombre); setIsLogoSelected(true) }} key={h._id}>\r\n                                        <Row align=\"middle\">\r\n                                            <Col span={6} offset={4}><img width={64} src={'https://api.recreamed.com/images/' + h.sucursal.logo} alt=\"Logo\" /></Col>\r\n                                            <Col span={10}>{h.sucursal.nombre} <br /> {h.horario}</Col>\r\n                                        </Row>\r\n                                    </Card.Grid>\r\n                                })\r\n                            }\r\n                        </Card>\r\n                    </div>\r\n            }\r\n        </Modal>\r\n    </Card>\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { Card, Button, Tabs, Row, Col, Modal, Space, message } from 'antd';\r\nimport { getData, API, updateData, usuario } from '../../resources';\r\nimport { PlusOutlined } from '@ant-design/icons';\r\nimport { NuevaNota } from './nuevaNota';\r\nimport DetalleReceta from './detalleReceta';\r\nimport LastCita from './lastCita'\r\nimport NotasEvolucion from './notasEvolucion';\r\nimport HojasEnfermeria from './hojasEnfermeria';\r\n\r\n\r\n\r\nexport default function DetalleNota(props) {\r\n\r\n    const isDoctor = usuario && usuario.rol && usuario.rol === 'Medico';\r\n\r\n    const [notaData, setNotaData] = useState([]);\r\n    const [notaLoading, setnotaLoading] = useState(true);\r\n    const [notaForEdit, setNotaForEdit] = useState(\"\")\r\n    // Add Nota Modal\r\n    const [isModalVisible, setIsModalVisible] = useState(false);\r\n    const handleOk = () => { setIsModalVisible(false) };\r\n    const handleCancel = () => { setIsModalVisible(false) };\r\n    // End of Add Nota Modal\r\n    // Edit Nota Modal\r\n    const [isEditModalVisible, setIsEditModalVisible] = useState(false);\r\n    const handleEditOk = () => { setIsEditModalVisible(false) };\r\n    const handleEditCancel = () => { setIsEditModalVisible(false) };\r\n    const editarNota = async (n) => { await setNotaForEdit(n); setIsEditModalVisible(true) }\r\n    // End of Edit Nota Modal\r\n    // Edit Nota fields\r\n    const [editingEntradas, setEditingEntradas] = useState(false)\r\n    // const [editingDiagnostico, setEditingDiagnostico] = useState(false)\r\n\r\n    const [notasLen, setNotasLen] = useState(null)\r\n    const [counterPilot, setCounterPilot] = useState(0)\r\n\r\n    const id_paciente = props.paciente;\r\n\r\n    // useEffect(() => {\r\n    //     id_paciente ?\r\n    //         getNotasData()\r\n    //         :\r\n    //         finishGet()\r\n\r\n\r\n    // }, [])\r\n\r\n    // useEffect(() => {\r\n    //     if (notaData === null || notaData.length === 0) {\r\n    //         createNota()\r\n    //     }\r\n    // }, [notaData])\r\n\r\n\r\n    useEffect(() => {\r\n        // console.log('Paciente received to detailNota: ', id_paciente)\r\n        id_paciente ?\r\n            getNotasData()\r\n            :\r\n            finishGet()\r\n        // if (notasLen === 0) createNota()\r\n    }, [id_paciente])\r\n\r\n    // if patient not contains notas\r\n\r\n    const getNotasData = async () => {\r\n        // console.log('satring notas for: ', id_paciente);\r\n        await getData(`notas/${id_paciente}`).then(rs => {\r\n            console.log('NotasData: ', rs);\r\n            if (rs && rs.length === 0) {\r\n                createNota()\r\n                // alert(\"create first nota\");\r\n\r\n            }\r\n\r\n            rs.forEach((nt, i) => {\r\n                nt.label = 'Nota' + (i + 1);\r\n            });\r\n\r\n            setNotaData(rs);\r\n            setnotaLoading(false)\r\n        })\r\n    }\r\n    const finishGet = () => { setNotaData([]); setnotaLoading(false); }\r\n\r\n    const createFirstNota = async () => {\r\n        let newNotaBody = {\r\n            id_usuario: id_paciente,\r\n            id_medico: usuario._id,\r\n            edad: 1,\r\n            talla: 1,\r\n            imc: 1,\r\n            peso: 1,\r\n            temperatura: 1,\r\n            presion_arterial: \"---/---\",\r\n            frecuencia_cardiaca: 1,\r\n            frecuencia_respiratoria: 1,\r\n            estudios: [],\r\n            Observaciones: \"\",\r\n            recetas: []\r\n        }\r\n        const newNota = await fetch(API + 'notas/add', {\r\n            method: 'POST',\r\n            body: JSON.stringify(newNotaBody),\r\n            headers: { 'Content-Type': 'application/json' }\r\n        }).then(res => res.json())\r\n            .then(response => {\r\n                message.success(response.message || response.error);\r\n                // response.message && response.message === ''\r\n                return response;\r\n            })\r\n            .catch(error => console.error('Error:', error))\r\n\r\n        // Add new nota to received notas\r\n        props.prevExpNotas.push(newNota.id_nota)\r\n        //Update nota at expedient\r\n        fetch(API + 'expedientes/updateNotas/' + props.id_expediente, {\r\n            method: 'PUT',\r\n            body: JSON.stringify({ \"notas\": props.prevExpNotas }),\r\n            headers: { 'Content-Type': 'application/json' }\r\n        }).then(res => res.json())\r\n            .then(response => {\r\n                // console.log('Update Exp:', response);\r\n                message.success(response.message || response.error);\r\n            })\r\n            .catch(error => console.error('Error:', error))\r\n            .finally(() => { newNotaBody.label = \"Nota 1\"; setNotaData(newNotaBody) })\r\n\r\n    };\r\n\r\n    const createNota = async () => {\r\n        let newNotaBody = {\r\n            id_usuario: id_paciente,\r\n            id_medico: usuario._id,\r\n            edad: 1,\r\n            talla: 1,\r\n            imc: 1,\r\n            peso: 1,\r\n            temperatura: 1,\r\n            presion_arterial: \"---/---\",\r\n            frecuencia_cardiaca: 1,\r\n            frecuencia_respiratoria: 1,\r\n            estudios: [],\r\n            Observaciones: \"\",\r\n            recetas: []\r\n        }\r\n        const newNota = await fetch(API + 'notas/add', {\r\n            method: 'POST',\r\n            body: JSON.stringify(newNotaBody),\r\n            headers: { 'Content-Type': 'application/json' }\r\n        }).then(res => res.json())\r\n            .then(response => {\r\n                message.success(response.message || response.error);\r\n                // response.message && response.message === ''\r\n                return response;\r\n            })\r\n            .catch(error => console.error('Error:', error))\r\n\r\n        // Add new nota to received notas\r\n        props.prevExpNotas.push(newNota.id_nota)\r\n        //Update nota at expedient\r\n        fetch(API + 'expedientes/updateNotas/' + props.id_expediente, {\r\n            method: 'PUT',\r\n            body: JSON.stringify({ \"notas\": props.prevExpNotas }),\r\n            headers: { 'Content-Type': 'application/json' }\r\n        }).then(res => res.json())\r\n            .then(response => {\r\n                // console.log('Update Exp:', response);\r\n                message.success(response.message || response.error);\r\n            })\r\n            .catch(error => console.error('Error:', error))\r\n            .finally(() => {\r\n                getNotasData()\r\n            })\r\n    };\r\n\r\n    const NotaGridStyle = {\r\n        width: '25%',\r\n        textAlign: 'center',\r\n        border: '1px solid rgba(255, 255, 255, 255)'\r\n    };\r\n\r\n    // const EstudioGridStyle = {\r\n    //     width: '50%',\r\n    //     // height: '32',\r\n    //     textAlign: 'center',\r\n    //     display: 'inline-flex',\r\n    //     justifyContent: 'center',\r\n    //     alignItems: 'center'\r\n    // };\r\n\r\n    // const updateNota = (originalNota, field, newString) => {\r\n    //     originalNota[field] = newString;\r\n    //     console.log(originalNota)\r\n    //     updateData(`notas/update/${originalNota._id}`, originalNota).then((rs) => { getNotasData() })\r\n    // }\r\n    // const onEntryFinish = (nota, values) => {\r\n    //     console.log(values)\r\n    //     console.log('Before:', nota)\r\n    //     nota.entradas = [...nota.entradas, values];\r\n    //     console.log('After:', nota)\r\n    //     updateData(`notas/update/${nota._id}`, nota).then((rs) => {\r\n    //         getNotasData()\r\n    //     }).finally(() => setEditingEntradas(false))\r\n    // }\r\n\r\n    // const onEntryFinishFailed = (errorInfo) => {\r\n    //     console.log('Failed:', errorInfo);\r\n    // };\r\n\r\n    // // Upload File For Estudios\r\n    // const dragDropProps = {\r\n    //     name: 'file',\r\n    //     multiple: true,\r\n    //     action: API + 'notas/estudios/upload', // Production\r\n\r\n    //     onChange(info) {\r\n    //         const { status } = info.file;\r\n\r\n    //         if (status !== 'uploading') {\r\n    //             console.log(info.file, info.fileList);\r\n    //         }\r\n\r\n    //         if (status === 'done') {\r\n    //             message.success(`${info.file.name} file uploaded successfully.`);\r\n    //             console.log('New Files: ', info.file.response.file)\r\n    //             // setEstudiosFiles([...estudiosFiles, info.file.response.file])\r\n    //         } else if (status === 'error') {\r\n    //             message.error(`${info.file.name} file upload failed.`);\r\n    //         }\r\n    //     },\r\n\r\n    //     onDrop(e) {\r\n    //         console.log('Dropped files', e.dataTransfer.files);\r\n    //     },\r\n    // };\r\n\r\n    const items = notaData ? notaData.map((nota, i) => {\r\n        return {\r\n            label: `Nota ${i + 1}`,\r\n            key: nota._id,\r\n            children: <Row gutter={8} style={{ backgroundColor: 'white' }}>\r\n\r\n\r\n                {/* Mitad de la pantalla para Receta */}\r\n                <Col span={8} >\r\n                    <DetalleReceta recetas={nota.recetas} id_nota={nota._id} paciente={props.paciente} />\r\n\r\n                    {/* Debajo de la receta esta la ultima cita */}\r\n                    <LastCita paciente={id_paciente} />\r\n\r\n                    {/* Debajo de la ultima cita va hojas de enfermeria*/}\r\n                    <HojasEnfermeria hojas_enfermeria={nota.hojas_enfermeria} id_nota={nota._id} datosPaciente={props.datosPaciente} />\r\n                </Col>\r\n\r\n                {/* la otra mitad de la pantalla para NOTA*/}\r\n                <Col span={16}>\r\n                    {/* Detalle nota and soap will come into enfermero nota */}\r\n                    {/* <Soap />\r\n                    <Collapse bordered={false} style={{ backgroundColor: '#fff' }}>\r\n                        <Panel header={<Tooltip title=\"Haga Click para mostrar u ocultar\" placement=\"right\"><span>Detalles de la nota</span></Tooltip>} key=\"1\">\r\n                            <Card >\r\n                                <Card.Grid style={NotaGridStyle}>Edad: <Paragraph editable={{ onChange: (ns) => updateNota(nota, \"edad\", ns) }} >{nota.edad}</Paragraph></Card.Grid>\r\n                                <Card.Grid style={NotaGridStyle}>Talla:<Paragraph editable={{ onChange: (ns) => updateNota(nota, \"talla\", ns) }} >{nota.talla}</Paragraph></Card.Grid>\r\n                                <Card.Grid style={NotaGridStyle}>Peso: <Paragraph editable={{ onChange: (ns) => updateNota(nota, \"peso\", ns) }} >{nota.peso}</Paragraph></Card.Grid>\r\n                                <Card.Grid style={NotaGridStyle}>IMC: <Paragraph editable={{ onChange: (ns) => updateNota(nota, \"imc\", ns) }} >{nota.imc}</Paragraph></Card.Grid>\r\n                                <Card.Grid style={NotaGridStyle}>Temperatura: <Paragraph editable={{ onChange: (ns) => updateNota(nota, \"temperatura\", ns) }} >{nota.temperatura}</Paragraph></Card.Grid>\r\n                                <Card.Grid style={NotaGridStyle}>Presion Arterial: <Paragraph editable={{ onChange: (ns) => updateNota(nota, \"presion_arterial\", ns) }} >{nota.presion_arterial}</Paragraph></Card.Grid>\r\n                                <Card.Grid style={NotaGridStyle}>Frecuencia Cardiaca : <Paragraph editable={{ onChange: (ns) => updateNota(nota, \"frecuencia_cardiaca\", ns) }} >{nota.frecuencia_cardiaca}</Paragraph></Card.Grid>\r\n                                <Card.Grid style={NotaGridStyle}>Frecuencia Respiratoria : <Paragraph editable={{ onChange: (ns) => updateNota(nota, \"frecuencia_respiratoria\", ns) }} >{nota.edad}</Paragraph></Card.Grid>\r\n                            </Card>\r\n                        </Panel>\r\n                    </Collapse> */}\r\n\r\n                    {/* <Card title='Observaciones'>\r\n                        <Paragraph editable={{ onChange: (ns) => updateNota(nota, \"Observaciones\", ns) }} >\r\n                            {nota.Observaciones}\r\n                        </Paragraph>\r\n                    </Card> */}\r\n\r\n                    {/* <Card title='Diagnostico'>\r\n\r\n                        {\r\n                            nota.diagnostico ? <div>{nota.diagnostico}</div> : <Select\r\n                                showSearch\r\n                                placeholder='Selecciona un diagnostico'\r\n                                style={{ width: 400 }}\r\n                                onChange={(newValue) => updateNota(nota, \"diagnostico\", newValue)}\r\n                            >\r\n                                {\r\n                                    Object.keys(diagnosticos).map((k) => {\r\n                                        return <OptGroup label={k}>\r\n                                            {Object.keys(diagnosticos[k]).map((sk) => {\r\n                                                return <Option value={diagnosticos[k][sk]}>{diagnosticos[k][sk]}</Option>\r\n                                            })}\r\n                                        </OptGroup>\r\n\r\n                                    })\r\n                                }\r\n                            </Select>\r\n                        }\r\n                    </Card> */}\r\n\r\n                    {/* <Card title='Entradas'>\r\n                        {\r\n                            editingEntradas ? <Form\r\n                                name=\"add_entry_form\"\r\n                                // labelCol={{ span: 8 }}\r\n                                // wrapperCol={{ span: 16 }}\r\n                                onFinish={(vals) => onEntryFinish(nota, vals)}\r\n                                onFinishFailed={onEntryFinishFailed}\r\n                                autoComplete=\"off\"\r\n                            >\r\n                                <Space>\r\n                                    <Form.Item\r\n                                        // label=\"Nueva entrada\"\r\n                                        name=\"descripcion\"\r\n                                        rules={[{ required: true, message: 'Ingresa la descripcion' }]}\r\n                                    >\r\n                                        <TextArea rows={2} placeholder=\"Ingresa los detalles\" />\r\n                                    </Form.Item>\r\n                                    <Form.Item\r\n                                    // wrapperCol={{ offset: 8, span: 16 }}\r\n                                    >\r\n                                        <div className='fila'>\r\n                                            <Button className='btnIconCentered' type=\"primary\" shape=\"circle\" size='small' htmlType=\"submit\" icon={<SaveOutlined />} />\r\n                                            <Button className='btnIconCentered' type=\"primary\" shape=\"circle\" size='small' onClick={() => setEditingEntradas(false)} icon={<CloseOutlined />} />\r\n                                        </div>\r\n                                    </Form.Item>\r\n                                </Space>\r\n                            </Form> : <div className='fila'>\r\n                                <ul>\r\n                                    {\r\n                                        nota.entradas && nota.entradas.map((e) => <li key={e._id}>{e.createdAt?.substring(0, 10)} - {e.descripcion}</li>)\r\n                                    }\r\n                                </ul>\r\n                                <Button className='btnIconCentered' type=\"primary\" shape=\"circle\" ghost onClick={() => { setEditingEntradas(true) }} size='small' icon={<PlusOutlined />} />\r\n                            </div>\r\n                        }\r\n\r\n                    </Card> */}\r\n\r\n                    {/* <Card title='Tratamiento'>\r\n                        <Select\r\n                            defaultValue=\"Tratamiento 1\"\r\n                            style={{ width: 120 }}\r\n                            // onChange={handleChange}\r\n                            options={[\r\n                                {\r\n                                    value: 'jack',\r\n                                    label: 'Tratamiento 1',\r\n                                },\r\n                                {\r\n                                    value: 'lucy',\r\n                                    label: 'Tratamiento 2',\r\n                                },\r\n                                {\r\n                                    value: 'Yiminghe',\r\n                                    label: 'Tratamiento 3',\r\n                                },\r\n                            ]}\r\n                        />\r\n                    </Card> */}\r\n\r\n                    {/* <Card title='Estudios'>\r\n                        {nota.estudios.map((e) => {\r\n                            return <Card.Grid style={EstudioGridStyle}>\r\n                                <a href={`${API}notas/estudios/download/${e}`}><ExperimentOutlined />{e}<DownloadOutlined /> </a>\r\n                            </Card.Grid>\r\n                        })}\r\n\r\n                        <Dragger {...dragDropProps} style={{ padding: 6 }}>\r\n                            <p className=\"ant-upload-drag-icon\">\r\n                                <InboxOutlined />\r\n                            </p>\r\n                            <p className=\"ant-upload-text\">Arrastra los archivos de estudio aquí, o da click para buscar</p>\r\n                            <p className=\"ant-upload-hint\">\r\n                                Selecciona archivos en pdf o imagen que sean menores a 2 MB para poder subirlos\r\n                            </p>\r\n                        </Dragger>\r\n                    </Card> */}\r\n\r\n                    <NotasEvolucion _notas_evolucion={nota.notas_evolucion} id_nota={nota._id} />\r\n\r\n                    {/* <Button style={{ float: 'right' }} onClick={() => { editarNota(nota) }} size='small' type=\"primary\" icon={<EditOutlined />} className='btnIconCentered'>Editar Nota</Button> */}\r\n                </Col>\r\n            </Row>\r\n        }\r\n    }).reverse() : []\r\n\r\n    // return <div style={{backgroundColor: '#fff', padding: 16}}>\r\n    return <Card style={{ marginTop: 15 }}>\r\n\r\n        <Space>\r\n            <h5>Notas </h5>\r\n            {\r\n                isDoctor && <Button className='btnIconCentered' onClick={createNota} size='small' type=\"primary\" shape=\"circle\" icon={<PlusOutlined />} ghost />\r\n            }\r\n        </Space>\r\n\r\n        {\r\n            notaLoading ? <h5>Cargando Nota...</h5> : <Tabs items={items} />\r\n        }\r\n\r\n        <Modal title=\"Nueva Nota\" open={isModalVisible} onOk={handleOk} onCancel={handleCancel} width={680} footer={[]} destroyOnClose>\r\n            <NuevaNota id_expediente={props.id_expediente} paciente={id_paciente} prevExpNotas={props.prevExpNotas} setIsModalVisible={setIsModalVisible} />\r\n        </Modal>\r\n\r\n        <Modal title=\"Editar Nota\" open={isEditModalVisible} onOk={handleEditOk} onCancel={handleEditCancel} width={680} footer={[]} destroyOnClose>\r\n            <NuevaNota nota={notaForEdit} setIsModalVisible={setIsEditModalVisible} />\r\n        </Modal>\r\n\r\n\r\n\r\n    </Card>\r\n\r\n\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Card, Space, Button, Input, Form, message } from 'antd';\r\nimport { getData, API, usuario } from '../../resources';\r\nimport { FormOutlined } from '@ant-design/icons';\r\n\r\nconst isDoctor = usuario && usuario.rol && usuario.rol === 'Medico';\r\n\r\nexport default function DetalleHistoria({ historia, detalles_paciente }) {\r\n\r\n\r\n    const { TextArea } = Input;\r\n    const [historiaData, setHistoriaData] = useState(\"\")\r\n    const [notaLoading, setHistoriaLoading] = useState(true)\r\n    const [editing, setEditing] = useState(false)\r\n\r\n    useEffect(() => {\r\n        // console.log(\"Detalle historia recvd pat: \", detalles_paciente)\r\n        historia ?\r\n            getHistoriaData()\r\n            :\r\n            finifhGet()\r\n    }, [historia])\r\n\r\n    const finifhGet = () => { setHistoriaData([]); setHistoriaLoading(false); }\r\n\r\n    const getHistoriaData = () => {\r\n        getData(`historia/${historia}`).then(rs => { setHistoriaData(rs); setHistoriaLoading(false) })\r\n    }\r\n\r\n    const gridStyle = {\r\n        width: '100%',\r\n        // height: '40',\r\n        // textAlign: 'center',\r\n        // display: 'inline-flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        marginTop: 15\r\n    };\r\n\r\n    const updateHistoria = (values) => {\r\n        setEditing(false)\r\n        fetch(API + 'historias/update/' + historiaData[0]._id, {\r\n            method: 'PUT',\r\n            body: JSON.stringify(values),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }).then(res => res.json())\r\n            .then(response => {\r\n                console.log('Success:', response);\r\n                message.success(response.message || response.error);\r\n            })\r\n            .finally(() => {\r\n                getHistoriaData()\r\n                setEditing(false)\r\n            })\r\n        console.log('New Historia', values);\r\n    }\r\n\r\n    const DatosClinicos = () => {\r\n        return <div className='fila'>\r\n            <span className='desc'>Sexo:</span> {detalles_paciente.sexo}\r\n            <span className='desc'>Edad:</span> {detalles_paciente.edad}\r\n            <span className='desc'>Peso:</span> {detalles_paciente.peso}\r\n            <span className='desc'>Talla:</span> {detalles_paciente.talla}\r\n        </div>\r\n    }\r\n\r\n    const HistoriaDetails = () => {\r\n        return editing ?\r\n            <>\r\n                < Form name='historiaForm' initialValues={{ historial: historiaData[0].historial }\r\n                } onFinish={updateHistoria} >\r\n                    <Form.Item name='historial'>\r\n                        <TextArea rows={4} />\r\n                    </Form.Item>\r\n                    <Space>\r\n                        <Form.Item>\r\n                            <Button type=\"primary\" htmlType=\"submit\">Guardar</Button>\r\n                        </Form.Item>\r\n                        <Form.Item>\r\n                            <Button onClick={() => setEditing(false)}>Cancelar</Button>\r\n                        </Form.Item>\r\n                    </Space>\r\n                </Form >\r\n            </>\r\n            :\r\n            <div>\r\n                <span style={{ whiteSpace: 'pre-line', textAlign: 'left', wordWrap: 'normal' }}>{historiaData[0].historial}</span>\r\n                {\r\n                    isDoctor && <Button className='btnIconCentered' onClick={() => setEditing(true)} size='small' disabled={!historia} type=\"primary\" shape=\"circle\" icon={<FormOutlined className='sizedIcon' />} style={{ position: 'absolute', bottom: 18, right: 18 }} ghost />\r\n                }\r\n            </div>\r\n\r\n    }\r\n\r\n\r\n    return <Card style={gridStyle} >\r\n        <h5>Historia Clinica</h5>\r\n\r\n        <DatosClinicos />\r\n\r\n        {\r\n            notaLoading ? <h5>Cargando Historia...</h5> :\r\n                historiaData.length > 0 ?\r\n                    <HistoriaDetails />\r\n                    :\r\n                    <h6>No hay una historia asignada</h6>\r\n        }\r\n        <br />\r\n    </Card>\r\n}\r\n\r\n","import React from 'react'\r\nimport { Avatar, Card, Divider, Button, Row, Col } from 'antd';\r\nimport { FormOutlined, UserOutlined, MailOutlined, MobileOutlined } from '@ant-design/icons';\r\n\r\nexport default function DetallesPaciente({ paciente, setIsEditModalOpen }) {\r\n    return (<div style={{ marginTop: 16, paddingBottom: 4, display: 'flex', flexDirection: 'column', justifyContent: 'center', backgroundColor: 'white', width: '25%', borderRadius: 8 }}>\r\n\r\n        <div style={{ textAlign: 'center', marginTop: 8 }}>\r\n            {\r\n                paciente.avatar.length > 9 ?\r\n                    <img width={82} src={'https://api.recreamed.com/images/' + paciente.avatar} alt='ProfilePic' style={{ alignSelf: 'center' }} /> :\r\n                    <Avatar size={82} icon={<UserOutlined />} className='btnIconCentered' style={{ alignSelf: 'center' }} />\r\n            }\r\n            <div style={{ height: 8 }}></div>\r\n            <p className='nombre'><UserOutlined style={{ marginRight: 10 }} /> {paciente.name}</p>\r\n            <p className='datos'><MailOutlined style={{ marginRight: 10 }} /> {paciente.email}</p>\r\n            <p className='datos'><MobileOutlined style={{ marginRight: 10 }} /> {paciente.telefono}</p>\r\n            <div style={{ display: 'flex', flexDirection: 'row-reverse', paddingRight: 16 }}>\r\n                <Button className='btnIconCentered' onClick={() => setIsEditModalOpen(true)} size='small' type=\"primary\" shape=\"circle\" icon={<FormOutlined className='sizedIcon' />} ghost />\r\n            </div>\r\n        </div>\r\n\r\n        {/* <Card style={{ marginTop: 16 }}> Before, parent was a div and two Card children\r\n            <p className='nombre'>Datos del Paciente</p>\r\n            <Row><Col span={10}><span className='desc'>Responsable:</span></Col><Col span={10}>{paciente.responsable.nombre}</Col> </Row>\r\n            <Row><Col span={10}><span className='desc'>Sexo:</span></Col><Col span={10}>{paciente.sexo}</Col> </Row>\r\n            <Row><Col span={10}><span className='desc'>Edad:</span></Col><Col span={10}>{paciente.edad}</Col> </Row>\r\n            <Row><Col span={10}><span className='desc'>Peso:</span></Col><Col span={10}>{paciente.peso}</Col> </Row>\r\n            <Row><Col span={10}><span className='desc'>Talla:</span></Col><Col span={10}>{paciente.talla}</Col></Row>\r\n            <Row><Col span={10}><span className='desc'>Ocupacion:</span></Col><Col span={10}> {paciente.ocupacion}</Col></Row>\r\n            <Row><Col span={10}><span className='desc'>Estado Civil:</span></Col><Col span={10}> {paciente.estado_civil}</Col></Row>\r\n            <Row><Col span={10}><span className='desc'>Fuma:</span></Col><Col span={10}>{paciente.fuma ? 'Si' : 'No'}</Col> </Row>\r\n            <Row><Col span={10}><span className='desc'>Alcohol:</span></Col><Col span={10}>{paciente.alcohol ? 'Si' : 'No'}</Col> </Row>\r\n            <Row><Col span={10}><span className='desc'>Drogas:</span></Col><Col span={10}>{paciente.drogas}</Col> </Row>\r\n            <Row><Col span={10}><span className='desc'>cuales_drogas:</span></Col><Col span={10}>{paciente.cuales_drogas}</Col> </Row>\r\n            <Row><Col span={10}><span className='desc'>Diagnostico:</span></Col><Col span={10}>{paciente.peso}</Col> </Row>\r\n            <Row><Col span={10}><span className='desc'>Enfermedades familiares:</span></Col><Col span={10}>{paciente.enfermedades_familiares.map((e) => <p>{e}</p>)}</Col> </Row>\r\n            <Row><Col span={10} ><span className='desc'>Enfermedades Medicas:</span></Col><Col span={10}><div style={{ width: 160, height: 8 }}>{paciente.enfermedades_medicas.map((e) => <p style={{ textOverflow: 'ellipsis', overflow: 'hidden' }}>{e}</p>)}</div></Col> </Row>\r\n            <Button className='btnIconCentered' onClick={() => setEditing(true)} size='small' type=\"primary\" shape=\"circle\" icon={<FormOutlined className='sizedIcon' />} style={{ position: 'absolute', bottom: 18, right: 18 }} ghost />\r\n        </Card> */}\r\n\r\n    </div>)\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Button, Space, message } from 'antd';\r\nimport { API, sendDataBody } from '../../resources';\r\nimport DetalleNota from './detalleNota'\r\nimport DetalleHistoria from './detalleHistoria';\r\nimport DetallesPaciente from '../pacientes/detalles.paciente';\r\n// import html2canvas from 'html2canvas';\r\n// import { jsPDF } from \"jspdf\";\r\n\r\n\r\nexport default function Expedientes({ paciente,setIsEditModalOpen }) {\r\n    const [expedientesData, setExpedientesData] = useState(null);\r\n    const [expedientesLoading, setExpedientesLoading] = useState(true);\r\n    const [historia, setHistoria] = useState(\"\");\r\n    const [notas, setNotas] = useState(\"\");\r\n\r\n    const { _id: id_paciente } = paciente;\r\n\r\n    useEffect(() => {\r\n        getExpedientesData(id_paciente)\r\n    }, [id_paciente])\r\n\r\n\r\n    const getExpedientesData = (id_paciente) => {\r\n        // console.log('Received patient exp doc ', id_paciente)\r\n        fetch(API + `expedientes/${id_paciente}`)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                // console.log(\"GetExpData: \", data);\r\n                setExpedientesData(data);\r\n                if (typeof data != \"undefined\" && data !== null) {\r\n                    setNotas(data.notas); setHistoria(data.historia);\r\n                } else { setNotas(null); setHistoria(null) }\r\n            })\r\n            .finally(() => setExpedientesLoading(false))\r\n    }\r\n\r\n    // const printDocument = () => {\r\n    //     const input = document.getElementById('expedient-export');\r\n    //     html2canvas(input)\r\n    //         .then((canvas) => {\r\n    //             const imgData = canvas.toDataURL('image/png');\r\n    //             const pdf = new jsPDF();\r\n    //             pdf.addImage(imgData, 'JPEG', 0, 0);\r\n    //             pdf.output('dataurlnewwindow');//Name of file?\r\n    //             pdf.save(\"expediente.pdf\");\r\n    //         })\r\n    //         ;\r\n    // }\r\n\r\n\r\n    async function addHistoria() {\r\n            return sendDataBody('historias/add', {\r\n            historial: \"Historia clinica al \" + new Date()\r\n        })\r\n    }\r\n\r\n    const createPAtientData = async (usr) => {\r\n        const historia = await addHistoria();\r\n        const postBody = {\r\n            usuario: usr,\r\n            historia: historia.id_historia,\r\n            notas: [],\r\n            recetas: []\r\n        }\r\n        // console.log('postBodyForExpedient: ', postBody);\r\n\r\n        sendDataBody('expedientes/add', postBody).then(response => {\r\n            // console.log('Success:', response);\r\n            message.success(response.message || response.error);\r\n            if (response.message && response.message === 'Expediente creado correctamente') {\r\n                getExpedientesData(id_paciente)\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n\r\n\r\n    if (expedientesLoading) return <p>Cargando...</p>\r\n\r\n    return <div id='expedient-export' >\r\n\r\n        {/* <h4 className='spacedTitle'>Expediente </h4> */}\r\n\r\n        <div style={{ display: 'flex', flexDirection: 'row', gap: 15 }}>\r\n            <DetallesPaciente paciente={paciente} setIsEditModalOpen={setIsEditModalOpen}/>\r\n\r\n            <DetalleHistoria historia={historia} detalles_paciente={paciente} />\r\n        </div>\r\n\r\n\r\n\r\n\r\n        {\r\n            expedientesData ?\r\n                <DetalleNota id_expediente={expedientesData._id} prevExpNotas={expedientesData.notas} paciente={id_paciente} datosPaciente={paciente}/>\r\n                :\r\n                <div style={{}}>\r\n                    Sin expediente\r\n                    <br />\r\n                    <br />\r\n                    <Button onClick={() => { createPAtientData(id_paciente) }}>Crear Expediente Ahora</Button>\r\n                </div>\r\n        }\r\n\r\n        {/* <Button onClick={printDocument}>Exportar a pdf</Button> */}\r\n\r\n\r\n\r\n    </div>;\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Form, Input, InputNumber, Button, message, Space, Row, Col, Upload } from 'antd'\r\nimport { MinusCircleOutlined, PlusOutlined, InboxOutlined } from '@ant-design/icons';\r\nimport { Select } from 'antd';\r\nimport { getData, API } from '../../resources'\r\nconst { Option } = Select;\r\nconst { Dragger } = Upload;\r\n\r\n\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    xs: {\r\n      span: 24,\r\n    },\r\n    sm: {\r\n      span: 8,\r\n    },\r\n  },\r\n  wrapperCol: {\r\n    xs: {\r\n      span: 24,\r\n    },\r\n    sm: {\r\n      span: 14,\r\n    },\r\n  },\r\n};\r\nconst tailFormItemLayout = {\r\n  wrapperCol: {\r\n    xs: {\r\n      span: 24,\r\n      offset: 0,\r\n    },\r\n    sm: {\r\n      span: 16,\r\n      offset: 8,\r\n    },\r\n  },\r\n};\r\nexport default function PerfilEdit(props) {\r\n\r\n  const [form] = Form.useForm();\r\n\r\n  const [sucursales, setSucursales] = useState([]);\r\n  const [sucursalesLoading, setSucursalesLoading] = useState(true);\r\n  const [avatar, setAvatar] = useState(props.perfil.avatar)\r\n\r\n  //Start upload props Upload File\r\n  const dragDropProps = {\r\n    name: 'file',\r\n    multiple: false,\r\n    action: API + 'imagenes/upload',\r\n\r\n    onChange(info) {\r\n      const { status } = info.file;\r\n\r\n      if (status !== 'uploading') {\r\n        console.log(info.file, info.fileList);\r\n      }\r\n\r\n      if (status === 'done') {\r\n        message.success(`${info.file.name} file uploaded successfully.`);\r\n        console.log('New Files: ', info.file.response.file)\r\n        setAvatar(info.file.response.file)\r\n      } else if (status === 'error') {\r\n        message.error(`${info.file.name} file upload failed.`);\r\n      }\r\n    },\r\n\r\n    onDrop(e) {\r\n      console.log('Dropped files', e.dataTransfer.files);\r\n    },\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log('received Medic: ', props.perfil);\r\n    getData('sucursales').then((rs) => { setSucursales(rs); setSucursalesLoading(false) })\r\n  },[])\r\n\r\n  // const onFinish = (values) => {\r\n  //   values.avatar = avatar;\r\n  //   values.estatus = '1';\r\n  //   values.rol = 'Medico';\r\n  //   delete values.confirm;\r\n  //   delete values.prefix;\r\n\r\n  //   console.log('ready to send', values)\r\n  //   fetch(S_API + 'register', {\r\n  //     method: 'POST',\r\n  //     body: JSON.stringify(values),\r\n  //     headers: {\r\n  //       'Content-Type': 'application/json'\r\n  //     }\r\n  //   }).then(res => res.json())\r\n  //     .then(response => {\r\n  //       console.log('Success:', response);\r\n  //       response.message && response.message === 'Usuario creado correctamente' ?\r\n  //         window.location.href = 'doctores' : message.error(response.error);\r\n  //     })\r\n  //     .catch(error => console.error('Error:', error))\r\n  // };\r\n\r\n  const onFinishEdit = (values) => {\r\n    values.avatar = avatar;\r\n    // values.estatus = '1';\r\n    // values.rol = 'Medico';\r\n    // delete values.confirm;\r\n    // delete values.prefix;\r\n\r\n    console.log('ready to send', values)\r\n    fetch(API + 'users/updateUser/' + props.perfil._id, {\r\n      method: 'PUt',\r\n      body: JSON.stringify(values),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).then(res => res.json())\r\n      .then(response => {\r\n        console.log('Success:', response);\r\n        response.message && response.message === 'Usuario actualizado correctamente' ?\r\n          props.setEditing(false) : message.error(response.error);\r\n      })\r\n      .catch(error => console.error('Error:', error))\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      <h4>Editar perfil</h4>\r\n      <br />\r\n      <Dragger {...dragDropProps}>\r\n        <p className=\"ant-upload-drag-icon\">\r\n          <InboxOutlined />\r\n        </p>\r\n        <p className=\"ant-upload-text\">Arrastra la imagen de perfil o click ara buscar</p>\r\n        <p className=\"ant-upload-hint\">\r\n          Selecciona archivos en formato png, jpeg o webp\r\n        </p>\r\n      </Dragger>\r\n      <br />\r\n      <Form\r\n        {...formItemLayout}\r\n        form={form}\r\n        name=\"register\"\r\n        onFinish={onFinishEdit}\r\n        // initialValues={{ horarios: [{ sucursal: '', horario: '' }], prefix: '+52' }}\r\n        initialValues={props.perfil}\r\n        scrollToFirstError\r\n      >\r\n\r\n        <Row>\r\n\r\n          <Col span={11}>\r\n            <Form.Item name=\"name\" label=\"Nombre\" rules={[{ required: true, message: 'Ingresa Nombre y apellidos' }]}>\r\n              <Input />\r\n            </Form.Item>\r\n            <Form.Item name=\"email\" label=\"Correo\" rules={[{ type: 'email', message: 'Ingresa un corrreo electronico valido' }, { required: true, message: 'Please input your E-mail!' }]}>\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            {/* <Form.Item name=\"password\" label=\"Contraseña\" rules={[{ required: true, message: 'Por favor ingrese su contraseña!', },]} hasFeedback >\r\n              <Input.Password />\r\n            </Form.Item>\r\n\r\n            <Form.Item name=\"confirm\" label=\"Confirmar contraseña\" dependencies={['password']} hasFeedback\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: 'Please confirm your password!',\r\n                },\r\n                ({ getFieldValue }) => ({\r\n                  validator(_, value) {\r\n                    if (!value || getFieldValue('password') === value) {\r\n                      return Promise.resolve();\r\n                    }\r\n                    return Promise.reject(new Error('Las contraseñas deben coincidir!'));\r\n                  },\r\n                }),\r\n              ]}\r\n            >\r\n              <Input.Password />\r\n            </Form.Item> */}\r\n\r\n            <Form.Item name=\"telefono\" label=\"Telefono\" rules={[{ required: true, message: 'Ingresa el numero de telefono correcto' },]}>\r\n              <InputNumber style={{ width: '100%' }} />\r\n            </Form.Item>\r\n\r\n\r\n            <Form.Item label=\"horarios\" rules={[{ required: true, message: 'Ingresa al menos un horario', },]}>\r\n              <Form.List name=\"horarios\" label=\"horarios list\"\r\n              >\r\n                {(fields, { add, remove }) => (\r\n                  <>\r\n                    {fields.map(({ key, name, ...restField }) => (\r\n                      <Space key={key} style={{ display: 'flex', marginBottom: 8 }} align=\"baseline\">\r\n                        <Form.Item\r\n                          {...restField}\r\n                          name={[name, 'sucursal']}\r\n                          rules={[{ required: true, message: 'Elije Sucursal' }]}\r\n                        >\r\n                          <Select placeholder=\"Elije Sucursal\" style={{ width: '120px' }} >\r\n                            {sucursalesLoading ? \"Cargando\" :\r\n                              sucursales.map(s => <Option value={s._id}>{s.nombre}</Option>)\r\n                            }\r\n                          </Select>\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                          {...restField}\r\n                          name={[name, 'horario']}\r\n                          rules={[{ required: true, message: 'Missing last name' }]}\r\n                        >\r\n                          <Input placeholder=\"Horario\" />\r\n                        </Form.Item>\r\n                        <MinusCircleOutlined onClick={() => remove(name)} />\r\n                      </Space>\r\n                    ))}\r\n                    <Form.Item>\r\n                      <Button type=\"dashed\" onClick={() => add()} block icon={<PlusOutlined />}>\r\n                        Agregar Horario\r\n                      </Button>\r\n                    </Form.Item>\r\n                  </>\r\n                )}\r\n              </Form.List>\r\n            </Form.Item>\r\n\r\n\r\n\r\n          </Col>\r\n          <Col span={12}>\r\n            <Form.Item name=\"cedula\" label=\"Cedula\" rules={[{ required: false, message: 'Ingresa cedula' }]}>\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            {/* Not Necesary For Medic. He'll be in hospital direction */}\r\n            {/* <Form.Item name=\"calle\" label=\"Calle\" rules={[{ required: true, message: 'Ingresa calle', whitespace: true }]}>\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item name=\"numexterior\" label=\"Num Exterior\" rules={[{ required: true, message: 'Ingresa numero exterior' }]}>\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item name=\"numinterior\" label=\"Num Interior\" rules={[{ required: true, message: 'Ingresa numinterior' }]}>\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item label=\"Colonia\" name=\"colonia\" rules={[{ required: true, message: 'Please input your colobnia!' }]}            >\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item name=\"estado\" label=\"Estado\" rules={[{ required: true, message: 'Apellido materno', },]}>\r\n              <Select placeholder=\"Elije tu estado\">\r\n                {estados.map(e => <Option value={e}>{e}</Option>)}\r\n              </Select>\r\n            </Form.Item>\r\n\r\n            <Form.Item name=\"municipio\" label=\"Municipio\" rules={[{ required: true, message: 'Ingresa tu municipio' }]} >\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item name=\"codigopostal\" label=\"Codigo Postal\" rules={[{ required: true, message: 'Ingresa codigopostal', },]}>\r\n              <InputNumber addonAfter={suffixSelector} style={{ width: '100%', }} />\r\n            </Form.Item> */}\r\n\r\n            <Form.Item name=\"certificacion\" label=\"Certificacion\" rules={[{ required: false, message: 'Ingresa tu certificacion' }]}>\r\n              <Input />\r\n            </Form.Item>\r\n\r\n\r\n\r\n            <Form.Item label=\"Universidades\" rules={[{ required: true, message: 'Ingresa al menos una universidad', },]}>\r\n              <Form.List name=\"universidades\" label=\"universidades list\">\r\n                {(fields, { add, remove }) => (\r\n                  <>\r\n                    {fields.map(({ key, name, ...restField }) => (\r\n                      <Space key={key} style={{ display: 'flex', marginBottom: 8 }} align=\"baseline\">\r\n                        <Form.Item\r\n                          {...restField}\r\n                          name={[name, 'universidad']}\r\n                          rules={[{ required: true, message: 'Ingresa la universidad' }]}\r\n                        >\r\n                          <Input placeholder=\"Universidad\" />\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                          {...restField}\r\n                          name={[name, 'carrera']}\r\n                          rules={[{ required: true, message: 'Ingresa la carrera' }]}\r\n                        >\r\n                          <Input placeholder=\"Carrera\" />\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                          {...restField}\r\n                          name={[name, 'cedula']}\r\n                          rules={[{ required: false, message: 'Ingresa la cedula' }]}\r\n                        >\r\n                          <Input placeholder=\"Cedula\" />\r\n                        </Form.Item>\r\n                        <MinusCircleOutlined onClick={() => remove(name)} />\r\n                      </Space>\r\n                    ))}\r\n                    <Form.Item>\r\n                      <Button type=\"dashed\" onClick={() => add()} block icon={<PlusOutlined />}>\r\n                        Agregar Universidad\r\n                      </Button>\r\n                    </Form.Item>\r\n                  </>\r\n                )}\r\n              </Form.List>\r\n            </Form.Item>\r\n\r\n            <Form.Item name=\"especialidad\" label=\"Especialidad\" rules={[{ required: true, message: 'Ingresa tu especialidad' }]}>\r\n              <Input />\r\n            </Form.Item>\r\n\r\n\r\n            <Form.Item {...tailFormItemLayout}>\r\n              <Button type=\"primary\" htmlType=\"submit\">\r\n                Guardar\r\n              </Button>\r\n            </Form.Item>\r\n          </Col>\r\n        </Row>\r\n\r\n\r\n\r\n\r\n\r\n        {/* <Form.Item\r\n          name=\"agreement\"\r\n          valuePropName=\"checked\"\r\n          rules={[\r\n            {\r\n              validator: (_, value) =>\r\n                value ? Promise.resolve() : Promise.reject(new Error('Should accept agreement')),\r\n            },\r\n          ]}\r\n          {...tailFormItemLayout}\r\n        >\r\n          <Checkbox>\r\n            He leído y acepto los <a href=\"https://recreamed.com\">terminos y condiciones</a>\r\n          </Checkbox>\r\n        </Form.Item> */}\r\n\r\n\r\n      </Form>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Form, Input, Button, InputNumber, Modal } from 'antd';\r\nimport { updateData } from '../../resources';\r\n\r\nexport default function AddService({ isOpen, handleClose, service, profileData, getProfileData }) {\r\n\r\n    const [initialService, setinitialService] = useState(null)\r\n\r\n    useEffect(() => {\r\n        console.log('before', profileData)\r\n        setinitialService(service)\r\n    }, [service])\r\n\r\n    const onFinish = async (values) => {\r\n        console.log(values)\r\n        const newData = profileData.configuracion ? { configuracion: { tratamientos_ofrecidos: [...profileData.configuracion.tratamientos_ofrecidos, values] } } : { configuracion: { tratamientos_ofrecidos: values } }\r\n        await updateData(`/users/updateUser/${profileData._id}`, newData).then((rs) => { console.log(rs); getProfileData(); handleClose() })\r\n    };\r\n\r\n    const onFinishEdit = async (values) => {\r\n        const { configuracion: { tratamientos_ofrecidos } } = profileData;\r\n        const foundIndex = tratamientos_ofrecidos.findIndex((svc => svc._id === service._id));\r\n        tratamientos_ofrecidos[foundIndex] = values;\r\n        profileData.configuracion.tratamientos_ofrecidos = tratamientos_ofrecidos;\r\n        console.log(\"after: \", profileData)\r\n        await updateData(`/users/updateUser/${profileData._id}`, profileData).then((rs) => { console.log(rs); getProfileData(); handleClose() })\r\n\r\n    }\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            setinitialService(null)\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <Modal title={service ? \"Editar Servicio\" : \"Agregar Servicio\"} open={isOpen} onCancel={handleClose} destroyOnClose\r\n            footer={[\r\n                <Button type=\"primary\" htmlType=\"submit\" form='add_tratamiento_medic'>\r\n                    {service ? \"Guardar\" : \"Agregar\"}\r\n                </Button>,\r\n                <Button onClick={handleClose}>Cerrar</Button>\r\n            ]}\r\n        >\r\n            <Form\r\n                name=\"add_tratamiento_medic\"\r\n                onFinish={service ? onFinishEdit : onFinish}\r\n                labelCol={{ span: 8 }} wrapperCol={{ span: 16 }} style={{ maxWidth: 600 }}\r\n                initialValues={service}\r\n            >\r\n\r\n                <div className='fila'>\r\n                    <Form.Item label=\"Nuevo Servicio\" style={{ marginBottom: 0 }} >\r\n\r\n                        <Form.Item name=\"tratamiento\" label=\"Tratamiento\" rules={[{ required: true }]}  >\r\n                            <Input placeholder=\"Ingresa Descripcion\" />\r\n                        </Form.Item>\r\n\r\n                        <Form.Item name=\"observaciones\" label=\"Observaciones\" rules={[{ required: false }]}  >\r\n                            <Input placeholder=\"Ingresa Observaciones\" />\r\n                        </Form.Item>\r\n\r\n                        <Form.Item\r\n                            name=\"costo\" rules={[{ required: true }]}  >\r\n                            <InputNumber placeholder=\"Costo\" />\r\n                        </Form.Item>\r\n\r\n                    </Form.Item>\r\n                </div>\r\n            </Form>\r\n        </Modal>\r\n\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Form, Button, Table, InputNumber, Divider, Popconfirm } from 'antd';\r\nimport Loading from '../../loading';\r\nimport { getData, updateData } from '../../resources';\r\nimport AddService from './service.add';\r\n\r\nexport default function Configuration({ id_usuario, correo }) {\r\n\r\n    const [profileData, setProfileData] = useState([])\r\n    const [loading, setLoading] = useState(true)\r\n    const [editingCostoCita, setEditingCostoCita] = useState(false)\r\n    const [isModalOpen, setisModalOpen] = useState(false)\r\n    const [servicioForEdit, setServicioForEdit] = useState(null)\r\n\r\n    useEffect(() => {\r\n        getProfileData()\r\n\r\n        // deleteServices()\r\n    }, [])\r\n\r\n    const getProfileData = () => {\r\n        getData(`userByMail/${correo}`).then((rs) => {\r\n            localStorage.setItem('userData', JSON.stringify(rs[0])) // Save profile data into local storage again, due to changes\r\n            setProfileData(rs[0]) // Must change on backend to findOne, and remove the [0]\r\n        }).finally(() => { setLoading(false) })\r\n    }\r\n\r\n    const confirmDelete = async (val) => {\r\n\r\n        const { configuracion: { tratamientos_ofrecidos } } = profileData;\r\n        const foundIndex = tratamientos_ofrecidos.findIndex((svc => svc._id === val._id));\r\n        tratamientos_ofrecidos.splice(foundIndex, 1)\r\n        profileData.configuracion.tratamientos_ofrecidos = tratamientos_ofrecidos;\r\n        console.log(\"after: \", profileData)\r\n        await updateData(`/users/updateUser/${profileData._id}`, profileData).then((rs) => { console.log(rs); getProfileData() })\r\n\r\n        // const newData = { configuracion: {} }\r\n        // updateData(`/users/updateUser/${id_usuario}`, newData).then((rs) => { console.log(rs); getProfileData() })\r\n        console.log(val)\r\n    }\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Servicio',\r\n            dataIndex: 'tratamiento',\r\n            key: 'name',\r\n        },\r\n        {\r\n            title: 'Observaciones',\r\n            dataIndex: 'observaciones',\r\n            key: 'observaciones',\r\n        },\r\n        {\r\n            title: 'Costo',\r\n            dataIndex: 'costo',\r\n            key: 'costo',\r\n        },\r\n        {\r\n            title: 'Opciones',\r\n            dataIndex: 'opciones',\r\n            key: 'opciones',\r\n            render: (_, record) => {\r\n                return <div className='fila'>\r\n                    <Button ghost type='primary' onClick={() => handleEditService(record)}>Editar</Button>\r\n                    <Popconfirm\r\n                        title=\"Delete the task\"\r\n                        description=\"Are you sure to delete this task?\"\r\n                        onConfirm={() => confirmDelete(record)}\r\n                        onCancel={() => console.log('Canceled')}\r\n                        okText=\"Yes\"\r\n                        cancelText=\"No\"\r\n                    >\r\n                        <Button ghost danger>Eliminar</Button>\r\n                    </Popconfirm>\r\n                </div>\r\n            }\r\n        }\r\n    ];\r\n\r\n\r\n    const handleEditService = (record) => {\r\n\r\n        setServicioForEdit(record)\r\n        setisModalOpen(true)\r\n    }\r\n    const handleClose = () => {\r\n        setServicioForEdit(null)\r\n        setisModalOpen(false);\r\n    }\r\n\r\n    // Form For edit Costo base de cita\r\n    const CostoCitaForm = () => {\r\n        return <Form\r\n            name=\"basic\"\r\n            labelCol={{ span: 8 }}\r\n            wrapperCol={{ span: 16 }}\r\n            style={{ maxWidth: 600 }}\r\n            initialValues={{ remember: true }}\r\n            onFinish={onFinishEditPrice}\r\n            onFinishFailed={onFinishFailed}\r\n            autoComplete=\"off\"\r\n        >\r\n            <Form.Item\r\n                label=\"Costo base de cita\"\r\n                name=\"costo_cita\"\r\n                rules={[{\r\n                    required: true,\r\n                    message: 'Please input your username!'\r\n                }]}\r\n            >\r\n                <InputNumber />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n                wrapperCol={{ offset: 8, span: 16 }}\r\n            >\r\n                <Button type=\"primary\" htmlType=\"submit\">\r\n                    Guardar\r\n                </Button>\r\n            </Form.Item>\r\n        </Form>\r\n    }\r\n\r\n    // Methods for edit base price for cita\r\n    const onFinishEditPrice = (values) => {\r\n        const newConfig = {\r\n            configuracion: Object.assign(profileData.configuracion, values)\r\n        }\r\n        updateData(`/users/updateUser/${id_usuario}`, newConfig)\r\n            .then(() => getProfileData())\r\n            .finally(() => setEditingCostoCita(false))\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    if (loading) return <Loading />\r\n\r\n    return (\r\n        <div>\r\n            <h4>Configuracion</h4>\r\n            <br />\r\n            {\r\n                editingCostoCita ?\r\n                    <div>\r\n                        <h5>Editando</h5>\r\n                        <CostoCitaForm />\r\n                    </div>\r\n                    :\r\n                    <div style={{ display: 'flex', alignContent: 'center', columnGap: 12 }}>\r\n                        <h5>\r\n                            {\r\n                                profileData.configuracion && profileData.configuracion.costo_cita ? `Costo de cita: ${profileData.configuracion.costo_cita}` : \"Sin costo de cita definido\"\r\n                            }\r\n                        </h5>\r\n                        <Button type='primary' size='small' onClick={setEditingCostoCita}>Modificar</Button>\r\n                    </div>\r\n            }\r\n\r\n            <Divider />\r\n\r\n            <h5>Servicios Registrados</h5> <Button onClick={() => setisModalOpen(true)}>Agergar Servicio</Button>\r\n\r\n            <Table dataSource={profileData.configuracion?.tratamientos_ofrecidos} columns={columns} bordered />\r\n\r\n            <AddService isOpen={isModalOpen} handleClose={handleClose} service={servicioForEdit} profileData={profileData} getProfileData={getProfileData} />\r\n\r\n        </div >\r\n    )\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { Row, Col, Space, Button, Divider, Image } from 'antd';\r\nimport { Avatar, Card } from 'antd';\r\nimport { UserOutlined } from '@ant-design/icons';\r\nimport { API, usuario } from '../../resources';\r\nimport Loading from '../../loading';\r\nimport { FormOutlined } from '@ant-design/icons';\r\nimport PerfilEdit from './perfilEdit';\r\nimport Configuration from './configuration';\r\n\r\n\r\nexport default function Perfil() {\r\n\r\n    const [profileData, setProfileData] = useState([]);\r\n    const [editing, setEditing] = useState(false)\r\n    const [isLoading, setIsLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        getProfileData()\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        getProfileData()\r\n    }, [editing])\r\n\r\n    const getProfileData = () => {\r\n        fetch(API + 'userByMail/' + usuario.email)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                setProfileData(data[0]);\r\n                setIsLoading(false);\r\n            });\r\n    }\r\n\r\n    const editPerfil = async (p) => {\r\n        p.horarios.forEach((h) => { h.sucursal = h.sucursal._id })\r\n        setEditing(true);\r\n    }\r\n\r\n    const MiniCard = ({ universidad, carrera, cedula = '' }) => {\r\n        return <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between', marginBottom: 12, textAlign: 'left' }}>\r\n            <div style={{ display: 'flex', flexDirection: 'column', width: '30%', borderBottom: 'solid 2px #f5f6f8'  }}><div className='desc'>Universidad:</div><div>{universidad}</div> </div>\r\n            <div style={{ display: 'flex', flexDirection: 'column', width: '30%', borderBottom: 'solid 2px #f5f6f8'  }}><div className='desc'>Carrera:</div><div>{carrera}</div></div>\r\n            <div style={{ display: 'flex', flexDirection: 'column', width: '30%', borderBottom: 'solid 2px #f5f6f8'  }}><div className='desc'>Cedula:</div><div>{cedula}</div></div>\r\n        </div>\r\n    }\r\n\r\n    const DetailsProfile = () => {\r\n        // Two columns of 8 spaces with 4 spaces around\r\n        return <div>\r\n\r\n            <Row gutter={8} style={{ backgroundColor: '#f5f6f8', borderRadius: 12, padding: 8 }}>\r\n                <Col span={8} >\r\n                    <Card style={{ display: 'flex', justifyContent: 'center', textAlign: 'center' }}>\r\n                        {\r\n                            // Profile Pic\r\n                            profileData.avatar.length > 9 ?\r\n                                <Image style={{ borderRadius: 12 }} width={256} src={'https://api.recreamed.com/images/' + profileData.avatar} alt='medic-profile-pic' />\r\n                                :\r\n                                <Avatar size={128} icon={<UserOutlined />} className='btnIconCentered' />\r\n                        }\r\n                        <br />\r\n                        <br />\r\n                        <br />\r\n                        <p className='nombre'>{profileData.name} </p>\r\n                        <p className='datos'>{profileData.rol} </p>\r\n                        {\r\n                            profileData.especialidad && <p className='datos'>{profileData.especialidad} </p>\r\n                        }\r\n                        <p className='datos'>{profileData.email} </p>\r\n                        <p className='datos'>{profileData.telefono} </p>\r\n                    </Card>\r\n                </Col>\r\n\r\n                <Col span={7}>\r\n                    <Card title='Horarios' size='small' style={{ height: '100%' }} >\r\n                        {\r\n                            profileData.horarios.map((h) => {\r\n                                return <Card.Grid style={{ width: '100%' }} >\r\n                                    <Row align=\"middle\">\r\n                                        <Col span={6} offset={4}><img width={64} src={'https://api.recreamed.com/images/' + h.sucursal.logo} alt=\"Logo\" /></Col>\r\n                                        <Col span={10}>{h.sucursal.nombre} <br /> {h.horario}</Col>\r\n                                    </Row>\r\n                                </Card.Grid>\r\n                            })\r\n                        }\r\n                    </Card>\r\n\r\n                    {/* <Card title='Datos Academicos' size='small' style={cardStyle}>\r\n                        <p><span className='desc'>Certificacion:</span> {profileData.certificacion} </p>\r\n                        <p><span className='desc'>Cedula:</span> {profileData.cedula} </p>\r\n                    </Card> */}\r\n                </Col>\r\n\r\n                <Col span={9}>\r\n                    <Card title='Universidades' size='small' style={{ height: '100%' }}>\r\n\r\n                        {\r\n                            profileData.universidades && profileData.universidades.map((u) => {\r\n                                return <MiniCard {...u} />\r\n                            })\r\n                        }\r\n                    </Card>\r\n                </Col>\r\n\r\n            </Row>\r\n            <br />\r\n            <Configuration id_usuario={usuario._id} correo={usuario.email} />\r\n        </div>\r\n    }\r\n\r\n    return (\r\n        <div className='mainContainer'>\r\n\r\n            <Space>\r\n                <h3>PERFIL</h3>\r\n                <Button onClick={() => editPerfil(profileData)} type=\"primary\" shape=\"circle\" icon={<FormOutlined />} className='btnIconCentered' />\r\n            </Space>\r\n            {isLoading ? <Loading /> :\r\n                <div>\r\n                    {\r\n                        editing ?\r\n\r\n                            <>\r\n                                <PerfilEdit perfil={profileData} setEditing={setEditing} />\r\n                                <Button onClick={() => setEditing(false)}>Cancelar</Button>\r\n                            </> :\r\n                            <DetailsProfile />\r\n                    }\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/Icon.e05b6872.png\";","import React, { Component } from 'react'\r\nimport { Row, Col, Statistic, Card } from 'antd'\r\n// import { Pie, Line } from '@ant-design/charts';\r\nimport './home.css'\r\n\r\nexport class Home extends Component {\r\n\r\n    dataPie = [\r\n        {\r\n            type: 'F01',\r\n            value: 9,\r\n        },\r\n        {\r\n            type: 'F05',\r\n            value: 4,\r\n        },\r\n        {\r\n            type: 'F09',\r\n            value: 7,\r\n        },\r\n        {\r\n            type: 'F13',\r\n            value: 2,\r\n        },\r\n        {\r\n            type: 'F16',\r\n            value: 12,\r\n        },\r\n        {\r\n            type: 'F22',\r\n            value: 3,\r\n        },\r\n    ];\r\n\r\n    configPie = {\r\n        appendPadding: 10,\r\n        data: this.dataPie,\r\n        angleField: 'value',\r\n        colorField: 'type',\r\n        height: 450,\r\n        radius: 0.8,\r\n        label: {\r\n            type: 'inner',\r\n            offset: '-0.5',\r\n            content: '{name} {percentage}',\r\n            style: {\r\n                fill: '#fff',\r\n                fontSize: 14,\r\n                textAlign: 'center',\r\n            },\r\n        },\r\n    };\r\n\r\n    dataLine = [\r\n        { mes: 'Junio', consultas: 24 },\r\n        { mes: 'Julio', consultas: 17 },\r\n        { mes: 'Agosto', consultas: 22 },\r\n        { mes: 'Septiembre', consultas: 15 },\r\n        { mes: 'Octubre', consultas: 18 }\r\n    ];\r\n\r\n    configLine = {\r\n        data: this.dataLine,\r\n        height: 410,\r\n        xField: 'mes',\r\n        yField: 'consultas',\r\n        color: '#01B075',\r\n        point: {\r\n            size: 5,\r\n            shape: 'diamond',\r\n            color: '#01B075'\r\n        },\r\n        label: {\r\n            style: {\r\n                fill: '#aaa',\r\n                fontSize: 16,\r\n                stroke: '#01B075'\r\n            },\r\n        },\r\n    };\r\n    render() {\r\n        return (\r\n            <>\r\n\r\n                <br />\r\n                <div className=\"contenedor\">\r\n                    <Row gutter={30}>\r\n                        <Col xs={24} sm={12} lg={6}>\r\n                            <Card className=\"cardsContenedor\" hoverable bordered={false}>\r\n                                <Statistic title=\"Total Hospitales\" value=\"4\" valueStyle={{ color: 'white' }} style={{ backgroundColor: '#4BA6FE', borderRadius: 12 }} className=\"cardsContenido\" />\r\n                            </Card>\r\n                        </Col>\r\n                        <Col xs={24} sm={12} lg={6}>\r\n                            <Card className=\"cardsContenedor\" hoverable bordered={false}>\r\n                                <Statistic title=\"Total Medicos\" value=\"14\" valueStyle={{ color: 'white' }} style={{ backgroundColor: '#FF838A', borderRadius: 12 }} className=\"cardsContenido\" />\r\n                            </Card>\r\n                        </Col>\r\n\r\n                        <Col xs={24} sm={12} lg={6}>\r\n                            <Card className=\"cardsContenedor\" hoverable bordered={false}>\r\n                                <Statistic title=\"Total Pacientes\" value=\"241\" valueStyle={{ color: 'white' }} style={{ backgroundColor: '#18D0C2', borderRadius: 12 }} className=\"cardsContenido\" />\r\n                            </Card>\r\n                        </Col>\r\n                        <Col xs={24} sm={12} lg={6}>\r\n                            <Card className=\"cardsContenedor\" hoverable bordered={false}>\r\n                                <Statistic title=\"Citas Hoy\" value={47} valueStyle={{ color: 'white' }} style={{ backgroundColor: '#847DFC', borderRadius: 12 }} className=\"cardsContenido\" />\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row gutter={20}>\r\n                        <Col xs={24} md={12} style={{textAlign:'center'}}>\r\n                            <h5 style={{color: '#1F263C'}}>Diagnosticos</h5>\r\n                        </Col>\r\n                        <Col xs={24} md={12} style={{textAlign:'center'}}>\r\n                            <h5>Citas</h5>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row gutter={20}>\r\n                        <Col xs={24} md={12} className=\"graficaCircular\">\r\n                            {/* <Pie {...this.configPie} style={{ backgroundColor: '#1F263C', borderRadius: 12 }} /> */}\r\n                        </Col>\r\n\r\n                        <Col xs={24} md={12}>\r\n                            {/* <Line {...this.configLine} style={{ backgroundColor: '#1F263C', padding: '20px', borderRadius: 12 }} /> */}\r\n                        </Col>\r\n                    </Row>\r\n\r\n                </div>\r\n\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home\r\n","import React, { useState } from 'react'\r\nimport { Form, Input, Button, message, Space, Divider, Upload, Switch, Modal, DatePicker } from 'antd'\r\nimport { InputNumber, Select } from 'antd';\r\nimport { S_API, API, usuario, estados } from '../../resources'\r\nimport { UploadOutlined, PlusOutlined, MinusCircleOutlined } from '@ant-design/icons'\r\nimport { useEffect } from 'react';\r\n// const { Dragger } = Upload;\r\n\r\n\r\nconst { Option } = Select;\r\n\r\nfunction RegisterForm(props) {\r\n  const [form] = Form.useForm();\r\n  const [avatar, setAvatar] = useState(props.paciente ? props.paciente.avatar : 'noimg.jpg')\r\n\r\n  useEffect(() => {\r\n    console.log('Received patient ', props.paciente)\r\n  }, [])\r\n\r\n\r\n\r\n  async function addHistoria() {\r\n    return await fetch(API + 'historias/add', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        historial: \"Historia clinica al \" + new Date()\r\n      })\r\n    }).then(res => res.json())\r\n      .then(response => {\r\n        console.log('Story Created: ', response);\r\n        return response\r\n      })\r\n      .catch(error => console.error('Error:', error))\r\n  }\r\n\r\n  const createPAtientData = async (usr) => {\r\n    const historia = await addHistoria();\r\n    console.log('historia on Register: ', historia);\r\n    const postBody = {\r\n      usuario: usr,\r\n      historia: historia.id_historia,\r\n      notas: [],\r\n      recetas: []\r\n    }\r\n    console.log('postBodyForExpedient: ', postBody);\r\n    await fetch(API + 'expedientes/add', {\r\n      method: 'POST',\r\n      body: JSON.stringify(postBody),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).then(res => res.json())\r\n      .then(response => {\r\n        console.log('Success:', response);\r\n        message.success(response.message || response.error);\r\n        if (response.message && response.message === 'Expediente creado correctamente') {\r\n          props.setAdding(false)\r\n        }\r\n      })\r\n      .catch(error => console.error('Error:', error))\r\n  }\r\n\r\n  const onFinish = async (values) => {\r\n\r\n    // Register patient\r\n    values.avatar = avatar;\r\n    values.estatus = '1';\r\n    values.rol = 'Paciente';\r\n    values.password = '' + values.telefono;\r\n    values.universidades = [];\r\n    values.certificacion = '';\r\n    values.cedula = '';\r\n    values.horarios = [];\r\n    values.medicos_asignados = props.paciente ? props.paciente.medicos_asignados : [usuario._id];\r\n    // values.responsable = (props.paciente && props.paciente.responsable) ? props.paciente.responsable : { nombre: values.res_name, telefono: values.res_phone }\r\n    values.responsable = { nombre: values.res_name, telefono: values.res_phone }\r\n\r\n    delete values.prefix;\r\n    delete values.res_name;\r\n    delete values.res_phone;\r\n\r\n    const url = props.paciente ? API + 'users/updateUser/' + props.paciente._id : S_API + 'register';\r\n\r\n    console.log('before send', values)\r\n    console.log('url: ', url);\r\n    await fetch(url, {\r\n      method: props.paciente ? 'PUT' : 'POST',\r\n      body: JSON.stringify(values),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).then(res => res.json())\r\n      .then(response => {\r\n        console.log('Create User Response:', response);\r\n        message.success(response.message || response.error);\r\n        props.paciente ? console.log('Editing, not creating patient') : createPAtientData(response.user_id);\r\n        response.message === 'Usuario creado correctamente' ?\r\n          props.setAdding(false) : console.log(response);\r\n        response.message === 'Usuario actualizado correctamente' ?\r\n          finishUpdate() : console.log(response);\r\n\r\n      })\r\n      .catch(error => console.error('Error:', error))\r\n  };\r\n\r\n  const finishUpdate = () => {\r\n    props.setAdding(false); props.getPacientesData()\r\n  }\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log('Failed:', errorInfo);\r\n  };\r\n\r\n  //Start upload props Upload File\r\n  const dragDropProps = {\r\n    name: 'file',\r\n    multiple: false,\r\n    action: API + 'imagenes/upload',\r\n\r\n    onChange(info) {\r\n      const { status } = info.file;\r\n\r\n      if (status !== 'uploading') {\r\n        console.log(info.file, info.fileList);\r\n      }\r\n\r\n      if (status === 'done') {\r\n        message.success(`${info.file.name} file uploaded successfully.`);\r\n        console.log('New Files: ', info.file.response.file)\r\n        setAvatar(info.file.response.file)\r\n      } else if (status === 'error') {\r\n        message.error(`${info.file.name} file upload failed.`);\r\n      }\r\n    },\r\n\r\n    // onDrop(e) {\r\n    //   console.log('Dropped files', e.dataTransfer.files);\r\n    // },\r\n  };\r\n  return (\r\n    <div style={{ width: '100%', height: '100%', overflowY: 'scroll' }} >\r\n      {\r\n        props.paciente ? <h4>Editar paciente</h4> : <h4>Registrar Paciente</h4>\r\n      }\r\n\r\n      <br />\r\n\r\n\r\n      <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\r\n        <Upload {...dragDropProps}>\r\n          <Button type=\"dashed\" icon={<UploadOutlined style={{ fontSize: 24, color: '#0d6efd' }} />} style={{ width: 400, height: 80 }} block>Selecciona la foto de perfil</Button>\r\n        </Upload>\r\n      </div>\r\n      <br />\r\n      <Form\r\n        // {...formItemLayout}\r\n        labelCol={{ span: 6 }} wrapperCol={{ span: 16 }}\r\n        form={form}\r\n        name=\"register_patient_medic\"\r\n        onFinish={onFinish}\r\n        onFinishFailed={onFinishFailed}\r\n        initialValues={props.paciente}\r\n        scrollToFirstError\r\n      >\r\n\r\n        <Form.Item\r\n          name=\"name\"\r\n          label=\"Nombre\"\r\n          rules={[{ required: true, message: 'Ingresa Nombre y apellidos' }]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"email\"\r\n          label=\"Correo\"\r\n          rules={[{ type: 'email', message: 'Ingresa un correo electronico vaido!' }, { required: true, message: 'Ingresa un correo electronico' }]}>\r\n          <Input />\r\n        </Form.Item>\r\n\r\n\r\n        <Form.Item\r\n          name=\"telefono\"\r\n          label=\"Telefono\"\r\n          rules={[{ required: true, message: 'Ingresa tu numero de telefono' }]}\r\n        >\r\n          <InputNumber\r\n            // addonBefore={prefixSelector}\r\n            style={{ width: '100%' }}\r\n          />\r\n        </Form.Item>\r\n\r\n        <Divider>Responsable (opcional) </Divider>\r\n        <Form.Item name=\"res_name\" label=\"Nombre Responsable\" >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item name=\"res_phone\" label=\"Telefono Responsable\">\r\n          <Input />\r\n        </Form.Item>\r\n        <Divider />\r\n\r\n        <Form.Item\r\n          name=\"calle\"\r\n          label=\"Calle\"\r\n          rules={[{ required: false, message: 'Ingresa calle', whitespace: true }]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"numexterior\"\r\n          label=\"Num Exterior\"\r\n          rules={[{ required: false, message: 'Ingresa numero exterior' }]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"numinterior\"\r\n          label=\"Num Interior\"\r\n          rules={[{ required: false, message: 'Ingresa numinterior' }]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"Colonia\"\r\n          name=\"colonia\"\r\n          rules={[{ required: false, message: 'Ingresa ' }]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"estado\"\r\n          label=\"Estado\"\r\n          rules={[{ required: false, message: 'Apellido materno', },]}>\r\n          <Select placeholder=\"Elije tu estado\" showSearch>\r\n            {estados.map(e => <Option value={e}>{e}</Option>)}\r\n          </Select>\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"municipio\"\r\n          label=\"Municipio\"\r\n          rules={[{ required: false, message: 'Ingresa tu municipio' }]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"codigopostal\"\r\n          label=\"Codigo Postal\"\r\n          rules={[{ required: false, message: 'Ingresa codigopostal', },]}>\r\n          <InputNumber style={{ width: '100%', }} />\r\n        </Form.Item>\r\n\r\n        <Form.Item name=\"sexo\" label=\"sexo\" rules={[{ required: false, message: 'Selecciona una opcion' }]}>\r\n          <Select placeholder=\"Elije el sexo\" >\r\n            <Option value=\"H\">H</Option>\r\n            <Option value=\"M\">M</Option>\r\n            <Option value=\"Otro\">Otro</Option>\r\n          </Select>\r\n        </Form.Item>\r\n\r\n        <Form.Item name=\"edad\" label=\"Edad\" rules={[{ required: false, message: 'Ingresa edad' }]} >\r\n          <InputNumber min={1} max={120} />\r\n        </Form.Item>\r\n\r\n        <Form.Item name=\"diagnostico\" label=\"Diagnostico\" rules={[{ required: false, message: 'Ingresa el diagnostico' }]} >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item name=\"peso\" label=\"Peso\" rules={[{ required: false, message: 'Ingresa el peso' }]} >\r\n          <InputNumber min={1} max={200} />\r\n        </Form.Item>\r\n\r\n        <Form.Item name=\"talla\" label=\"Talla\" rules={[{ required: false, message: 'Ingresa la talla' }]} >\r\n          <InputNumber min={1} max={200} />\r\n        </Form.Item>\r\n\r\n        <Form.Item name=\"ocupacion\" label=\"Ocupacion\" rules={[{ required: false, message: 'Ingresa ocupacion' }]} >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item name=\"estado_civil\" label=\"Estado Civil\" rules={[{ required: false, message: 'Ingresa estado civil' }]} >\r\n          <Select placeholder=\"Elije el estado civil\" >\r\n            <Option value=\"Soltero\">Soltero</Option>\r\n            <Option value=\"Casado\">Casado</Option>\r\n            <Option value=\"Divorciado\">Divorciado</Option>\r\n            <Option value=\"Separación en proceso judicial\">Separación en proceso judicial</Option>\r\n            <Option value=\"Viudo\">Viudo</Option>\r\n            <Option value=\"Concubinato\">Concubinato</Option>\r\n          </Select>\r\n        </Form.Item>\r\n\r\n        <Form.Item name=\"escolaridad\" label=\"Escolaridad\" rules={[{ required: false, message: 'Ingresa escolaridad' }]} >\r\n          <Select placeholder=\"Elije escolaridad\" >\r\n            <Option value=\"Ninguno\">Ninguno</Option>\r\n            <Option value=\"Preescolar\">Preescolar</Option>\r\n            <Option value=\"Primaria\">Primaria</Option>\r\n            <Option value=\"Secundaria\">Secundaria</Option>\r\n            <Option value=\"Medio Superior\">Medio Superior</Option>\r\n            <Option value=\"Superior\">Superior</Option>\r\n            <Option value=\"Posgrado\">Posgrado</Option>\r\n          </Select>\r\n        </Form.Item>\r\n\r\n        <Form.Item name=\"lugar_de_nacimiento\" label=\"Lugar De Nacimiento\" rules={[{ required: false, message: 'Ingresa el lugar de nacimiento' }]} >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item name=\"fecha_nacimiento\" label=\"Fecha De Nacimiento\" rules={[{ required: false, message: 'Ingresa la fecha de nacimiento' }]} >\r\n          <DatePicker />\r\n        </Form.Item>\r\n\r\n        <Form.Item name=\"ciudad\" label=\"Ciudad de residencia\" rules={[{ required: false, message: 'Ingresa ciudad' }]} >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item name=\"fuma\" label=\"Fuma\" rules={[{ required: false, message: 'Ingresa tu universidad' }]} >\r\n          <Switch defaultChecked={false} />\r\n        </Form.Item>\r\n\r\n        <Form.Item name=\"alcohol\" label=\"Alcohol\" rules={[{ required: false, message: 'Ingresa tu universidad' }]} >\r\n          <Switch defaultChecked={false} />\r\n        </Form.Item>\r\n\r\n        <Form.Item name=\"drogas\" label=\"Drogas\" rules={[{ required: false, message: 'Selecciona una opcion' }]} >\r\n          <Select placeholder=\"Elije una opcion\" >\r\n            <Option value=\"Antes\">Antes</Option>\r\n            <Option value=\"Ahora\">Ahora</Option>\r\n            <Option value=\"Nunca\">Nunca</Option>\r\n          </Select>\r\n        </Form.Item>\r\n\r\n        <Form.Item name=\"cuales_drogas\" label=\"Cuales Drogas\" rules={[{ required: false, message: 'Selecciona una opcion' }]} >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item name=\"enfermedades_familiares\" label=\"Enfermedades Familiares\" rules={[{ required: false, message: 'Ingresa tu universidad' }]} >\r\n          <Form.List name=\"enfermedades_familiares\" >\r\n            {(fields, { add, remove }, { errors }) => (\r\n              <>\r\n                {fields.map((field, index) => (\r\n                  <Form.Item label='' required={false} key={field.key}>\r\n                    <Form.Item {...field} noStyle\r\n                      validateTrigger={['onChange', 'onBlur']}\r\n                      rules={[{ required: false, whitespace: true, message: \"Ingresa la enfermedad o elimina este campo\" }]}\r\n                    >\r\n                      <Input placeholder=\"Ingresa enfermedad\" style={{ width: fields.length > 1 ? '93%' : '100%' }} />\r\n                    </Form.Item>\r\n                    {fields.length > 1 ? (\r\n                      <MinusCircleOutlined\r\n                        className=\"dynamic-delete-button\"\r\n                        onClick={() => remove(field.name)}\r\n                      />\r\n                    ) : null}\r\n                  </Form.Item>\r\n                ))}\r\n                <Form.Item>\r\n                  <Button type=\"dashed\" onClick={() => add()} icon={<PlusOutlined />}>\r\n                    Agregar Enfermedad  Familiar\r\n                  </Button>\r\n\r\n                  <Form.ErrorList errors={errors} />\r\n                </Form.Item>\r\n              </>\r\n            )}\r\n          </Form.List>\r\n        </Form.Item>\r\n\r\n        <Form.Item name=\"enfermedades_medicas\" label=\"Enfermedades Medicas\" rules={[{ required: false, message: 'Ingresa tu universidad' }]} >\r\n          <Form.List name=\"enfermedades_medicas\">\r\n            {(fields, { add, remove }, { errors }) => (\r\n              <>\r\n                {fields.map((field, index) => (\r\n                  <Form.Item label='' required={false} key={field.key}>\r\n                    <Form.Item {...field} noStyle\r\n                      validateTrigger={['onChange', 'onBlur']}\r\n                      rules={[{ required: false, whitespace: true, message: \"Ingresa la enfermedad o elimina este campo\" }]}\r\n                    >\r\n                      <Input placeholder=\"Ingresa enfermedad\" style={{ width: fields.length > 1 ? '93%' : '100%' }} />\r\n                    </Form.Item>\r\n                    {fields.length > 1 ? (\r\n                      <MinusCircleOutlined\r\n                        className=\"dynamic-delete-button\"\r\n                        onClick={() => remove(field.name)}\r\n                      />\r\n                    ) : null}\r\n                  </Form.Item>\r\n                ))}\r\n                <Form.Item>\r\n                  <Button type=\"dashed\" onClick={() => add()} icon={<PlusOutlined />}>\r\n                    Agregar Enfermedad Medica\r\n                  </Button>\r\n\r\n                  <Form.ErrorList errors={errors} />\r\n                </Form.Item>\r\n              </>\r\n            )}\r\n          </Form.List>\r\n        </Form.Item>\r\n\r\n        <Form.Item name=\"tratamiento_actual\" label=\"Tratamiento actual\" rules={[{ required: false, message: 'Ingresa tu universidad' }]} >\r\n          <Form.List name=\"tratamiento_actual\" >\r\n            {(fields, { add, remove }, { errors }) => (\r\n              <>\r\n                {fields.map((field, index) => (\r\n                  <Form.Item\r\n                    // label={`Tratamiento ${index + 1}`} \r\n                    label=''\r\n                    required={false} key={field.key}>\r\n                    <Form.Item {...field} noStyle\r\n                      validateTrigger={['onChange', 'onBlur']}\r\n                      rules={[{ required: false, whitespace: true, message: \"Ingresa la enfermedad o elimina este campo\" }]}\r\n                    >\r\n                      <Input placeholder=\"Ingresa enfermedad\" style={{ width: fields.length > 1 ? '93%' : '100%' }} />\r\n                    </Form.Item>\r\n                    {fields.length > 1 ? (\r\n                      <MinusCircleOutlined\r\n                        className=\"dynamic-delete-button\"\r\n                        onClick={() => remove(field.name)}\r\n                      />\r\n                    ) : null}\r\n                  </Form.Item>\r\n                ))}\r\n                <Form.Item>\r\n                  <Button type=\"dashed\" onClick={() => add()} icon={<PlusOutlined />}>\r\n                    Agregar Tratamiento\r\n                  </Button>\r\n\r\n                  <Form.ErrorList errors={errors} />\r\n                </Form.Item>\r\n              </>\r\n            )}\r\n          </Form.List>\r\n        </Form.Item>\r\n\r\n        {/* <Form.Item wrapperCol={{\r\n          offset: 8,\r\n          span: 16,\r\n        }}>\r\n          <Space>\r\n            <Button onClick={() => props.setAdding(false)}>Cancelar</Button>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              Registrar\r\n            </Button>\r\n          </Space>\r\n\r\n        </Form.Item> */}\r\n      </Form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default function Register({ paciente, setIsModalOpen, isModalOpen, getPacientesData }) {\r\n\r\n  // const [isModalOpen, setIsModalOpen] = useState(false);\r\n  // const showModal = () => { setIsRegisterModalOpen(true); };\r\n  const handleOk = () => {\r\n    setIsModalOpen(false);\r\n  };\r\n  const handleCancel = () => {\r\n    setIsModalOpen(false);\r\n  };\r\n\r\n  return <Modal width={800}\r\n    // title={paciente ? 'Editar Paciente' : 'Registrar Paciente'}\r\n    open={isModalOpen} onOk={handleOk} onCancel={handleCancel} destroyOnClose\r\n    footer={[\r\n      <Button onClick={() => setIsModalOpen(false)}>Cancelar</Button>,\r\n      <Button type=\"primary\" htmlType=\"submit\" form='register_patient_medic'>\r\n        Guardar\r\n      </Button>\r\n    ]}\r\n  >\r\n    <RegisterForm paciente={paciente} setAdding={setIsModalOpen} getPacientesData={getPacientesData} />\r\n  </Modal>\r\n\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { Button, Select, List, Row, Col } from 'antd'\r\nimport { API } from '../../resources'\r\nimport Loading from '../../loading'\r\nimport { usuario } from '../../resources'\r\nimport Expedientes from '../expedientes/expedientes'\r\n// import DetallesPaciente from './detalles.paciente_old'\r\nimport DetallesPaciente from './detalles.paciente'\r\nimport Register from './register.patient'\r\nimport { PlusOutlined, MobileOutlined, UserOutlined } from '@ant-design/icons';\r\nimport dayjs from 'dayjs'\r\nconst { Option } = Select;\r\n\r\nexport default function MainPacientes() {\r\n\r\n  const [pacientesData, setPacientesData] = useState([])\r\n  const [isLoading, setIsLoading] = useState(true)\r\n  // const [paciente, setPaciente] = useState(null)\r\n  const [isRegisterModalOpen, setIsRegisterModalOpen] = useState(false)\r\n  const [isEditModalOpen, setIsEditModalOpen] = useState(false)\r\n  const [activePatient, setActivePatient] = useState(pacientesData[0]?._id)\r\n\r\n  useEffect(() => {\r\n    getPacientesData()\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    getPacientesData()\r\n  }, [isRegisterModalOpen])\r\n\r\n  const getPacientesData = () => {\r\n    fetch(API + `mispacientes/${usuario._id}`)\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        data.forEach(paciente => {\r\n          paciente.res_name = paciente.responsable.nombre;\r\n          paciente.res_phone = paciente.responsable.telefono;\r\n          paciente.fecha_nacimiento = dayjs(paciente.fecha_nacimiento);\r\n        });\r\n        // console.log(data); \r\n        setPacientesData(data);\r\n        if (data && data.length > 0) setActivePatient(data[0])\r\n      })\r\n      .finally(() => setIsLoading(false))\r\n  }\r\n\r\n\r\n\r\n\r\n  const onChange = (data) => {\r\n    const found = pacientesData.find(p => p._id === data)\r\n    setActivePatient(found)\r\n    console.log('active patient', found)\r\n  };\r\n\r\n  const onSearch = (value) => {\r\n    console.log('search:', value);\r\n  };\r\n\r\n  if (isLoading) return <Loading />\r\n\r\n  return (\r\n    <div className='mainContainer' style={{ backgroundColor: '#f5f6f8' }}>\r\n      {/* <Col ></Col> */}\r\n      <h3 >Pacientes</h3>\r\n      <Row justify=\"start\">\r\n        <Col>\r\n          <div className=\"my-select-container\">\r\n            <Select\r\n              // Widget para buscar pacientes\r\n              style={{ borderRadius: 8, width: 256 }}\r\n              dropdownStyle={{ borderRadius: 8 }}\r\n              showSearch\r\n              placeholder=\"Buscar paciente\"\r\n              optionFilterProp=\"children\"\r\n              onChange={onChange}\r\n              onSearch={onSearch}\r\n              filterOption={(input, option) => option.children.toLowerCase().includes(input.toLowerCase())}\r\n            >\r\n              {\r\n                pacientesData.map((p) => <Option key={p._id} value={p._id}>{p.name}</Option>)\r\n              }\r\n            </Select>\r\n          </div>\r\n        </Col>\r\n        <Col style={{ marginLeft: 12 }}><Button className='btnIconCentered' style={{ marginTop: 4 }} onClick={() => setIsRegisterModalOpen(!isRegisterModalOpen)} size='small' type=\"primary\" shape=\"circle\" icon={<PlusOutlined />} /> </Col>\r\n      </Row> <div style={{ height: '16px' }}></div>\r\n\r\n\r\n      {\r\n        activePatient && <Expedientes paciente={activePatient} setIsEditModalOpen={setIsEditModalOpen} />\r\n      }\r\n\r\n\r\n\r\n      {/* Modal For Register */}\r\n      <Register setIsModalOpen={setIsRegisterModalOpen} isModalOpen={isRegisterModalOpen} getPacientesData={getPacientesData} />\r\n\r\n      {/* Modal For Edit */}\r\n      <Register setIsModalOpen={setIsEditModalOpen} isModalOpen={isEditModalOpen} paciente={activePatient} getPacientesData={getPacientesData} />\r\n\r\n    </div >\r\n  )\r\n\r\n}\r\n","import React, { useEffect, useState, useRef } from 'react'\r\nimport { getData, sendDataBody } from '../resources';\r\nimport { Form, Button, Space, Select, message } from 'antd'\r\nimport { usuario, ids_hospitales } from '../resources';\r\nimport QRCode from \"react-qr-code\";\r\nimport { toBlob, toPng } from 'html-to-image';\r\nconst { Option } = Select;\r\n\r\n\r\n\r\nexport default function EscalasCreateGeneralLink(props) {\r\n\r\n    const [misPacientes, setMisPacientes] = useState([])\r\n    const [selectedPatient, setSelectedPatient] = useState(null)\r\n    const [link, setLink] = useState('')\r\n    // Used to add a medico _id when the user is admin\r\n    const [medicosData, setMedicosData] = useState([])\r\n    const [medico, setMedico] = useState(null)\r\n\r\n    const imageRef = useRef(null);\r\n\r\n\r\n    const getPacientesOfDoctor = (_id) => { //Para el caso que la sesion sea de Medico\r\n        getData(`mispacientes/${_id}`).then(rs => { setSelectedPatient(null); setMisPacientes(rs); console.log(`patients of ${_id}`, rs); })\r\n    }\r\n\r\n    // If administrator or reception, filter medicos of hospital\r\n    const getDoctorsData = () => { //Para el caso que la sesion sea de Administrador\r\n        // const body = { ids: usuario.medicos_asignados }\r\n        // sendDataBody(`users/getMany`, body).then(rs => { setMedicosData(rs); console.log('medicosData: ', rs); })\r\n        getData('users_by_rol/Medico').then((rs) => { setMedicosData(myDoctors(rs)) })\r\n    }\r\n\r\n    const myDoctors = (doctorsData) => {\r\n\r\n        let doctorsFound = [];\r\n        ids_hospitales.forEach(id_hospital => {\r\n            doctorsData.forEach(doctor => {\r\n                doctor.horarios.forEach(horario => {\r\n                    if (!doctorsFound.includes(doctor) && horario.sucursal._id === id_hospital) doctorsFound.push(doctor)\r\n                });\r\n            });\r\n            console.log(`Founds for ${id_hospital}: `, doctorsFound)\r\n        });\r\n\r\n        return doctorsFound;\r\n    }\r\n    // End of medicos filtering\r\n\r\n    useEffect(() => {\r\n        usuario.rol === 'Medico' ? getPacientesOfDoctor(usuario._id) : getDoctorsData()\r\n    }, [])\r\n\r\n    const handleDoctorChange = (value) => { setMedico(value); getPacientesOfDoctor(value) };\r\n    const handleChange = (value) => { setLink(null); setSelectedPatient(value) };\r\n\r\n    const generateLink = () => {\r\n        // let usr = usuario.rol === 'Administrador' ? medico : usuario._id;\r\n        let usr = (usuario.rol === 'Administrador' || usuario.rol === 'Recepcion' || usuario.rol === 'Enfermero') ? medico : usuario._id;\r\n\r\n        let l = `https://sistema.recreamed.com/${props.tipo}_public/${usr}/${selectedPatient}/${Date.now()}`\r\n        // let l = `http://localhost:3000/${props.tipo}_public/${usr}/${selectedPatient}/${Date.now()}`\r\n        setLink(l)\r\n    }\r\n    const copyLink = () => {\r\n        navigator.clipboard.writeText(link)\r\n        message.success('Enlace Copiado al Portapapeles!')\r\n    }\r\n\r\n    const handleDownload = async () => {\r\n        const dataUrl = await toPng(imageRef.current, { width: 288 });\r\n\r\n        // download image\r\n        const link = document.createElement('a');\r\n        link.download = \"codigo-de-enlace.png\";\r\n        link.href = dataUrl;\r\n        link.click();\r\n    }\r\n\r\n    const handleCopy = async () => {\r\n        message.info('Espere mientras se copia el codigo...')\r\n        toBlob(imageRef.current, { width: 288 })\r\n            .then(async function (blob) {\r\n                try {\r\n                    await navigator.clipboard.write([\r\n                        // eslint-disable-next-line no-undef\r\n                        new ClipboardItem({\r\n                            [blob.type]: blob\r\n                        })\r\n                    ]);\r\n                    console.log(\"Image copied\");\r\n                    message.success('Codigo Copiado al Portapapeles')\r\n                } catch (error) {\r\n                    console.error(error);\r\n                }\r\n            });\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                (usuario.rol === 'Administrador' || usuario.rol === 'Recepcion' || usuario.rol === 'Enfermero') &&\r\n                <Form.Item label=\"Medico\" name=\"usuario\" rules={[{ required: true, message: 'Selecciona el paciente' }]}\r\n                    style={{ alignItems: 'center', paddingTop: 20 }}>\r\n                    <Select\r\n                        showSearch\r\n                        style={{ width: 260, }}\r\n                        onChange={handleDoctorChange}\r\n                        placeholder='Selecciona un medico'\r\n                    >\r\n                        {\r\n                            medicosData.map((p) => {\r\n                                return <Option key={p._id} value={p._id}>{p.name}</Option>\r\n                            })\r\n                        }\r\n                    </Select>\r\n                </Form.Item>\r\n            }\r\n\r\n            <Form.Item label=\"Paciente\" name=\"usuario\" rules={[{ required: true, message: 'Selecciona el paciente' }]}\r\n                style={{ alignItems: 'center', paddingTop: 20 }}>\r\n                <Select\r\n                    style={{ width: 260, }}\r\n                    onChange={handleChange}\r\n                    placeholder='Selecciona un paciente'\r\n                    value={selectedPatient}\r\n                >\r\n                    {\r\n                        misPacientes.map((p) => {\r\n                            return <Option key={p._id} value={p._id}>{p.name}</Option>\r\n                        })\r\n                    }\r\n                </Select>\r\n            </Form.Item>\r\n            <Button onClick={generateLink} disabled={!selectedPatient} >Generar Enlace</Button>\r\n\r\n\r\n            <br />\r\n\r\n            {\r\n                selectedPatient && link ? <div>\r\n                    <Space align='center'>\r\n                    </Space>\r\n                    <p style={{ paddingTop: 16, color: '#1890ff' }} >{link}</p>\r\n                    <Button onClick={copyLink}>Copiar Link</Button>\r\n\r\n                    {\r\n                        usuario.rol === 'Recepcion' && <Button type='primary' href={link} target='_blank' rel='noreferrer' style={{ marginLeft: 14 }}>Contestar Ahora</Button>\r\n                    }\r\n\r\n                    <br />\r\n                    <div ref={imageRef} style={{ background: 'white', padding: '16px' }}> <QRCode value={link} /> </div>\r\n                    <Button onClick={handleDownload}>Descargar Codigo</Button>\r\n                    <Button onClick={handleCopy} style={{ marginLeft: 12 }}>Copiar Codigo</Button>\r\n                </div> : <></>\r\n            }\r\n\r\n        </div >\r\n    )\r\n}","import { ids_hospitales, sendDataBody } from \"../resources\";\r\n\r\n// new Method for session is reception\r\nexport default async function getAllEscalas(tipo, setData, setLoading) {\r\n    const medicos = await sendDataBody('users/getMany/hospitals', { ids_hospitales: ids_hospitales })\r\n    \r\n    sendDataBody('encuestas', { ids_medicos: medicos, tipo: tipo }).then((rs) => {\r\n        setData(rs)\r\n        setLoading(false)\r\n    })\r\n\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { Table, Button, Modal } from 'antd'\r\nimport { Form, Select } from 'antd';\r\nimport { getData, usuario, sendDataBody, ids_hospitales } from '../../../resources';\r\nimport EscalasCreateGeneralLink from '../../escalasCreateGeneralLink';\r\nimport getAllEscalas from '../../getEscalas';\r\nimport Loading from '../../../loading';\r\nconst { Option } = Select;\r\n\r\n// DEPRESION QIDS \r\n\r\nexport default function DepresionResults() {\r\n    const [encuestasData, setEncuestasData] = useState([])\r\n    const [medicosData, setMedicosData] = useState([])\r\n    const [countersData, setCountersData] = useState([])\r\n    const [loading, setLoading] = useState(true)\r\n\r\n    // For Modal\r\n    const [isModalOpen, setIsModalOpen] = useState(false);\r\n    const showModal = () => { setIsModalOpen(true) };\r\n    const handleOk = () => { setIsModalOpen(false) };\r\n    const handleCancel = () => { setIsModalOpen(false) };\r\n\r\n    useEffect(() => {\r\n        (usuario.rol === 'Administrador' || usuario.rol === 'Recepcion' || usuario.rol === 'Enfermero') ? getAllEscalas('depresion', setEncuestasData, setLoading) : getEncuestasData(usuario._id)\r\n    }, [])\r\n\r\n\r\n    const getEncuestasData = (medico) => {\r\n        getData(`encuestas/depresion/medico/${medico}`).then((rs) => {\r\n            // getCounters(rs, medico);\r\n            console.log(rs);\r\n            setEncuestasData(rs)\r\n        }).finally(() => setLoading(false))\r\n    }\r\n\r\n    const getCounters = (data, medico) => {\r\n        const allEncuestas = [...data];\r\n        const results = []\r\n        getData(`mispacientes/${medico}`).then(rs => {\r\n            rs.forEach(pac => {\r\n                const aprs = allEncuestas.filter(enc => enc.usuario?._id === pac._id)\r\n                const latest = aprs.at(-1)\r\n                results.push({\r\n                    'paciente': pac.name,\r\n                    'total': aprs.length,\r\n                    'semana': latest?.createdAt.substring(0, 10)\r\n                })\r\n            });\r\n            console.log(results)\r\n        }).finally(() => { setCountersData(results); });\r\n    }\r\n    const counterColumns = [\r\n        {\r\n            title: 'Paciente',\r\n            key: 'paciente',\r\n            dataIndex: 'paciente',\r\n        },\r\n        {\r\n            title: 'Fecha ultima encuesta',\r\n            key: 'semana',\r\n            dataIndex: 'semana',\r\n        },\r\n        {\r\n            title: 'Total Escalas Respondidas',\r\n            key: 'total',\r\n            dataIndex: 'total'\r\n        }\r\n    ];\r\n\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Paciente',\r\n            dataIndex: 'usuario',\r\n            key: 'name',\r\n            render: (_, { usuario }) => <>{usuario ? usuario.name : \"Usuario eliminado\"}</>\r\n        },\r\n        {\r\n            title: 'Puntaje',\r\n            dataIndex: 'score',\r\n            key: 'age',\r\n        }\r\n    ];\r\n\r\n    if (loading) return <Loading />\r\n\r\n    return (\r\n        <div className='mainContainer'>\r\n            <h5>Resultados de encuestas de sintomatologia depresiva QUIDS (QUICK INVENTORY OF DEPRESSIVE SYMPTOMATOLOGY)</h5>\r\n            <br />\r\n            <Button type=\"primary\" onClick={showModal}>\r\n                Generar Escala Depresion 1\r\n            </Button>\r\n\r\n            <br /><br />\r\n\r\n            {/* Counters <Table dataSource={countersData} columns={counterColumns} bordered /> <br /> */}\r\n\r\n            <h4>Detalles de encuestas</h4>\r\n            <br />\r\n            <Table dataSource={encuestasData} columns={columns} bordered />\r\n\r\n            <Modal title=\"Crear encuesta de Depresion QUIDS\" open={isModalOpen} onOk={handleOk} onCancel={handleCancel}\r\n                footer={[\r\n                    <Button onClick={handleCancel}>Cerrar</Button>\r\n                ]}>\r\n                <EscalasCreateGeneralLink tipo='depresion_qids' />\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Table, Button, Modal } from 'antd'\r\nimport { Form, Select } from 'antd';\r\nimport { getData, usuario, sendDataBody, ids_hospitales } from '../../../resources';\r\nimport EscalasCreateGeneralLink from '../../escalasCreateGeneralLink';\r\nimport getAllEscalas from '../../getEscalas';\r\nimport Loading from '../../../loading';\r\nconst { Option } = Select;\r\n\r\n// DEPRESION GPC\r\n\r\nexport default function Depresion2Results() {\r\n    const [encuestasData, setEncuestasData] = useState([])\r\n    const [medicosData, setMedicosData] = useState([])\r\n    const [medico, setMedico] = useState(null)\r\n    const [countersData, setCountersData] = useState([])\r\n    const [loading, setLoading] = useState(true)\r\n    const [loadingCounters, setLoadingCounters] = useState(true)\r\n\r\n    // For Modal\r\n    const [isModalOpen, setIsModalOpen] = useState(false);\r\n    const showModal = () => { setIsModalOpen(true) };\r\n    const handleOk = () => { setIsModalOpen(false) };\r\n    const handleCancel = () => { setIsModalOpen(false) };\r\n\r\n    useEffect(() => {\r\n        (usuario.rol === 'Administrador' || usuario.rol === 'Recepcion' || usuario.rol === 'Enfermero') ? getAllEscalas('depresion_gpc', setEncuestasData, setLoading) : getEncuestasData(usuario._id)\r\n    }, [])\r\n\r\n    const getDoctorsData = () => { //Para el caso que la sesion sea de Administrador\r\n        sendDataBody('users/getMany/hospitals', { ids_hospitales: ids_hospitales }).then(rs => {\r\n            setMedicosData(rs)\r\n        })\r\n    }\r\n\r\n    const getEncuestasData = (medico) => {\r\n        getData(`encuestas/byDoctorAndTipo/${medico}/depresion_gpc/`).then((rs) => {\r\n            getCounters(rs, medico);\r\n            console.log(rs);\r\n            setEncuestasData(rs)\r\n        }).finally(() => { setLoading(false) })\r\n    }\r\n\r\n    const getCounters = (data, medico) => {\r\n        const allEncuestas = [...data];\r\n        const results = []\r\n        getData(`mispacientes/${medico}`).then(rs => {\r\n            console.log('MisPacientes depresiod2: ', rs);\r\n            rs.forEach(pac => {\r\n                const aprs = allEncuestas.filter(enc => enc.usuario?._id === pac._id)\r\n                const latest = aprs.at(-1)\r\n                results.push({\r\n                    'paciente': pac.name,\r\n                    'total': aprs.length,\r\n                    'semana': latest?.createdAt.substring(0, 10)\r\n                })\r\n            });\r\n            console.log(results)\r\n        }).finally(() => { setCountersData(results); setLoadingCounters(false) });\r\n    }\r\n\r\n    const counterColumns = [\r\n        {\r\n            title: 'Paciente',\r\n            key: 'paciente',\r\n            dataIndex: 'paciente'\r\n        },\r\n        {\r\n            title: 'Fecha ultima encuesta',\r\n            key: 'semana',\r\n            dataIndex: 'semana',\r\n        },\r\n        {\r\n            title: 'Total encuestas',\r\n            key: 'total',\r\n            dataIndex: 'total'\r\n        }\r\n    ];\r\n\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Paciente',\r\n            dataIndex: 'usuario',\r\n            key: 'name',\r\n            render: (_, { usuario }) => <>{usuario ? usuario.name : \"Usuario eliminado\"}</>\r\n        },\r\n        {\r\n            title: 'Puntaje HRSD',\r\n            dataIndex: 'respuestas_depresion2_gpc',\r\n            key: 'hrsd',\r\n            render: (_, { respuestas_depresion2_gpc }) => (\r\n                <>\r\n                    {respuestas_depresion2_gpc.hrsd}\r\n                </>\r\n            ),\r\n        },\r\n        {\r\n            title: 'Puntaje MADRS',\r\n            dataIndex: 'respuestas_depresion2_gpc',\r\n            key: 'madrs',\r\n            render: (_, { respuestas_depresion2_gpc }) => (\r\n                <>\r\n                    {respuestas_depresion2_gpc.madrs}\r\n                </>\r\n            ),\r\n        },\r\n        {\r\n            title: 'Puntaje PHQ',\r\n            dataIndex: 'respuestas_depresion2_gpc',\r\n            key: 'phq',\r\n            render: (_, { respuestas_depresion2_gpc }) => (\r\n                <>\r\n                    {respuestas_depresion2_gpc.phq}\r\n                </>\r\n            ),\r\n        }\r\n    ];\r\n\r\n    if (loading) return <Loading />\r\n\r\n    return (\r\n        <div className='mainContainer'>\r\n            <h5>Resultados de encuestas de versiones validadas en español de las escalas HRSD, MADRS y PHQ-9</h5>\r\n            <br />\r\n            <Button type=\"primary\" onClick={showModal}>\r\n                Crear Link Depresion 2\r\n            </Button>\r\n            <br />\r\n\r\n            <br />\r\n            {/* <Table dataSource={countersData} columns={counterColumns} bordered /> */}\r\n            <br />\r\n            <h4>Detalles de encuestas</h4>\r\n            <br />\r\n            <Table dataSource={encuestasData} columns={columns} bordered />\r\n\r\n            <Modal title=\"Crear Encuesta de depresion GPC\" open={isModalOpen} onOk={handleOk} onCancel={handleCancel}\r\n                footer={[\r\n                    <Button onClick={handleCancel}>Cerrar</Button>\r\n                ]}>\r\n                <EscalasCreateGeneralLink tipo='depresion_gpc' />\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Tabs } from 'antd';\r\nimport DepresionResults from './depresion_1/depresionResults';\r\nimport Depresion2Results from './depresion_2/depresion2_results';\r\n\r\nexport default function DepresionMenu() {\r\n  const items = [\r\n    { label: 'Depresion 1', key: 'item-1', children: <DepresionResults /> }, // remember to pass the key prop\r\n    { label: 'Depresion 2', key: 'item-2', children: <Depresion2Results /> },\r\n  ];\r\n  return (\r\n    <div>\r\n      <h4 className='spacedTitle'>Resultados de Escalas de Depresion</h4>\r\n      <Tabs items={items} type=\"card\" />\r\n    </div>\r\n  )\r\n}\r\n","export const catalogo_efectos = {\r\n    \"Ritmo Cardiaco Elevado\": false,\r\n    \"Sentimientos de Ansiedad\": true,\r\n    \"Debilidad o Mareos ligeros\": false,\r\n    \"Sedacion o Somnolencia\": false,\r\n    \"Nauseas\": false,\r\n    \"Vision Borrosa\": false,\r\n    \"Aumento de la Presión Arterial\": false,\r\n    \"Mareos\": false,\r\n    \"Dolor de cabeza\": false\r\n}\r\n\r\n\r\nexport const desrealizacion = {\r\n    \"1. ¿Parece que las cosas se mueven en cámara lenta ?\": [\r\n        \"No en absoluto\",\r\n        \"Leve, las cosas parecen un poco más lentas, pero no muy notable.\",\r\n        \"Moderado, las cosas se mueven aproximadamente el doble que normalmente.\",\r\n        \"Grave, las cosas se mueven tan lentamente que apenas se mueven.\",\r\n        \"Extremo, las cosas se mueven tan lentamente, que tengo la percepción de que todo se  detiene, como si el tiempo se detuviera.\"\r\n    ],\r\n    \"2. ¿Te parecen irreales las cosas, como si estuvieras en un sueño?\": [\r\n        \"No en absoluto.\",\r\n        \"Leve, las cosas se ven un poco irreales, pero soy muy consciente de donde estoy.\",\r\n        \"Moderado, las cosas parecen un sueño, aunque sé que estoy despierto.\",\r\n        \"Grave, las cosas se parecen mucho a un sueño, aunque sé que estoy aquí, tengo el sentimiento de que pudiera estar dormido.\",\r\n        \"Extremo, siento que nada es real, como si tuviera que pellizcarme para despertar, o preguntarle a alguien si esto es un sueño.\"\r\n    ]\r\n}\r\n\r\nexport const despersonalizacion = {\r\n    \"3. ¿Te sientes desconectado de tu propio cuerpo?\": [\r\n        \"No, en absoluto\",\r\n        \"Leve, Me siento un poco desconectado de mi mismo, pero básicamente estoy completamente aquí.\",\r\n        \"Moderado, Me siento algo desprendido de mi propio cuerpo, pero básicamente todo unido.\",\r\n        \"Grave, me siento desprendido de mi propio cuerpo, pero no muy alejado de mi cuerpo, y siento como si estuviera yo ahí.\",\r\n        \"Extremo, Me siento como si estuviera completamente fuera de mi cuerpo, como si estuviera viendo mi propio cuerpo desde muy lejos, como si estuviera otra persona ahí.\"\r\n    ],\r\n    \"4. Sientes que ha cambiado el sentido de tu propio cuerpo?: por ejemplo, tu cuerpo se siente inusualmente largo o inusualmente pequeño?\": [\r\n        \"No, en absoluto\",\r\n        \"Leve, Tengo un vago sentimiento de que algo en mi cuerpo ha cambiado, pero no puedo decir exactamente que es.\",\r\n        \"Moderado, Siento como que mi cuerpo ha aumentado o disminuido ligeramente de tamaño, o se siente como si no fuera mi cuerpo.\",\r\n        \"Grave, Siento como si mi cuerpo ha aumentado el doble de si tamaño normal, o disminuido el doble de su tamaño normal.\",\r\n        \"Extremo, siento como si mi cuerpo se hubiera hinchado al menos diez veces de su tamaño normal o como si fuera diez veces más pequeño, o como si mis brazos se hubieran convertido como palillos de dientes.\"\r\n    ]\r\n}\r\n\r\nexport const amnesia = {\r\n    \"5. Te has distraído, o has perdido el rastro de alguna manera de lo que esta pasando durante esta experiencia?\": [\r\n        \"No en absoluto\",\r\n        \"Leve, He tenido algunos episodios de haber perdido la noción sobre lo que está pasando, pero he seguido todo la mayor parte del tiempo.\",\r\n        \"Moderado, He perdido al menos un minuto de tiempo, o perdido completamente la noción de lo que está pasando ahora.\",\r\n        \"Grave, He perdido varios segmentos de tiempo de un minuto o más.\",\r\n        \"Extremo, he perdido largos segmentos de tiempo de al menos 15 minutos o más.\"\r\n    ],\r\n    \"6. Tiene lagunas (vacios) en su memoria?\": [\r\n        \"No en lo absoluto\",\r\n        \"Leve, Hay algunas cosas recientes que no puedo recordar.\",\r\n        \"Moderado, Han habido algunas lagunas (vacios)  en mi memoria que duraron unos minutos\",\r\n        \"Grave, Han habido largas lagunas (vacios) en mi memoria que duraron más de algunos minutos.\",\r\n        \"Extremo, No puedo reconstruir lo que está pasando de un momento al siguiente, debido a largas lagunas (vacios)  en mi memoria.\"\r\n    ]\r\n}","import React from 'react'\r\nimport { Button, Modal, Tag, Card } from 'antd';\r\nimport { desrealizacion, despersonalizacion, amnesia } from './ketamina_catalog'\r\n\r\nconst gridStyle = { width: '50%' }\r\nexport default function KetaminaDetails({ isModalOpen, handleOk, handleCancel, escalaDetails: respuestas_ketamina }) {\r\n    return (\r\n        <Modal title=\"Basic Modal\" open={isModalOpen} onOk={handleOk} onCancel={handleCancel}>\r\n            <h6>Efectos Secundarios de Ketamina</h6>\r\n            {respuestas_ketamina.Aumento_de_la_Presión_Arterial && <Tag color=\"red\">Aumento de la presion arterial</Tag>}\r\n            {respuestas_ketamina.Debilidad_o_Mareos_ligeros && <Tag color=\"red\">Debilidad o Mareos ligeros</Tag>}\r\n            {respuestas_ketamina.Dolor_de_cabeza && <Tag color=\"red\">Dolor de cabeza</Tag>}\r\n            {respuestas_ketamina.Mareos && <Tag color=\"red\">Mareos</Tag>}\r\n            {respuestas_ketamina.Nauseas && <Tag color=\"red\">Nauseas</Tag>}\r\n            {respuestas_ketamina.Sentimientos_de_Ansiedad && <Tag color=\"red\">Sentimientos de Ansiedad</Tag>}\r\n\r\n            <h6>Escala de 6 elementos simplificada de síntomas disociativos administrada por el médico  (CADSS)</h6>\r\n            <h5>Desrealizacion</h5>\r\n            {\r\n                Object.keys(desrealizacion).map((preg, index) => {\r\n                    return <Card>\r\n                        <Card.Grid style={gridStyle} hoverable={false}>\r\n                            {preg}\r\n                        </Card.Grid >\r\n                        <Card.Grid style={gridStyle} hoverable={false}>\r\n                            {desrealizacion[preg][respuestas_ketamina[`desrealizacion_${index}`]]}\r\n                        </Card.Grid>\r\n                    </Card>\r\n                })\r\n            }\r\n\r\n            <h5>Despersonalizacion</h5>\r\n            {\r\n                Object.keys(despersonalizacion).map((preg, index) => {\r\n                    return <Card>\r\n                        <Card.Grid style={gridStyle} hoverable={false}>\r\n                            {preg}\r\n                        </Card.Grid >\r\n                        <Card.Grid style={gridStyle} hoverable={false}>\r\n                            {despersonalizacion[preg][respuestas_ketamina[`despersonalizacion_${index}`]]}\r\n                        </Card.Grid>\r\n                    </Card>\r\n                })\r\n            }\r\n\r\n            <h5>Amnesia</h5>\r\n            {\r\n                Object.keys(amnesia).map((preg, index) => {\r\n                    return <p>{preg} {amnesia[preg][respuestas_ketamina[`amnesia_${index}`]]}</p>\r\n                })\r\n            }\r\n\r\n\r\n        </Modal>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { useEffect } from 'react';\r\nimport { Space, Table, Tag, Progress, Button, Modal } from 'antd'\r\nimport { Form, Select } from 'antd';\r\nimport { getData, usuario, sendDataBody, ids_hospitales } from '../../resources';\r\nimport LoadingIndicator from '../loadingIndicator'\r\nimport EscalasCreateGeneralLink from '../escalasCreateGeneralLink';\r\nimport Loading from '../../loading';\r\nimport getAllEscalas from '../getEscalas';\r\nimport KetaminaDetails from './ketaminaDetails';\r\nconst { Option } = Select;\r\n\r\nexport default function KetaminaResults() {\r\n\r\n  const [ketaminaData, setKetaminaData] = useState(null);\r\n  const [medicosData, setMedicosData] = useState([])\r\n  const [countersData, setCountersData] = useState([])\r\n  const [loadingCounters, setLoadingCounters] = useState(true)\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [loading, setLoading] = useState(true)\r\n\r\n  // Modal for details\r\n  const [escalaForDetails, setEscalaForDetails] = useState(\"\")\r\n  const [isDetailsModalOpen, setIsDetailsModalOpen] = useState(false);\r\n  const showDetailsModal = () => { setIsDetailsModalOpen(true) };\r\n  const handleDetailsOk = () => { setIsDetailsModalOpen(false) };\r\n  const handleDetailsCancel = () => { setIsDetailsModalOpen(false) };\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    // usuario.rol === 'Administrador' ? getDoctorsData() : getEncuestasData(usuario._id)\r\n\r\n    // New Form\r\n    // If session is recept/admin get escalas of all medicos of my hospital\r\n    // Else if session is medico get escalas for me\r\n    if (usuario.rol === 'Recepcion' || usuario.rol === 'Administrador') getAllEscalas('ketamina', setKetaminaData, setLoading)\r\n    else getEncuestasData(usuario._id)\r\n\r\n    // getEcuestasDataByHospital()\r\n  }, [])\r\n\r\n  // Modal For Create Link\r\n  const showModal = () => { setIsModalOpen(true) };\r\n  const handleOk = () => { setIsModalOpen(false) };\r\n  const handleCancel = () => { setIsModalOpen(false) };\r\n\r\n  const getDoctorsData = () => { //Para el caso que la sesion sea de Administrador\r\n    sendDataBody('users/getMany/hospitals', { ids_hospitales: ids_hospitales }).then(rs => {\r\n      setMedicosData(rs)\r\n    })\r\n  }\r\n\r\n\r\n\r\n  // If session is medic\r\n  const getEncuestasData = (medico) => {\r\n    getData(`encuestas/ketamina/medico/${medico}`).then((rs) => {\r\n      console.log('Encuestas ', rs);\r\n      // getCounters(rs, medico);\r\n      setKetaminaData(rs)\r\n    }).finally(() => setLoading(false))\r\n  }\r\n\r\n  // If session is admin/recept\r\n  const getEcuestasDataByHospital = async () => {\r\n    let allEncs = [];\r\n    // 1  get medicos of my hospital\r\n    const myDoctors = await sendDataBody('users/getMany/hospitals', { ids_hospitales: ids_hospitales })\r\n    // 2 get escalas of each medico\r\n    myDoctors.forEach(async (doc) => {\r\n      await getData(`encuestas/ketamina/medico/${doc._id}`).then((rs) => {\r\n        allEncs = [...allEncs, rs]\r\n      })\r\n    });\r\n    console.log('All Encuestas: ', allEncs)\r\n  }\r\n\r\n\r\n  // const getCounters = (data, medico) => {\r\n  //   const allEncuestas = [...data];\r\n  //   const results = []\r\n  //   getData(`mispacientes/${medico}`).then(rs => {\r\n  //     console.log('getCounters ketam data: ', data)\r\n  //     rs.forEach(pac => {\r\n  //       const aprs = allEncuestas.filter(enc => enc.usuario?._id === pac._id) // Usuario can be deleted\r\n  //       const latest = aprs.at(-1)\r\n  //       results.push({\r\n  //         'paciente': pac.name,\r\n  //         'total': aprs.length,\r\n  //         'semana': latest?.createdAt.substring(0, 10)\r\n  //       })\r\n  //     });\r\n  //     console.log(results)\r\n  //   }).finally(() => { setCountersData(results); setLoadingCounters(false) });\r\n  // }\r\n\r\n  const counterColumns = [\r\n    {\r\n      title: 'Paciente',\r\n      key: 'paciente',\r\n      dataIndex: 'paciente',\r\n    },\r\n    {\r\n      title: 'Fecha ultima encuesta',\r\n      key: 'semana',\r\n      dataIndex: 'semana',\r\n    },\r\n    {\r\n      title: 'Total encuestas',\r\n      key: 'total',\r\n      dataIndex: 'total'\r\n    }\r\n  ];\r\n  const columns = [\r\n\r\n    {\r\n      title: 'Usuario',\r\n      key: 'usuario',\r\n      dataIndex: 'usuario',\r\n      render: (_, { usuario }) => (<>{usuario ? usuario.name : \"usuario eliminado\"}</>),\r\n      // sorter: true,\r\n    },\r\n    {\r\n      title: 'Fecha',\r\n      key: 'fecha',\r\n      dataIndex: 'createdAt',\r\n      render: (fecha) => (<>{fecha.substring(0, 10)}</>),\r\n      width: '9%'\r\n    },\r\n    {\r\n      title: '¿Parece que las cosas se mueven en cámara lenta ?',\r\n      key: 'desrealizacion_0',\r\n      dataIndex: 'respuestas_ketamina',\r\n      render: (_, { respuestas_ketamina }) => (\r\n        <>{respuestas_ketamina.desrealizacion_0}</>\r\n      ),\r\n    },\r\n    {\r\n      title: '¿Te parecen irreales las cosas, como si estuvieras en un sueño?',\r\n      key: 'desrealizacion_1',\r\n      dataIndex: 'respuestas_ketamina',\r\n      render: (_, { respuestas_ketamina }) => (\r\n        <>{respuestas_ketamina.desrealizacion_1}</>\r\n      ),\r\n    },\r\n    {\r\n      title: '¿Te sientes desconectado de tu propio cuerpo?',\r\n      key: 'despersonalizacion_0',\r\n      dataIndex: 'respuestas_ketamina',\r\n      render: (_, { respuestas_ketamina }) => (\r\n        <>{respuestas_ketamina.despersonalizacion_0}</>\r\n      ),\r\n    },\r\n    {\r\n      title: 'Sientes que ha cambiado el sentido de tu propio cuerpo?: por ejemplo, tu cuerpo se siente inusualmente largo o inusualmente pequeño?',\r\n      key: 'despersonalizacion_1',\r\n      dataIndex: 'respuestas_ketamina',\r\n      render: (_, { respuestas_ketamina }) => (\r\n        <>{respuestas_ketamina.despersonalizacion_1}</>\r\n      ),\r\n    },\r\n    {\r\n      title: 'Te has distraído, o has perdido el rastro de alguna manera de lo que esta pasando durante esta experiencia?',\r\n      key: 'amnesia_0',\r\n      dataIndex: 'respuestas_ketamina',\r\n      render: (_, { respuestas_ketamina }) => (\r\n        <>{respuestas_ketamina.amnesia_0}</>\r\n      ),\r\n    },\r\n    {\r\n      title: 'Tiene lagunas (vacios) en su memoria?',\r\n      key: 'amnesia_1',\r\n      dataIndex: 'respuestas_ketamina',\r\n      render: (_, { respuestas_ketamina }) => (\r\n        <>{respuestas_ketamina.amnesia_1}</>\r\n      ),\r\n    },\r\n    {\r\n      title: 'Gusto por la ketamina',\r\n      key: 'ketamina',\r\n      dataIndex: 'respuestas_ketamina',\r\n      render: (_, { respuestas_ketamina }) => (\r\n        <Space direction='vertical'>\r\n          <>Gusto por la ketamina: <Progress percent={respuestas_ketamina.ketamina * 10} /></>\r\n          <>Anhelo/Apetito de ketamina: <Progress percent={respuestas_ketamina.ketaminaiv * 10} /></>\r\n          <>Deseo de Ketamina IV: <Progress percent={respuestas_ketamina.ketaminaivb * 10} /></>\r\n        </Space>\r\n      ),\r\n    },\r\n    {\r\n      title: 'Efectos',\r\n      key: 'Efectos',\r\n      dataIndex: 'respuestas_ketamina',\r\n      render: (_, { respuestas_ketamina }) => (\r\n        <div>\r\n          {respuestas_ketamina.Aumento_de_la_Presión_Arterial && <Tag color=\"red\">Aumento de la presion arterial</Tag>}\r\n          {respuestas_ketamina.Debilidad_o_Mareos_ligeros && <Tag color=\"red\">Debilidad o Mareos ligeros</Tag>}\r\n          {respuestas_ketamina.Dolor_de_cabeza && <Tag color=\"red\">Dolor de cabeza</Tag>}\r\n          {respuestas_ketamina.Mareos && <Tag color=\"red\">Mareos</Tag>}\r\n          {respuestas_ketamina.Nauseas && <Tag color=\"red\">Nauseas</Tag>}\r\n          {respuestas_ketamina.Sentimientos_de_Ansiedad && <Tag color=\"red\">Sentimientos de Ansiedad</Tag>}\r\n        </div>\r\n      ),\r\n    },\r\n\r\n  ];\r\n\r\n  const detailsColumns = [\r\n    {\r\n      title: 'Usuario',\r\n      key: 'usuario',\r\n      dataIndex: 'usuario',\r\n      render: (_, { usuario }) => (<>{usuario ? usuario.name : \"usuario no existente\"}</>),\r\n      sorter: true\r\n    },\r\n    {\r\n      title: 'Acciones',\r\n      key: 'actions',\r\n      dataIndex: 'actions',\r\n      render: (_, { respuestas_ketamina }) => (<>\r\n        <Button onClick={() => { setEscalaForDetails(respuestas_ketamina); showDetailsModal() }}>Ver detalles</Button>\r\n      </>),\r\n    },\r\n  ]\r\n\r\n\r\n  // if ((usuario.rol === 'Recepcion' || usuario.rol === 'Administracion') && !ketaminaData) return <h5>Seleccione un medico para ver los resultados de sus encuestas</h5>\r\n\r\n  if (loading) return <Loading />\r\n\r\n  return (\r\n    <div>\r\n      <br />\r\n      <h4>Resultados de listas de verificacion para efectos secundarios</h4>\r\n      <br />\r\n      <Button type=\"primary\" onClick={showModal}>\r\n        Generar Escala\r\n      </Button>\r\n      <br />\r\n\r\n      {/* {\r\n        (usuario.rol === 'Administrador' || usuario.rol === 'Recepcion') && <Form.Item label=\"Selecciona un Medico\" name=\"usuario\" rules={[{ required: true, message: 'Selecciona el paciente' }]}\r\n          style={{ alignItems: 'center', paddingTop: 20 }}>\r\n          <Select\r\n            style={{ width: 260, }}\r\n            onChange={getEncuestasData}\r\n            placeholder='Selecciona un medico'\r\n          >\r\n            {\r\n              medicosData.map((p) => {\r\n                return <Option key={p._id} value={p._id}>{p.name}</Option>\r\n              })\r\n            }\r\n          </Select>\r\n        </Form.Item>\r\n      } */}\r\n      <br />\r\n\r\n      {/* <Table dataSource={countersData} columns={counterColumns} loading={{ indicator: <LoadingIndicator />, spinning: loadingCounters }} bordered /> */}\r\n      <br />\r\n      <h4>Detalles de encuestas</h4>\r\n      <br />\r\n\r\n      {/* <Table dataSource={ketaminaData} columns={columns} scroll={{ x: 1300 }} bordered /> */}\r\n\r\n      <Table dataSource={ketaminaData} columns={detailsColumns} scroll={{ x: 1300 }} bordered />\r\n\r\n\r\n      <Modal title=\"Generar Escala de Ketamina\" open={isModalOpen} onOk={handleOk} onCancel={handleCancel}\r\n        footer={[\r\n          <Button onClick={handleCancel}>Cerrar</Button>\r\n        ]}\r\n      >\r\n        {/* <KetaminaCreateLink /> */}\r\n        <EscalasCreateGeneralLink tipo=\"ketamina\" />\r\n      </Modal>\r\n\r\n      <KetaminaDetails escalaDetails={escalaForDetails} handleCancel={handleDetailsCancel} handleOk={handleDetailsOk} isModalOpen={isDetailsModalOpen} />\r\n    </div>\r\n  )\r\n}\r\n","// La Evaluación Del Trastorno Por Estrés Postraumático: Aproximación A Las Propiedades Psicométricas De La Escala De Trauma De Davidson\r\n// Escala Trastorno Por Estrés Postraumático+608-2094-1-CE\r\n// tabla al final de la hoja en bco ngro agregada penultima\r\nexport const post_catalog = [\r\n    \"1.He tenido alguna vez imágenes, recuerdos o pensamientos dolorosos del acontecimiento.+\",\r\n    \"2.He tenido alguna vez pesadillas sobre el acontecimiento.\",\r\n    \"3.He sentido que el acontecimiento estaba ocurriendo de nuevo, como si lo estuviera reviviendo \",\r\n    \"4.Hay cosas que me lo han hecho recordar.  \",\r\n    \"5.He tenido sensaciones físicas por recuerdos del acontecimiento. (Como transpiración, temblores, palpitaciones, mareos, náuseas o diarrea) \",\r\n    \"6.He estado evitando pensamientos o sentimientos sobre el acontecimiento.\",\r\n    \"7.He estado evitando hacer cosas o estar en situaciones que me recordaran el acontecimiento. \",\r\n    \"8.He sido incapaz de recordar partes importantes del acontecimiento. \",\r\n    \"9.He tenido dificultad para disfrutar de las cosas. 10.Me  he sentido distante o alejado de la gente. \",\r\n    \"10.Me  he sentido distante o alejado de la gente.\",\r\n    \"11.He sido incapaz de tener sentimientos de tristeza o de afecto.\",\r\n    \"12.He tenido dificultad para imaginar una vida larga y cumplir mis objetivos.\",\r\n    \"13.He tenido dificultad para iniciar o mantener el sueño.\",\r\n    \"14.He  estado irritable o he tenido accesos de ira. \",\r\n    \"15.He tenido dificultades para concentrarme\",\r\n    \"16.Me he sentido nervioso, fácilmente distraído, o como “en guardia”. \",\r\n    \"17.He estado nervioso o me he asustado fácilmente\",\r\n]","import React from 'react'\r\nimport { Button, Card, Modal } from 'antd';\r\nimport { post_catalog } from './p_t_catalog';\r\n\r\n// {\"1\":[3,2],\"2\":[3,0],\"3\":[2,2],\"4\":[4,4],\"5\":[1,2],\"6\":[2,1],\"7\":[1,3],\"8\":[0,0],\"9\":[1,1],\"10\":[1,4],\"11\":[3,3],\"12\":[1,0],\"13\":[1,4],\"14\":[4,4],\"15\":[3,2],\"16\":[1,1],\"17\":[0,1],\"_id\":\"63866dc6e2c587930958c817\"}\r\n\r\nexport default function PTDetails({ isModalOpen, handleOk, handleCancel, escalaDetails }) {\r\n    return (\r\n        <Modal title=\"Post\" open={isModalOpen} onOk={handleOk} onCancel={handleCancel} destroyOnClose>\r\n\r\n            <Card>\r\n                <Card.Grid style={{ width: '50%' }} hoverable={false}>Pregunta</Card.Grid>\r\n                <Card.Grid style={{ width: '25%' }} hoverable={false}>Frecuencia</Card.Grid>\r\n                <Card.Grid style={{ width: '25%' }} hoverable={false}>Gravedad</Card.Grid>\r\n                {\r\n                    Object.keys(escalaDetails).map((key) => {\r\n                        return <>\r\n                            <Card.Grid style={{ width: '50%' }} hoverable={false}>{post_catalog[Number(key) - 1]} {Number(key) - 1}</Card.Grid>\r\n                            <Card.Grid style={{ width: '25%' }} hoverable={false}>{escalaDetails[key][0]}</Card.Grid>\r\n                            <Card.Grid style={{ width: '25%' }} hoverable={false}>{escalaDetails[key][1]}</Card.Grid>\r\n\r\n\r\n                        </>\r\n                        // return <p>{post_catalog[key]}</p>\r\n                    })\r\n                }\r\n            </Card>\r\n        </Modal>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Button, Modal, Select, Form, Table } from 'antd';\r\nimport EscalasCreateGeneralLink from '../../escalasCreateGeneralLink';\r\nimport getAllEscalas from '../../getEscalas';\r\nimport { getData, usuario, sendDataBody, ids_hospitales } from '../../../resources';\r\nimport PTDetails from './p_t_details';\r\n\r\nconst { Option } = Select;\r\n\r\nexport default function PostTraumaticoResults() {\r\n    const [encuestasData, setEncuestasData] = useState([])\r\n    const [medicosData, setMedicosData] = useState([])\r\n    const [medico, setMedico] = useState(null)\r\n    const [countersData, setCountersData] = useState([])\r\n    const [loadingCounters, setLoadingCounters] = useState(true)\r\n    const [loading, setLoading] = useState(true)\r\n    const [columns, setColumns] = useState([])\r\n\r\n    const [isModalOpen, setIsModalOpen] = useState(false);\r\n    const showModal = () => { setIsModalOpen(true) };\r\n    const handleOk = () => { setIsModalOpen(false) };\r\n    const handleCancel = () => { setIsModalOpen(false) };\r\n\r\n    // Modal for details\r\n    const [escalaForDetails, setEscalaForDetails] = useState(\"\")\r\n    const [isDetailsModalOpen, setIsDetailsModalOpen] = useState(false);\r\n    const showDetailsModal = () => { setIsDetailsModalOpen(true) };\r\n    const handleDetailsOk = () => { setIsDetailsModalOpen(false) };\r\n    const handleDetailsCancel = () => { setIsDetailsModalOpen(false) };\r\n\r\n\r\n    useEffect(() => {\r\n        addColumns();\r\n        (usuario.rol === 'Administrador' || usuario.rol === 'Recepcion' || usuario.rol === 'Enfermero') ? getAllEscalas('post_traumatico', setEncuestasData, setLoading) : getEncuestasData(usuario._id)\r\n    }, [])\r\n    const getDoctorsData = () => { //Para el caso que la sesion sea de Administrador\r\n        sendDataBody('users/getMany/hospitals', { ids_hospitales: ids_hospitales }).then(rs => {\r\n            setMedicosData(rs)\r\n        })\r\n    }\r\n    const getEncuestasData = (medico) => {\r\n        getData(`encuestas/byDoctorAndTipo/${medico}/post_traumatico/`).then((rs) => {\r\n            getCounters(rs, medico);\r\n            console.log(rs);\r\n            setEncuestasData(rs)\r\n        })\r\n    }\r\n\r\n    const getCounters = (data, medico) => {\r\n        const allEncuestas = [...data];\r\n        const results = []\r\n        getData(`mispacientes/${medico}`).then(rs => {\r\n            console.log('MisPacientes ept1: ', rs);\r\n            rs.forEach(pac => {\r\n                const aprs = allEncuestas.filter(enc => enc.usuario?._id === pac._id)\r\n                const latest = aprs.at(-1)\r\n                results.push({\r\n                    'paciente': pac.name,\r\n                    'total': aprs.length,\r\n                    'semana': latest?.createdAt.substring(0, 10)\r\n                })\r\n            });\r\n            console.log(results)\r\n        }).finally(() => { setCountersData(results); setLoadingCounters(false) });\r\n    }\r\n\r\n    const counterColumns = [\r\n        {\r\n            title: 'Paciente',\r\n            key: 'paciente',\r\n            dataIndex: 'paciente'\r\n        },\r\n        {\r\n            title: 'Fecha ultima encuesta',\r\n            key: 'semana',\r\n            dataIndex: 'semana',\r\n        },\r\n        {\r\n            title: 'Total Escalas Respondidas',\r\n            key: 'total',\r\n            dataIndex: 'total'\r\n        }\r\n    ];\r\n\r\n\r\n\r\n    const addColumns = () => {\r\n        let columns = [\r\n            {\r\n                title: 'Paciente',\r\n                dataIndex: 'usuario',\r\n                key: 'name',\r\n                render: (_, { usuario }) => <>{usuario ? usuario.name : \"Usuario eliminado\"}</>\r\n            }\r\n        ];\r\n        for (let i = 1; i < 18; i++) {\r\n            columns.push({\r\n                title: 'Pregunta ' + i,\r\n                children: [\r\n                    {\r\n                        title: 'Frecuencia',\r\n                        dataIndex: 'respuestas_depresion2_gpc',\r\n                        key: 'hrsd' + i,\r\n                        render: (_, { respuestas_ept1_davidson }) => (\r\n                            <>\r\n                                {respuestas_ept1_davidson[i][0]}\r\n                            </>\r\n                        ),\r\n                    }, {\r\n                        title: 'Gravedad',\r\n                        dataIndex: 'respuestas_depresion2_gpc',\r\n                        key: 'hrsd' + i,\r\n                        render: (_, { respuestas_ept1_davidson }) => (\r\n                            <>\r\n                                {respuestas_ept1_davidson[i][1]}\r\n                            </>\r\n                        ),\r\n                    }\r\n\r\n                ]\r\n            })\r\n        }\r\n        setColumns(columns)\r\n    }\r\n\r\n    const detailsColumns = [\r\n        {\r\n            title: 'Usuario',\r\n            key: 'usuario',\r\n            dataIndex: 'usuario',\r\n            render: (_, { usuario }) => (<>{usuario ? usuario.name : \"usuario no existente\"}</>),\r\n            sorter: true\r\n        },\r\n        {\r\n            title: 'Acciones',\r\n            key: 'actions',\r\n            dataIndex: 'actions',\r\n            render: (_, { respuestas_ept1_davidson }) => (<>\r\n                <Button onClick={() => { setEscalaForDetails(respuestas_ept1_davidson); showDetailsModal() }}>Ver detalles</Button>\r\n            </>),\r\n        }\r\n    ]\r\n\r\n    return (\r\n        <div>\r\n            <h6>Evaluación Del Trastorno Por Estrés Postraumático: Aproximación A Las Propiedades Psicométricas De La Escala De Trauma De Davidson</h6>\r\n            <br />\r\n            <Button type=\"primary\" onClick={showModal}>\r\n                Crear Enlace EPT 1\r\n            </Button>\r\n            <br />\r\n            {/* <Table dataSource={countersData} columns={counterColumns} bordered /> */}\r\n            <br />\r\n            <h4>Detalles de encuestas</h4>\r\n            <br />\r\n            {/* <Table dataSource={encuestasData} columns={columns} scroll={{ x: 1600 }} bordered /> */}\r\n            <Table dataSource={encuestasData} columns={detailsColumns} bordered />\r\n\r\n            <Modal title=\"Crear Encuesta de Estres Post Traumatico\" open={isModalOpen} onOk={handleOk} onCancel={handleCancel}\r\n                footer={[\r\n                    <Button onClick={handleCancel}>Cerrar</Button>\r\n                ]}>\r\n                <EscalasCreateGeneralLink tipo='post_traumatico' />\r\n            </Modal>\r\n\r\n            <PTDetails escalaDetails={escalaForDetails} handleCancel={handleDetailsCancel} handleOk={handleDetailsOk} isModalOpen={isDetailsModalOpen} />\r\n\r\n        </div>\r\n    )\r\n}\r\n","export const catalog_ept_mexicana = [\r\n    \"1. Me supera emocionalmente este trabajo. \",\r\n    \"2. Me siento inútil y desilusionado frente al trabajo que desarrollo. \",\r\n    \"3. Me siento emocionalmente sin fuerzas. \",\r\n    \"4. No tengo ganas de ir a trabajar. \",\r\n    \"5. Me siento agotado física y mentalmente.\",\r\n    \"6. Si algo he aprendido en mi trabajo como profesional de emergencias, es que las cosas no suceden como deberían. \",\r\n    \"7. Me he llegado a cuestionar mis propias creencias después de algunas intervenciones. \",\r\n    \"8. Mi trabajo me ha hecho ver que el mundo es injusto. \",\r\n    \"9. Este trabajo me ha enseñado que la vida termina dándole a uno lo que se merece. \",\r\n    \"10. Recuerdo hasta el nombre de algunos pacientes.\",\r\n    \"11. A veces, pienso en aquellos pacientes que han fallecido mientras los atendía. \",\r\n    \"12. Guardo imágenes muy reales de aquellos accidentes que más me afectaron.\",\r\n    \"13. En ocasiones me emociono debido a este trabajo.\",\r\n    \"14. Durante algunas intervenciones llego a experimentar sentimientos de todo tipo. \",\r\n]","import React from 'react'\r\nimport { Button, Modal, Card } from 'antd';\r\nimport { catalog_ept_mexicana } from './p_t_mexicana_catalog';\r\n\r\nexport default function PTMXDetails({ isModalOpen, handleOk, handleCancel, escalaDetails }) {\r\n    return (\r\n        <Modal title=\"Respuestas de la escala\" open={isModalOpen} onOk={handleOk} onCancel={handleCancel} destroyOnClose>\r\n\r\n            {\r\n                Object.keys(escalaDetails).map((key) => {\r\n                    return <Card size='small'>\r\n                        <Card.Grid hoverable={false} style={{ width: '70%' }}>{catalog_ept_mexicana[Number(key) - 1]}</Card.Grid>\r\n                        <Card.Grid hoverable={false} style={{ width: '30%' }}>{escalaDetails[key]}</Card.Grid>\r\n                    </Card>\r\n                })\r\n            }\r\n\r\n\r\n        </Modal>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Button, Modal, Table, Form, Select } from 'antd';\r\nimport EscalasCreateGeneralLink from '../../escalasCreateGeneralLink';\r\nimport { getData, usuario, sendDataBody, ids_hospitales } from '../../../resources';\r\nimport getAllEscalas from '../../getEscalas';\r\nimport PTMXDetails from './p_t_mexicana_details';\r\nconst Option = { Select }\r\n\r\nexport default function PostTraumaticoMexicanaResults() {\r\n\r\n    const [encuestasData, setEncuestasData] = useState([])\r\n    const [medicosData, setMedicosData] = useState([])\r\n    const [medico, setMedico] = useState(null)\r\n    const [countersData, setCountersData] = useState([])\r\n    const [loadingCounters, setLoadingCounters] = useState(true)\r\n    const [columns, setColumns] = useState([])\r\n    const [loading, setLoading] = useState(true)\r\n\r\n    const [isModalOpen, setIsModalOpen] = useState(false);\r\n    const showModal = () => { setIsModalOpen(true) };\r\n    const handleOk = () => { setIsModalOpen(false) };\r\n    const handleCancel = () => { setIsModalOpen(false) };\r\n\r\n    // Modal for details\r\n    const [escalaForDetails, setEscalaForDetails] = useState(\"\")\r\n    const [isDetailsModalOpen, setIsDetailsModalOpen] = useState(false);\r\n    const showDetailsModal = () => { setIsDetailsModalOpen(true) };\r\n    const handleDetailsOk = () => { setIsDetailsModalOpen(false) };\r\n    const handleDetailsCancel = () => { setIsDetailsModalOpen(false) };\r\n\r\n\r\n    useEffect(() => {\r\n        addColumns();\r\n        (usuario.rol === 'Administrador' || usuario.rol === 'Recepcion' || usuario.rol === 'Enfermero') ? getAllEscalas('post_traumatico_mx', setEncuestasData, setLoading) : getEncuestasData(usuario._id)\r\n    }, [])\r\n    const getDoctorsData = () => { //Para el caso que la sesion sea de Administrador\r\n        sendDataBody('users/getMany/hospitals', { ids_hospitales: ids_hospitales }).then(rs => {\r\n            setMedicosData(rs)\r\n        })\r\n    }\r\n    const getEncuestasData = (medico) => {\r\n        getData(`encuestas/byDoctorAndTipo/${medico}/post_traumatico_mx/`).then((rs) => {\r\n            getCounters(rs, medico);\r\n            console.log(rs);\r\n            setEncuestasData(rs)\r\n        })\r\n    }\r\n\r\n    const getCounters = (data, medico) => {\r\n        const allEncuestas = [...data];\r\n        const results = []\r\n        getData(`mispacientes/${medico}`).then(rs => {\r\n            console.log('MisPacientes ept1: ', rs);\r\n            rs.forEach(pac => {\r\n                const aprs = allEncuestas.filter(enc => enc.usuario?._id === pac._id)\r\n                const latest = aprs.at(-1)\r\n                results.push({\r\n                    'paciente': pac.name,\r\n                    'total': aprs.length,\r\n                    'semana': latest?.createdAt.substring(0, 10)\r\n                })\r\n            });\r\n            console.log(results)\r\n        }).finally(() => { setCountersData(results); setLoadingCounters(false) });\r\n    }\r\n\r\n    const counterColumns = [\r\n        {\r\n            title: 'Paciente',\r\n            key: 'paciente',\r\n            dataIndex: 'paciente'\r\n        },\r\n        {\r\n            title: 'Fecha ultima encuesta',\r\n            key: 'semana',\r\n            dataIndex: 'semana',\r\n        },\r\n        {\r\n            title: 'Total encuestas',\r\n            key: 'total',\r\n            dataIndex: 'total'\r\n        }\r\n    ];\r\n\r\n    const addColumns = () => {\r\n        let columns = [\r\n            {\r\n                title: 'Paciente',\r\n                dataIndex: 'usuario',\r\n                key: 'name',\r\n                render: (_, { usuario }) => <>{usuario ? usuario.name : \"Usuario eliminado\"}</>\r\n            }\r\n        ];\r\n        for (let i = 1; i < 15; i++) {\r\n            columns.push({\r\n                title: 'Pregunta ' + i,\r\n                key: 'eptmx' + i,\r\n                dataIndex: 'respuestas_ept_3mx',\r\n                render: (_, { respuestas_ept_3mx }) => <>{respuestas_ept_3mx[i]}</>\r\n            })\r\n        }\r\n        setColumns(columns)\r\n    }\r\n\r\n    const detailsColumns = [\r\n        {\r\n            title: 'Usuario',\r\n            key: 'usuario',\r\n            dataIndex: 'usuario',\r\n            render: (_, { usuario }) => (<>{usuario ? usuario.name : \"usuario no existente\"}</>),\r\n            sorter: true\r\n        },\r\n        {\r\n            title: 'Acciones',\r\n            key: 'actions',\r\n            dataIndex: 'actions',\r\n            render: (_, { respuestas_ept_3mx }) => (<>\r\n                <Button onClick={() => { setEscalaForDetails(respuestas_ept_3mx); showDetailsModal() }}>Ver detalles</Button>\r\n            </>),\r\n        },\r\n    ]\r\n\r\n    return (\r\n        <div>\r\n            <h6>Resultados de la Validación mexicana de la Escala de Estrés Traumático Secundario</h6>\r\n\r\n            <br />\r\n            <Button type=\"primary\" onClick={showModal}>\r\n                Crear Enlace EPT MX\r\n            </Button>\r\n            <br />\r\n\r\n            {/* <Table dataSource={countersData} columns={counterColumns} bordered /> */}\r\n\r\n            <br />\r\n            <h4>Detalles de encuestas</h4>\r\n            <br />\r\n            <Table dataSource={encuestasData} columns={detailsColumns} bordered />\r\n            {/* <Table dataSource={encuestasData} columns={columns} scroll={{ x: 1600 }} bordered /> */}\r\n\r\n            <Modal title=\"Crear Encuesta de Estres Post Traumatico\" open={isModalOpen} onOk={handleOk} onCancel={handleCancel}\r\n                footer={[\r\n                    <Button onClick={handleCancel}>Cerrar</Button>\r\n                ]}>\r\n                <EscalasCreateGeneralLink tipo='post_traumatico_mx' />\r\n            </Modal>\r\n\r\n            <PTMXDetails escalaDetails={escalaForDetails} handleCancel={handleDetailsCancel} handleOk={handleDetailsOk} isModalOpen={isDetailsModalOpen} />\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Tabs } from 'antd';\r\nimport PostTraumaticoResults from './post_traumatico/p_t_results';\r\nimport PostTraumaticoClinicoResults from './p_t_clinico/p_t_clinico_results';\r\nimport PostTraumaticoMexicanaResults from './p_t_mexicana/p_t_mexicana_results';\r\n\r\nexport default function PostTraumaticoMenu() {\r\n  const items = [\r\n    { label: 'EPT 1', key: 'item-1', children: <PostTraumaticoResults /> },\r\n    // { label: 'EPT 2', key: 'item-2', children: <PostTraumaticoClinicoResults/> },\r\n    { label: 'EPT 3', key: 'item-3', children: <PostTraumaticoMexicanaResults /> },\r\n  ]\r\n  return (\r\n    <div>\r\n      <h4 className='spacedTitle'>Resultados de Escalas de Estrés Post Traumatico</h4>\r\n      <Tabs items={items} type=\"card\" />\r\n    </div>\r\n  )\r\n}\r\n","export const dolor_catalog = [\r\n    {\r\n        'n': 1,\r\n        'tipo': 'multiple',\r\n        'pregunta': '1. Indique en el diagrama las zonas donde siente dolor sombreando la parte afectada. Marque una cruz en la zona que más le duele.',\r\n        'respuestas': ['Delante Derecha', 'Delante Izquierda', 'Detras Derecha', 'Detras Izquierda']\r\n    },\r\n    {\r\n        'n': 2,\r\n        'tipo': 'metrica',\r\n        'pregunta': '2. Por favor, evalúe su dolor rodeando con un círculo el número que mejor describa la intensidad máxima de su dolor en la última semana',\r\n    },\r\n    {\r\n        'n': 3,\r\n        'tipo': 'metrica',\r\n        'pregunta': '3. Por favor, evalúe su dolor rodeando con un círculo el número que mejor describa la intensidad mínima de su dolor en la última semana',\r\n    },\r\n    {\r\n        'n': 4,\r\n        'tipo': 'metrica',\r\n        'pregunta': '4. Por  favor,  evalúe  su  dolor  rodeando  con  un  círculo  el  número  que  mejor  describa  la  intensidad  mediade  su  dolor.',\r\n    },\r\n    {\r\n        'n': 5,\r\n        'tipo': 'metrica',\r\n        'pregunta': '5. Por favor, evalúe su dolor rodeando con un círculo el número que mejor describa la intensidad de su dolor ahora mismo',\r\n    },\r\n    {\r\n        'n': 6,\r\n        'tipo': 'texto',\r\n        'pregunta': '6. ¿Qué tipo de cosas le alivia el dolor (p. ej., caminar, estar de pie, levantar algo)?',\r\n    },\r\n    {\r\n        'n': 7,\r\n        'tipo': 'texto',\r\n        'pregunta': '7. ¿Qué tipo de cosas empeora el dolor (p. ej., caminar, estar de pie, levantar algo)?',\r\n    },\r\n    {\r\n        'n': 8,\r\n        'tipo': 'texto',\r\n        'pregunta': '8. ¿Qué tratamiento o medicación está recibiendo para el dolor?',\r\n    },\r\n    {\r\n        'n': 9,\r\n        'tipo': 'metrica',\r\n        'pregunta': '9. En la última semana, ¿hasta qué punto le han aliviado los tratamientos o medicación para el dolor? Por favor, rodee con un círculo el porcentaje que corresponda al grado de alivio que ha sentido'\r\n    },\r\n    {\r\n        'n': 10,\r\n        'tipo': 'seleccion',\r\n        'pregunta': '10. Si toma medicación, ¿cuánto tarda en volver a sentir dolor?',\r\n        'respuestas': ['La medicación para el dolor no me ayuda nada', '1h', '2h', '3h', '4h', 'De 5 a 12h', 'Más de 12h', 'No tomo medicación para el dolor']\r\n    },\r\n    {\r\n        'n': 11,\r\n        'tipo': 'multiple',\r\n        'pregunta': '11. Marque con una cruz la casilla que considere adecuada para cada una de las respuestas.',\r\n        'respuestas': ['A. Los efectos del tratamiento (p. ej., medicación, operación, radiación, prótesis)', 'B. Mi enfermedad principal (la enfermedad que actualmente se está tratando y evaluando)', 'C.  Una situación no relacionada con mi enfermedad principal (p. ej., artrosis)']\r\n    },\r\n    {\r\n        'n': 12,\r\n        'tipo': 'multiple',\r\n        'pregunta': '12. Para cada una de las siguientes palabras, marque con una cruz «sí» o «no» si ese adjetivo se aplica a su dolor.',\r\n        'respuestas': ['Dolorido/continuo', 'Palpitante', 'Irradiante', 'Punzante', 'Fatigoso (pesado)', 'Penetrante', 'Persistente', 'Mortificante (calambre)', 'Agudo', 'Sensible', 'Quemante', 'Agotador', 'Entumecido (adormecido)', 'Penoso', 'Insoportable']\r\n    },\r\n    {\r\n        'n': 13,\r\n        'tipo': 'titulo',\r\n        'pregunta': '13. Rodee con un círculo el número que mejor describa hasta qué punto el dolor le ha afectado en los siguientes aspectos de la vida, durante la última semana.',\r\n    },\r\n    {\r\n        'n': 'A13',\r\n        'tipo': 'metrica',\r\n        'pregunta': '13 A. Actividades en general',\r\n    },\r\n    {\r\n        'n': 'B13',\r\n        'tipo': 'metrica',\r\n        'pregunta': '13 B. Estado de ánimo',\r\n    },\r\n    {\r\n        'n': 'C13',\r\n        'tipo': 'metrica',\r\n        'pregunta': '13 C. Capacidad de caminar',\r\n    },\r\n    {\r\n        'n': 'D13',\r\n        'tipo': 'metrica',\r\n        'pregunta': '13 D. Trabajo habitual (incluye tanto el trabajo fuera de casa como las tareas domésticas)',\r\n    },\r\n    {\r\n        'n': 'E13',\r\n        'tipo': 'metrica',\r\n        'pregunta': '13 E. Relaciones con otras personas',\r\n    },\r\n    {\r\n        'n': 'F13',\r\n        'tipo': 'metrica',\r\n        'pregunta': '13 F. Sueño',\r\n    },\r\n    {\r\n        'n': 'G13',\r\n        'tipo': 'metrica',\r\n        'pregunta': '13 G. Disfrutar de la vida',\r\n    },\r\n    {\r\n        'n': 14,\r\n        'tipo': 'seleccion',\r\n        'pregunta': '14. Prefiero tomar mi medicación para el dolor:',\r\n        'respuestas': ['De forma regular', 'Sólo cuando lo necesito', 'No tomo medicación para el dolor']\r\n    },\r\n    {\r\n        'n': 15,\r\n        'tipo': 'seleccion',\r\n        'pregunta': '15. Tomo mi medicación para el dolor (en un período de un día)',\r\n        'respuestas': ['No todos los días', '1 a 2 veces al día', '3 a 4 veces al día', '5 a 6 veces al día', 'Más de 6 veces al día']\r\n    },\r\n    {\r\n        'n': 16,\r\n        'tipo': 'seleccion',\r\n        'pregunta': '16. ¿Cree que necesita una medicación más fuerte para el dolor?',\r\n        'respuestas': ['Si', 'No', 'No lo sé']\r\n    },\r\n    {\r\n        'n': 17,\r\n        'tipo': 'seleccion',\r\n        'pregunta': '17. ¿Cree que debería tomar más dosis de la medicación para el dolor que las que le ha recetado el médico?',\r\n        'respuestas': ['Si', 'No', 'No lo sé']\r\n    },\r\n    {\r\n        'n': 18,\r\n        'tipo': 'seleccion',\r\n        'pregunta': '18. ¿Está preocupado/a porque toma demasiada medicación para el dolor?',\r\n        'respuestas': ['Si', 'No', 'No lo sé']\r\n    },\r\n    {\r\n        'n': 'B18',\r\n        'tipo': 'texto',\r\n        'pregunta': '18 B.Si la respuesta es «sí», ¿por qué?'\r\n    },\r\n    {\r\n        'n': 19,\r\n        'tipo': 'seleccion',\r\n        'pregunta': '19. ¿Tiene problemas con los efectos secundarios de su medicación para el dolor?',\r\n        'respuestas': ['Si', 'No']\r\n    },\r\n    {\r\n        'n': 'B19',\r\n        'tipo': 'texto',\r\n        'pregunta': '19 B.¿Qué efectos secundarios?'\r\n    },\r\n    {\r\n        'n': 20,\r\n        'tipo': 'seleccion',\r\n        'pregunta': '20. ¿Cree que necesita recibir más información sobre su medicación para el dolor?',\r\n        'respuestas': ['Si', 'No']\r\n    },\r\n    {\r\n        'n': 21,\r\n        'tipo': 'multiple',\r\n        'pregunta': '21. Otros métodos que uso para aliviar mi dolor son (por favor, marque con una cruz todo lo que se le aplique):',\r\n        'respuestas': ['Compresas calientes', 'Distracción', 'Compresas frías', 'Biofeedback', 'Técnicas de relajación', 'Hipnosis']\r\n    },\r\n    {\r\n        'n': 'B21',\r\n        'tipo': 'texto',\r\n        'pregunta': '21 B.Si su respuesta es otros, por favor, especifique'\r\n    },\r\n    {\r\n        'n': 22,\r\n        'tipo': 'texto',\r\n        'pregunta': '22. Otras medicaciones no recetadas por mi médico y que tomo para el dolor son:'\r\n    },\r\n]\r\n\r\n// export const initialDolorValues = dolor_catalog.map(p => ({ p.n: p.user, liked: p.liked }));\r\n\r\n\r\nexport const initialDolorValues = dolor_catalog.filter(({ tipo }) => tipo === 'metrica').reduce(\r\n    (obj, item) => Object.assign(obj, { [item.n]: 0 }), {}\r\n);","import React from 'react'\r\nimport { Button, Modal, Card } from 'antd';\r\nimport { dolor_catalog } from './dolor_catalog';\r\n\r\nconst pretungas = { \"Ritmo_Cardiaco_Elevado\": false, \"Sentimientos_de_Ansiedad\": true, \"Debilidad_o_Mareos_ligeros\": false, \"Sedacion_o_Somnolencia\": true, \"Nauseas\": false, \"Vision_Borrosa\": true, \"Aumento_de_la_Presión_Arterial\": false, \"Mareos\": true, \"Dolor_de_cabeza\": false, \"desrealizacion_0\": 0, \"desrealizacion_1\": 1, \"despersonalizacion_0\": 1, \"despersonalizacion_1\": 3, \"amnesia_0\": 1, \"amnesia_1\": 1, \"ketamina\": 6, \"ketaminaiv\": 0, \"ketaminaivb\": 2, \"_id\": \"646f77314c0254e92dd244c1\" }\r\n\r\n// { \"1\": [\"Detras Izquierda\"], \"2\": 4, \"3\": 3, \"4\": 6, \"5\": 5, \"6\": \"correr\", \"7\": \"Caminar\", \"8\": \"Ninguno\", \"9\": 2, \"10\": 3, \"11\": [\"B. Mi enfermedad principal (la enfermedad que actualmente se está tratando y evaluando)\"], \"12\": [\"Fatigoso (pesado)\", \"Insoportable\"], \"14\": 2, \"15\": 1, \"16\": 2, \"17\": 2, \"18\": 2, \"19\": 0, \"20\": 1, \"21\": [\"Compresas frías\"], \"22\": \"si\", \"A13\": 2, \"B13\": 6, \"C13\": 3, \"D13\": 4, \"E13\": 2, \"F13\": 5, \"G13\": 3, \"B18\": \"no\", \"B19\": \"ningn\", \"B21\": \"si\", \"_id\": \"636163a89a3c0025d9f5c1f7\" }\r\n\r\nexport default function DolorDetails({ isModalOpen, handleOk, handleCancel, escalaDetails }) {\r\n    return (\r\n        <Modal title=\"Respuestas escala de dolor\" open={isModalOpen} onOk={handleOk} onCancel={handleCancel} destroyOnClose>\r\n            {\r\n                Object.keys(escalaDetails).map((key) => {\r\n                    const found = dolor_catalog.find((q) => String(q['n']) === key)\r\n                    return <Card size='small'>\r\n                        <Card.Grid hoverable={false} style={{ width: '70%' }}>{found && found[\"pregunta\"]}</Card.Grid>\r\n                        <Card.Grid hoverable={false} style={{ width: '30%' }}>{escalaDetails[key]}</Card.Grid>\r\n                    </Card>\r\n                })\r\n            }\r\n\r\n        </Modal>\r\n    )\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { useState } from 'react'\r\nimport { usuario, getData, sendDataBody, ids_hospitales } from '../../resources'\r\nimport { Form, Select, Space, Button, Table, Modal } from 'antd';\r\nimport EscalasCreateGeneralLink from '../escalasCreateGeneralLink';\r\nimport getAllEscalas from '../getEscalas';\r\nimport DolorDetails from './dolorDetails';\r\nconst { Option } = Select;\r\n\r\nexport default function DolorResults() {\r\n    const [encuestasData, setEncuestasData] = useState([])\r\n    const [medicosData, setMedicosData] = useState([])\r\n    const [medico, setMedico] = useState(null)\r\n    const [countersData, setCountersData] = useState([])\r\n    const [loadingCounters, setLoadingCounters] = useState(true)\r\n    const [loading, setLoading] = useState(true)\r\n    // For Modal\r\n    const [isModalOpen, setIsModalOpen] = useState(false);\r\n    const showModal = () => { setIsModalOpen(true) };\r\n    const handleOk = () => { setIsModalOpen(false) };\r\n    const handleCancel = () => { setIsModalOpen(false) };\r\n\r\n    // Modal for details\r\n    const [escalaForDetails, setEscalaForDetails] = useState(\"\")\r\n    const [isDetailsModalOpen, setIsDetailsModalOpen] = useState(false);\r\n    const showDetailsModal = () => { setIsDetailsModalOpen(true) };\r\n    const handleDetailsOk = () => { setIsDetailsModalOpen(false) };\r\n    const handleDetailsCancel = () => { setIsDetailsModalOpen(false) };\r\n\r\n    useEffect(() => {\r\n        (usuario.rol === 'Administrador' || usuario.rol === 'Recepcion' || usuario.rol === 'Enfermero') ? getAllEscalas('dolor', setEncuestasData, setLoading) : getEncuestasData(usuario._id)\r\n    }, [])\r\n\r\n    const getDoctorsData = () => { //Para el caso que la sesion sea de Administrador\r\n        sendDataBody('users/getMany/hospitals', { ids_hospitales: ids_hospitales }).then(rs => {\r\n            setMedicosData(rs)\r\n        })\r\n    }\r\n\r\n    const getEncuestasData = (medico) => {\r\n        getData(`encuestas/dolor/medico/${medico}`).then((rs) => {\r\n            getCounters(rs, medico);\r\n            console.log(rs);\r\n            setEncuestasData(rs)\r\n        })\r\n    }\r\n\r\n    const getCounters = (data, medico) => {\r\n        const allEncuestas = [...data];\r\n        const results = []\r\n        getData(`mispacientes/${medico}`).then(rs => {\r\n            rs.forEach(pac => {\r\n                const aprs = allEncuestas.filter(enc => enc.usuario?._id === pac._id)\r\n                const latest = aprs.at(-1)\r\n                results.push({\r\n                    'paciente': pac.name,\r\n                    'total': aprs.length,\r\n                    'semana': latest?.createdAt.substring(0, 10)\r\n                })\r\n            });\r\n            console.log(results)\r\n        }).finally(() => { setCountersData(results); setLoadingCounters(false) });\r\n    }\r\n\r\n    const counterColumns = [\r\n        {\r\n            title: 'Paciente',\r\n            key: 'paciente',\r\n            dataIndex: 'paciente',\r\n        },\r\n        {\r\n            title: 'Fecha ultima encuesta',\r\n            key: 'semana',\r\n            dataIndex: 'semana',\r\n        },\r\n        {\r\n            title: 'Total Escalas Respondidas',\r\n            key: 'total',\r\n            dataIndex: 'total'\r\n        }\r\n    ];\r\n\r\n    const columns = [\r\n\r\n        {\r\n            title: 'Usuario',\r\n            dataIndex: 'usuario',\r\n            key: 'usuario',\r\n            render: (_, { usuario }) => <p>{usuario ? usuario.name : \"Usuario eliminado\"}</p>\r\n        },\r\n        {\r\n            title: 'Pretgunta 1',\r\n            dataIndex: 'respuestas_dolor',\r\n            key: 'usuario',\r\n            render: (_, { respuestas_dolor }) => <p>{respuestas_dolor[1]}</p>\r\n        },\r\n        {\r\n            title: 'Pretgunta 2',\r\n            dataIndex: 'respuestas_dolor',\r\n            key: 'usuario',\r\n            render: (_, { respuestas_dolor }) => <p>{respuestas_dolor[2]}</p>\r\n        },\r\n        {\r\n            title: 'Pretgunta 3',\r\n            dataIndex: 'respuestas_dolor',\r\n            key: 'usuario',\r\n            render: (_, { respuestas_dolor }) => <p>{respuestas_dolor[3]}</p>\r\n        },\r\n        {\r\n            title: 'Pretgunta 4',\r\n            dataIndex: 'respuestas_dolor',\r\n            key: 'usuario',\r\n            render: (_, { respuestas_dolor }) => <p>{respuestas_dolor[4]}</p>\r\n        },\r\n        {\r\n            title: 'Pretgunta 5',\r\n            dataIndex: 'respuestas_dolor',\r\n            key: 'usuario',\r\n            render: (_, { respuestas_dolor }) => <p>{respuestas_dolor[5]}</p>\r\n        },\r\n        {\r\n            title: 'Pretgunta 6',\r\n            dataIndex: 'respuestas_dolor',\r\n            key: 'usuario',\r\n            render: (_, { respuestas_dolor }) => <p>{respuestas_dolor[6]}</p>\r\n        },\r\n        {\r\n            title: 'Pretgunta 7',\r\n            dataIndex: 'respuestas_dolor',\r\n            key: 'usuario',\r\n            render: (_, { respuestas_dolor }) => <p>{respuestas_dolor[7]}</p>\r\n        },\r\n        {\r\n            title: 'Pretgunta 8',\r\n            dataIndex: 'respuestas_dolor',\r\n            key: 'usuario',\r\n            render: (_, { respuestas_dolor }) => <p>{respuestas_dolor[8]}</p>\r\n        },\r\n        {\r\n            title: 'Pretgunta 9',\r\n            dataIndex: 'respuestas_dolor',\r\n            key: 'usuario',\r\n            render: (_, { respuestas_dolor }) => <p>{respuestas_dolor[9]}</p>\r\n        },\r\n        {\r\n            title: 'Pretgunta 10',\r\n            dataIndex: 'respuestas_dolor',\r\n            key: 'usuario',\r\n            render: (_, { respuestas_dolor }) => <p>{respuestas_dolor[10]}</p>\r\n        },\r\n        {\r\n            title: 'Pretgunta 11',\r\n            dataIndex: 'respuestas_dolor',\r\n            key: 'usuario',\r\n            render: (_, { respuestas_dolor }) => <p>{respuestas_dolor[11]}</p>\r\n        },\r\n        {\r\n            title: 'Pretgunta 12',\r\n            dataIndex: 'respuestas_dolor',\r\n            key: 'usuario',\r\n            render: (_, { respuestas_dolor }) => <p>{respuestas_dolor[12]}</p>\r\n        },\r\n        {\r\n            title: 'Pretgunta 13 A-G',\r\n            dataIndex: 'respuestas_dolor',\r\n            key: 'usuario',\r\n            render: (_, { respuestas_dolor }) => <p>{respuestas_dolor['A13']}</p>\r\n        },\r\n        {\r\n            title: 'Pretgunta 14',\r\n            dataIndex: 'respuestas_dolor',\r\n            key: 'usuario',\r\n            render: (_, { respuestas_dolor }) => <p>{respuestas_dolor[14]}</p>\r\n        },\r\n        {\r\n            title: 'Pretgunta 15',\r\n            dataIndex: 'respuestas_dolor',\r\n            key: 'usuario',\r\n            render: (_, { respuestas_dolor }) => <p>{respuestas_dolor[15]}</p>\r\n        },\r\n        {\r\n            title: 'Pretgunta 16',\r\n            dataIndex: 'respuestas_dolor',\r\n            key: 'usuario',\r\n            render: (_, { respuestas_dolor }) => <p>{respuestas_dolor[16]}</p>\r\n        },\r\n        {\r\n            title: 'Pretgunta 17',\r\n            dataIndex: 'respuestas_dolor',\r\n            key: 'usuario',\r\n            render: (_, { respuestas_dolor }) => <p>{respuestas_dolor[17]}</p>\r\n        },\r\n        {\r\n            title: 'Pretgunta 18',\r\n            dataIndex: 'respuestas_dolor',\r\n            key: 'usuario',\r\n            render: (_, { respuestas_dolor }) => <p>{respuestas_dolor[18]}</p>\r\n        },\r\n        {\r\n            title: 'Pretgunta 19',\r\n            dataIndex: 'respuestas_dolor',\r\n            key: 'usuario',\r\n            render: (_, { respuestas_dolor }) => <p>{respuestas_dolor[19]}</p>\r\n        },\r\n        {\r\n            title: 'Pretgunta 20',\r\n            dataIndex: 'respuestas_dolor',\r\n            key: 'usuario',\r\n            render: (_, { respuestas_dolor }) => <p>{respuestas_dolor[20]}</p>\r\n        },\r\n        {\r\n            title: 'Pretgunta 21',\r\n            dataIndex: 'respuestas_dolor',\r\n            key: 'usuario',\r\n            render: (_, { respuestas_dolor }) => <p>{respuestas_dolor[21]}</p>\r\n        },\r\n        {\r\n            title: 'Pretgunta 22',\r\n            dataIndex: 'respuestas_dolor',\r\n            key: 'usuario',\r\n            render: (_, { respuestas_dolor }) => <p>{respuestas_dolor[22]}</p>\r\n        },\r\n        // {\r\n        //     title: 'Address',\r\n        //     dataIndex: 'address',\r\n        //     key: 'address',\r\n        // },\r\n        // {\r\n        //     title: 'Tags',\r\n        //     key: 'tags',\r\n        //     dataIndex: 'tags',\r\n        //     render: (_, { tags }) => (\r\n        //         <>\r\n        //             {tags.map((tag) => {\r\n        //                 let color = tag.length > 5 ? 'geekblue' : 'green';\r\n        //                 if (tag === 'loser') {\r\n        //                     color = 'volcano';\r\n        //                 }\r\n        //                 return (\r\n        //                     <Tag color={color} key={tag}>\r\n        //                         {tag.toUpperCase()}\r\n        //                     </Tag>\r\n        //                 );\r\n        //             })}\r\n        //         </>\r\n        //     ),\r\n        // },\r\n        {\r\n            title: 'Action',\r\n            key: 'action',\r\n            render: (_, record) => (\r\n                <Space size=\"middle\">\r\n                    <a>Invite {record.name}</a>\r\n                    <a>Delete</a>\r\n                </Space>\r\n            ),\r\n        },\r\n    ];\r\n\r\n    const detailsColumns = [\r\n        {\r\n            title: 'Usuario',\r\n            key: 'usuario',\r\n            dataIndex: 'usuario',\r\n            render: (_, { usuario }) => (<>{usuario ? usuario.name : \"usuario no existente\"}</>),\r\n            sorter: true\r\n        },\r\n        {\r\n            title: 'Acciones',\r\n            key: 'actions',\r\n            dataIndex: 'actions',\r\n            render: (_, { respuestas_dolor }) => (<>\r\n                <Button onClick={() => { setEscalaForDetails(respuestas_dolor); showDetailsModal() }}>Ver detalles</Button>\r\n            </>),\r\n        },\r\n    ]\r\n\r\n    return (\r\n        <div>\r\n            <h4 className='spacedTitle'>Resultados de encuestas de dolor</h4>\r\n            <Button type=\"primary\" onClick={showModal}>\r\n                Crear Link Encuesta de Dolor\r\n            </Button>\r\n\r\n            <br />\r\n            {/* <Table dataSource={countersData} columns={counterColumns} bordered /> */}\r\n            <br />\r\n            <h4>Detalles de encuestas</h4>\r\n            <br />\r\n            {/* <Table columns={columns} dataSource={encuestasData} scroll={{ x: '200vw' }} bordered /> */}\r\n            <Table columns={detailsColumns} dataSource={encuestasData} bordered />\r\n\r\n            <Modal title=\"Crear Encuesta de dolor\" open={isModalOpen} onOk={handleOk} onCancel={handleCancel}\r\n                footer={[\r\n                    <Button onClick={handleCancel}>Cerrar</Button>\r\n                ]}>\r\n                <EscalasCreateGeneralLink tipo='dolor' />\r\n            </Modal>\r\n\r\n            <DolorDetails escalaDetails={escalaForDetails} handleCancel={handleDetailsCancel} handleOk={handleDetailsOk} isModalOpen={isDetailsModalOpen} />\r\n\r\n        </div>\r\n    )\r\n}\r\n","export const satisfaccion_catalog = [\r\n    {\r\n        'n': \"experencia_1\",\r\n        'tipo': 'radioButton',\r\n        'pregunta': '1. ¿Cómo ha sido tu experiencia con nuestro servicio desde el momento de agendar la cita? ',\r\n        'respuestas': ['Muy Insatisfecho', 'Satisfecho', 'Neutral', 'Satisfecho', 'Muy Satisfecho']\r\n    },\r\n\r\n    {\r\n        'n': \"expectativas_2\",\r\n        'tipo': 'seleccion',\r\n        'pregunta': '2. ¿El servicio ha cumplido con tus expectativas?',\r\n        'respuestas': ['No', 'Si']\r\n    },\r\n    {\r\n        'n': 'expectativas_2b',\r\n        'tipo': 'texto',\r\n        'pregunta': '¿PORQUE?',\r\n    },\r\n    {\r\n        'n': 'problema_3',\r\n        'tipo': 'texto',\r\n        'pregunta': '3. ¿Hay algún problema o dificultad que hayas experimentado desde que iniciaste el tratamiento?',\r\n    },\r\n    {\r\n        'n': 'duda_4',\r\n        'tipo': 'texto',\r\n        'pregunta': '4. ¿Has tenido alguna duda o necesidad de soporte médico desde que iniciaste el tratamiento?',\r\n    },\r\n    {\r\n        'n': 'informacion_5',\r\n        'tipo': 'seleccion',\r\n        'pregunta': '5. ¿Has recibido toda la información esperada sobre el tratamiento?',\r\n        'respuestas': ['No', 'Si']\r\n    },\r\n    {\r\n        'n': 'informacion_5b',\r\n        'tipo': 'texto',\r\n        'pregunta': '¿PORQUE?',\r\n    },\r\n    {\r\n        'n': 'satisfecho_6',\r\n        'tipo': 'seleccion',\r\n        'pregunta': '6. ¿Estás satisfecho/a con la calidad y funcionamiento del tratamiento? ',\r\n        'respuestas': ['No', 'Si']\r\n    },\r\n    {\r\n        'n': 'satisfecho_6b',\r\n        'tipo': 'texto',\r\n        'pregunta': '¿PORQUE?',\r\n    },\r\n\r\n    {\r\n        'n': 'mejora_7',\r\n        'tipo': 'texto',\r\n        'pregunta': '7. ¿Hay alguna mejora o característica adicional que te gustaría tener? ',\r\n    },\r\n    {\r\n        'n': 'recomendado_8',\r\n        'tipo': 'texto',\r\n        'pregunta': '8. ¿Has recomendado nuestro tratamiento a otras personas? Si es así, ¿cuál ha sido su reacción o experiencia?',\r\n    },\r\n    {\r\n        'n': 'impresionado_9',\r\n        'tipo': 'texto',\r\n        'pregunta': '9. ¿Hay algo en particular que te haya impresionado positivamente sobre nuestro servicio?'\r\n    },\r\n    {\r\n        'n': \"valoracion_10\",\r\n        'tipo': 'radioButton',\r\n        'pregunta': '10. ¿Cómo valorarías la atención en general de CIDERALT?',\r\n        'respuestas': ['Muy Insatisfecho', 'Satisfecho', 'Neutral', 'Satisfecho', 'Muy Satisfecho']\r\n\r\n    },\r\n]\r\n\r\n// export const initialDolorValues = dolor_catalog.map(p => ({ p.n: p.user, liked: p.liked }));\r\n\r\n\r\n// export const initialDolorValues = dolor_catalog.filter(({ tipo }) => tipo === 'metrica').reduce(\r\n//     (obj, item) => Object.assign(obj, { [item.n]: 0 }), {}\r\n// );","import React from 'react'\r\nimport { Button, Modal, Card } from 'antd';\r\nimport { satisfaccion_catalog } from './satisfaccion_catalog';\r\n\r\nconst pretungas = { \"Ritmo_Cardiaco_Elevado\": false, \"Sentimientos_de_Ansiedad\": true, \"Debilidad_o_Mareos_ligeros\": false, \"Sedacion_o_Somnolencia\": true, \"Nauseas\": false, \"Vision_Borrosa\": true, \"Aumento_de_la_Presión_Arterial\": false, \"Mareos\": true, \"Dolor_de_cabeza\": false, \"desrealizacion_0\": 0, \"desrealizacion_1\": 1, \"despersonalizacion_0\": 1, \"despersonalizacion_1\": 3, \"amnesia_0\": 1, \"amnesia_1\": 1, \"ketamina\": 6, \"ketaminaiv\": 0, \"ketaminaivb\": 2, \"_id\": \"646f77314c0254e92dd244c1\" }\r\n\r\n// { \"1\": [\"Detras Izquierda\"], \"2\": 4, \"3\": 3, \"4\": 6, \"5\": 5, \"6\": \"correr\", \"7\": \"Caminar\", \"8\": \"Ninguno\", \"9\": 2, \"10\": 3, \"11\": [\"B. Mi enfermedad principal (la enfermedad que actualmente se está tratando y evaluando)\"], \"12\": [\"Fatigoso (pesado)\", \"Insoportable\"], \"14\": 2, \"15\": 1, \"16\": 2, \"17\": 2, \"18\": 2, \"19\": 0, \"20\": 1, \"21\": [\"Compresas frías\"], \"22\": \"si\", \"A13\": 2, \"B13\": 6, \"C13\": 3, \"D13\": 4, \"E13\": 2, \"F13\": 5, \"G13\": 3, \"B18\": \"no\", \"B19\": \"ningn\", \"B21\": \"si\", \"_id\": \"636163a89a3c0025d9f5c1f7\" }\r\n\r\nexport default function SatisfaccionDetails({ isModalOpen, handleOk, handleCancel, escalaDetails }) {\r\n    return (\r\n        <Modal title=\"Respuestas encuesta de satisfaccion\" open={isModalOpen} onOk={handleOk} onCancel={handleCancel} destroyOnClose>\r\n            {\r\n                Object.keys(escalaDetails).map((key) => {\r\n                    const found = satisfaccion_catalog.find((q) => String(q['n']) === key)\r\n                    // return <p>\r\n                    //     {JSON.stringify(found)}\r\n                    // </p>\r\n                    return <Card size='small'>\r\n                        <Card.Grid hoverable={false} style={{ width: '70%' }}>{found && found['pregunta']}</Card.Grid>\r\n                        {\r\n\r\n                            found && found.tipo === \"seleccion\" ? <Card.Grid hoverable={false} style={{ width: '30%' }}>{escalaDetails[key] ? \"Si\" : \"No\"}</Card.Grid> :\r\n                                <Card.Grid hoverable={false} style={{ width: '30%' }}>{escalaDetails[key]}</Card.Grid>\r\n                        }\r\n                    </Card>\r\n                })\r\n            }\r\n\r\n        </Modal>\r\n    )\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { useState } from 'react'\r\nimport { usuario, getData, sendDataBody, ids_hospitales } from '../../resources'\r\nimport { Form, Select, Space, Button, Table, Modal } from 'antd';\r\nimport EscalasCreateGeneralLink from '../escalasCreateGeneralLink';\r\nimport getAllEscalas from '../getEscalas';\r\nimport DolorDetails from './satisfaccionDetails';\r\nconst { Option } = Select;\r\n\r\nexport default function SatisfaccionResults() {\r\n    const [encuestasData, setEncuestasData] = useState([])\r\n    const [medicosData, setMedicosData] = useState([])\r\n    const [medico, setMedico] = useState(null)\r\n    const [countersData, setCountersData] = useState([])\r\n    const [loadingCounters, setLoadingCounters] = useState(true)\r\n    const [loading, setLoading] = useState(true)\r\n    // For Modal\r\n    const [isModalOpen, setIsModalOpen] = useState(false);\r\n    const showModal = () => { setIsModalOpen(true) };\r\n    const handleOk = () => { setIsModalOpen(false) };\r\n    const handleCancel = () => { setIsModalOpen(false) };\r\n\r\n    // Modal for details\r\n    const [escalaForDetails, setEscalaForDetails] = useState(\"\")\r\n    const [isDetailsModalOpen, setIsDetailsModalOpen] = useState(false);\r\n    const showDetailsModal = () => { setIsDetailsModalOpen(true) };\r\n    const handleDetailsOk = () => { setIsDetailsModalOpen(false) };\r\n    const handleDetailsCancel = () => { setIsDetailsModalOpen(false) };\r\n\r\n    useEffect(() => {\r\n        (usuario.rol === 'Administrador' || usuario.rol === 'Recepcion' || usuario.rol === 'Enfermero') ? getAllEscalas('satisfaccion', setEncuestasData, setLoading) : getEncuestasData(usuario._id)\r\n    }, [])\r\n\r\n\r\n    const getEncuestasData = (medico) => {\r\n        getData(`encuestas/byDoctorAndTipo/${medico}/satisfaccion`).then((rs) => {\r\n            getCounters(rs, medico);\r\n            console.log(rs);\r\n            setEncuestasData(rs)\r\n        })\r\n    }\r\n\r\n    const getCounters = (data, medico) => {\r\n        const allEncuestas = [...data];\r\n        const results = []\r\n        getData(`mispacientes/${medico}`).then(rs => {\r\n            rs.forEach(pac => {\r\n                const aprs = allEncuestas.filter(enc => enc.usuario?._id === pac._id)\r\n                const latest = aprs.at(-1)\r\n                results.push({\r\n                    'paciente': pac.name,\r\n                    'total': aprs.length,\r\n                    'semana': latest?.createdAt.substring(0, 10)\r\n                })\r\n            });\r\n            console.log(results)\r\n        }).finally(() => { setCountersData(results); setLoadingCounters(false) });\r\n    }\r\n\r\n    const counterColumns = [\r\n        {\r\n            title: 'Paciente',\r\n            key: 'paciente',\r\n            dataIndex: 'paciente',\r\n        },\r\n        {\r\n            title: 'Fecha ultima encuesta',\r\n            key: 'semana',\r\n            dataIndex: 'semana',\r\n        },\r\n        {\r\n            title: 'Total Escalas Respondidas',\r\n            key: 'total',\r\n            dataIndex: 'total'\r\n        }\r\n    ];\r\n\r\n    const columns = [\r\n\r\n        {\r\n            title: 'Usuario',\r\n            dataIndex: 'usuario',\r\n            key: 'usuario',\r\n            render: (_, { usuario }) => <p>{usuario ? usuario.name : \"Usuario eliminado\"}</p>\r\n        },\r\n        {\r\n            title: 'Pretgunta 1',\r\n            dataIndex: 'respuestas_dolor',\r\n            key: 'usuario',\r\n            render: (_, { respuestas_dolor }) => <p>{respuestas_dolor[1]}</p>\r\n        },\r\n        {\r\n            title: 'Pretgunta 2',\r\n            dataIndex: 'respuestas_dolor',\r\n            key: 'usuario',\r\n            render: (_, { respuestas_dolor }) => <p>{respuestas_dolor[2]}</p>\r\n        },\r\n        {\r\n            title: 'Pretgunta 3',\r\n            dataIndex: 'respuestas_dolor',\r\n            key: 'usuario',\r\n            render: (_, { respuestas_dolor }) => <p>{respuestas_dolor[3]}</p>\r\n        },\r\n        {\r\n            title: 'Pretgunta 4',\r\n            dataIndex: 'respuestas_dolor',\r\n            key: 'usuario',\r\n            render: (_, { respuestas_dolor }) => <p>{respuestas_dolor[4]}</p>\r\n        },\r\n        {\r\n            title: 'Pretgunta 5',\r\n            dataIndex: 'respuestas_dolor',\r\n            key: 'usuario',\r\n            render: (_, { respuestas_dolor }) => <p>{respuestas_dolor[5]}</p>\r\n        },\r\n        {\r\n            title: 'Pretgunta 6',\r\n            dataIndex: 'respuestas_dolor',\r\n            key: 'usuario',\r\n            render: (_, { respuestas_dolor }) => <p>{respuestas_dolor[6]}</p>\r\n        },\r\n        {\r\n            title: 'Pretgunta 7',\r\n            dataIndex: 'respuestas_dolor',\r\n            key: 'usuario',\r\n            render: (_, { respuestas_dolor }) => <p>{respuestas_dolor[7]}</p>\r\n        },\r\n        {\r\n            title: 'Pretgunta 8',\r\n            dataIndex: 'respuestas_dolor',\r\n            key: 'usuario',\r\n            render: (_, { respuestas_dolor }) => <p>{respuestas_dolor[8]}</p>\r\n        },\r\n        {\r\n            title: 'Pretgunta 9',\r\n            dataIndex: 'respuestas_dolor',\r\n            key: 'usuario',\r\n            render: (_, { respuestas_dolor }) => <p>{respuestas_dolor[9]}</p>\r\n        },\r\n        {\r\n            title: 'Pretgunta 10',\r\n            dataIndex: 'respuestas_dolor',\r\n            key: 'usuario',\r\n            render: (_, { respuestas_dolor }) => <p>{respuestas_dolor[10]}</p>\r\n        },\r\n        {\r\n            title: 'Pretgunta 11',\r\n            dataIndex: 'respuestas_dolor',\r\n            key: 'usuario',\r\n            render: (_, { respuestas_dolor }) => <p>{respuestas_dolor[11]}</p>\r\n        },\r\n        {\r\n            title: 'Pretgunta 12',\r\n            dataIndex: 'respuestas_dolor',\r\n            key: 'usuario',\r\n            render: (_, { respuestas_dolor }) => <p>{respuestas_dolor[12]}</p>\r\n        },\r\n        {\r\n            title: 'Pretgunta 13 A-G',\r\n            dataIndex: 'respuestas_dolor',\r\n            key: 'usuario',\r\n            render: (_, { respuestas_dolor }) => <p>{respuestas_dolor['A13']}</p>\r\n        },\r\n        {\r\n            title: 'Pretgunta 14',\r\n            dataIndex: 'respuestas_dolor',\r\n            key: 'usuario',\r\n            render: (_, { respuestas_dolor }) => <p>{respuestas_dolor[14]}</p>\r\n        },\r\n        {\r\n            title: 'Pretgunta 15',\r\n            dataIndex: 'respuestas_dolor',\r\n            key: 'usuario',\r\n            render: (_, { respuestas_dolor }) => <p>{respuestas_dolor[15]}</p>\r\n        },\r\n        {\r\n            title: 'Pretgunta 16',\r\n            dataIndex: 'respuestas_dolor',\r\n            key: 'usuario',\r\n            render: (_, { respuestas_dolor }) => <p>{respuestas_dolor[16]}</p>\r\n        },\r\n        {\r\n            title: 'Pretgunta 17',\r\n            dataIndex: 'respuestas_dolor',\r\n            key: 'usuario',\r\n            render: (_, { respuestas_dolor }) => <p>{respuestas_dolor[17]}</p>\r\n        },\r\n        {\r\n            title: 'Pretgunta 18',\r\n            dataIndex: 'respuestas_dolor',\r\n            key: 'usuario',\r\n            render: (_, { respuestas_dolor }) => <p>{respuestas_dolor[18]}</p>\r\n        },\r\n        {\r\n            title: 'Pretgunta 19',\r\n            dataIndex: 'respuestas_dolor',\r\n            key: 'usuario',\r\n            render: (_, { respuestas_dolor }) => <p>{respuestas_dolor[19]}</p>\r\n        },\r\n        {\r\n            title: 'Pretgunta 20',\r\n            dataIndex: 'respuestas_dolor',\r\n            key: 'usuario',\r\n            render: (_, { respuestas_dolor }) => <p>{respuestas_dolor[20]}</p>\r\n        },\r\n        {\r\n            title: 'Pretgunta 21',\r\n            dataIndex: 'respuestas_dolor',\r\n            key: 'usuario',\r\n            render: (_, { respuestas_dolor }) => <p>{respuestas_dolor[21]}</p>\r\n        },\r\n        {\r\n            title: 'Pretgunta 22',\r\n            dataIndex: 'respuestas_dolor',\r\n            key: 'usuario',\r\n            render: (_, { respuestas_dolor }) => <p>{respuestas_dolor[22]}</p>\r\n        },\r\n        // {\r\n        //     title: 'Address',\r\n        //     dataIndex: 'address',\r\n        //     key: 'address',\r\n        // },\r\n        // {\r\n        //     title: 'Tags',\r\n        //     key: 'tags',\r\n        //     dataIndex: 'tags',\r\n        //     render: (_, { tags }) => (\r\n        //         <>\r\n        //             {tags.map((tag) => {\r\n        //                 let color = tag.length > 5 ? 'geekblue' : 'green';\r\n        //                 if (tag === 'loser') {\r\n        //                     color = 'volcano';\r\n        //                 }\r\n        //                 return (\r\n        //                     <Tag color={color} key={tag}>\r\n        //                         {tag.toUpperCase()}\r\n        //                     </Tag>\r\n        //                 );\r\n        //             })}\r\n        //         </>\r\n        //     ),\r\n        // },\r\n        {\r\n            title: 'Action',\r\n            key: 'action',\r\n            render: (_, record) => (\r\n                <Space size=\"middle\">\r\n                    <a>Invite {record.name}</a>\r\n                    <a>Delete</a>\r\n                </Space>\r\n            ),\r\n        },\r\n    ];\r\n\r\n    const detailsColumns = [\r\n        {\r\n            title: 'Usuario',\r\n            key: 'usuario',\r\n            dataIndex: 'usuario',\r\n            render: (_, { usuario }) => (<>{usuario ? usuario.name : \"usuario no existente\"}</>),\r\n            sorter: true\r\n        },\r\n        {\r\n            title: 'Acciones',\r\n            key: 'actions',\r\n            dataIndex: 'actions',\r\n            render: (_, { encuesta_satisfaccion }) => (<>\r\n                <Button onClick={() => { setEscalaForDetails(encuesta_satisfaccion); showDetailsModal() }}>Ver detalles</Button>\r\n            </>),\r\n        },\r\n    ]\r\n\r\n    return (\r\n        <div>\r\n            <h4 className='spacedTitle'>Resultados de encuestas de satisfaccion</h4>\r\n            <Button type=\"primary\" onClick={showModal}>\r\n                Crear Link Encuesta de Satisfaccion\r\n            </Button>\r\n\r\n            <br />\r\n            {/* <Table dataSource={countersData} columns={counterColumns} bordered /> */}\r\n            <br />\r\n            <h4>Detalles de encuestas</h4>\r\n            <br />\r\n            {/* <Table columns={columns} dataSource={encuestasData} scroll={{ x: '200vw' }} bordered /> */}\r\n            <Table columns={detailsColumns} dataSource={encuestasData} bordered />\r\n\r\n            <Modal title=\"Crear Encuesta de satisfaccion\" open={isModalOpen} onOk={handleOk} onCancel={handleCancel}\r\n                footer={[\r\n                    <Button onClick={handleCancel}>Cerrar</Button>\r\n                ]}>\r\n                <EscalasCreateGeneralLink tipo='satisfaccion' />\r\n            </Modal>\r\n\r\n            <DolorDetails escalaDetails={escalaForDetails} handleCancel={handleDetailsCancel} handleOk={handleDetailsOk} isModalOpen={isDetailsModalOpen} />\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Tabs } from 'antd';\r\nimport DepresionMenu from './depresion/depresionMenu'\r\nimport KetaminaResults from './ketamina/ketaminaResults';\r\nimport PostTraumaticoMenu from './estres_post_traumatico/postTraumaticoMenu';\r\nimport DolorResults from './dolor/dolorResults';\r\nimport SatisfaccionResults from './satisfaccion/satisfaccionResults';\r\n\r\nconst onChange = (key) => { console.log(key) };\r\n\r\nconst escalasMenuItems = [\r\n    { label: 'Ketamina', key: 'item-1', children: <KetaminaResults /> },\r\n    { label: 'Depresion', key: 'item-3', children: <DepresionMenu /> },\r\n    { label: 'Dolor', key: 'item-4', children: <DolorResults /> },\r\n    { label: 'Estres Post Traumatico', key: 'item-5', children: <PostTraumaticoMenu /> },\r\n    { label: 'Escala de Satisfaccion', key: 'item-6', children: <SatisfaccionResults /> },\r\n];\r\n\r\nexport default function Escalas() {\r\n    return (\r\n        <div>\r\n            <Tabs items={escalasMenuItems} defaultActiveKey=\"1\" onChange={onChange} tabPosition='left' />\r\n        </div>\r\n\r\n    )\r\n}\r\n","import { useState, useEffect } from 'react'\r\nimport { Button, Modal, Form, Input, Select, InputNumber, message } from 'antd';\r\nimport { getData, sendDataBody, updateData, usuario } from '../../resources';\r\n// DOCTOR CREATE BALANCE\r\nexport default function CreateBalance(props) {\r\n\r\n    const [pacientesData, setPacientesData] = useState({})\r\n    const handleOk = () => { props.setIsModalOpen(false) };\r\n    const handleCancel = () => { props.setIsModalOpen(false); props.setBalanceForEdit(null) };\r\n\r\n    useEffect(() => {\r\n        console.log('received for edit ', props.balanceForEdit)\r\n        return getPacientesData()\r\n    }, [])\r\n    useEffect(() => {\r\n        console.log('received for edit ', props.balanceForEdit)\r\n    }, [props.balanceForEdit])\r\n\r\n    const getPacientesData = () => {\r\n        getData(`mispacientes/${usuario._id}`).then((rs) => {\r\n            rs.forEach(p => { p.label = p.name; p.value = p._id; });\r\n            setPacientesData(rs);\r\n        })\r\n    }\r\n\r\n    // Form methods\r\n    const onFinish = (values) => {\r\n\r\n        if (!props.balanceForEdit || Object.keys(props.balanceForEdit).length === 0) {\r\n            values.medico = usuario._id\r\n            values.fecha_hora = new Date();\r\n            values.tipo = props.tipo;\r\n            values.estado = 'pendiente'\r\n        }\r\n\r\n\r\n        console.log('Ready to send:', values);\r\n        console.log('For Edit: ', props.balanceForEdit);\r\n\r\n        (props.balanceForEdit && Object.keys(props.balanceForEdit).length > 0) ?\r\n            updateData(`/balances/update/${props.balanceForEdit._id}`, values).then((rs) => {\r\n                console.log(rs); props.setBalanceForEdit({}); props.setIsModalOpen(false); props.getBalancesData()\r\n            })\r\n            :\r\n            sendDataBody(`balances/add`, values)\r\n                .then((rs) => { console.log(rs); message.success(rs.message || rs.error) })\r\n                .finally(() => {\r\n                    props.setBalanceForEdit({}); props.setIsModalOpen(false); props.getBalancesData()\r\n                })\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => { console.log('Failed:', errorInfo) };\r\n\r\n    const handleChange = (value) => { console.log(`selected ${value}`) };\r\n\r\n    return (\r\n        <Modal title={props.balanceForEdit ? `Editar ${props.tipo}` : `Agregar ${props.tipo}`} open={props.isModalOpen} onOk={handleOk} onCancel={handleCancel} destroyOnClose\r\n            footer={[\r\n                <Button type=\"primary\" htmlType=\"submit\" form='edit_balance'>\r\n                    Guardar\r\n                </Button>,\r\n                <Button onClick={handleCancel}>\r\n                    Cancelar\r\n                </Button>\r\n            ]}>\r\n            <Form\r\n                name=\"edit_balance\"\r\n                labelCol={{ span: 8 }}\r\n                wrapperCol={{ span: 16 }}\r\n                initialValues={props.balanceForEdit}\r\n                onFinish={onFinish}\r\n                onFinishFailed={onFinishFailed}\r\n                autoComplete=\"off\"\r\n            >\r\n\r\n\r\n                <Form.Item\r\n                    label=\"Monto\"\r\n                    name=\"monto\"\r\n                    rules={[{ required: true, message: 'Ingresa el monto' }]}\r\n                >\r\n                    <InputNumber style={{ width: '100%' }} />\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                    label=\"Abono\"\r\n                    // name=\"abono\"\r\n                    rules={[{ required: true, message: 'Ingresa el abono' }]}\r\n                >\r\n                    <InputNumber style={{ width: '100%' }} />\r\n                </Form.Item>\r\n\r\n                {\r\n                    // Para el caso que sea un ingreso sin cita\r\n                    (!props.balanceForEdit || Object.keys(props.balanceForEdit).length === 0) && <div>\r\n                        <Form.Item\r\n                            label=\"Concepto\"\r\n                            name=\"concepto\"\r\n                            rules={[{ required: true, message: 'Ingresa el concepto' }]}\r\n                        >\r\n                            <Input />\r\n                        </Form.Item>\r\n\r\n                        {\r\n                            props.tipo === 'ingreso' && <Form.Item\r\n                                label=\"Paciente\"\r\n                                name=\"paciente\"\r\n                            >\r\n                                <Select\r\n                                    onChange={handleChange}\r\n                                    options={pacientesData}\r\n                                />\r\n                            </Form.Item>\r\n                        }\r\n\r\n                    </div>\r\n                }\r\n\r\n                <Form.Item\r\n                    label=\"Forma de Pago\"\r\n                    name=\"forma_de_pago\"\r\n                >\r\n                    <Select\r\n                        onChange={handleChange}\r\n                        options={[\r\n                            {\r\n                                value: 'efectivo',\r\n                                label: 'Efectivo',\r\n                            },\r\n                            {\r\n                                value: 'tarjeta',\r\n                                label: 'Tarjeta',\r\n                            },\r\n                            {\r\n                                value: 'transferencia',\r\n                                label: 'Transferencia',\r\n                            },\r\n                        ]}\r\n                    />\r\n                </Form.Item>\r\n\r\n                {/* <Form.Item\r\n                    label=\"Estado\"\r\n                    name=\"estado\"\r\n                    rules={[{ required: true, message: 'Ingresa el monto' }]}\r\n                >\r\n                    <Select\r\n                        onChange={handleChange}\r\n                        options={[\r\n                            {\r\n                                value: 'pendiente',\r\n                                label: 'Pendiente',\r\n                            },\r\n                            {\r\n                                value: 'pagado',\r\n                                label: 'Pagado',\r\n                            },\r\n                            {\r\n                                value: 'pago parcial',\r\n                                label: 'Pago parcial',\r\n                            },\r\n                        ]}\r\n                    />\r\n                </Form.Item> */}\r\n\r\n                <Form.Item\r\n                    wrapperCol={{\r\n                        offset: 8,\r\n                        span: 16,\r\n                    }}\r\n                >\r\n\r\n                </Form.Item>\r\n            </Form>\r\n        </Modal>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Document, Page, Text, View, StyleSheet, Image } from '@react-pdf/renderer';\r\nimport { PDFViewer } from '@react-pdf/renderer';\r\n\r\n\r\n// Estilo para el ticket\r\nconst styles = StyleSheet.create({\r\n    titleContainer: {\r\n        flexDirection: 'row',\r\n        justifyContent: 'center',\r\n        marginBottom: 10,\r\n    },\r\n    reportTitle: {\r\n        fontSize: 18,\r\n        textAlign: 'center',\r\n        fontFamily: 'Helvetica-Bold',\r\n        textTransform: 'uppercase',\r\n    },\r\n    subtitle: {\r\n        fontSize: 14,\r\n        textAlign: 'center',\r\n        fontFamily: 'Helvetica',\r\n        marginBottom: 20,\r\n    },\r\n    text: {\r\n        margin: 10,\r\n        fontSize: 12,\r\n        textAlign: 'justify',\r\n        fontFamily: 'Helvetica',\r\n    },\r\n    sellerBuyerInfo: {\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-between',\r\n        marginBottom: 10,\r\n    },\r\n    infoTitle: {\r\n        fontFamily: 'Helvetica-Bold',\r\n        fontSize: 12,\r\n    },\r\n    infoText: {\r\n        fontFamily: 'Helvetica',\r\n        fontSize: 12,\r\n    },\r\n    table: {\r\n        display: 'table',\r\n        width: 'auto',\r\n        marginTop: 10,\r\n        borderStyle: 'solid',\r\n        borderWidth: 1,\r\n        borderColor: '#bfbfbf',\r\n    },\r\n    tableRow: {\r\n        margin: 'auto',\r\n        flexDirection: 'row',\r\n    },\r\n    tableColHeader: {\r\n        width: '25%',\r\n        borderStyle: 'solid',\r\n        borderWidth: 1,\r\n        borderColor: '#bfbfbf',\r\n        backgroundColor: '#f0f0f0',\r\n        textAlign: 'center',\r\n        fontFamily: 'Helvetica-Bold',\r\n        fontSize: 12,\r\n        paddingTop: 5,\r\n        paddingBottom: 5,\r\n    },\r\n    tableCol: {\r\n        width: '25%',\r\n        borderStyle: 'solid',\r\n        borderWidth: 1,\r\n        borderColor: '#bfbfbf',\r\n        textAlign: 'center',\r\n        fontFamily: 'Helvetica',\r\n        fontSize: 10,\r\n        paddingTop: 5,\r\n        paddingBottom: 5,\r\n    },\r\n    tableCellHeader: {\r\n        margin: 'auto',\r\n        marginTop: 5,\r\n        marginBottom: 5,\r\n        flexDirection: 'row',\r\n    },\r\n    total: {\r\n        fontFamily: 'Helvetica-Bold',\r\n        fontSize: 14,\r\n        marginTop: 30,\r\n        textAlign: 'right',\r\n        paddingRight: 50,\r\n    },\r\n\r\n    page: {\r\n        fontFamily: 'Helvetica',\r\n        fontSize: 12,\r\n        padding: 40,\r\n    },\r\n    header: {\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        borderBottom: '1pt solid #000',\r\n        paddingBottom: 10,\r\n        marginBottom: 10,\r\n    },\r\n    logo: {\r\n        width: 50,\r\n        height: 50,\r\n        marginRight: 10,\r\n    },\r\n    title: {\r\n        fontSize: 20,\r\n        marginLeft: 10,\r\n    },\r\n    company: {\r\n        fontSize: 14,\r\n        marginTop: 5,\r\n        marginLeft: 10,\r\n    },\r\n});\r\n\r\n// Componente del ticket\r\nexport default function Ticket({ ingresos, logo, company, seller, buyer }) {\r\n    console.log('Received for print ', ingresos)\r\n    return <PDFViewer height={500} width={550}>\r\n        <Document>\r\n            <Page size=\"A4\" style={styles.page}>\r\n                <View>\r\n                    <View style={styles.header}>\r\n                        <Image style={styles.logo} src={logo} />\r\n                        <View>\r\n                            <Text style={styles.title}>Nota de Venta</Text>\r\n                            <Text style={styles.company}>Hospital: </Text>\r\n                            <Text style={styles.company}>{new Date(ingresos[0].createdAt).toLocaleString()} </Text>\r\n                        </View>\r\n                    </View>\r\n                    <View style={styles.sellerBuyerInfo}>\r\n                        <View>\r\n                            <Text style={styles.infoTitle}>Medico:</Text>\r\n                            <Text style={styles.infoText}>{ingresos[0].medico.name}</Text>\r\n                        </View>\r\n                        <View>\r\n                            <Text style={styles.infoTitle}>Paciente:</Text>\r\n                            <Text style={styles.infoText}>{ingresos[0].paciente? ingresos[0].paciente.name : 'Sin paciente'}</Text>\r\n                        </View>\r\n                    </View>\r\n                    <View style={styles.table}>\r\n                        <View style={styles.tableRow}>\r\n                            <Text style={styles.tableColHeader}>Concepto</Text>\r\n                            <Text style={styles.tableColHeader}>Cantidad</Text>\r\n                            <Text style={styles.tableColHeader}>Precio Unitario</Text>\r\n                            <Text style={styles.tableColHeader}>Subtotal</Text>\r\n                        </View>\r\n                        {ingresos.map((item) => (\r\n                            <View style={styles.tableRow} key={item.id}>\r\n                                <Text style={styles.tableCol}>{item.concepto}</Text>\r\n                                <Text style={styles.tableCol}>1</Text>\r\n                                <Text style={styles.tableCol}>${item.monto.toFixed(2)}</Text>\r\n                                <Text style={styles.tableCol}>\r\n                                    {/* ${(item.monto * item.quantity).toFixed(2)} */}\r\n                                    ${item.monto.toFixed(2)}\r\n                                </Text>\r\n                            </View>\r\n                        ))}\r\n                    </View>\r\n                    <Text style={styles.total}>\r\n                        Total: ${ingresos.reduce((acc, item) => acc + item.monto * 1, 0).toFixed(2)}\r\n                    </Text>\r\n                </View>\r\n            </Page>\r\n        </Document>\r\n\r\n    </PDFViewer>\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { Table, Tag, Button, Typography, Modal } from 'antd';\r\nimport { CheckCircleTwoTone } from '@ant-design/icons'\r\nimport { deleteData, getData, usuario } from '../../resources';\r\nimport CreateBalance from './create-balance';\r\nimport Ticket from './ticket-for-print';\r\n\r\nconst { Text } = Typography;\r\n\r\nexport default function Balances() {\r\n    const [balancesData, setBalancesData] = useState([])\r\n\r\n    // Modal For Edit Ingreso\r\n    const [ingresoForEdit, setIngresoForEdit] = useState(null)\r\n    const [isIngresoModalOpen, setIsIngresoModalOpen] = useState(false);\r\n    const showIngresoModal = () => { setIsIngresoModalOpen(true) };\r\n\r\n    // Modal For Edit Gasto\r\n    const [egresoForEdit, setEgresoForEdit] = useState(null)\r\n    const [isEgresoModalOpen, setIsEgresoModalOpen] = useState(false);\r\n    const showEgresoModal = () => { setIsEgresoModalOpen(true) };\r\n\r\n    // Modal For Ticket\r\n    const [ingresoForPrint, setIngresoForPrint] = useState([])\r\n    const [isTicketModalOpen, setIsTicketModalOpen] = useState(false);\r\n    const showTicketModal = () => { setIsTicketModalOpen(true) }\r\n    const handleTicketOk = () => { setIsTicketModalOpen(false) }\r\n    const handleTicketCancel = () => { setIsTicketModalOpen(false) }\r\n\r\n    useEffect(() => { getBalancesData() }, [])\r\n\r\n    const getBalancesData = () => { getData(`balances/medico/${usuario._id}`).then((rs) => { setBalancesData(rs.reverse()); console.log('balances', rs); }) }\r\n\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Fecha y Hora',\r\n            dataIndex: 'fecha_hpra',\r\n            key: 'fecha_hora',\r\n            render: (_, { fecha_hora }) => { return <>{new Date(fecha_hora).toLocaleString()}</> }\r\n        },\r\n        {\r\n            title: 'Tipo',\r\n            dataIndex: 'tipo',\r\n            key: 'tipo',\r\n            render: (_, { tipo }) => {\r\n                let color = (tipo && tipo === 'ingreso') ? 'geekblue' : 'volcano';\r\n                return tipo ? <Tag color={color} >{tipo.toUpperCase()}</Tag> : <Tag color={color}>Indefinido</Tag>\r\n            },\r\n        },\r\n        {\r\n            title: 'Monto',\r\n            dataIndex: 'monto',\r\n            key: 'monto',\r\n            render: (_, { monto }) => `$ ${monto}`\r\n        },\r\n        {\r\n            title: 'Abono',\r\n            dataIndex: 'abono',\r\n            key: 'abono',\r\n            render: (_, { abono }) => { return abono && <>${abono}</> }\r\n        },\r\n        {\r\n            title: 'Adeudo',\r\n            dataIndex: 'adeudo',\r\n            key: 'adeudo',\r\n            render: (_, record) => { return <>${record.monto - record.abono}</> }\r\n\r\n        },\r\n        {\r\n            title: 'Forma de pago',\r\n            key: 'forma_de_pago',\r\n            dataIndex: 'forma_de_pago',\r\n            render: (_, { forma_de_pago }) => {\r\n                let color = forma_de_pago === 'efectivo' ? 'green' : 'geekblue';\r\n                return <Tag color={color} >{forma_de_pago.toUpperCase()}</Tag>\r\n            },\r\n        },\r\n        {\r\n            title: 'Paciente',\r\n            key: 'cita.paciente',\r\n            dataIndex: 'cita',\r\n            // render: (_, { cita }) => {\r\n            //     return cita ? <MatchPatient paciente={cita.usuario} /> : <Text disabled>Sin Paciente</Text>\r\n            // },\r\n            render: (_, record) => {\r\n                // if (record.cita) return <MatchPatient paciente={record.cita.usuario} />\r\n                if (record.cita) return <div style={{ display: 'flex', flexDirection: 'column' }}>{record.cita.usuario.name} <span style={{ fontSize: 9 }}>Tomado de la cita</span></div> //when populate is ready\r\n                else if (record.paciente) return <>{record.paciente.name}</>\r\n                else return <Text type=\"secondary\"> Sin Paciente </Text>\r\n            },\r\n        },\r\n        {\r\n            title: 'Factura',\r\n            key: 'Factura',\r\n            dataIndex: 'factura',\r\n            render: (_, { factura }) => { return factura && <CheckCircleTwoTone /> }\r\n\r\n        },\r\n        {\r\n            title: 'Estado',\r\n            key: 'Estado',\r\n            dataIndex: 'estado',\r\n            render: (_, { estado }) => {\r\n\r\n                let color = estado === 'pagado' ? 'geekblue' : 'green';\r\n                if (estado === 'pendiente' || estado === 'sin pagar') color = 'volcano';\r\n\r\n                return <Tag color={color}> {estado.toUpperCase()} </Tag>\r\n            }\r\n\r\n        },\r\n        {\r\n            title: 'Acciones',\r\n            key: 'Editar',\r\n            render: (_, record) => <div className='fila'>\r\n                <Button onClick={() => { setIngresoForEdit(record); showIngresoModal() }}>Editar</Button>\r\n                {record.tipo === 'ingreso' && <Button onClick={() => { console.log(record); setIngresoForPrint([record]); showTicketModal() }}>Imprimir Nota</Button>}\r\n            </div>\r\n        },\r\n    ];\r\n\r\n\r\n    return (\r\n        <div className='mainContainer'>\r\n            <div className='fila'>\r\n                <h4>Tabla de Ingresos</h4>\r\n                <Button onClick={showIngresoModal} type='primary' ghost style={{ marginLeft: 32 }}>Agregar Ingreso</Button>\r\n                <Button onClick={showEgresoModal} type='primary' ghost style={{ marginLeft: 32 }}>Agregar Gasto</Button>\r\n            </div>\r\n            <Table columns={columns} dataSource={balancesData} />\r\n            <div style={{ height: 200 }}></div>\r\n\r\n            {/* Ingreso */}\r\n            <CreateBalance tipo='ingreso' balanceForEdit={ingresoForEdit} setBalanceForEdit={setIngresoForEdit} setIsModalOpen={setIsIngresoModalOpen} isModalOpen={isIngresoModalOpen} getBalancesData={getBalancesData} />\r\n\r\n            {/* Gasto */}\r\n            <CreateBalance tipo='egreso' balanceForEdit={egresoForEdit} setBalanceForEdit={setEgresoForEdit} setIsModalOpen={setIsEgresoModalOpen} isModalOpen={isEgresoModalOpen} getBalancesData={getBalancesData} />\r\n\r\n            {/* Ticket */}\r\n            <Modal title=\"Imprimir Nota de Venta\" open={isTicketModalOpen} onOk={handleTicketOk} onCancel={handleTicketCancel} width={600}>\r\n                <Ticket ingresos={ingresoForPrint} logo=\"https://api.recreamed.com/images/bd71d914-1f11-4bea-81e5-81b55e11a4e1.jpg\" company='Hospital: ' seller='Médico: ' buyer='Paciente: ' />\r\n            </Modal>\r\n\r\n\r\n        </div >\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Document, Page, Text, View, StyleSheet, Image } from '@react-pdf/renderer';\r\nimport { PDFViewer } from '@react-pdf/renderer';\r\n\r\n\r\n// Estilo para el ticket\r\nconst styles = StyleSheet.create({\r\n    titleContainer: {\r\n        flexDirection: 'row',\r\n        justifyContent: 'center',\r\n        marginBottom: 10,\r\n    },\r\n    reportTitle: {\r\n        fontSize: 18,\r\n        textAlign: 'center',\r\n        fontFamily: 'Helvetica-Bold',\r\n        textTransform: 'uppercase',\r\n    },\r\n    subtitle: {\r\n        fontSize: 14,\r\n        textAlign: 'center',\r\n        fontFamily: 'Helvetica',\r\n        marginBottom: 20,\r\n    },\r\n    text: {\r\n        margin: 10,\r\n        fontSize: 12,\r\n        textAlign: 'justify',\r\n        fontFamily: 'Helvetica',\r\n    },\r\n    sellerBuyerInfo: {\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-between',\r\n        marginBottom: 10,\r\n    },\r\n    infoTitle: {\r\n        fontFamily: 'Helvetica-Bold',\r\n        fontSize: 12,\r\n    },\r\n    infoText: {\r\n        fontFamily: 'Helvetica',\r\n        fontSize: 12,\r\n    },\r\n    table: {\r\n        display: 'table',\r\n        width: 'auto',\r\n        marginTop: 10,\r\n        borderStyle: 'solid',\r\n        borderWidth: 1,\r\n        borderColor: '#bfbfbf',\r\n    },\r\n    tableRow: {\r\n        margin: 'auto',\r\n        flexDirection: 'row',\r\n    },\r\n    tableColHeader: {\r\n        width: '25%',\r\n        borderStyle: 'solid',\r\n        borderWidth: 1,\r\n        borderColor: '#bfbfbf',\r\n        backgroundColor: '#f0f0f0',\r\n        textAlign: 'center',\r\n        fontFamily: 'Helvetica-Bold',\r\n        fontSize: 12,\r\n        paddingTop: 5,\r\n        paddingBottom: 5,\r\n    },\r\n    tableCol: {\r\n        width: '25%',\r\n        borderStyle: 'solid',\r\n        borderWidth: 1,\r\n        borderColor: '#bfbfbf',\r\n        textAlign: 'center',\r\n        fontFamily: 'Helvetica',\r\n        fontSize: 10,\r\n        paddingTop: 5,\r\n        paddingBottom: 5,\r\n    },\r\n    tableCellHeader: {\r\n        margin: 'auto',\r\n        marginTop: 5,\r\n        marginBottom: 5,\r\n        flexDirection: 'row',\r\n    },\r\n    total: {\r\n        fontFamily: 'Helvetica-Bold',\r\n        fontSize: 14,\r\n        marginTop: 30,\r\n        textAlign: 'right',\r\n        paddingRight: 50,\r\n    },\r\n\r\n    page: {\r\n        fontFamily: 'Helvetica',\r\n        fontSize: 12,\r\n        padding: 40,\r\n    },\r\n    header: {\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        borderBottom: '1pt solid #000',\r\n        paddingBottom: 10,\r\n        marginBottom: 10,\r\n    },\r\n    logo: {\r\n        width: 50,\r\n        height: 50,\r\n        marginRight: 10,\r\n    },\r\n    title: {\r\n        fontSize: 20,\r\n        marginLeft: 10,\r\n    },\r\n    company: {\r\n        fontSize: 14,\r\n        marginTop: 5,\r\n        marginLeft: 10,\r\n    },\r\n});\r\n\r\n// Componente del ticket\r\nexport default function CorteDocument({ totales, logo, company, seller, buyer }) {\r\n    console.log('Received for print ', totales)\r\n    return <PDFViewer height={500} width={550}>\r\n        <Document>\r\n            <Page size=\"A4\" style={styles.page}>\r\n                <View>\r\n                    <View style={styles.header}>\r\n                        <Image style={styles.logo} src={logo} />\r\n                        <View>\r\n                            <Text style={styles.title}>Corte</Text>\r\n                            {/* <Text style={styles.company}>Hospital: </Text> */}\r\n                            <Text style={styles.company}>{new Date().toLocaleString()} </Text>\r\n                        </View>\r\n                    </View>\r\n                    <View style={styles.sellerBuyerInfo}>\r\n                        <View>\r\n                            <Text style={styles.infoTitle}>Ingresos Totales:</Text>\r\n                            <Text style={styles.infoText}>{totales.ingresosTotales}</Text>\r\n                        </View>\r\n                        <View>\r\n                            <Text style={styles.infoTitle}>Sin pagar:</Text>\r\n                            <Text style={styles.infoText}>{totales.totalPendiente}</Text>\r\n                        </View>\r\n                    </View>\r\n                    <View style={styles.table}>\r\n                        <View style={styles.tableRow}>\r\n                            <Text style={styles.tableColHeader}>Cobros</Text>\r\n                            <Text style={styles.tableColHeader}>Pagados</Text>\r\n                            <Text style={styles.tableColHeader}>Precio Unitario</Text>\r\n                            <Text style={styles.tableColHeader}>Pendientes</Text>\r\n                        </View>\r\n                        {/* {totales.map((item) => ( */}\r\n                        <View style={styles.tableRow} key={totales.totalCobros}>\r\n                            <Text style={styles.tableCol}>{totales.totalPagados}</Text>\r\n                            <Text style={styles.tableCol}>1</Text>\r\n                            <Text style={styles.tableCol}>${totales.totalPendientes}</Text>\r\n                            <Text style={styles.tableCol}>\r\n                                Another Text\r\n                            </Text>\r\n                        </View>\r\n                        {/* ))} */}\r\n                    </View>\r\n                    <Text style={styles.total}>\r\n                        Total:\r\n                    </Text>\r\n                </View>\r\n            </Page>\r\n        </Document>\r\n\r\n    </PDFViewer>\r\n}","import { useEffect, useState } from \"react\";\r\nimport { Button, Modal, Typography, Table } from 'antd'\r\nimport * as FileSaver from 'file-saver';\r\nimport XLSX from \"sheetjs-style\";\r\nimport { sendDataBody, getData, usuario, deleteData } from '../../resources'\r\nimport CorteDocument from \"./corteForPrint\";\r\nconst { Text } = Typography;\r\n\r\nexport default function Detalles(props) {\r\n    const [pacientesData, setPacientesData] = useState([])\r\n    const [isPrinting, setIsPrinting] = useState(false)\r\n\r\n    const [totales, setTotales] = useState({})\r\n    const handleOk = () => { props.setIsModalOpen(false) };\r\n\r\n    useEffect(() => { return getPacientesData() }, [])\r\n\r\n    // Here creates the main data\r\n    useEffect(() => {\r\n        sendDataBody(`balances/ingresos/corte`, props.corte).then(rs => {\r\n            console.log(rs)\r\n            let totalIngresos = 0;\r\n            let totalPendiente = 0;\r\n            let totalCobros = rs.length;\r\n            let totalPagados = 0;\r\n            let totalPendientes = 0;\r\n            let listOfDeudors = [];\r\n            rs.forEach(c => {\r\n                if (c && c.estado === 'pagado') {\r\n                    totalIngresos += c.monto;\r\n                    totalPagados++\r\n                } else {\r\n                    totalPendiente += c.monto;\r\n                    totalPendientes++;\r\n                    listOfDeudors.push(c)\r\n                }\r\n            });\r\n            const totales = {\r\n                ingresosTotales: totalIngresos,\r\n                deudasTotales: totalPendiente,\r\n                cobrosTotales: totalCobros,\r\n                pagados: totalPagados,\r\n                pendientes: totalPendientes,\r\n                listOfDeudors: listOfDeudors\r\n            }\r\n            setTotales(totales)\r\n        })\r\n\r\n\r\n    }, [props.corte])\r\n\r\n\r\n\r\n    // Give me the patients to match names\r\n    const getPacientesData = () => { getData(`mispacientes/${usuario._id}`).then((rs) => { setPacientesData(rs); }) }\r\n    const MatchPatient = ({ paciente }) => {\r\n        const patient = pacientesData.find((p) => paciente === p._id)\r\n        return <div>{patient ? patient.name : <Text disabled>Paciente eliminado o no existente</Text>} <p style={{ fontSize: 10 }}>Tomado de la cita</p></div>\r\n    }\r\n    const columns = [\r\n        {\r\n            title: 'Paciente',\r\n            key: 'cita.paciente',\r\n            dataIndex: 'cita',\r\n            render: (_, record) => {\r\n                if (record.cita) return <MatchPatient paciente={record.cita.usuario} />\r\n                else if (record.paciente) return <>{record.paciente.name}</>\r\n                else return <Text type=\"secondary\"> Sin Paciente</Text>\r\n            },\r\n        },\r\n        {\r\n            title: 'Monto',\r\n            dataIndex: 'monto',\r\n            key: 'monto',\r\n            render: (_, { monto }) => <>${monto}</>\r\n        },\r\n        {\r\n            title: 'Fecha y Hora',\r\n            dataIndex: 'createdAt',\r\n            key: 'createdAt',\r\n            render: (_, { createdAt }) => { return <>{new Date(createdAt).toLocaleString()}</> }\r\n        },\r\n\r\n    ];\r\n\r\n\r\n    const filetype = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\r\n    const fileExtextension = '.xlsx';\r\n\r\n    const exportToExcel = async () => {\r\n        const ws = XLSX.utils.json_to_sheet([totales]);\r\n        const wb = { Sheets: { 'data': ws }, SheetNames: ['data'] };\r\n        const excelBuffer = XLSX.write(wb, { bookType: 'xlsx', type: 'array' });\r\n        const data = new Blob([excelBuffer], { type: filetype })\r\n        FileSaver.saveAs(data, 'corte' + new Date().toLocaleDateString() + fileExtextension)\r\n    }\r\n\r\n    return <Modal width={600} title=\"Detalles del corte\" open={props.isModalOpen} onCancel={handleOk} destroyOnClose\r\n        footer={[\r\n            <Button onClick={() => setIsPrinting(!isPrinting)}>{isPrinting ? \"Cancelar Impresion\" : \"Imprimir PDF\"}</Button>,\r\n            <Button onClick={() => exportToExcel()}>Exportar a excel</Button>,\r\n            <Button onClick={handleOk}>Cerrar</Button>\r\n        ]}\r\n    >\r\n        {isPrinting\r\n            ?\r\n            <CorteDocument totales={totales} logo=\"https://api.recreamed.com/images/bd71d914-1f11-4bea-81e5-81b55e11a4e1.jpg\" company='Hospital: ' seller='Médico: ' buyer='Paciente: ' /> :\r\n            <div>\r\n\r\n                <h5>Ingresos </h5>\r\n                <h5>Pagados: {totales.pagados}</h5>\r\n                <h5>Total: <span style={{ color: '#3277a8' }}>${totales.ingresosTotales}</span></h5>\r\n                <br />\r\n                <h5>Pendientes</h5>\r\n                <h5>Total: <span style={{ color: '#eb3d43' }}>${totales.deudasTotales}</span></h5>\r\n\r\n                {\r\n                    totales.listOfDeudors && totales.listOfDeudors.length > 0 && <Table dataSource={totales.listOfDeudors} columns={columns} bordered={false} size='small' />\r\n                }\r\n\r\n            </div>\r\n        }\r\n\r\n    </ Modal>\r\n}\r\n","import { useEffect, useState } from 'react'\r\nimport { Button, Table, Space, Popconfirm } from 'antd'\r\nimport { getData, sendDataBody, usuario } from '../../resources'\r\nimport Loading from '../../loading'\r\nimport Detalles from './details.corte'\r\n\r\nexport default function Cortes() {\r\n\r\n    const [balance, setBalance] = useState({})\r\n    const [cortesData, setCortesData] = useState([])\r\n    const [loading, setLoading] = useState(true)\r\n    // For details modal\r\n    const [corteForDetails, setCorteForDetails] = useState({})\r\n    const [isModalOpen, setIsModalOpen] = useState(false)\r\n    const showModal = (corte) => { setCorteForDetails(corte); setIsModalOpen(true) };\r\n\r\n\r\n    useEffect(() => {\r\n        return getCortesData()\r\n    }, [])\r\n\r\n    const getCortesData = () => {\r\n        getData(`cortes/${usuario._id}`).then((rs) => {\r\n            setCortesData(rs.reverse())\r\n        }).finally(() => setLoading(false))\r\n    }\r\n\r\n    const createCorte = () => {\r\n        const newCorte = {\r\n            medico: usuario._id,\r\n            fecha_inicio: cortesData.length === 0 ? new Date() : cortesData.at(0).fecha_cierre,\r\n            fecha_cierre: new Date(),\r\n            comentario: ''\r\n        }\r\n        console.log('ready to send ', newCorte)\r\n        sendDataBody('cortes/add', newCorte).then((rs) => {\r\n            console.log(rs);\r\n            getCortesData()\r\n        })\r\n    }\r\n\r\n\r\n    const columns = [\r\n        {\r\n            title: 'fecha y hora de Inicio',\r\n            dataIndex: 'fecha_inicio',\r\n            key: 'fecha_inicio',\r\n            render: (_, { fecha_inicio }) => <> {new Date(fecha_inicio).toLocaleString()}</>\r\n        },\r\n        {\r\n            title: 'Fecha y hora de Cierre',\r\n            dataIndex: 'fecha_cierre',\r\n            key: 'fecha_cierre',\r\n            render: (_, { fecha_cierre }) => <> {new Date(fecha_cierre).toLocaleString()}</>\r\n        },\r\n        {\r\n            title: 'Comentario',\r\n            dataIndex: 'comentario',\r\n            key: 'comentario',\r\n        },\r\n        {\r\n            title: 'Acciones',\r\n            key: 'Acciones',\r\n            render: (_, record) => (\r\n                <Space size=\"middle\">\r\n                    <Button onClick={() => { showModal(record) }}>Ver Detalles</Button>\r\n                    {/* <Button onClick={() => console.log(record)}>Editar</Button> */}\r\n                    {/* <Button onClick={() => deleteData(`cortes/remove/${record._id}`)}>Eliminar</Button> */}\r\n                </Space>)\r\n        }\r\n    ];\r\n\r\n    if (loading) return <Loading />\r\n\r\n    return <div className='mainContainer'>\r\n        <div className='fila'>\r\n            <h4>Cortes</h4>\r\n            <Popconfirm\r\n                placement='bottomRight'\r\n                title=\"Crear Corte\"\r\n                description=\"Seguro que quiere crear un corte de caja hasta la fecha y hora actuales?\"\r\n                onConfirm={createCorte}\r\n                onCancel={() => console.log('Cancel create corte')}\r\n                okText=\"Si\"\r\n                cancelText=\"No\"\r\n            >\r\n                <Button type='primary' style={{ marginLeft: 12 }}>{cortesData.length === 0 ? 'Generar Primer Corte' : 'Generar Corte'}</Button>\r\n            </Popconfirm>\r\n        </div>\r\n        <br />\r\n        <Table columns={columns} dataSource={cortesData} />\r\n\r\n        <Detalles corte={corteForDetails} isModalOpen={isModalOpen} setIsModalOpen={setIsModalOpen} />\r\n    </div>\r\n}","import React from 'react'\r\nimport { Button } from 'antd'\r\nimport { Container, Nav, Navbar } from \"react-bootstrap\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport Citas from './citas/citas'\r\nimport Expedientes from './expedientes/expedientes'\r\nimport Perfil from './perfil/perfil'\r\nimport Home from './home/home'\r\nimport icon from '../assets/Icon.png';\r\nimport { Footer, logout } from '../resources'\r\nimport { usuario } from '../resources'\r\nimport MainPacientes from './pacientes/main.pacientes';\r\nimport Escalas from '../escalas/escalasMenu';\r\nimport Balances from './balances/balances';\r\nimport Cortes from './cortes/main.cortes';\r\n\r\nfunction Navigator() {\r\n  console.log(\"DoctorApp\", usuario.name)\r\n  return <Navbar bg=\"primary\" variant=\"dark\" expand=\"lg\">\r\n    <Container>\r\n      <img\r\n        src={icon}\r\n        width=\"40\"\r\n        height=\"35\"\r\n        className=\"d-inline-block align-top\"\r\n        alt=\"Recreamed logo\"\r\n        style={{ marginRight: 6 }}\r\n      />\r\n      <Navbar.Brand href=\"#home\" style={{ fontFamily: 'Poppins', color: 'White' }}>\r\n        Bienvenido {usuario.name}\r\n      </Navbar.Brand>\r\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n      <Navbar.Collapse id=\"basic-navbar-nav\">\r\n        <Nav className=\"me-auto\">\r\n          {/* <Nav.Link href=\"/\">Inicio</Nav.Link> */}\r\n          {/* <Nav.Link href=\"/pacientesdash\">PacientesDash</Nav.Link> */}\r\n          <Nav.Link href=\"/pacientes\" >Pacientes</Nav.Link>\r\n          <Nav.Link href=\"/citas\">Citas</Nav.Link>\r\n          <Nav.Link href=\"/escalas\">Escalas</Nav.Link>\r\n          <Nav.Link href=\"/balances\">Balance</Nav.Link>\r\n          <Nav.Link href=\"/cortes\">Cortes</Nav.Link>\r\n          {/* <Nav.Link href=\"/expedientes\">Expedientes</Nav.Link> */}\r\n          {/* <Nav.Link href=\"/recetas\">Recetas</Nav.Link> */}\r\n          {/* <Nav.Link href=\"/notas\">Notas</Nav.Link> */}\r\n          {/* <Nav.Link href=\"/historial\">Historiales</Nav.Link> */}\r\n          <Nav.Link href=\"/perfil\">Mi Perfil</Nav.Link>\r\n          {/* <Nav.Link href=\"/stripe\">Stripe</Nav.Link> */}\r\n        </Nav>\r\n      </Navbar.Collapse>\r\n\r\n      <Navbar.Brand href=\"#home\" className=\"justify-content-end\">\r\n        <Button ghost onClick={logout} style={{ marginLeft: 10 }}>Cerrar Sesion</Button>\r\n      </Navbar.Brand>\r\n\r\n    </Container>\r\n  </Navbar>\r\n\r\n}\r\n\r\nexport default function DoctorApp() {\r\n\r\n  return (\r\n    <Router>\r\n      <Navigator />\r\n      <Switch>\r\n\r\n        <Route path=\"/pacientes\">\r\n          <MainPacientes />\r\n        </Route>\r\n\r\n        <Route path=\"/citas\">\r\n          <Citas />\r\n        </Route>\r\n\r\n        <Route path=\"/expedientes\">\r\n          <Expedientes />\r\n        </Route>\r\n\r\n        {/* <Route path=\"/Recetas\">\r\n          <Recetas />\r\n        </Route> */}\r\n\r\n        <Route path=\"/perfil\">\r\n          <Perfil />\r\n        </Route>\r\n\r\n        <Route path=\"/balances\">\r\n          <Balances />\r\n        </Route>\r\n\r\n        <Route path=\"/cortes\">\r\n          <Cortes />\r\n        </Route>\r\n\r\n        {/* Teporaty stripe */}\r\n        {/* <Route path=\"/stripe\">\r\n          <Stripe/>\r\n        </Route> */}\r\n\r\n        <Route path=\"/escalas\">\r\n          {/* This is taken from escalas directory*/}\r\n          <Escalas />\r\n        </Route>\r\n\r\n        <Route path=\"/\">\r\n          <MainPacientes />\r\n        </Route>\r\n\r\n      </Switch>\r\n\r\n      <Footer />\r\n    </Router>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Form, Input, Button, message } from 'antd'\r\nimport { InputNumber, Select } from 'antd';\r\nimport { S_API, usuario, estados } from '../../resources'\r\n\r\nconst { Option } = Select;\r\n\r\nexport default function Register() {\r\n\r\n  const [form] = Form.useForm();\r\n\r\n  const onFinish = (values) => {\r\n    values.avatar = 'https://';\r\n    values.estatus = '1';\r\n    values.rol = 'Paciente';\r\n    values.password = values.telefono;\r\n    values.universidad = '';\r\n    values.certificacion = '';\r\n    values.cedula = '';\r\n    values.horarios = [];\r\n    values.medicos_asignados = [usuario._id];\r\n\r\n    delete values.prefix;\r\n\r\n    console.log(values)\r\n    fetch(S_API + 'register', {\r\n      method: 'POST',\r\n      body: JSON.stringify(values),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).then(res => res.json())\r\n      .then(response => { console.log('Success:', response); message.success(response.message || response.error); })\r\n      .catch(error => console.error('Error:', error))\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log('Failed:', errorInfo);\r\n  };\r\n\r\n  const prefixSelector = (\r\n    <Form.Item name=\"prefix\" noStyle>\r\n      <Select\r\n        style={{\r\n          width: 70,\r\n        }}\r\n      >\r\n        <Option value=\"+52\">+52</Option>\r\n      </Select>\r\n    </Form.Item>\r\n  );\r\n  const suffixSelector = (\r\n    <Form.Item name=\"suffix\" noStyle>\r\n      <Select\r\n        style={{\r\n          width: 70,\r\n        }}\r\n      >\r\n        <Option value=\"USD\">$</Option>\r\n        <Option value=\"CNY\">¥</Option>\r\n      </Select>\r\n    </Form.Item>\r\n  );\r\n  return (\r\n    <div>\r\n      <h4>Registrar Paciente</h4>\r\n      <br />\r\n      <Form\r\n        // {...formItemLayout}\r\n        labelCol={{ span: 6 }} wrapperCol={{ span: 16 }}\r\n        form={form}\r\n        name=\"register\"\r\n        onFinish={onFinish}\r\n        initialValues={{\r\n          residence: ['zhejiang', 'hangzhou', 'xihu'],\r\n          prefix: '52',\r\n        }}\r\n        scrollToFirstError\r\n      >\r\n        <Form.Item\r\n          name=\"email\"\r\n          label=\"Correo\"\r\n          rules={[\r\n            {\r\n              type: 'email',\r\n              message: 'The input is not valid E-mail!',\r\n            },\r\n            {\r\n              required: true,\r\n              message: 'Please input your E-mail!',\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        {/* <Form.Item name=\"password\" label=\"Contraseña\" rules={[{ required: true, message: 'Por favor ingrese su contraseña!', },]} hasFeedback >\r\n          <Input.Password />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"confirm\"\r\n          label=\"Confirmar contraseña\"\r\n          dependencies={['password']}\r\n          hasFeedback\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Please confirm your password!',\r\n            },\r\n            ({ getFieldValue }) => ({\r\n              validator(_, value) {\r\n                if (!value || getFieldValue('password') === value) {\r\n                  return Promise.resolve();\r\n                }\r\n                return Promise.reject(new Error('Las contraseñas deben coincidir!'));\r\n              },\r\n            }),\r\n          ]}\r\n        >\r\n          <Input.Password />\r\n        </Form.Item> */}\r\n\r\n        <Form.Item\r\n          name=\"telefono\"\r\n          label=\"Telefono\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Please input your phone number!',\r\n            },\r\n          ]}\r\n        >\r\n          <Input\r\n            addonBefore={prefixSelector}\r\n            style={{\r\n              width: '100%',\r\n            }}\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"name\"\r\n          label=\"Nombre\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Ingresa Nombre y apellidos',\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n\r\n\r\n        <Form.Item\r\n          name=\"calle\"\r\n          label=\"Calle\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Ingresa calle',\r\n              whitespace: true,\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"numexterior\"\r\n          label=\"Num Exterior\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Ingresa numero exterior',\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"numinterior\"\r\n          label=\"Num Interior\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Ingresa numinterior',\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"Colonia\"\r\n          name=\"colonia\"\r\n          rules={[{ required: true, message: 'Please input your colobnia!' }]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item name=\"estado\" label=\"Estado\" rules={[{ required: true, message: 'Apellido materno', },]}>\r\n          <Select placeholder=\"Elije tu estado\" showSearch>\r\n            {estados.map(e => <Option value={e}>{e}</Option>)}\r\n          </Select>\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"municipio\"\r\n          label=\"Municipio\"\r\n          rules={[{ required: true, message: 'Ingresa tu municipio' }]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item name=\"codigopostal\" label=\"Codigo Postal\" rules={[{ required: true, message: 'Ingresa codigopostal', },]}>\r\n          <InputNumber addonAfter={suffixSelector} style={{ width: '100%', }} />\r\n        </Form.Item>\r\n        {/* <Form.Item\r\n          name=\"certificacion\"\r\n          label=\"Certificacion\"\r\n          rules={[{ required: true, message: 'Ingresa tu certificacion' }]}\r\n        >\r\n          <Input />\r\n        </Form.Item> */}\r\n        {/* <Form.Item\r\n          name=\"universidad\"\r\n          label=\"Universidad\" rules={[{ required: true, message: 'Ingresa tu universidad' }]} >\r\n          <Input />\r\n        </Form.Item> */}\r\n\r\n        <Form.Item >\r\n          <Button type=\"primary\" htmlType=\"submit\">\r\n            Registrar\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </div>\r\n  )\r\n}\r\n","import React, { Component, useState, useEffect } from 'react'\r\nimport { Table } from 'antd'\r\nimport { API } from '../../resources'\r\nimport Loading from '../../loading'\r\nimport { usuario } from '../../resources'\r\n\r\n\r\nexport default function Dash() {\r\n\r\n  const [pacientesData, setPacientesData] = useState([])\r\n  const [isLoading, setIsLoading] = useState(true)\r\n  const [view, setview] = useState('tabla')\r\n  const views = {\r\n    'tabla': 'tabla'\r\n  }\r\n\r\n  useEffect(() => {\r\n    getPacientesData()\r\n  }, [])\r\n\r\n  const getPacientesData = () => {\r\n    fetch(API + `mispacientes/${usuario._id}`)\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        console.log(data); setPacientesData(data);\r\n      })\r\n      .finally(() => setIsLoading(false))\r\n  }\r\n\r\n  const columns = [\r\n    {\r\n      title: 'Nombre',\r\n      dataIndex: 'name',\r\n      key: 'name',\r\n      render: (text)=><a href=\"detalles\">{text}</a>\r\n    },\r\n    // {\r\n    //   title: 'Edad',\r\n    //   dataIndex: 'age',\r\n    //   key: 'age',\r\n    // },\r\n    {\r\n      title: 'Medico',\r\n      dataIndex: 'id_medicoasignado',\r\n      key: 'id_medicoasignado',\r\n    },\r\n    {\r\n      title: 'Municipio',\r\n      dataIndex: 'municipio',\r\n      key: 'municipio',\r\n    },\r\n    {\r\n      title: 'Calle',\r\n      dataIndex: 'calle',\r\n      key: 'calle',\r\n    },\r\n    {\r\n      title: 'N Exterior',\r\n      dataIndex: 'numexterior',\r\n      key: 'numexterior',\r\n    },\r\n    {\r\n      title: 'Telefono',\r\n      dataIndex: 'telefono',\r\n      key: 'telefono',\r\n    },\r\n\r\n  ];\r\n\r\n  const tablaPacientes = () => {\r\n\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h4>Pacientes</h4>\r\n      {\r\n        isLoading ? <Loading /> :\r\n          <Table dataSource={pacientesData} columns={columns} />\r\n      }\r\n      \r\n    </div>\r\n  )\r\n\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Button, Form, Input, Select, message } from 'antd';\r\nimport { API } from '../../resources';\r\nimport { usuario } from '../../resources';\r\nconst { Option } = Select;\r\n\r\n\r\nexport default function MovePatients() {\r\n    const [pacientesData, setPacientesData] = useState([]);\r\n    const [medicosData, setMedicosData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        getPacientesData()\r\n        getMedicosData()\r\n    }, [])\r\n\r\n    const getPacientesData = () => {\r\n        fetch(API + `mispacientes/${usuario._id}`)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log(\"Pacientes: \", data);\r\n                setPacientesData(data);\r\n                // setILoading(false);\r\n            });\r\n    }\r\n\r\n    const getMedicosData = () => {\r\n        fetch(API + `users_by_rol/Medico`)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log(data);\r\n                setMedicosData(data);\r\n                // setILoading(false);\r\n            });\r\n    }\r\n\r\n    const onFinish = (values) => {\r\n        // console.log('Valores:', values);\r\n        const userFound = pacientesData.find(p => p._id === values.id_usuario);\r\n        let userMedicos = userFound.medicos_asignados;\r\n        userMedicos.push(values.medico);\r\n        const postBody = { medicos_asignados: userMedicos }\r\n        fetch(API + `users/updateMedicos/${values.id_usuario}`, { \r\n            method: 'PUT',\r\n            body: JSON.stringify(postBody),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }).then(res => res.json())\r\n            .then(response => { console.log('Success:', response); message.success(response.message || response.error); })\r\n            .catch(error => console.error('Error:', error))\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n\r\n\r\n    //Select paciente widget\r\n    function onChange(value) {\r\n        console.log(`selected ${value}`);\r\n    }\r\n    function onSearch(val) {\r\n        console.log('search:', val);\r\n    }\r\n    //End of select paciente widget\r\n    return (\r\n        <div>\r\n            <h4> Asignar pacientes a otro médico </h4>\r\n            <br />\r\n            <Form name=\"expediente\" labelCol={{ span: 8 }} wrapperCol={{ span: 12 }} onFinish={onFinish} onFinishFailed={onFinishFailed} autoComplete=\"off\" >\r\n\r\n                <Form.Item label=\"Paciente\" name=\"id_usuario\" rules={[{ required: true, message: 'Selecciona Usuario' }]} >\r\n                    <Select\r\n                        showSearch\r\n                        placeholder=\"Select a person\"\r\n                        optionFilterProp=\"children\"\r\n                        onChange={onChange}\r\n                        onSearch={onSearch}\r\n                    >\r\n                        {\r\n                            pacientesData.map(p => <Option value={p._id}>{p.name}</Option>)\r\n                        }\r\n                    </Select>\r\n                </Form.Item>\r\n                <Form.Item label=\"Medico\" name=\"medico\" rules={[{ required: true, message: 'Ingresa RFC' }]} >\r\n                    <Select\r\n                        showSearch\r\n                        placeholder=\"Select a person\"\r\n                        optionFilterProp=\"children\"\r\n                        onChange={onChange}\r\n                        onSearch={onSearch}\r\n                    >\r\n                        {\r\n                            medicosData.map(p => <Option value={p._id}>{p.name}</Option>)\r\n                        }\r\n                    </Select>\r\n                </Form.Item>\r\n\r\n                <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\r\n                    <Button type=\"primary\" htmlType=\"submit\" form='expediente'>\r\n                        Guardar\r\n                    </Button>\r\n                </Form.Item>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function DetallesPaciente() {\r\n  return (\r\n    <div>DetallesPaciente</div>\r\n  )\r\n}\r\n","import { React, Component } from 'react';\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\nimport { Layout, Menu } from 'antd';\r\nimport { UserOutlined, UserAddOutlined, MenuOutlined, SwapOutlined } from '@ant-design/icons';\r\n\r\nimport Register from './register.patient';\r\nimport Dash from './dash.patients';\r\nimport MovePatients from './move.patients';\r\nimport DetallesPaciente from './detalles.paciente';\r\n\r\nconst { Header, Content, Footer, Sider } = Layout;\r\n\r\nclass SideMenu extends Component {\r\n  handleClick = e => {\r\n    console.log('click ', e);\r\n  };\r\n\r\n  state = {\r\n    collapsed: false,\r\n  };\r\n\r\n  onCollapse = (collapsed) => {\r\n    this.setState({ collapsed });\r\n  }\r\n  toggle = () => {\r\n    this.setState({\r\n      collapsed: !this.state.collapsed,\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <Layout style={{ minHeight: '100vh' }}>\r\n          <Sider\r\n            theme=\"light\"\r\n            collapsible\r\n            collapsed={this.state.collapsed}\r\n            onCollapse={this.onCollapse}>\r\n            <div className=\"logo\" />\r\n            <Menu defaultSelectedKeys={['1']} mode=\"inline\">\r\n              <Menu.Item icon={ <UserOutlined /> } key=\"1\">\r\n                <span>Pacientes</span>\r\n                <Link to=\"/pacientes\" />\r\n              </Menu.Item>\r\n              <Menu.Item icon={ <UserAddOutlined /> } key=\"2\">\r\n                <span>Registrar Paciente</span>\r\n                <Link to=\"/registrar\" />\r\n              </Menu.Item>\r\n              <Menu.Item icon={ <SwapOutlined />} key=\"3\">\r\n                <span>Re-asignar Paciente</span>\r\n                <Link to=\"/mover\" />\r\n              </Menu.Item>\r\n              <Menu.Item icon={ <SwapOutlined />} key=\"4\">\r\n                <span>Detalles</span>\r\n                <Link to=\"/detalles\" />\r\n              </Menu.Item>\r\n            </Menu>\r\n          </Sider>\r\n          <Layout>\r\n\r\n            <Header style={{ background: '#fff', padding: 0, paddingLeft: 16 }}>\r\n              <MenuOutlined className=\"trigger\" style={{ cursor: 'pointer' }} onClick={this.toggle} />\r\n            </Header>\r\n\r\n            <Content style={{ margin: '24px 16px', padding: 24, background: '#fff', minHeight: 280 }}>\r\n              <Route exact path=\"/registrar\" component={Register} />\r\n              <Route path=\"/pacientes\" component={Dash} />\r\n              <Route path=\"/detalles\" component={DetallesPaciente} />\r\n              <Route path=\"/mover\" component={MovePatients} />\r\n            </Content>\r\n\r\n            <Footer style={{ textAlign: 'center' }}>\r\n              RECREAMED ©2021 Created by Realidad Creativa\r\n            </Footer>\r\n          </Layout>\r\n\r\n        </Layout>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SideMenu\r\n\r\n\r\n","import React, { Component } from 'react'\r\n// import {Card } from 'antd'\r\nimport SideMenu from './side.patients';\r\n\r\nexport class Patients extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div>\r\n                            <SideMenu />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Patients\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Modal, Form, Select, Input, Button, message, Switch, DatePicker } from 'antd'\r\nimport { sendDataBody, updateData, ids_hospitales } from '../../resources';\r\n\r\nexport function CreateCitaForm(props) {\r\n\r\n    const isCreating = !props.cita || Object.keys(props.cita).length === 0;\r\n\r\n    // const [medicosLoading, setMedicosLoading] = useState(true)\r\n    const [medicos, setMedicos] = useState([])//Set Medicos for select\r\n    // const [medicosData, setMedicosData] = useState([]) // List of all Medicos\r\n    const [servicios, setServicios] = useState([])\r\n\r\n    const [errorMessage, setErrorMessage] = useState(\"\")\r\n    const [enableCreateCita, setEnableCreateCita] = useState(true)\r\n    // Body of cita\r\n    const [isOnline, setIsOnline] = useState(false)\r\n    const [costo, setCosto] = useState(0)\r\n\r\n    const [costoBaseCita, setCostoBaseCita] = useState(0)\r\n    const [usesCostoBase, setUsesCostoBase] = useState(false)\r\n\r\n\r\n    useEffect(() => {\r\n        // getDoctorsData()\r\n        console.log('Received Cita for edit', props.cita)\r\n        if (props.cita && props.cita.usuario) {\r\n            handlePatientChange(props.cita.usuario)\r\n\r\n            handleMedicochange(props.cita.medico)\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (props.cita && props.cita.medico) handleMedicochange(props.cita.medico)\r\n    }, [medicos])\r\n\r\n\r\n\r\n\r\n    // Form Methods\r\n    const onFinish = (values) => {\r\n        const tipo_pago = values.tipo_pago;\r\n        values.sucursal = props.hospital;\r\n        delete values.tratamiento;\r\n        values.servicio = values.servicio.title;\r\n        delete values.tipo_pago;\r\n\r\n        // Handle if its updating or creating cita\r\n        console.log('cita ready', values)\r\n        if (props.cita) {\r\n            updateData(`citas/update/${props.cita._id}`, values).then((response) => {\r\n                // message.success(response.message || response.error);\r\n                props.setIsModalOpen(false);\r\n                props.setEditingCita(false);\r\n            }).finally(() => { props.getCitasData(); })\r\n        } else {\r\n            sendDataBody('citas/add', values).then((response) => {\r\n                message.success(response.message || response.error);\r\n                createBalance(response.id_nueva_cita, values.medico, values.fecha_hora, tipo_pago, values.servicio)\r\n            }).finally(() => { props.getCitasData(); props.setIsModalOpen(false) })\r\n        }\r\n    }\r\n\r\n    const createBalance = (_cita, medico, _fecha_hora, tipo_pago, _concepto) => {\r\n        const balanceBody = {\r\n            tipo: 'ingreso',\r\n            medico: medico,\r\n            cita: _cita,\r\n            monto: costo,\r\n            forma_de_pago: tipo_pago,\r\n            fecha_hora: _fecha_hora,\r\n            estado: 'pendiente',\r\n            concepto: _concepto\r\n        }\r\n        console.log('Balance ready to send: ', balanceBody)\r\n        sendDataBody('balances/add', balanceBody).then((rs) => { message.success(rs.message || rs.error); console.log(rs) })\r\n    }\r\n\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    const handlePatientChange = (value) => {\r\n        const found = props.pacientesData.find((p) => p._id === value);\r\n        if (found) {\r\n            setEnableCreateCita(true)\r\n            let { medicos_asignados } = found\r\n            medicos_asignados.forEach((m) => {\r\n                m.label = m.name; m.value = m._id\r\n            });\r\n\r\n            console.log('Found', found)\r\n            console.log('meds', medicos_asignados)\r\n            setMedicos(medicos_asignados);\r\n\r\n        } else {\r\n            setEnableCreateCita(false)\r\n            setErrorMessage(\"Usuario no encontrado\")\r\n        }\r\n    };\r\n\r\n    const onSearchPatient = (value) => { };\r\n\r\n    const handleMedicochange = (_id) => {\r\n        console.log('selected', _id)\r\n        console.log('all medics handle med chang', medicos)\r\n        // Populate the \"servicio\" select\r\n        if (medicos.length > 0) {\r\n            let found = medicos.find((m) => m._id === _id)\r\n            if (found && found.configuracion.tratamientos_ofrecidos) {\r\n                setErrorMessage(\"\")\r\n                setEnableCreateCita(true)\r\n                if (props.enableCreateCita) props.setEditingCita(false)\r\n                let { configuracion: { tratamientos_ofrecidos } } = found;\r\n                console.log(\"found tr\", tratamientos_ofrecidos)\r\n                tratamientos_ofrecidos.forEach(t => {\r\n                    t.label = `${t.tratamiento} - $${t.costo}`; t.value = t.costo; t.title = t.tratamiento;\r\n                });\r\n                const { configuracion: { costo_cita = 0 } } = found;\r\n                setCostoBaseCita(costo_cita)\r\n                setServicios(tratamientos_ofrecidos)\r\n            }\r\n            else {\r\n                setEnableCreateCita(false);\r\n                setErrorMessage(\"No se puede crear la cita para este médico, no cuenta con servicios\")\r\n                if (props.enableCreateCita) props.enableCreateCita(false)\r\n            }\r\n            //   \r\n\r\n        }\r\n    }\r\n\r\n    const onSwitch = (checked) => {\r\n        setIsOnline(checked)\r\n    };\r\n\r\n    // Handle change for select servicio\r\n    const handleServicioChange = (selected) => {\r\n\r\n        setCosto(selected.value)\r\n        console.log(`selected service`, selected);\r\n    };\r\n\r\n    const onSwitchCosoBase = (checked) => {\r\n        // if(checked)se\r\n        console.log(`switch to ${checked}`);\r\n        setUsesCostoBase(checked)\r\n    };\r\n\r\n    const timeOptions = [\r\n        { label: 'Media Hora', value: 30 },\r\n        { label: 'Una Hora', value: 60 },\r\n        { label: 'Una Hora y Media', value: 90 },\r\n        { label: 'Dos Horas', value: 120 },\r\n        { label: 'Dos Horas Y Media', value: 150 },\r\n        { label: 'Tres Horas', value: 180 },\r\n        { label: 'Cuatro Horas', value: 210 },\r\n        { label: 'Cuatro Horas y Media', value: 240 },\r\n        { label: 'Cinco Horas', value: 270 },\r\n        { label: 'Cinco Horas y Media', value: 300 },\r\n    ]\r\n\r\n    const paymentOptions = [\r\n        { value: 'efectivo', label: 'Efectivo' },\r\n        { value: 'tarjeta', label: 'Tarjeta' },\r\n        { value: 'transferencia', label: 'Transferencia' },\r\n    ]\r\n\r\n    return <Form name=\"nueva_cita_admin\" labelCol={{ span: 8 }} wrapperCol={{ span: 12 }} onFinish={onFinish} onFinishFailed={onFinishFailed} autoComplete=\"off\"\r\n        initialValues={props.cita ? props.cita : { isOnline: false, tratamiento: 'Sin servicio', fecha_hora: props.fecha_hora, duracion: 60 }}>\r\n\r\n        <div>{errorMessage}</div>\r\n\r\n        <Form.Item label=\"Paciente\" name=\"usuario\" rules={[{ required: true, message: 'Selecciona Usuario' }]} >\r\n            <Select options={props.pacientesData} onChange={handlePatientChange} optionFilterProp=\"children\" onSearch={onSearchPatient} showSearch\r\n                filterOption={(input, option) => (option?.label ?? '').toLowerCase().includes(input.toLowerCase())} />\r\n        </Form.Item>\r\n\r\n        <Form.Item label=\"Medico\" name=\"medico\" rules={[{ required: true, message: 'Selecciona Medico' }]} >\r\n            <Select options={medicos} onChange={handleMedicochange} />\r\n        </Form.Item>\r\n\r\n\r\n        <Form.Item label=\"VideoLlamada\" name=\"isOnline\" >\r\n            <Switch onChange={onSwitch} />\r\n        </Form.Item>\r\n\r\n        <Form.Item label=\"Comentarios\" name=\"comentarios\" rules={[{ required: false, message: 'Ingresa Comentarios' }]} >\r\n            <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item label=\"Fecha y Hora\" name=\"fecha_hora\" rules={[{ required: false, message: 'Selecciona Fecha y Hora' }]} >\r\n            <DatePicker showTime format=\"DD/MM/YYYY HH:mm\" use12Hours={true} />\r\n        </Form.Item>\r\n\r\n        <Form.Item label=\"Duracion\" name=\"duracion\" rules={[{ required: true, message: 'Selecciona la duracion de la cita' }]} >\r\n            <Select options={timeOptions} />\r\n        </Form.Item>\r\n\r\n        <Form.Item label=\"Servicio\" name=\"servicio\" rules={[{ required: true, message: 'Selecciona Medico' }]} >\r\n            <Select options={servicios} onChange={handleServicioChange} labelInValue />\r\n        </Form.Item>\r\n\r\n        {\r\n            isCreating && <div>\r\n\r\n                <Form.Item label=\"Tipo de pago\" name=\"tipo_pago\" rules={[{ required: true, message: 'Selecciona tipo de pago' }]} >\r\n                    <Select options={paymentOptions} />\r\n                </Form.Item>\r\n\r\n                <Form.Item label={`costo de la cita $${costoBaseCita}`} >\r\n                    <Switch onChange={onSwitchCosoBase} />\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                    wrapperCol={{\r\n                        offset: 8,\r\n                        span: 16,\r\n                    }}\r\n                >\r\n                    <div className='fila'>\r\n                        <h6>Costo Total: ${usesCostoBase ? (costo + costoBaseCita) : costo} </h6>\r\n                    </div>\r\n                </Form.Item>\r\n\r\n            </div>\r\n        }\r\n\r\n        {\r\n            // Only if updating cita\r\n            props.cita && <div>\r\n\r\n\r\n                <Form.Item\r\n                    wrapperCol={{\r\n                        offset: 8,\r\n                        span: 16,\r\n                    }}\r\n                >\r\n                    <Button type=\"primary\" htmlType=\"submit\" form='nueva_cita_admin' disabled={!enableCreateCita}>\r\n                        Guardar\r\n                    </Button>\r\n                </Form.Item>\r\n            </div>\r\n        }\r\n\r\n    </Form>\r\n}\r\n\r\nexport default function CreateCita(props) {\r\n\r\n    const [enableCreate, setEnableCreate] = useState(true)\r\n    // Handle Modal Visibility\r\n    const handCreateleOk = () => { props.setIsModalOpen(false) }\r\n    const handCreateleCancel = () => { props.setIsModalOpen(false) }\r\n\r\n\r\n    return (\r\n        <Modal title=\"Nueva Cita\" open={props.isOpenModal} onOk={handCreateleOk} onCancel={handCreateleCancel} destroyOnClose\r\n            footer={[\r\n                <Button onClick={handCreateleCancel}>Cancelar</Button>,\r\n                <Button type=\"primary\" htmlType=\"submit\" form='nueva_cita_admin' disabled={!enableCreate}>\r\n                    Guardar\r\n                </Button>\r\n            ]}\r\n        >\r\n            {/* <CreateCitaForm setIsModalOpen={props.setIsModalOpen} hospital={props.hospital} fecha_hora={props.fecha_hora} getCitasData={props.getCitasData} pacientesData={props.pacientesData} setEnableCreateCita={setEnableCreate} /> */}\r\n            <CreateCitaForm {...props} />\r\n\r\n        </Modal>\r\n    )\r\n}\r\n\r\n\r\n    // Create the respective balance for cita\r\n    // const createBalance = (_cita, monto) => {\r\n    //     const balanceBody = {\r\n    //         medico: medico,\r\n    //         cita: _cita,\r\n    //         monto: monto,\r\n    //         forma_de_pago: 'efectivo',\r\n    //         estado: 'pendiente',\r\n    //     }\r\n    //     console.log('Balance ready to send: ', balanceBody)\r\n    //     sendDataBody('balances/add', balanceBody).then((rs) => console.log(rs))\r\n    // }","import React, { useState, useEffect } from 'react';\r\nimport { Modal, Button, Popconfirm } from \"antd\";\r\nimport { deleteData, getData, sendDataBody, ids_hospitales } from '../../resources';\r\nimport { Calendar, dayjsLocalizer } from 'react-big-calendar';\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\n\r\nimport CreateCita, { CreateCitaForm } from './create-cita-for-medic';\r\nimport dayjs from 'dayjs';\r\n\r\nconst localizer = dayjsLocalizer(dayjs)\r\n\r\nexport default function HospitalTab(props) {\r\n    const [citaForEdit, setCitaForEdit] = useState({})\r\n    const [citasData, setCitasData] = useState([])\r\n    const [loading, setLoading] = useState(true)\r\n    const [isModalOpen, setIsModalOpen] = useState(false);\r\n    const showModal = () => { setIsModalOpen(true) }\r\n    const handleOk = () => { setIsModalOpen(false); setEditingCita(false) }\r\n    const handleCancel = () => { setIsModalOpen(false); setEditingCita(false) }\r\n    const [editingCita, setEditingCita] = useState(false)\r\n\r\n    // Tools for createCita Modal\r\n    const [fecha_hora, setFecha_hora] = useState('')\r\n    const [isCreateModalOpen, setIsCreateModalOpen] = useState(false)\r\n    // for pass to create cita model\r\n    const [pacientesData, setPacientesData] = useState([])\r\n    const [medicosData, setMedicosData] = useState([])\r\n\r\n    const findPatientsOfMyMedicos = (pacientesData) => {\r\n        let dl = [];\r\n        // Check on each horario of each medico of medicos asignados of patient to see if share sucursal with my horarios as admin\r\n        pacientesData.forEach(paciente => {\r\n            paciente.medicos_asignados.forEach(med => {\r\n                med.horarios.forEach(h => {\r\n                    if (h.sucursal === props.id_hospital && !dl.includes(paciente)) { paciente.label = paciente.name; paciente.value = paciente._id; dl.push(paciente) }\r\n                })\r\n            });\r\n        });\r\n        return dl;\r\n    }\r\n\r\n    const getPacientesData = () => {\r\n        // First of all, get pacientes data for pass to the create cita component\r\n        getData('users_by_rol/Paciente').then((rs) => {\r\n            setPacientesData(findPatientsOfMyMedicos(rs))\r\n        })\r\n    }\r\n\r\n    useEffect(() => { getPacientesData(); getCitasData() }, [])\r\n\r\n    const getCitasData = () => {\r\n        getData(`citas/sucursal/${props.id_hospital}`).then((rs) => {\r\n            rs.forEach(cita => {\r\n                cita.color = \"green\"\r\n                cita.start = new Date(Date.parse(cita.fecha_hora));\r\n                const endDate = new Date(Date.parse(cita.fecha_hora));\r\n                endDate.setTime(endDate.getTime() + 1 * (cita.duracion ?? 60) * 60 * 1000)\r\n                cita.end = new Date(Date.parse(endDate));\r\n                cita.title = cita.usuario?.name;\r\n                cita.key = cita._id;\r\n            });\r\n            setCitasData(rs)\r\n        }).finally(() => setLoading(false))\r\n    }\r\n\r\n    // Select cita to show details and show confirm button\r\n    const selectEvent = (e) => {\r\n        if (!e.doctor) e.doctor = e.medico; // For details\r\n        if (!e.paciente) e.paciente = e.usuario; // For details\r\n        if (e.medico && e.medico._id) e.medico = e.medico._id;  // For edit\r\n        if (e.usuario && e.usuario._id) e.usuario = e.usuario._id;  // For edit\r\n        e.fecha_hora = dayjs(e.fecha_hora) //For edit\r\n        console.log('Fecha al editar: ', e.fecha_hora)\r\n        setCitaForEdit(e)\r\n        if (citaForEdit) showModal()\r\n    }\r\n\r\n    const handleSlotSelection = ({ start, end, action }) => {\r\n        // setFecha_hora(new Date(start).toISOString())\r\n        setFecha_hora(dayjs(start))\r\n        console.log('Fecha al crear: ', dayjs(start))\r\n        setIsCreateModalOpen(true)\r\n        return { style: { backgroundColor: 'red' } };\r\n    };\r\n    // Delete button\r\n    const confirm = (e) => {\r\n        deleteData(`citas/remove/${citaForEdit._id}`).then((rs) => { getCitasData(); handleCancel() })\r\n        deleteData(`balances/remove/cita/${citaForEdit._id}`)\r\n    };\r\n\r\n\r\n    const eventStyleGetter = (event, start, end, isSelected) => {\r\n\r\n        // var backgroundColor = '#' + event.hexColor;\r\n        var backgroundColor = '##03fc8c';\r\n        var style = {\r\n            backgroundColor: backgroundColor,\r\n            borderRadius: '0px',\r\n            opacity: 0.8,\r\n            color: 'black',\r\n            border: '0px',\r\n            display: 'block'\r\n        };\r\n        return {\r\n            style: style\r\n        };\r\n    }\r\n\r\n    return loading ? <p>Cargando...</p> : <div>\r\n        <br />\r\n        <h6>Citas del hospital {props.hospital}</h6>\r\n        <br />\r\n        <Calendar\r\n            scrollToTime={new Date(Date.now())}\r\n            selectable='true'\r\n            localizer={localizer}\r\n            events={citasData}\r\n            // eventPropGetter={eventStyleGetter}\r\n            startAccessor=\"start\"\r\n            endAccessor=\"end\"\r\n            style={{ height: 500 }}\r\n            messages={{\r\n                next: \"Sig\",\r\n                previous: \"Ant\",\r\n                today: \"Hoy\",\r\n                month: \"Mes\",\r\n                week: \"Semana\",\r\n                day: \"Día\"\r\n            }}\r\n            defaultView=\"week\"\r\n            onDoubleClickEvent={(e) => console.log(e)}\r\n            onSelectEvent={selectEvent}\r\n            onSelecting={(e) => console.log(e)}\r\n            // onSelectSlot={handleSlotSelection}\r\n            onSelectSlot={handleSlotSelection}\r\n        />\r\n\r\n\r\n        <Modal title=\"Detalles Cita\" open={isModalOpen} onOk={handleOk} onCancel={handleCancel} destroyOnClose\r\n            footer={[\r\n                // <Popconfirm\r\n                //     title=\"Eliminar Cita\"\r\n                //     description=\"Seguro que quiere eliminar la cita?\"\r\n                //     onConfirm={confirm}\r\n                //     onCancel={cancel}\r\n                //     okText=\"Si\"\r\n                //     cancelText=\"No\"\r\n                // >\r\n                //     <Button danger>Eliminar</Button>\r\n                // </Popconfirm>\r\n                //,\r\n\r\n                <Button onClick={() => setEditingCita(!editingCita)}>{editingCita ? \"Cancelar\" : \"Modificar\"}</Button>,\r\n                <Button onClick={handleCancel}>Cerrar</Button>\r\n            ]}>\r\n\r\n            {\r\n                editingCita ?\r\n                    <CreateCitaForm cita={citaForEdit} setIsModalOpen={setIsModalOpen} getCitasData={getCitasData} setEditingCita={setEditingCita} hospital={props.id_hospital} pacientesData={pacientesData} />\r\n                    : <div>{citaForEdit && <div>\r\n                        <p><strong>Medico </strong>{citaForEdit.doctor ? citaForEdit.doctor.name : 'Sin medico'}</p>\r\n                        <p><strong>Paciente </strong>{citaForEdit.paciente ? citaForEdit.paciente.name : 'Sin paciente'}</p>\r\n                        <p><strong>Fecha </strong>{new Date(citaForEdit.fecha_hora).toLocaleDateString()}</p>\r\n                        <p><strong>Hora </strong>{new Date(citaForEdit.fecha_hora).toLocaleTimeString()}</p>\r\n                        <p><strong>Servicio </strong>{citaForEdit.servicio}</p>\r\n                        <p><strong>Comentarios </strong>{citaForEdit.comentarios}</p>\r\n                        {/* <Button type='primary' onClick={confirmService}>Confirmar Servicio</Button>, */}\r\n                    </div>\r\n                    }\r\n                    </div>\r\n            }\r\n        </Modal>\r\n\r\n        <CreateCita setIsModalOpen={setIsCreateModalOpen} isOpenModal={isCreateModalOpen} hospital={props.id_hospital} fecha_hora={fecha_hora} getCitasData={getCitasData} pacientesData={pacientesData} setEditingCita={setEditingCita} />\r\n    </div>\r\n}","import React from 'react'\r\nimport { Tabs } from 'antd'\r\nimport { myHospitals } from '../../resources'\r\nimport HospitalTab from './hospital-tab.citas';\r\n\r\nexport default function Citas() {\r\n\r\n    // Create items for TABS\r\n    myHospitals.forEach(h => {\r\n        h.label = h.nombre;\r\n        h.key = h._id;\r\n        h.children = <HospitalTab hospital={h.nombre} id_hospital={h._id} />\r\n    });\r\n\r\n    return (\r\n        <div className='mainContainer'>\r\n            <h4>Citas</h4>\r\n            <Tabs defaultActiveKey=\"1\" items={myHospitals} />\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Form, Input, Button, message, Space, Row, Col, Upload } from 'antd'\r\nimport { MinusCircleOutlined, PlusOutlined, InboxOutlined } from '@ant-design/icons';\r\nimport { InputNumber, Select } from 'antd';\r\nimport { S_API, getData, API } from '../resources'\r\nconst { Option } = Select;\r\nconst { Dragger } = Upload;\r\n\r\n\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    xs: {\r\n      span: 24,\r\n    },\r\n    sm: {\r\n      span: 8,\r\n    },\r\n  },\r\n  wrapperCol: {\r\n    xs: {\r\n      span: 24,\r\n    },\r\n    sm: {\r\n      span: 14,\r\n    },\r\n  },\r\n};\r\nconst tailFormItemLayout = {\r\n  wrapperCol: {\r\n    xs: {\r\n      span: 24,\r\n      offset: 0,\r\n    },\r\n    sm: {\r\n      span: 16,\r\n      offset: 8,\r\n    },\r\n  },\r\n};\r\nexport default function PerfilEdit(props) {\r\n\r\n  const [form] = Form.useForm();\r\n\r\n  const [sucursales, setSucursales] = useState([]);\r\n  const [sucursalesLoading, setSucursalesLoading] = useState(true);\r\n  const [avatar, setAvatar] = useState(props.perfil.avatar)\r\n\r\n  //Start upload props Upload File\r\n  const dragDropProps = {\r\n    name: 'file',\r\n    multiple: false,\r\n    action: API + 'imagenes/upload',\r\n\r\n    onChange(info) {\r\n      const { status } = info.file;\r\n\r\n      if (status !== 'uploading') {\r\n        console.log(info.file, info.fileList);\r\n      }\r\n\r\n      if (status === 'done') {\r\n        message.success(`${info.file.name} file uploaded successfully.`);\r\n        console.log('New Files: ', info.file.response.file)\r\n        setAvatar(info.file.response.file)\r\n      } else if (status === 'error') {\r\n        message.error(`${info.file.name} file upload failed.`);\r\n      }\r\n    },\r\n\r\n    onDrop(e) {\r\n      console.log('Dropped files', e.dataTransfer.files);\r\n    },\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log('received Medic: ', props.perfil);\r\n    getData('sucursales').then((rs) => { setSucursales(rs); setSucursalesLoading(false) })\r\n  }, [])\r\n\r\n\r\n\r\n  const onFinish = (values) => {\r\n    values.avatar = avatar;\r\n    values.estatus = '1';\r\n    values.rol = 'Medico';\r\n    delete values.confirm;\r\n    delete values.prefix;\r\n\r\n    console.log('ready to send', values)\r\n    fetch(S_API + 'register', {\r\n      method: 'POST',\r\n      body: JSON.stringify(values),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).then(res => res.json())\r\n      .then(response => {\r\n        console.log('Success:', response);\r\n        response.message && response.message === 'Usuario creado correctamente' ?\r\n          window.location.href = 'doctores' : message.error(response.error);\r\n      })\r\n      .catch(error => console.error('Error:', error))\r\n  };\r\n\r\n  const onFinishEdit = (values) => {\r\n    values.avatar = avatar;\r\n    // values.estatus = '1';\r\n    // values.rol = 'Medico';\r\n    // delete values.confirm;\r\n    // delete values.prefix;\r\n\r\n    console.log('ready to send', values)\r\n    fetch(API + 'users/updateUser/' + props.perfil._id, {\r\n      method: 'PUt',\r\n      body: JSON.stringify(values),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).then(res => res.json())\r\n      .then(response => {\r\n        console.log('Success:', response);\r\n        response.message && response.message === 'Usuario actualizado correctamente' ?\r\n          props.setEditing(false) : message.error(response.error);\r\n      })\r\n      .catch(error => console.error('Error:', error))\r\n  };\r\n\r\n  const prefixSelector = (\r\n    <Form.Item name=\"prefix\" noStyle>\r\n      <Select\r\n        style={{\r\n          width: 70,\r\n        }}\r\n      >\r\n        <Option value=\"+52\">+52</Option>\r\n      </Select>\r\n    </Form.Item>\r\n  );\r\n  const suffixSelector = (\r\n    <Form.Item name=\"suffix\" noStyle>\r\n      <Select\r\n        style={{\r\n          width: 70,\r\n        }}\r\n      >\r\n        <Option value=\"USD\">$</Option>\r\n        <Option value=\"CNY\">¥</Option>\r\n      </Select>\r\n    </Form.Item>\r\n  );\r\n\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log('Failed:', errorInfo);\r\n  };\r\n  return (\r\n    <div>\r\n      <h4>Editar perfil</h4>\r\n      <br />\r\n      <Dragger {...dragDropProps}>\r\n        <p className=\"ant-upload-drag-icon\">\r\n          <InboxOutlined />\r\n        </p>\r\n        <p className=\"ant-upload-text\">Arrastra la imagen de perfil o click ara buscar</p>\r\n        <p className=\"ant-upload-hint\">\r\n          Selecciona archivos en formato png, jpeg o webp\r\n        </p>\r\n      </Dragger>\r\n      <br />\r\n      <Form\r\n        {...formItemLayout}\r\n        form={form}\r\n        name=\"register\"\r\n        onFinish={onFinishEdit}\r\n        // initialValues={{ horarios: [{ sucursal: '', horario: '' }], prefix: '+52' }}\r\n        initialValues={props.perfil}\r\n        scrollToFirstError\r\n      >\r\n\r\n        <Row>\r\n\r\n          <Col span={11}>\r\n            <Form.Item name=\"name\" label=\"Nombre\" rules={[{ required: true, message: 'Ingresa Nombre y apellidos' }]}>\r\n              <Input />\r\n            </Form.Item>\r\n            <Form.Item name=\"email\" label=\"Correo\" rules={[{ type: 'email', message: 'Ingresa un corrreo electronico valido' }, { required: true, message: 'Please input your E-mail!' }]}>\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            {/* <Form.Item name=\"password\" label=\"Contraseña\" rules={[{ required: true, message: 'Por favor ingrese su contraseña!', },]} hasFeedback >\r\n              <Input.Password />\r\n            </Form.Item>\r\n\r\n            <Form.Item name=\"confirm\" label=\"Confirmar contraseña\" dependencies={['password']} hasFeedback\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: 'Please confirm your password!',\r\n                },\r\n                ({ getFieldValue }) => ({\r\n                  validator(_, value) {\r\n                    if (!value || getFieldValue('password') === value) {\r\n                      return Promise.resolve();\r\n                    }\r\n                    return Promise.reject(new Error('Las contraseñas deben coincidir!'));\r\n                  },\r\n                }),\r\n              ]}\r\n            >\r\n              <Input.Password />\r\n            </Form.Item> */}\r\n\r\n            <Form.Item name=\"telefono\" label=\"Telefono\" rules={[{ required: true, message: 'Ingresa el numero de telefono correcto' },]}>\r\n              <Input addonBefore={prefixSelector} style={{ width: '100%', }} />\r\n            </Form.Item>\r\n\r\n\r\n            <Form.Item label=\"horarios\" rules={[{ required: true, message: 'Ingresa al menos un horario', },]}>\r\n              <Form.List name=\"horarios\" label=\"horarios list\"\r\n              >\r\n                {(fields, { add, remove }) => (\r\n                  <>\r\n                    {fields.map(({ key, name, ...restField }) => (\r\n                      <Space key={key} style={{ display: 'flex', marginBottom: 8 }} align=\"baseline\">\r\n                        <Form.Item\r\n                          {...restField}\r\n                          name={[name, 'sucursal']}\r\n                          rules={[{ required: true, message: 'Elije Sucursal' }]}\r\n                        >\r\n                          <Select placeholder=\"Elije Sucursal\" style={{ width: '120px' }} >\r\n                            {sucursalesLoading ? \"Cargando\" :\r\n                              sucursales.map(s => <Option value={s._id}>{s.nombre}</Option>)\r\n                            }\r\n                          </Select>\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                          {...restField}\r\n                          name={[name, 'horario']}\r\n                          rules={[{ required: true, message: 'Missing last name' }]}\r\n                        >\r\n                          <Input placeholder=\"Horario\" />\r\n                        </Form.Item>\r\n                        <MinusCircleOutlined onClick={() => remove(name)} />\r\n                      </Space>\r\n                    ))}\r\n                    <Form.Item>\r\n                      <Button type=\"dashed\" onClick={() => add()} block icon={<PlusOutlined />}>\r\n                        Agregar Horario\r\n                      </Button>\r\n                    </Form.Item>\r\n                  </>\r\n                )}\r\n              </Form.List>\r\n            </Form.Item>\r\n\r\n\r\n\r\n          </Col>\r\n          <Col span={12}>\r\n            <Form.Item name=\"cedula\" label=\"Cedula\" rules={[{ required: false, message: 'Ingresa cedula' }]}>\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            {/* Not Necesary For Medic. He'll be in hospital direction */}\r\n            {/* <Form.Item name=\"calle\" label=\"Calle\" rules={[{ required: true, message: 'Ingresa calle', whitespace: true }]}>\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item name=\"numexterior\" label=\"Num Exterior\" rules={[{ required: true, message: 'Ingresa numero exterior' }]}>\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item name=\"numinterior\" label=\"Num Interior\" rules={[{ required: true, message: 'Ingresa numinterior' }]}>\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item label=\"Colonia\" name=\"colonia\" rules={[{ required: true, message: 'Please input your colobnia!' }]}            >\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item name=\"estado\" label=\"Estado\" rules={[{ required: true, message: 'Apellido materno', },]}>\r\n              <Select placeholder=\"Elije tu estado\">\r\n                {estados.map(e => <Option value={e}>{e}</Option>)}\r\n              </Select>\r\n            </Form.Item>\r\n\r\n            <Form.Item name=\"municipio\" label=\"Municipio\" rules={[{ required: true, message: 'Ingresa tu municipio' }]} >\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item name=\"codigopostal\" label=\"Codigo Postal\" rules={[{ required: true, message: 'Ingresa codigopostal', },]}>\r\n              <InputNumber addonAfter={suffixSelector} style={{ width: '100%', }} />\r\n            </Form.Item> */}\r\n\r\n            <Form.Item name=\"certificacion\" label=\"Certificacion\" rules={[{ required: false, message: 'Ingresa tu certificacion' }]}>\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item name=\"universidad\" label=\"Universidad\" rules={[{ required: false, message: 'Ingresa tu universidad' }]} >\r\n              <Input />\r\n            </Form.Item>\r\n            <Form.Item {...tailFormItemLayout}>\r\n              <Button type=\"primary\" htmlType=\"submit\">\r\n                Guardar\r\n              </Button>\r\n            </Form.Item>\r\n          </Col>\r\n        </Row>\r\n\r\n\r\n\r\n\r\n\r\n        {/* <Form.Item\r\n          name=\"agreement\"\r\n          valuePropName=\"checked\"\r\n          rules={[\r\n            {\r\n              validator: (_, value) =>\r\n                value ? Promise.resolve() : Promise.reject(new Error('Should accept agreement')),\r\n            },\r\n          ]}\r\n          {...tailFormItemLayout}\r\n        >\r\n          <Checkbox>\r\n            He leído y acepto los <a href=\"https://recreamed.com\">terminos y condiciones</a>\r\n          </Checkbox>\r\n        </Form.Item> */}\r\n\r\n\r\n      </Form>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Row, Col, Space, Button, Divider, Image } from 'antd';\r\nimport { Avatar, Card } from 'antd';\r\nimport { UserOutlined } from '@ant-design/icons';\r\nimport { API, usuario } from '.././resources';\r\nimport Loading from '.././loading';\r\nimport { PlusOutlined, FormOutlined } from '@ant-design/icons';\r\nimport PerfilEdit from './perfilEdit';\r\n\r\nexport default function Perfil() {\r\n\r\n    const [profileData, setProfileData] = useState([]);\r\n    const [profileForEdit, setProfileForEdit] = useState([]);\r\n    const [editing, setEditing] = useState(false)\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [visible, setVisible] = useState(false)\r\n\r\n    useEffect(() => {\r\n        getProfileData()\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        getProfileData()\r\n    }, [editing])\r\n\r\n    const getProfileData = () => {\r\n        fetch(API + 'userByMail/' + usuario.email)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log(data);\r\n                setProfileData(data[0]);\r\n                setIsLoading(false);\r\n            });\r\n    }\r\n\r\n    const editPerfil = async (p) => {\r\n        p.horarios.forEach((h) => { h.sucursal = h.sucursal._id })\r\n        console.log('Horarios before edit profile: ', p.horarios);\r\n        await setProfileForEdit(p)\r\n        setEditing(true);\r\n        console.log('Editar medico: ', p)\r\n    }\r\n\r\n    const DetailsProfile = () => {\r\n        return <Row>\r\n            <Col span={8} offset={4}>\r\n                {\r\n                    // Profile Pic\r\n                    profileData.avatar.length > 9 ?\r\n                        <Image style={{ borderRadius: 12 }} width={256} src={'https://api.recreamed.com/images/' + profileData.avatar} />\r\n                        :\r\n                        <Avatar size={128} icon={<UserOutlined />} className='btnIconCentered' />\r\n                }\r\n                <br /><br /><br />\r\n                <p className='nombre'> {profileData.name} </p>\r\n                <p className='datos'>{profileData.rol} </p>\r\n                <p className='datos'>Correo: {profileData.email} </p>\r\n                <p className='datos'>Telefono: {profileData.telefono} </p>\r\n            </Col>\r\n            {/* <Col span={8}>\r\n                <p>Estado: {profileData.estado}</p>\r\n                <p>Municipio: {profileData.municipio}</p>\r\n                <p>Colonia: {profileData.colonia}</p>\r\n                <p>Calle: {profileData.calle}</p>\r\n                <p>Codigo Postal:{profileData.codigopostal} </p>\r\n            </Col> */}\r\n            <Col span={8}>\r\n                <Card title='Horarios' style={{ borderRadius: 12 }}>\r\n                    {\r\n                        profileData.horarios.map((h) => {\r\n                            return <Card.Grid style={{ width: '100%' }} >\r\n                                <Row align=\"middle\">\r\n                                    <Col span={6} offset={4}><img width={64} src={'https://api.recreamed.com/images/' + h.sucursal.logo} alt=\"Logo\" /></Col>\r\n                                    <Col span={10}>{h.sucursal.nombre} <br /> {h.horario}</Col>\r\n                                </Row>\r\n                            </Card.Grid>\r\n                        })\r\n                    }\r\n                </Card>\r\n                <br />\r\n                <br />\r\n                <br />\r\n            </Col>\r\n        </Row>\r\n    }\r\n\r\n    return (\r\n        <div className='mainContainer'>\r\n\r\n            <Space>\r\n                <h4>Mi Perfil</h4>\r\n                <Button onClick={() => editPerfil(profileData)} type=\"primary\" shape=\"circle\" icon={<FormOutlined />} className='btnIconCentered' />\r\n            </Space> <br /><br />\r\n            {isLoading ? <Loading /> :\r\n                <Card style={{ borderRadius: 16 }}>\r\n                    {\r\n                        editing ?\r\n\r\n                            <>\r\n                                <PerfilEdit perfil={profileData} setEditing={setEditing} />\r\n                                <Button onClick={() => setEditing(false)}>Cancelar</Button>\r\n                            </> :\r\n                            <DetailsProfile />\r\n                    }\r\n                </Card>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Row, Col, Statistic, Card } from 'antd'\r\n// import { Pie, Line } from '@ant-design/charts';\r\nimport './home.css'\r\n\r\nexport class Home extends Component {\r\n\r\n    dataPie = [\r\n        {\r\n            type: 'F01',\r\n            value: 9,\r\n        },\r\n        {\r\n            type: 'F05',\r\n            value: 4,\r\n        },\r\n        {\r\n            type: 'F09',\r\n            value: 7,\r\n        },\r\n        {\r\n            type: 'F13',\r\n            value: 2,\r\n        },\r\n        {\r\n            type: 'F16',\r\n            value: 12,\r\n        },\r\n        {\r\n            type: 'F22',\r\n            value: 3,\r\n        },\r\n    ];\r\n\r\n    configPie = {\r\n        appendPadding: 10,\r\n        data: this.dataPie,\r\n        angleField: 'value',\r\n        colorField: 'type',\r\n        height: 450,\r\n        radius: 0.8,\r\n        label: {\r\n            type: 'inner',\r\n            offset: '-0.5',\r\n            content: '{name} {percentage}',\r\n            style: {\r\n                fill: '#fff',\r\n                fontSize: 14,\r\n                textAlign: 'center',\r\n            },\r\n        },\r\n    };\r\n\r\n    dataLine = [\r\n        { mes: 'Junio', consultas: 24 },\r\n        { mes: 'Julio', consultas: 17 },\r\n        { mes: 'Agosto', consultas: 22 },\r\n        { mes: 'Septiembre', consultas: 15 },\r\n        { mes: 'Octubre', consultas: 18 }\r\n    ];\r\n\r\n    configLine = {\r\n        data: this.dataLine,\r\n        height: 410,\r\n        xField: 'mes',\r\n        yField: 'consultas',\r\n        color: '#01B075',\r\n        point: {\r\n            size: 5,\r\n            shape: 'diamond',\r\n            color: '#01B075'\r\n        },\r\n        label: {\r\n            style: {\r\n                fill: '#aaa',\r\n                fontSize: 16,\r\n                stroke: '#01B075'\r\n            },\r\n        },\r\n    };\r\n    render() {\r\n        return (\r\n            <>\r\n\r\n                <br />\r\n                <div className=\"contenedor\">\r\n                    <Row gutter={30}>\r\n                        <Col xs={24} sm={12} lg={6}>\r\n                            <Card className=\"cardsContenedor\" hoverable bordered={false}>\r\n                                <Statistic title=\"Total Hospitales\" value=\"4\" valueStyle={{ color: 'white' }} style={{ backgroundColor: '#4BA6FE', borderRadius: 12 }} className=\"cardsContenido\" />\r\n                            </Card>\r\n                        </Col>\r\n                        <Col xs={24} sm={12} lg={6}>\r\n                            <Card className=\"cardsContenedor\" hoverable bordered={false}>\r\n                                <Statistic title=\"Total Medicos\" value=\"14\" valueStyle={{ color: 'white' }} style={{ backgroundColor: '#FF838A', borderRadius: 12 }} className=\"cardsContenido\" />\r\n                            </Card>\r\n                        </Col>\r\n\r\n                        <Col xs={24} sm={12} lg={6}>\r\n                            <Card className=\"cardsContenedor\" hoverable bordered={false}>\r\n                                <Statistic title=\"Total Pacientes\" value=\"241\" valueStyle={{ color: 'white' }} style={{ backgroundColor: '#18D0C2', borderRadius: 12 }} className=\"cardsContenido\" />\r\n                            </Card>\r\n                        </Col>\r\n                        <Col xs={24} sm={12} lg={6}>\r\n                            <Card className=\"cardsContenedor\" hoverable bordered={false}>\r\n                                <Statistic title=\"Citas Hoy\" value={47} valueStyle={{ color: 'white' }} style={{ backgroundColor: '#847DFC', borderRadius: 12 }} className=\"cardsContenido\" />\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row gutter={20}>\r\n                        <Col xs={24} md={12} style={{textAlign:'center'}}>\r\n                            <h5 style={{color: '#1F263C'}}>Diagnosticos</h5>\r\n                        </Col>\r\n                        <Col xs={24} md={12} style={{textAlign:'center'}}>\r\n                            <h5>Citas</h5>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row gutter={20}>\r\n                        <Col xs={24} md={12} className=\"graficaCircular\">\r\n                            {/* <Pie {...this.configPie} style={{ backgroundColor: '#1F263C', borderRadius: 12 }} /> */}\r\n                        </Col>\r\n\r\n                        <Col xs={24} md={12}>\r\n                            {/* <Line {...this.configLine} style={{ backgroundColor: '#1F263C', padding: '20px', borderRadius: 12 }} /> */}\r\n                        </Col>\r\n                    </Row>\r\n\r\n                </div>\r\n\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home\r\n","import React from 'react'\r\nimport { Form, Input, Button } from 'antd';\r\nconst { TextArea } = Input;\r\n\r\n\r\nconst onFinish = (values) => {\r\n    console.log('Success:', values);\r\n};\r\n\r\nconst onFinishFailed = (errorInfo) => {\r\n    console.log('Failed:', errorInfo);\r\n};\r\n\r\nexport function Historial() {\r\n    return (\r\n        <div className='mainContainer'>\r\n            <h4>Historial de los pacientes del medico</h4>\r\n            <h4>Historial Clinico</h4>\r\n            <Form name=\"basic\" labelCol={{ span: 6 }} wrapperCol={{ span: 12 }} initialValues={{ remember: true }} onFinish={onFinish} onFinishFailed={onFinishFailed} autoComplete=\"off\" >\r\n\r\n                <Form.Item label=\"Paciente\" name=\"username\" rules={[{ required: true, message: 'Please input your username!' }]} >\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item label=\"comentarios\" name=\"id_paciente\" rules={[{ required: true, message: 'Ingresa RFC' }]} >\r\n                    <TextArea rows={4} />\r\n                </Form.Item>\r\n\r\n                <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\r\n                    <Button type=\"primary\" htmlType=\"submit\">\r\n                        Guardar\r\n                    </Button>\r\n                </Form.Item>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Form, Input, Button, message, Space, Divider, Upload, Switch, DatePicker } from 'antd'\r\nimport { InputNumber, Select, Modal } from 'antd';\r\nimport { S_API, API, getData } from '../../resources'\r\nimport { usuario, estados } from '../../resources'\r\nimport { UploadOutlined, PlusOutlined, MinusCircleOutlined } from '@ant-design/icons'\r\n\r\n\r\nconst { Option } = Select;\r\n\r\nconst id_sucursales = usuario && usuario.horarios.map(function (item) {\r\n  return item['sucursal']['_id'];\r\n})\r\n\r\nexport default function Register(props) {\r\n\r\n  const [form] = Form.useForm();\r\n  const [avatar, setAvatar] = useState(props.paciente ? props.paciente.avatar : 'noimg.jpg')\r\n  const [medicosData, setMedicosData] = useState([])\r\n\r\n  useEffect(() => {\r\n    getData('users_by_rol/Medico').then((rs) => {\r\n      setMedicosData(findMyDoctors(rs))\r\n    })\r\n  }, [])\r\n\r\n  // EScoger solo los medicos que compartan siucursal y darlse formato pára el select\r\n  const findMyDoctors = (arr) => {\r\n    let doctorsFound = [];\r\n    arr.forEach((doctor) => {\r\n      doctor.horarios.forEach(h => {\r\n        if (id_sucursales.includes(h.sucursal._id) && !doctorsFound.includes(doctor)) {\r\n          doctor.label = doctor.name;\r\n          doctor.value = doctor._id;\r\n          doctorsFound.push(doctor)\r\n        }\r\n      })\r\n    })\r\n    return doctorsFound;\r\n  }\r\n\r\n  async function addHistoria() {\r\n    return await fetch(API + 'historias/add', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        historial: \"Historia clinica al \" + new Date()\r\n      })\r\n    }).then(res => res.json())\r\n      .then(response => {\r\n        console.log('Story Created: ', response);\r\n        return response\r\n      })\r\n      .catch(error => console.error('Error:', error))\r\n  }\r\n\r\n  const createPAtientData = async (usr) => {\r\n    const historia = await addHistoria();\r\n    console.log('historia on Register: ', historia);\r\n    const postBody = {\r\n      usuario: usr,\r\n      historia: historia.id_historia,\r\n      notas: [],\r\n      recetas: []\r\n    }\r\n    console.log('postBodyForExpedient: ', postBody);\r\n    await fetch(API + 'expedientes/add', {\r\n      method: 'POST',\r\n      body: JSON.stringify(postBody),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).then(res => res.json())\r\n      .then(response => {\r\n        console.log('Success:', response);\r\n        message.success(response.message || response.error);\r\n        // if (response.message && response.message === 'Expediente creado correctamente') {\r\n        //   props.setAdding(false)\r\n        // }\r\n      })\r\n      .catch(error => console.error('Error:', error))\r\n  }\r\n\r\n  const onFinish = async (values) => {\r\n\r\n    // Register patient\r\n    values.avatar = avatar;\r\n    values.estatus = '1';\r\n    values.rol = 'Paciente';\r\n    values.password = '' + values.telefono;\r\n    values.universidades = [];\r\n    values.certificacion = '';\r\n    values.cedula = '';\r\n    values.horarios = [];\r\n    // values.medicos_asignados = props.paciente ? props.paciente.medicos_asignados : [usuario._id];\r\n    values.responsable = props.paciente ? props.paciente.responsable : { nombre: values.res_name, telefono: values.res_phone }\r\n\r\n    delete values.prefix;\r\n    delete values.res_name;\r\n    delete values.res_phone;\r\n\r\n    const url = props.paciente ? API + 'users/updateUser/' + props.paciente._id : S_API + 'register';\r\n\r\n    console.log(values)\r\n    console.log('url: ', url);\r\n\r\n    await fetch(url, {\r\n      method: props.paciente ? 'PUT' : 'POST',\r\n      body: JSON.stringify(values),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).then(res => res.json())\r\n      .then(response => {\r\n        message.success(response.message || response.error);\r\n        props.paciente ? console.log('Editing, not creating patient') : createPAtientData(response.user_id);\r\n        response.message === 'Usuario creado correctamente' ?\r\n          window.location.reload(false) : console.log(response)\r\n        // props.setAdding(false) : console.log(response);\r\n        response.message === 'Usuario actualizado correctamente' ?\r\n          props.setAdding(false) : console.log(response);\r\n\r\n      })\r\n      .catch(error => console.error('Error:', error))\r\n      .finally(() => { if (props.getPacientesData) props.getPacientesData() })\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log('Failed:', errorInfo);\r\n    errorInfo.errorFields.forEach((p) => {\r\n      message.error('Ingrese el campo ' + p.name)\r\n    })\r\n  };\r\n\r\n\r\n  //Start upload props Upload File\r\n  const dragDropProps = {\r\n    name: 'file',\r\n    multiple: false,\r\n    action: API + 'imagenes/upload',\r\n\r\n    onChange(info) {\r\n      const { status } = info.file;\r\n\r\n      if (status !== 'uploading') {\r\n        console.log(info.file, info.fileList);\r\n      }\r\n\r\n      if (status === 'done') {\r\n        message.success(`${info.file.name} file uploaded successfully.`);\r\n        console.log('New Files: ', info.file.response.file)\r\n        setAvatar(info.file.response.file)\r\n      } else if (status === 'error') {\r\n        message.error(`${info.file.name} file upload failed.`);\r\n      }\r\n    },\r\n\r\n    // onDrop(e) {\r\n    //   console.log('Dropped files', e.dataTransfer.files);\r\n    // },\r\n  };\r\n  return (\r\n    <div className='mainContainer'>\r\n      {\r\n        props.paciente ? <h4>Editar paciente</h4> : <h4>Registrar Paciente</h4>\r\n      }\r\n\r\n      <br />\r\n\r\n\r\n      <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\r\n        <Upload {...dragDropProps}>\r\n          <Button type=\"dashed\" icon={<UploadOutlined style={{ fontSize: 24, color: '#0d6efd' }} />} style={{ width: 400, height: 80 }} block>Selecciona la foto de perfil</Button>\r\n        </Upload>\r\n      </div>\r\n      <br />\r\n      <Form\r\n        // {...formItemLayout}\r\n        labelCol={{ span: 6 }} wrapperCol={{ span: 16 }}\r\n        form={form}\r\n        name=\"register\"\r\n        onFinish={onFinish}\r\n        onFinishFailed={onFinishFailed}\r\n        initialValues={props.paciente}\r\n        scrollToFirstError\r\n      >\r\n\r\n        <Form.Item\r\n          name=\"name\"\r\n          label=\"Nombre\"\r\n          rules={[{ required: true, message: 'Ingresa Nombre y apellidos' }]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"email\"\r\n          label=\"Correo\"\r\n          rules={[{ type: 'email', message: 'Ingresa un correo electronico vaido!' }, { required: true, message: 'Ingresa un correo electronico' }]}>\r\n          <Input />\r\n        </Form.Item>\r\n\r\n\r\n        <Form.Item\r\n          name=\"telefono\"\r\n          label=\"Telefono\"\r\n          rules={[{ required: true, message: 'Ingresa tu numero de telefono' }]}\r\n        >\r\n          <InputNumber\r\n            // addonBefore={prefixSelector}\r\n            style={{ width: '100%' }}\r\n          />\r\n        </Form.Item>\r\n\r\n        {/* Start Adding Medicos ASignados */}\r\n        <Form.Item name=\"medicos_asignados\" label=\"Medicos Asignados\" rules={[{ required: true, message: 'Agrega al mennos un medico' }]} >\r\n          <Form.List name=\"medicos_asignados\" >\r\n            {(fields, { add, remove }, { errors }) => (\r\n              <>\r\n                {fields.map((field, index) => (\r\n                  <Form.Item label='' required={false} key={field.key}>\r\n                    <Form.Item {...field} noStyle\r\n                      validateTrigger={['onChange', 'onBlur']}\r\n                      rules={[{ required: true, whitespace: true, message: \"Selecciona un Medico o elimina este campo\" }]}\r\n                    >\r\n                      <Select options={medicosData} placeholder=\"Selecciona Medico\" style={{ width: fields.length > 1 ? '90%' : '100%' }} />\r\n                    </Form.Item>\r\n                    {fields.length > 1 ? (\r\n                      <MinusCircleOutlined\r\n                        className=\"dynamic-delete-button\"\r\n                        onClick={() => remove(field.name)}\r\n                      />\r\n                    ) : null}\r\n                  </Form.Item>\r\n                ))}\r\n                <Form.Item>\r\n                  <Button type=\"dashed\" onClick={() => add()} icon={<PlusOutlined />}>\r\n                    Agregar Medico\r\n                  </Button>\r\n\r\n                  <Form.ErrorList errors={errors} />\r\n                </Form.Item>\r\n              </>\r\n            )}\r\n          </Form.List>\r\n        </Form.Item>\r\n        {/* End of Adding Medicos ASignados */}\r\n\r\n        <Divider>Responsable (opcional) </Divider>\r\n        <Form.Item name=\"res_name\" label=\"Nombre Responsable\" >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item name=\"res_phone\" label=\"Telefono Responsable\">\r\n          <Input />\r\n        </Form.Item>\r\n        <Divider />\r\n\r\n        <Form.Item\r\n          name=\"calle\"\r\n          label=\"Calle\"\r\n          rules={[{ required: false, message: 'Ingresa calle', whitespace: true }]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"numexterior\"\r\n          label=\"Num Exterior\"\r\n          rules={[{ required: false, message: 'Ingresa numero exterior' }]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"numinterior\"\r\n          label=\"Num Interior\"\r\n          rules={[{ required: false, message: 'Ingresa numinterior' }]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"Colonia\"\r\n          name=\"colonia\"\r\n          rules={[{ required: false, message: 'Ingresa ' }]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"estado\"\r\n          label=\"Estado\"\r\n          rules={[{ required: false, message: 'Apellido materno', },]}>\r\n          <Select placeholder=\"Elije tu estado\" showSearch>\r\n            {estados.map(e => <Option value={e}>{e}</Option>)}\r\n          </Select>\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"municipio\"\r\n          label=\"Municipio\"\r\n          rules={[{ required: false, message: 'Ingresa tu municipio' }]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"codigopostal\"\r\n          label=\"Codigo Postal\"\r\n          rules={[{ required: false, message: 'Ingresa codigopostal', },]}>\r\n          <InputNumber style={{ width: '100%', }} />\r\n        </Form.Item>\r\n\r\n        <Form.Item name=\"sexo\" label=\"sexo\" rules={[{ required: false, message: 'Selecciona una opcion' }]}>\r\n          <Select placeholder=\"Elije el sexo\" >\r\n            <Option value=\"H\">H</Option>\r\n            <Option value=\"M\">M</Option>\r\n            <Option value=\"Otro\">Otro</Option>\r\n          </Select>\r\n        </Form.Item>\r\n\r\n        <Form.Item name=\"edad\" label=\"Edad\" rules={[{ required: false, message: 'Ingresa edad' }]} >\r\n          <InputNumber min={1} max={120} />\r\n        </Form.Item>\r\n\r\n        <Form.Item name=\"diagnostico\" label=\"Diagnostico\" rules={[{ required: false, message: 'Ingresa el diagnostico' }]} >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item name=\"peso\" label=\"Peso\" rules={[{ required: false, message: 'Ingresa el peso' }]} >\r\n          <InputNumber min={1} max={200} />\r\n        </Form.Item>\r\n\r\n        <Form.Item name=\"talla\" label=\"Talla\" rules={[{ required: false, message: 'Ingresa la talla' }]} >\r\n          <InputNumber min={1} max={200} />\r\n        </Form.Item>\r\n\r\n        <Form.Item name=\"ocupacion\" label=\"Ocupacion\" rules={[{ required: false, message: 'Ingresa ocupacion' }]} >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item name=\"estado_civil\" label=\"Estado Civil\" rules={[{ required: false, message: 'Ingresa estado civil' }]} >\r\n          <Select placeholder=\"Elije el estado civil\" >\r\n            <Option value=\"Soltero\">Soltero</Option>\r\n            <Option value=\"Casado\">Casado</Option>\r\n            <Option value=\"Divorciado\">Divorciado</Option>\r\n            <Option value=\"Separación en proceso judicial\">Separación en proceso judicial</Option>\r\n            <Option value=\"Viudo\">Viudo</Option>\r\n            <Option value=\"Concubinato\">Concubinato</Option>\r\n          </Select>\r\n        </Form.Item>\r\n\r\n        <Form.Item name=\"escolaridad\" label=\"Escolaridad\" rules={[{ required: false, message: 'Ingresa escolaridad' }]} >\r\n          <Select placeholder=\"Elije escolaridad\" >\r\n            <Option value=\"Ninguno\">Ninguno</Option>\r\n            <Option value=\"Preescolar\">Preescolar</Option>\r\n            <Option value=\"Primaria\">Primaria</Option>\r\n            <Option value=\"Secundaria\">Secundaria</Option>\r\n            <Option value=\"Medio Superior\">Medio Superior</Option>\r\n            <Option value=\"Superior\">Superior</Option>\r\n            <Option value=\"Posgrado\">Posgrado</Option>\r\n          </Select>\r\n        </Form.Item>\r\n\r\n        <Form.Item name=\"lugar_de_nacimiento\" label=\"Lugar De Nacimiento\" rules={[{ required: false, message: 'Ingresa el lugar de nacimiento' }]} >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item name=\"fecha_nacimiento\" label=\"Fecha De Nacimiento\" rules={[{ required: false, message: 'Ingresa la fecha de nacimiento' }]} >\r\n          <DatePicker />\r\n        </Form.Item>\r\n\r\n        <Form.Item name=\"ciudad\" label=\"Ciudad de residencia\" rules={[{ required: false, message: 'Ingresa ciudad' }]} >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item name=\"fuma\" label=\"Fuma\" rules={[{ required: false, message: 'Ingresa tu universidad' }]} >\r\n          <Switch defaultChecked={false} />\r\n        </Form.Item>\r\n\r\n        <Form.Item name=\"alcohol\" label=\"Alcohol\" rules={[{ required: false, message: 'Ingresa tu universidad' }]} >\r\n          <Switch defaultChecked={false} />\r\n        </Form.Item>\r\n\r\n        <Form.Item name=\"drogas\" label=\"Drogas\" rules={[{ required: false, message: 'Selecciona una opcion' }]} >\r\n          <Select placeholder=\"Elije una opcion\" >\r\n            <Option value=\"Antes\">Antes</Option>\r\n            <Option value=\"Ahora\">Ahora</Option>\r\n            <Option value=\"Nunca\">Nunca</Option>\r\n          </Select>\r\n        </Form.Item>\r\n\r\n        <Form.Item name=\"cuales_drogas\" label=\"Cuales Drogas\" rules={[{ required: false, message: 'Selecciona una opcion' }]} >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item name=\"enfermedades_familiares\" label=\"Enfermedades Familiares\" rules={[{ required: false, message: 'Ingresa tu universidad' }]} >\r\n          <Form.List name=\"enfermedades_familiares\" >\r\n            {(fields, { add, remove }, { errors }) => (\r\n              <>\r\n                {fields.map((field, index) => (\r\n                  <Form.Item label='' required={false} key={field.key}>\r\n                    <Form.Item {...field} noStyle\r\n                      validateTrigger={['onChange', 'onBlur']}\r\n                      rules={[{ required: true, whitespace: true, message: \"Ingresa la enfermedad o elimina este campo\" }]}\r\n                    >\r\n                      <Input placeholder=\"Ingresa enfermedad\" style={{ width: fields.length > 1 ? '90%' : '100%' }} />\r\n                    </Form.Item>\r\n                    {fields.length > 1 ? (\r\n                      <MinusCircleOutlined\r\n                        className=\"dynamic-delete-button\"\r\n                        onClick={() => remove(field.name)}\r\n                      />\r\n                    ) : null}\r\n                  </Form.Item>\r\n                ))}\r\n                <Form.Item>\r\n                  <Button type=\"dashed\" onClick={() => add()} icon={<PlusOutlined />}>\r\n                    Agregar Enfermedad Familiar\r\n                  </Button>\r\n\r\n                  <Form.ErrorList errors={errors} />\r\n                </Form.Item>\r\n              </>\r\n            )}\r\n          </Form.List>\r\n        </Form.Item>\r\n\r\n        <Form.Item name=\"enfermedades_medicas\" label=\"Enfermedades Medicas\" rules={[{ required: false, message: 'Ingresa tu universidad' }]} >\r\n          <Form.List name=\"enfermedades_medicas\">\r\n            {(fields, { add, remove }, { errors }) => (\r\n              <>\r\n                {fields.map((field, index) => (\r\n                  <Form.Item label='' required={false} key={field.key}>\r\n                    <Form.Item {...field} noStyle\r\n                      validateTrigger={['onChange', 'onBlur']}\r\n                      rules={[{ required: true, whitespace: true, message: \"Ingresa la enfermedad o elimina este campo\" }]}\r\n                    >\r\n                      <Input placeholder=\"Ingresa enfermedad\" style={{ width: fields.length > 1 ? '90%' : '100%' }} />\r\n                    </Form.Item>\r\n                    {fields.length > 1 ? (\r\n                      <MinusCircleOutlined\r\n                        className=\"dynamic-delete-button\"\r\n                        onClick={() => remove(field.name)}\r\n                      />\r\n                    ) : null}\r\n                  </Form.Item>\r\n                ))}\r\n                <Form.Item>\r\n                  <Button type=\"dashed\" onClick={() => add()} icon={<PlusOutlined />}>\r\n                    Agregar Enfermedad Medica\r\n                  </Button>\r\n\r\n                  <Form.ErrorList errors={errors} />\r\n                </Form.Item>\r\n              </>\r\n            )}\r\n          </Form.List>\r\n        </Form.Item>\r\n\r\n        <Form.Item name=\"tratamiento_actual\" label=\"Tratamiento actual\" rules={[{ required: false, message: 'Ingresa tu universidad' }]} >\r\n          <Form.List name=\"tratamiento_actual\" >\r\n            {(fields, { add, remove }, { errors }) => (\r\n              <>\r\n                {fields.map((field, index) => (\r\n                  <Form.Item\r\n                    // label={`Tratamiento ${index + 1}`} \r\n                    label=''\r\n                    required={false} key={field.key}>\r\n                    <Form.Item {...field} noStyle\r\n                      validateTrigger={['onChange', 'onBlur']}\r\n                      rules={[{ required: true, whitespace: true, message: \"Ingresa la enfermedad o elimina este campo\" }]}\r\n                    >\r\n                      <Input placeholder=\"Ingresa enfermedad\" style={{ width: fields.length > 1 ? '90%' : '100%' }} />\r\n                    </Form.Item>\r\n                    {fields.length > 1 ? (\r\n                      <MinusCircleOutlined\r\n                        className=\"dynamic-delete-button\"\r\n                        onClick={() => remove(field.name)}\r\n                      />\r\n                    ) : null}\r\n                  </Form.Item>\r\n                ))}\r\n                <Form.Item>\r\n                  <Button type=\"dashed\" onClick={() => add()} icon={<PlusOutlined />}>\r\n                    Agregar Tratamiento\r\n                  </Button>\r\n\r\n                  <Form.ErrorList errors={errors} />\r\n                </Form.Item>\r\n              </>\r\n            )}\r\n          </Form.List>\r\n        </Form.Item>\r\n\r\n        <Form.Item labelCol={{ span: 6 }} wrapperCol={{ offset: 6, span: 16 }}>\r\n          <Space>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              {props.paciente ? 'Guardar' : 'Registrar'}\r\n            </Button>\r\n            {\r\n              props.setAdding && <Button onClick={() => props.setAdding(false)}>Cancelar</Button>\r\n            }\r\n          </Space>\r\n\r\n        </Form.Item>\r\n      </Form>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport function RegisterModal({ paciente, setIsModalOpen, isModalOpen, getPacientesData }) {\r\n\r\n  // copyng the medic register patient technique \r\n  const handleOk = () => {\r\n    setIsModalOpen(false);\r\n  };\r\n  const handleCancel = () => {\r\n    setIsModalOpen(false);\r\n  };\r\n\r\n  return <Modal width={800} title={paciente ? 'Editar Paciente' : 'Registrar Paciente'} open={isModalOpen} onOk={handleOk} onCancel={handleCancel} destroyOnClose\r\n    footer={[\r\n      // <Button onClick={() => setIsModalOpen(false)}>Cancelar</Button>,\r\n      // <Button type=\"primary\" htmlType=\"submit\" form='register_patient_medic'>\r\n      //   Guardar\r\n      // </Button>\r\n    ]}\r\n  >\r\n    <Register paciente={paciente} setAdding={setIsModalOpen} getPacientesData={getPacientesData} />\r\n  </Modal>\r\n\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { getData, deleteData, usuario, sendDataBody, } from '../../resources'\r\nimport Loading from '../../loading'\r\nimport { Table, Avatar, Space, Button, Popconfirm, Modal, Card, Input } from 'antd'\r\nimport { UserOutlined, EditOutlined, SearchOutlined } from '@ant-design/icons'\r\nimport Register, { RegisterModal } from './register.user'\r\nimport Expedientes from '../../doctorViews/expedientes/expedientes'\r\n\r\nexport default function HospitalTab(props) {\r\n    const [value, setValue] = useState(''); // For search input\r\n    const [pacientesData, setPacientesData] = useState([])\r\n    const [paciente, setPaciente] = useState({});\r\n    const [isModalVisible, setIsModalVisible] = useState(false);\r\n    const [isEditModalOpen, setIsEditModalOpen] = useState(false) //For Edit patient\r\n    const [loading, setLoading] = useState(true)\r\n    const [editingProfile, setEditingProfile] = useState(false)\r\n    const showModal = () => { setIsModalVisible(true); };\r\n    const handleOk = () => { setIsModalVisible(false); };\r\n    const handleCancel = () => { setIsModalVisible(false); setEditingProfile(false) };\r\n    const [searchText, setSearchText] = useState('');//For search input\r\n\r\n    useEffect(() => {\r\n        getPacientes()\r\n    }, [])\r\n\r\n    const getPacientes = async () => {\r\n\r\n        const meds = await getData(`users/hospital/${props.id_hospital}`)\r\n\r\n        const idmeds = meds.map(doc => {\r\n            return doc._id\r\n        })\r\n\r\n\r\n        sendDataBody('pacientes/medicos', { medicos: idmeds }).then((rs) => {\r\n            setPacientesData(rs)\r\n            setLoading(false)\r\n        })\r\n    }\r\n\r\n\r\n    const deleteUser = (id_paciente) => {\r\n        const newPatients = pacientesData.filter((p) => p._id !== id_paciente)\r\n        deleteData(`users/remove/${id_paciente}`).then((rs) => {\r\n            setPacientesData(newPatients)\r\n        })\r\n    }\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Rol',\r\n            dataIndex: 'rol',\r\n            key: 'rol',\r\n            onFilter: (value, record) => record.rol === \"Medico\",\r\n        },\r\n        {\r\n            title: 'Avatar',\r\n            dataIndex: 'avatar',\r\n            key: 'avatar',\r\n            render: (_, { avatar }) => {\r\n                return avatar.length > 9 ?\r\n                    <img width={48} src={'https://api.recreamed.com/images/' + avatar} alt='ProfilePic' /> :\r\n                    <Avatar size={48} className='btnIconCentered' icon={<UserOutlined />} />\r\n            }\r\n        },\r\n        {\r\n            title: 'Nombre',\r\n            dataIndex: 'name',\r\n            key: 'name',\r\n        },\r\n        {\r\n            title: 'Medicos Asignados',\r\n            dataIndex: 'medicos_asignados',\r\n            key: 'medicos_asignados',\r\n            render: (_, { medicos_asignados }) => <ul>{\r\n                medicos_asignados.map((m) => <li key={m._id}>{m.name}</li>)\r\n            }</ul>\r\n        },\r\n        {\r\n            title: 'Correo',\r\n            dataIndex: 'email',\r\n            key: 'email',\r\n        },\r\n        {\r\n            title: 'Telefono',\r\n            dataIndex: 'telefono',\r\n            key: 'telefono',\r\n        },\r\n        {\r\n            title: 'Acciones',\r\n            key: 'detalles',\r\n            render: (text, record) => (\r\n                <Space size=\"middle\">\r\n                    <Button onClick={() => { setPaciente(record); showModal(); }}>\r\n                        {usuario.rol === 'Enfermero' ? \"Epediente\" : \"Detalles\"}\r\n                    </Button>\r\n                    <Popconfirm\r\n                        title=\"Borrar Paciente\"\r\n                        description=\"Esta seguro que quiere eliminar al paciente?\"\r\n                        onConfirm={() => deleteUser(record._id)}\r\n                        onCancel={(e) => console.log(e)}\r\n                        okText=\"Si\"\r\n                        cancelText=\"No\"\r\n                    >\r\n                        <Button danger>Eliminar</Button>\r\n                    </Popconfirm>\r\n                </Space>\r\n            )\r\n        }\r\n    ];\r\n\r\n    const pacientesDataFiltered = pacientesData.filter((paciente) =>\r\n        paciente.name.toLowerCase().includes(searchText.toLowerCase())\r\n    );\r\n\r\n    // Fill Modal\r\n    const gridStyle = {\r\n        width: '50%',\r\n        height: '50px',\r\n        textAlign: 'center',\r\n        display: 'inline-flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center'\r\n    };\r\n    function DetalleUsuario() {\r\n        const datosSimples = [\r\n            \"rol\",\r\n            \"name\",\r\n            \"email\",\r\n            \"telefono\",\r\n            \"calle\",\r\n            \"municipio\",\r\n            \"estado\",\r\n            \"codigopostal\",\r\n            \"alcohol\",\r\n            \"ciudad\",\r\n            \"colonia\",\r\n            \"cuales_drogas\",\r\n            \"diagnostico\",\r\n            \"drogas\", \"edad\",\r\n            \"escolaridad\",\r\n            \"estado_civil\",\r\n            \"fuma\", \"lugar_de_nacimiento\",\r\n            \"numexterior\",\r\n            \"numinterior\",\r\n            \"ocupacion\",\r\n            \"peso\", \"sexo\",\r\n            \"talla\"\r\n        ]\r\n\r\n        return <div>\r\n            {\r\n                editingProfile ? <Register paciente={paciente} setAdding={setEditingProfile} /> :\r\n                    <Card bordered={false} title={<Space><h4>Detalles del paciente </h4> <Button type='primary' ghost onClick={setEditingProfile} shape=\"circle\" icon={<EditOutlined />} title='Editar' className='btnIconCentered' /></Space>}>\r\n                        {\r\n                            datosSimples.map(k => <><Card.Grid style={gridStyle}>{k}</Card.Grid><Card.Grid style={gridStyle} size='small'>{paciente[k]}</Card.Grid></>)\r\n                        }\r\n                    </Card>\r\n            }\r\n        </div>\r\n    }\r\n\r\n    const handleSearch = e => {\r\n        setValue(e.target.value)\r\n        setSearchText(e.target.value);\r\n    };\r\n\r\n    if (loading) return <Loading />\r\n\r\n    return <div>\r\n        <h6>Pacientes de {props.hospital}</h6>\r\n\r\n        <Input\r\n            style={{ width: '20em' }}\r\n            placeholder=\"Buscar Paciente\"\r\n            value={value}\r\n            onChange={handleSearch}\r\n            addonAfter={<SearchOutlined />}\r\n        />\r\n        <div className='borderedTable'>\r\n            <Table dataSource={pacientesDataFiltered} columns={columns} pagination={false} size='small' />\r\n        </div>\r\n\r\n        <Modal width={1200} open={isModalVisible} onOk={handleOk} onCancel={handleCancel} destroyOnClose>\r\n            {\r\n                usuario.rol === \"Enfermero\" ?\r\n                    <Expedientes paciente={paciente} setIsEditModalOpen={setIsEditModalOpen} /> //points to expedient of medico\r\n                    :\r\n                    <DetalleUsuario />\r\n            }\r\n        </Modal>\r\n\r\n        {/* Modal For Edit */}\r\n        <RegisterModal getPacientesData={getPacientes} isModalOpen={isEditModalOpen} paciente={paciente} setIsModalOpen={setIsEditModalOpen} />\r\n\r\n    </div >\r\n}\r\n","import React from 'react'\r\nimport { myHospitals } from '../../resources'\r\nimport { Tabs } from 'antd'\r\nimport HospitalTab from './dash.patients.hospital-tab'\r\n\r\n\r\nconst onChange = (key) => { console.log(key) }\r\n\r\nexport default function Dash() {\r\n\r\n    // Create items for TABS\r\n    myHospitals.forEach(h => {\r\n        h.label = h.nombre;\r\n        h.key = h._id;\r\n        h.children = <HospitalTab hospital={h.nombre} id_hospital={h._id} />\r\n    });\r\n\r\n    return (\r\n        <div className='mainContainer'>\r\n\r\n            <h4>Pacientes de los diferentes hospitaels</h4>\r\n\r\n            <Tabs defaultActiveKey=\"1\" items={myHospitals} onChange={onChange} />\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Tabs } from 'antd'\r\nimport Register from './register.user';\r\nimport Dash from './dash.patients.main'\r\n\r\nexport default function Users() {\r\n    const items = [\r\n        { label: 'Pacientes', key: 'item-1', children: <Dash /> },\r\n        { label: 'Registrar', key: 'item-2', children: <Register /> },\r\n    ];\r\n    return (\r\n        <div >\r\n            <Tabs items={items} tabPosition='left' />\r\n        </div>\r\n    )\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { Button, Modal, Form, Input, Select, message, DatePicker, InputNumber } from 'antd';\r\nimport { getData, sendDataBody, updateData } from '../../resources';\r\n// ADMIN CREATE INGRESO\r\nexport default function CreateBalance(props) {\r\n\r\n    const isCreating = !props.balanceForEdit;\r\n\r\n    const [pacientesData, setPacientesData] = useState([])\r\n    const [loading, setLoading] = useState(true)\r\n\r\n    const handleOk = () => { props.setIsModalOpen(false) };\r\n    const handleCancel = () => { props.setIsModalOpen(false); props.setBalanceForEdit(null) };\r\n\r\n    useEffect(() => {\r\n        // console.log('receivd for edit nm', props.balanceForEdit)\r\n        // console.log('receivd for edit nm', nombreDoctor)\r\n        if (props.balanceForEdit && props.balanceForEdit.medico) {\r\n            getPacientesData(props.balanceForEdit.medico)\r\n        }\r\n\r\n    }, [props.balanceForEdit])\r\n\r\n\r\n    // Start of filtering patients to show in select\r\n    const getPacientesData = (medico) => {\r\n        // if (props.balanceForEdi) {\r\n        getData(`mispacientes/${medico}`).then((rs) => {\r\n            if (rs) {\r\n                rs.forEach(patient => {\r\n                    patient.value = patient._id; patient.label = patient.name;\r\n                });\r\n                console.log('Pacientes: ', rs)\r\n                setPacientesData(rs)\r\n            }\r\n        }).finally(() => { setLoading(false) })\r\n        // }\r\n    }\r\n    // End of filtering patients to show in select\r\n\r\n    // Form methods\r\n    const onFinish = (values) => {\r\n        // if (Object.keys(props.balanceForEdit).length === 0 || !props.balanceForEdit) {\r\n        //     values.medico = props.medico;\r\n        //     values.tipo = 'ingreso';\r\n        //     values.fecha_hora = new Date();\r\n        // }\r\n\r\n        values.estado = 'pendiente';\r\n        values.tipo = props.tipo;\r\n        console.log('Ready to send:', values);\r\n        console.log('For Edit: ', props.balanceForEdit);\r\n        if (!props.balanceForEdit || Object.keys(props.balanceForEdit).length === 0) {\r\n            sendDataBody(`balances/add`, values).then((rs) => { console.log(rs); message.success(rs.message || rs.error) }).finally(() => { props.getIngresos(); props.setIsModalOpen(false) })\r\n        } else {\r\n            updateData(`/balances/update/${props.balanceForEdit._id}`, values).then((rs) => {\r\n                console.log(rs); props.setBalanceForEdit({}); props.getIngresos(); props.setIsModalOpen(false);\r\n            })\r\n        }\r\n        \r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => { console.log('Failed:', errorInfo) };\r\n\r\n    const handleDoctorChange = (value) => { getPacientesData(value) };\r\n\r\n    // const EditingForm = () => {\r\n    //     const { doctor: { name: nombreDoctor }, monto, forma_de_pago, fecha_hora, concepto } = props.balanceForEdit;\r\n\r\n    // }\r\n\r\n    return (\r\n        <Modal title={props.balanceForEdit ? \"Editar Estado\" : 'Agregar Ingreso'} open={props.isModalOpen} onOk={handleOk} onCancel={handleCancel} destroyOnClose\r\n            footer={[\r\n                <Button type=\"primary\" htmlType=\"submit\" form='edit_balance'>\r\n                    Guardar\r\n                </Button>,\r\n                <Button onClick={handleCancel}>\r\n                    Cancelar\r\n                </Button>\r\n            ]}>\r\n\r\n            <Form\r\n                name=\"edit_balance\"\r\n                labelCol={{ span: 8 }}\r\n                wrapperCol={{ span: 16 }}\r\n                initialValues={props.balanceForEdit}\r\n                onFinish={onFinish}\r\n                onFinishFailed={onFinishFailed}\r\n                autoComplete=\"off\"\r\n            >\r\n                {\r\n                    isCreating ? <div> <Form.Item label=\"Monto\" name=\"monto\" rules={[{ required: true, message: 'Ingresa el monto' }]} >\r\n                        <Input />\r\n                    </Form.Item>\r\n\r\n                        <Form.Item label=\"Concepto\" name=\"concepto\" rules={[{ required: true, message: 'Ingresa el concepto' }]}>\r\n                            <Input />\r\n                        </Form.Item>\r\n\r\n                        <Form.Item label=\"Medico\" name=\"medico\" >\r\n                            <Select options={props.medicosData} onChange={handleDoctorChange} />\r\n                        </Form.Item>\r\n\r\n                        <Form.Item label=\"Paciente\" name=\"paciente\" >\r\n                            <Select options={pacientesData} />\r\n                        </Form.Item>\r\n\r\n\r\n\r\n\r\n                        <Form.Item\r\n                            label=\"Fecha y Hora\"\r\n                            name=\"fecha_hora\"\r\n                            rules={[{ required: true, message: 'Selecciona Fecha y Hora' }]}\r\n                        >\r\n                            <DatePicker showTime format=\"DD-MM-YYYY HH:mm\" />\r\n                        </Form.Item></div> : <div></div>\r\n                }\r\n\r\n                <Form.Item label=\"abono\" name=\"abono\" rules={[{ required: true, message: 'Ingresa el abobo' }]} >\r\n                    <InputNumber style={{ width: '100%' }} />\r\n                </Form.Item>\r\n\r\n                <Form.Item label=\"Forma de Pago\" name=\"forma_de_pago\" >\r\n                    <Select\r\n                        options={[\r\n                            {\r\n                                value: 'efectivo',\r\n                                label: 'Efectivo',\r\n                            },\r\n                            {\r\n                                value: 'tarjeta',\r\n                                label: 'Tarjeta',\r\n                            },\r\n                            {\r\n                                value: 'transferencia',\r\n                                label: 'Transferencia',\r\n                            },\r\n                        ]}\r\n                    />\r\n                </Form.Item>\r\n\r\n\r\n\r\n                {/* <Form.Item\r\n                    label=\"Estado\"\r\n                    name=\"estado\"\r\n                    rules={[{ required: true, message: 'Selecciona el estado' }]}\r\n                >\r\n                    <Select\r\n                        // onChange={handleDoctorChange}\r\n                        options={[\r\n                            {\r\n                                value: 'pendiente',\r\n                                label: 'Pendiente',\r\n                            },\r\n                            {\r\n                                value: 'pagado',\r\n                                label: 'Pagado',\r\n                            },\r\n                            {\r\n                                value: 'pago parcial',\r\n                                label: 'Pago parcial',\r\n                            },\r\n                        ]}\r\n                    />\r\n                </Form.Item> */}\r\n\r\n            </Form>\r\n\r\n        </Modal>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Document, Page, Text, View, StyleSheet, Image } from '@react-pdf/renderer';\r\nimport { PDFViewer } from '@react-pdf/renderer';\r\n\r\n\r\n// Estilo para el ticket\r\nconst styles = StyleSheet.create({\r\n    titleContainer: {\r\n        flexDirection: 'row',\r\n        justifyContent: 'center',\r\n        marginBottom: 10,\r\n    },\r\n    reportTitle: {\r\n        fontSize: 18,\r\n        textAlign: 'center',\r\n        fontFamily: 'Helvetica-Bold',\r\n        textTransform: 'uppercase',\r\n    },\r\n    subtitle: {\r\n        fontSize: 14,\r\n        textAlign: 'center',\r\n        fontFamily: 'Helvetica',\r\n        marginBottom: 20,\r\n    },\r\n    text: {\r\n        margin: 10,\r\n        fontSize: 12,\r\n        textAlign: 'justify',\r\n        fontFamily: 'Helvetica',\r\n    },\r\n    sellerBuyerInfo: {\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-between',\r\n        marginBottom: 10,\r\n    },\r\n    infoTitle: {\r\n        fontFamily: 'Helvetica-Bold',\r\n        fontSize: 12,\r\n    },\r\n    infoText: {\r\n        fontFamily: 'Helvetica',\r\n        fontSize: 12,\r\n    },\r\n    table: {\r\n        display: 'table',\r\n        width: 'auto',\r\n        marginTop: 10,\r\n        borderStyle: 'solid',\r\n        borderWidth: 1,\r\n        borderColor: '#bfbfbf',\r\n    },\r\n    tableRow: {\r\n        margin: 'auto',\r\n        flexDirection: 'row',\r\n    },\r\n    tableColHeader: {\r\n        width: '25%',\r\n        borderStyle: 'solid',\r\n        borderWidth: 1,\r\n        borderColor: '#bfbfbf',\r\n        backgroundColor: '#f0f0f0',\r\n        textAlign: 'center',\r\n        fontFamily: 'Helvetica-Bold',\r\n        fontSize: 12,\r\n        paddingTop: 5,\r\n        paddingBottom: 5,\r\n    },\r\n    tableCol: {\r\n        width: '25%',\r\n        borderStyle: 'solid',\r\n        borderWidth: 1,\r\n        borderColor: '#bfbfbf',\r\n        textAlign: 'center',\r\n        fontFamily: 'Helvetica',\r\n        fontSize: 10,\r\n        paddingTop: 5,\r\n        paddingBottom: 5,\r\n    },\r\n    tableCellHeader: {\r\n        margin: 'auto',\r\n        marginTop: 5,\r\n        marginBottom: 5,\r\n        flexDirection: 'row',\r\n    },\r\n    total: {\r\n        fontFamily: 'Helvetica-Bold',\r\n        fontSize: 14,\r\n        marginTop: 30,\r\n        textAlign: 'right',\r\n        paddingRight: 50,\r\n    },\r\n\r\n    page: {\r\n        fontFamily: 'Helvetica',\r\n        fontSize: 12,\r\n        padding: 40,\r\n    },\r\n    header: {\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        borderBottom: '1pt solid #000',\r\n        paddingBottom: 10,\r\n        marginBottom: 10,\r\n    },\r\n    logo: {\r\n        width: 80,\r\n        height: 'auto',\r\n        marginRight: 10,\r\n\r\n    },\r\n    title: {\r\n        fontSize: 20,\r\n        marginLeft: 10,\r\n    },\r\n    company: {\r\n        fontSize: 14,\r\n        marginTop: 5,\r\n        marginLeft: 10,\r\n    },\r\n});\r\n\r\n// Componente del ticket\r\nexport default function Ticket({ ingreso, logo, hospital, seller, buyer }) {\r\n    console.log('Received for print ', ingreso)\r\n    console.log('Received logo ', logo)\r\n\r\n    const { usuario: { name: userName } = {} } = ingreso\r\n    const { cita: { usuario: { name: citaName } = {} } = {} } = ingreso\r\n\r\n    return <PDFViewer height={500} width={550}>\r\n        <Document>\r\n            <Page size=\"A4\" style={styles.page}>\r\n                <View>\r\n                    <View style={styles.header}>\r\n                        <Image style={styles.logo} src={logo} />\r\n                        <View>\r\n                            <Text style={styles.title}>Nota de Venta</Text>\r\n                            <Text style={styles.company}>{hospital} </Text>\r\n                            <Text style={styles.company}>{new Date(ingreso.createdAt).toLocaleString()} </Text>\r\n                        </View>\r\n                    </View>\r\n                    <View style={styles.sellerBuyerInfo}>\r\n                        <View>\r\n                            <Text style={styles.infoTitle}>Medico:</Text>\r\n                            <Text style={styles.infoText}>{ingreso.doctor.name}</Text>\r\n                        </View>\r\n                        <View>\r\n                            <Text style={styles.infoTitle}>Paciente:</Text>\r\n                            {userName && <Text style={styles.infoText}>{userName}</Text>}\r\n                            {citaName && <Text style={styles.infoText}>{citaName}</Text>}\r\n                        </View>\r\n                    </View>\r\n                    <View style={styles.table}>\r\n                        <View style={styles.tableRow}>\r\n                            <Text style={styles.tableColHeader}>Concepto</Text>\r\n                            <Text style={styles.tableColHeader}>Cantidad</Text>\r\n                            <Text style={styles.tableColHeader}>Precio Unitario</Text>\r\n                            <Text style={styles.tableColHeader}>Subtotal</Text>\r\n                        </View>\r\n                        {/* {ingresos.map((item) => ( */}\r\n                        <View style={styles.tableRow} key={ingreso.id}>\r\n                            <Text style={styles.tableCol}>{ingreso.concepto}</Text>\r\n                            <Text style={styles.tableCol}>1</Text>\r\n                            <Text style={styles.tableCol}>${ingreso.monto.toFixed(2)}</Text>\r\n                            <Text style={styles.tableCol}>\r\n                                {/* ${(item.monto * item.quantity).toFixed(2)} */}\r\n                                ${ingreso.monto.toFixed(2)}\r\n                            </Text>\r\n                        </View>\r\n                        {/* ))} */}\r\n                    </View>\r\n                    <Text style={styles.total}>\r\n                        Total: ${ingreso.monto}\r\n                        {/* Total: ${ingresos.reduce((acc, item) => acc + item.monto * 1, 0).toFixed(2)} */}\r\n                    </Text>\r\n                </View>\r\n            </Page>\r\n        </Document>\r\n\r\n    </PDFViewer>\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { Table, Tag, Button, Typography, Card, Modal, Row, Col } from 'antd';\r\nimport { CheckCircleTwoTone } from '@ant-design/icons'\r\nimport { getData, usuario, sendDataBody, ids_hospitales, deleteData } from '../../resources';\r\nimport CreateBalance from './create-ingreso';\r\nimport Loading from '../../loading';\r\nimport Ticket from './ticket-for-print';\r\nimport moment from 'moment/moment';\r\n\r\nconst { Text } = Typography;\r\n\r\nexport default function Ingresos() {\r\n    const [loading, setLoading] = useState(true)\r\n    const [medicosData, setMedicosData] = useState({}) // Populate the main select component\r\n    const [medico, setMedico] = useState(null)\r\n    const [ingresosData, setIngresosData] = useState([])\r\n    const [ingresoForEdit, setIngresoForEdit] = useState({})\r\n    const [ingresoForPrint, setIngresoForPrint] = useState([])\r\n\r\n    // Select logo for print in receta. Switches the modal view into select logo hospital/pdf recipe for print\r\n    const [logoHospital, setLogoHospital] = useState(null)\r\n    const [nombreHospital, setNombreHospital] = useState(null)\r\n    const [isLogoSelected, setIsLogoSelected] = useState(false)\r\n\r\n    // Modal For Edit Balance\r\n    const [isModalOpen, setIsModalOpen] = useState(false);\r\n    const showModal = () => { setIsModalOpen(true) };\r\n\r\n    // Modal For Ticket\r\n    const [isTicketModalOpen, setIsTicketModalOpen] = useState(false);\r\n    const showTicketModal = () => { setIsTicketModalOpen(true) };\r\n    const handleTicketOk = () => { setIsTicketModalOpen(false); setIsLogoSelected(false) };\r\n    const handleTicketCancel = () => { setIsTicketModalOpen(false); setIsLogoSelected(false) };\r\n\r\n    // Modal For Add/Edit Gasto\r\n    const [isEgresoModalOpen, setIsEgresoModalOpen] = useState(false)\r\n    const showEgresoModal = () => { setIsEgresoModalOpen(true) };\r\n\r\n    useEffect(() => {\r\n        getIngresos()\r\n    }, [])\r\n\r\n    const getIngresos = async () => {\r\n        const medicos = await sendDataBody('users/getMany/hospitals', { ids_hospitales: ids_hospitales })\r\n\r\n        medicos.forEach(m => { m.label = m.name; m.value = m._id; })// to pass to create modal\r\n        setMedicosData(medicos) // to pass to create modal\r\n\r\n        const promises = medicos.map(medico => getData(`balances/medico/${medico._id}`));\r\n\r\n        Promise.all(promises)\r\n            .then(resultados => {\r\n                const ingresos = resultados.flat(); // concatenar todos los arrays de ingresos\r\n                console.log(ingresos);\r\n                // Doctor is for details, medico is for edit. Usuario is for details, paciente id for Edit\r\n                ingresos.forEach((i) => { i.doctor = i.medico; i.medico = i.medico._id; if (i.paciente) { i.usuario = i.paciente; i.paciente = i.paciente._id; } })\r\n                setIngresosData(ingresos.sort((a, b) => a.fecha_hora < b.fecha_hora))\r\n                setLoading(false)\r\n            })\r\n            .catch(error => {\r\n                console.error(error);\r\n            });\r\n    }\r\n\r\n    const handleEditIngreso = (record) => {\r\n        record.fecha_hora = moment.utc(record.fecha_hora)\r\n        setIngresoForEdit(record);\r\n        showModal()\r\n    }\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Médico',\r\n            dataIndex: 'medico',\r\n            key: 'createdAt',\r\n            render: (_, { doctor }) => { return <>{doctor.name}</> }\r\n        },\r\n        {\r\n            title: 'Tipo',\r\n            dataIndex: 'tipo',\r\n            key: 'tipo',\r\n            render: (_, { tipo }) => {\r\n                let color = (tipo && tipo === 'ingreso') ? 'geekblue' : 'volcano';\r\n                return tipo ? <Tag color={color} >{tipo.toUpperCase()}</Tag> : <Tag color={color}>Indefinido</Tag>\r\n            },\r\n        },\r\n        {\r\n            title: 'Fecha',\r\n            dataIndex: 'fecha_hora',\r\n            key: 'fecha_hora',\r\n            render: (_, { fecha_hora }) => { return <>{new Date(fecha_hora).toLocaleString()}</> },\r\n            defaultSortOrder: 'descend',\r\n            sorter: (a, b) => a.fecha_hora > b.fecha_hora,\r\n        },\r\n        {\r\n            title: 'Monto',\r\n            dataIndex: 'monto',\r\n            key: 'monto',\r\n            render: (_, { monto }) => { return <>${monto}</> }\r\n        },\r\n        {\r\n            title: 'Abono',\r\n            dataIndex: 'abono',\r\n            key: 'abono',\r\n            render: (_, { abono }) => { return abono && <>${abono}</> }\r\n\r\n        },\r\n        {\r\n            title: 'Adeudo',\r\n            dataIndex: 'adeudo',\r\n            key: 'adeudo',\r\n            render: (_, record) => { return <>${record.monto - record.abono}</> }\r\n        },\r\n        {\r\n            title: 'Forma de pago',\r\n            key: 'forma_de_pago',\r\n            dataIndex: 'forma_de_pago',\r\n            render: (_, { forma_de_pago }) => {\r\n                let color = forma_de_pago === 'efectivo' ? 'green' : 'geekblue';\r\n                return <Tag color={color} >{forma_de_pago.toUpperCase()}</Tag>\r\n            },\r\n        },\r\n        {\r\n            title: 'Paciente',\r\n            key: 'usuario',\r\n            dataIndex: 'usuario',\r\n            render: (_, record) => {\r\n                // if (record.cita) return <>{record.cita.usuario}</>\r\n                if (record.cita) return <>{record.cita.usuario.name}</> //when populate is ready\r\n                else if (record.usuario) return <>{record.usuario.name}</>\r\n                else return <Text type=\"secondary\"> Sin Paciente</Text>\r\n            }\r\n        },\r\n        {\r\n            title: 'Factura',\r\n            key: 'Factura',\r\n            dataIndex: 'factura',\r\n            render: (_, { factura }) => { return factura && <CheckCircleTwoTone /> }\r\n\r\n        },\r\n        {\r\n            title: 'Estado',\r\n            key: 'Estado',\r\n            dataIndex: 'estado',\r\n            // render: (_, { estado }) => {\r\n            //     let color = estado === 'pagado' ? 'geekblue' : 'green';\r\n            //     if (estado === 'pendiente' || estado === 'sin pagar') color = 'volcano';\r\n            //     return <Tag color={color}> {estado.toUpperCase()} </Tag>\r\n            // }\r\n            render: (_, { abono, monto }) => {\r\n                const pagado = abono === monto;\r\n                let color = pagado ? 'green' : 'volcano';\r\n                return <Tag color={color}> {pagado ? 'PAGADO' : 'PENDIENTE'} </Tag>\r\n            }\r\n\r\n        },\r\n        {\r\n            title: 'Acciones',\r\n            key: 'Editar',\r\n            render: (_, record) => <div style={{ display: 'flex', gap: 2, flexDirection: 'column' }}>\r\n                {/* <Button onClick={() => { deleteData(`balances/remove/${record._id}`).then(()=>getIngresos()) }}>Eliminar</Button> */}\r\n                <Button size='small' onClick={() => handleEditIngreso(record)}>Editar Estado</Button>\r\n                <Button size='small' onClick={() => { setIngresoForPrint(record); showTicketModal() }}>Imprimir Nota</Button>\r\n            </div>\r\n        },\r\n    ];\r\n\r\n    const ingresos = [\r\n        { id: 1, product: 'Ketamina 1', quantity: 1, price: 1200 },\r\n    ];\r\n\r\n    if (loading) return <Loading />\r\n\r\n    return (\r\n        <div className='mainContainer'>\r\n            <h4>Ingresos de todos los medicos</h4>\r\n            <br />\r\n\r\n            <Button onClick={showModal} type='primary' style={{ marginBottom: 22 }} >Agregar Nuevo Ingreso</Button>\r\n            {/* <Button ghost onClick={showEgresoModal} type='primary' style={{ marginBottom: 22, marginLeft: 6 }} >Agregar Nuevo Gasto</Button> */}\r\n\r\n            <Table columns={columns} dataSource={ingresosData}\r\n            // scroll={{ x: 950, y: \"calc(100vh - 220px)\" }}\r\n            />\r\n\r\n            <div style={{ height: 200 }}></div>\r\n\r\n            {/* Ingreso */}\r\n            <CreateBalance tipo='ingreso' balanceForEdit={ingresoForEdit} setBalanceForEdit={setIngresoForEdit} setIsModalOpen={setIsModalOpen} isModalOpen={isModalOpen} getIngresos={getIngresos} medico={medico} medicosData={medicosData} />\r\n\r\n            {/* Gasto */}\r\n            {/* <CreateBalance tipo='egreso' setBalanceForEdit={setIngresoForEdit} setIsModalOpen={setIsEgresoModalOpen} isModalOpen={isEgresoModalOpen} getIngresos={getIngresos} medicosData={medicosData} /> */}\r\n\r\n            {/* Ticket */}\r\n            <Modal title=\"Imprimir Nota de Venta\" open={isTicketModalOpen} onOk={handleTicketOk} onCancel={handleTicketCancel} width={600}>\r\n\r\n                {\r\n                    isLogoSelected ? // Si ya hay logo seleccionado, se pasa a la receta y se muestra en pdf\r\n                        <Ticket ingreso={ingresoForPrint} logo={'https://api.recreamed.com/images/' + logoHospital} hospital={nombreHospital} seller='Médico: ' buyer='Paciente: ' />\r\n                        :\r\n                        <div>\r\n                            <Card title='Selecciona un hospital' bordered={false}>\r\n                                {\r\n                                    usuario.horarios.map((h) => {\r\n                                        return <Card.Grid style={{ width: '100%' }} onClick={() => { console.log(h.sucursal); setLogoHospital(h.sucursal.logo); setNombreHospital(h.sucursal.nombre); setIsLogoSelected(true) }} key={h._id}>\r\n                                            <Row align=\"middle\">\r\n                                                <Col span={6} offset={4}><img width={64} src={'https://api.recreamed.com/images/' + h.sucursal.logo} alt=\"Logo\" /></Col>\r\n                                                <Col span={10}>{h.sucursal.nombre} <br /> {h.horario}</Col>\r\n                                            </Row>\r\n                                        </Card.Grid>\r\n                                    })\r\n                                }\r\n                            </Card>\r\n                        </div>\r\n                }\r\n\r\n            </Modal>\r\n        </div >\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { catalogo_efectos, desrealizacion, despersonalizacion, amnesia } from './ketamina_catalog'\r\nimport { Form, Switch, Button, Radio, Space, Slider, Select, message } from 'antd'\r\nimport { getData, sendDataBody } from '../../resources';\r\nimport logo from \"../../assets/Logo.png\";\r\nconst { Option } = Select;\r\n\r\nexport default function KetaminaEncuesta(props) {\r\n  // For check if the encuesta existts on db\r\n  const [encuestaNotExists, setEncuestaNotExists] = useState(null)\r\n  const [checking, setChecking] = useState(true)\r\n  const [pacienteData, setPacienteData] = useState({})\r\n  const [medicoData, setMedicoData] = useState({})\r\n\r\n  useEffect(() => {\r\n    checkEncuesta()\r\n  }, [])\r\n\r\n  const checkEncuesta = () => {\r\n\r\n    getData('getuser/' + props.idpaciente).then((rs) => { setPacienteData(rs) })\r\n    getData('getuser/' + props.idmedico).then((rs) => { setMedicoData(rs) })\r\n\r\n\r\n    getData(`encuestas/uuid/${props.token}`).then(rs => {\r\n      console.log(rs);\r\n      setEncuestaNotExists(rs.message === 'The survey does not exist')\r\n    }).then(() => { setChecking(false); console.log('Not exists: ', encuestaNotExists); })\r\n  }\r\n\r\n  const onFinish = (values) => {\r\n\r\n    Object.keys(values).forEach((k) => {\r\n      const nk = k.replace(/ /g, \"_\")\r\n      values[nk] = values[k];\r\n      if (k.includes(' ')) delete values[k];\r\n    })\r\n\r\n    const body = {\r\n      usuario: props.idpaciente,\r\n      medico: props.idmedico,\r\n      respuestas_ketamina: values,\r\n      tipo: 'ketamina',\r\n      uuid: props.token\r\n    }\r\n\r\n    console.log('Efectos Form:', values);\r\n    sendDataBody('encuestas/add', body).then((rs) => {\r\n      console.log(rs)\r\n      message.success(rs.message)\r\n    }).then(() => checkEncuesta())\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log('Failed:', errorInfo);\r\n  };\r\n  const marks = { 0: '0', 10: '10' };\r\n\r\n  if (checking) return <div style={{ paddingTop: 180 }}>\r\n    <div style={{ margin: 'auto', width: '40%', textAlign: 'center' }}>\r\n      <h3 >Cargando</h3>\r\n    </div>\r\n  </div>\r\n\r\n  if (!encuestaNotExists) return <div style={{ paddingTop: 180 }}>\r\n    <div style={{ margin: 'auto', width: '40%', textAlign: 'center' }}>\r\n      <h3 >Gracias por contestar la encuesta</h3>\r\n      <img width={256} src={logo} alt=\"recreamedLogo\" style={{ margin: 'auto' }} />\r\n    </div>\r\n  </div>\r\n\r\n  return (\r\n    <div className='mainContainer'>\r\n      <h4>Lista de verificación para Efectos Secundarios de Ketamina</h4>\r\n      <br />\r\n      <h5>Medico: {medicoData.name}</h5>\r\n      <h5>Paciente: {pacienteData.name}</h5>\r\n      <br />\r\n      <Form\r\n        layout='vertical'\r\n        name=\"efectos_form\"\r\n        // labelCol={{ span: 8 }}\r\n        // wrapperCol={{ span: 16 }}\r\n        initialValues={{ ...catalogo_efectos, ketamina: 0, ketaminaiv: 0, ketaminaivb: 0 }}\r\n        onFinish={onFinish}\r\n        onFinishFailed={onFinishFailed}\r\n        autoComplete=\"off\"\r\n      >\r\n\r\n        {\r\n          Object.keys(catalogo_efectos).map((efk, i) => {\r\n            return <Form.Item\r\n              label={efk}\r\n              name={efk}\r\n              rules={[{ required: false, message: 'Selecciona una respuesta' }]}\r\n            >\r\n              <Switch checkedChildren=\"Si\" unCheckedChildren=\"No\" defaultChecked={false} />\r\n            </Form.Item>\r\n          })\r\n        }\r\n        <h4>Escala de 6 elementos simplificada de síntomas disociativos administrada por el médico  (CADSS)</h4>\r\n\r\n        <h5>Desrealizacion</h5>\r\n        {\r\n          Object.keys(desrealizacion).map((pr, index) => {\r\n            return <Form.Item\r\n              label={pr}\r\n              name={'desrealizacion_' + index}\r\n              rules={[{ required: true, message: 'Selecciona una respuesta' }]}\r\n            >\r\n              <Radio.Group>\r\n                <Space direction=\"vertical\">\r\n                  {\r\n                    desrealizacion[pr].map((rs, i) => <Radio value={i}>{rs}</Radio>)\r\n                  }\r\n                </Space>\r\n              </Radio.Group>\r\n            </Form.Item>\r\n          })\r\n        }\r\n\r\n\r\n        <h5>Despersonalizacion</h5>\r\n        {\r\n          Object.keys(despersonalizacion).map((pr, index) => {\r\n            return <Form.Item\r\n              label={pr}\r\n              name={'despersonalizacion_' + index}\r\n              rules={[{ required: true, message: 'Selecciona una respuesta' }]}\r\n            >\r\n              <Radio.Group>\r\n                <Space direction=\"vertical\">\r\n                  {\r\n                    despersonalizacion[pr].map((rs, i) => <Radio value={i}>{rs}</Radio>)\r\n                  }\r\n                </Space>\r\n              </Radio.Group>\r\n            </Form.Item>\r\n          })\r\n        }\r\n\r\n        <h5>Amnesia</h5>\r\n        {\r\n          Object.keys(amnesia).map((pr, i) => {\r\n            return <Form.Item\r\n              label={pr}\r\n              name={'amnesia_' + i}\r\n              rules={[{ required: true, message: 'Selecciona una respuesta' }]}\r\n            >\r\n              <Radio.Group>\r\n                <Space direction=\"vertical\">\r\n                  {\r\n                    amnesia[pr].map((rs, i) => <Radio value={i}>{rs}</Radio>)\r\n                  }\r\n                </Space>\r\n              </Radio.Group>\r\n            </Form.Item>\r\n          })\r\n        }\r\n\r\n        <Form.Item\r\n          label=\"a)\tEn general mi gusto por la ketamina IV es:\"\r\n          name=\"ketamina\"\r\n\r\n        // rules={[{ required: true, message: 'Selecciona una opcion' }]}\r\n        >\r\n          <Slider min={0} max={10} marks={marks} dots defaultValue={0} />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"a.)\tEn general, cuánto anhela, apetece el tratamiento de la ketamina IV para otros efectos además de los efectos antidepresivos? \"\r\n          name=\"ketaminaiv\"\r\n        // rules={[{ required: true, message: 'Selecciona una opcion' }]}\r\n        >\r\n          <Slider min={0} max={10} marks={marks} dots defaultValue='0' />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"b.)\tCuánto desea usar la ketamina IV en cantidades mayores con más frecuencia de lo que su psiquiatra le esta prescribiendo por razones distintas a esperar más efecto antidepresivo?  \"\r\n          name=\"ketaminaivb\"\r\n        // rules={[{ required: true, message: 'Selecciona una opcion' }]}\r\n        >\r\n          <Slider min={0} max={10} marks={marks} dots />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          wrapperCol={{\r\n            offset: 8,\r\n            span: 16,\r\n          }}\r\n        >\r\n          <Button type=\"primary\" htmlType=\"submit\">\r\n            Guardar\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n\r\n    </div>\r\n  )\r\n}\r\n","export const depresion_catalog = [\r\n\r\n\r\n    {\r\n        \"n\": 1,\r\n        \"pregunta\": \"Conciliar el sueño\",\r\n        \"respuestas\": [\r\n            'Nunca tardé más de 30 minutos en dormirme.',\r\n            'Tardé por lo menos 30 minutos en dormirme, menos de la mitad de las veces.',\r\n            'Tardé por lo menos 30 minutos en dormirme, más de la mitad de las veces.',\r\n            'Tardé más de 60 minutos en dormirme, más de la mitad de la veces']\r\n    },\r\n    {\r\n        \"n\": 2,\r\n        \"pregunta\": \"Al dormir durante la noche\",\r\n        \"respuestas\": [\r\n            \"No me desperté durante la noche.\",\r\n            \"Tuve el sueño liviano e intranquilo; me desperté unas cuantas veces todas las noches por corto tiempo.\",\r\n            \"Me desperté al menos una vez cada noche, pero volví a dormirme fácilmente.\",\r\n            \"Me desperté más de una vez cada noche y me quedé despierto/a durante 20 minutos o más, más de la mitad de las veces\"]\r\n    },\r\n    {\r\n        \"n\": 3,\r\n        \"pregunta\": \" Despertarse demasiado temprano\",\r\n        \"respuestas\": [\r\n            'La mayoría de las veces me desperté no más de 30 minutos antes de lo necesario.',\r\n            'Más de la mitad de las veces me desperté más de 30 minutos antes de lo necesario.',\r\n            'Casi siempre me desperté por lo menos una hora antes de lo necesario, pero finalmente me dormí nuevamente',\r\n            'Me desperté por lo menos una hora antes de lo necesario y no pude volver a dormirme']\r\n    },\r\n    {\r\n        \"n\": 4,\r\n        \"pregunta\": \" Dormir demasiado\",\r\n        \"respuestas\": [\r\n            'Dormí no más de 7-8 horas por noche, sin haber dormido la siesta durante el día.',\r\n            'Dormí no más de 10 horas en un período de 24 horas, incluyendo las siestas.',\r\n            'Dormí no más de 12 horas en un período de 24 horas, incluyendo las siestas.',\r\n            'Dormí más de 12 horas en un período de 24 horas, incluyendo las siestas.']\r\n    },\r\n    {\r\n        \"n\": 5,\r\n        \"pregunta\": \"Sensación de tristeza\",\r\n        \"respuestas\": [\r\n            'No me sentí triste.',\r\n            'Me sentí triste menos de la mitad de las veces.',\r\n            'Me sentí triste más de la mitad de las veces.',\r\n            'Me sentí triste casi todo el tiempo.']\r\n    }\r\n]\r\n\r\nexport const disminucion_apetito = [\r\n    'Mi apetito no disminuyó.',\r\n    'Comí con considerable menor frecuencia o menor cantidad de comida de lo habitual.',\r\n    'Comí mucho menos de lo habitual y sólo haciendo un esfuerzo.',\r\n    'Casi no comí dentro de un período de 24 horas, y sólo haciendo un tremendo esfuerzo o cuando los demás me convencieron de comer'\r\n]\r\n\r\nexport const aumento_apetito = [\r\n    'Mi apetito no aumentó.',\r\n    'Sentí la necesidad de comer con más frecuencia de lo habitual.',\r\n    'A menudo comí con más frecuencia y/o más cantidad de comida de lo habitual.',\r\n    'Me sentí impulsado/a a comer de más, tanto en las comidas como entre las comidas.',\r\n]\r\n\r\nexport const perdida_peso = [\r\n    'No he perdido peso.',\r\n    'Siento que tuve una leve pérdida de peso.',\r\n    'He perdido 1 kg o más.',\r\n    'He perdido 2 kg o más.',\r\n]\r\n\r\nexport const aumento_peso = [\r\n    'No he aumentado de peso.',\r\n    'Siento que tuve un leve aumento de peso.',\r\n    'He aumentado 1 kg o más.',\r\n    'He aumentado 2 kg o más.'\r\n]\r\n\r\nexport const depresion_catalog2 = [\r\n    {\r\n        \"n\": 10,\r\n        \"pregunta\": \"Concentración/Toma de decisiones\",\r\n        \"respuestas\": [\r\n            'No hubo cambio en mi capacidad habitual para concentrarme o tomar decisiones.',\r\n            'A veces me sentí indeciso/a o me di cuenta de que me distraía.',\r\n            'La mayor parte del tiempo tuve que esforzarme para mantener la atención o para tomar decisiones.',\r\n            'No me pude concentrar suficientemente bien para leer ni tampoco pude tomar decisiones sin importancia']\r\n    },\r\n    {\r\n        \"n\": 11,\r\n        \"pregunta\": \"Percepción de mí mismo/a\",\r\n        \"respuestas\": [\r\n            'Me consideré que valgo tanto y que tengo los mismos derechos que las demás personas.',\r\n            'Me sentí más culpable de lo habitual.',\r\n            'En gran medida, creí que le causé problemas a otras personas.',\r\n            'Pensé casi constantemente en mis defectos, tanto en los importantes como en los triviales.',]\r\n    },\r\n    {\r\n        \"n\": 12,\r\n        \"pregunta\": \"Pensamientos de muerte o suicidio\",\r\n        \"respuestas\": [\r\n            'No pensé en el suicidio o la muerte.',\r\n            'Sentí que mi vida estaba vacía y me pregunté si valía la pena vivir.',\r\n            'Pensé en el suicidio o la muerte varias veces en la semana durante varios minutos.',\r\n            'Pensé en el suicidio o la muerte varias veces al día con cierto detalle, o hice planes de cómo suicidarme, o realmente intenté quitarme la vida.']\r\n    },\r\n    {\r\n        \"n\": 13,\r\n        \"pregunta\": \"Interés general\",\r\n        \"respuestas\": [\r\n            'No hubo cambio de lo habitual en cuanto a mi interés en otras personas o actividades.',\r\n            'Noté que estaba menos interesado / a en la gente o en las actividades.',\r\n            'Me di cuenta que sólo me interesaban una o dos de las actividades que solía hacer.',\r\n            'No tuve prácticamente ningún interés en las actividades que solía hacer.']\r\n    },\r\n    {\r\n        \"n\": 14,\r\n        \"pregunta\": \"Nivel de energía\",\r\n        \"respuestas\": [\r\n            'No hubo cambio en mi nivel de energía habitual.',\r\n            'Me cansé más fácilmente de lo habitual.',\r\n            'Tuve que hacer un gran esfuerzo para empezar o terminar mis actividades diarias habituales(porejemplo: hacer las compras, estudiar, cocinar o ir a trabajar).',\r\n            'Realmente, no pude realizar la mayoría de mis actividades diarias habituales porque simplementeno tuve energías.']\r\n    },\r\n    {\r\n        \"n\": 15,\r\n        \"pregunta\": \" Sensación de estar más lento/a\",\r\n        \"respuestas\": [\r\n            'Pensé, hablé y me moví a mi nivel de velocidad habitual.',\r\n            'Me di cuenta de que mi pensamiento estaba más lento de lo habitual o que mi voz sonabamonótona y achatada.',\r\n            'Tardé varios segundos para responder la mayoría de las preguntas y estoy seguro / a de que mipensamiento estaba más lento de lo habitual.',\r\n            'Con frecuencia no pude responder preguntas si no era haciendo un extremo esfuerzo.']\r\n    },\r\n    {\r\n        \"n\": 16,\r\n        \"pregunta\": \" Sensación de inquietud\",\r\n        \"respuestas\": [\r\n            'No me sentí inquieto/a.',\r\n            'Con frecuencia me sentí intranquilo/a, me apretaba las manos o necesitaba cambiar la posición enla que estaba sentado/a.',\r\n            'Tuve impulsos de estar en movimiento y me sentí bastante inquieto/a.',\r\n            'Por momentos, me resultó imposible quedarme sentado/a y comencé a dar vueltas.']\r\n    },\r\n]","import React, { useState, useEffect } from 'react'\r\nimport { Form, Switch, Button, Radio, Space, Row, Col, Select, message, Divider } from 'antd'\r\nimport { depresion_catalog, depresion_catalog2, disminucion_apetito, perdida_peso, aumento_apetito, aumento_peso } from './depresion_catalog'\r\nimport { Card } from 'react-bootstrap'\r\nimport { getData, sendDataBody } from '../../../resources';\r\nimport logo from \"../../../assets/Logo.png\";\r\n\r\nexport default function DepresionEncuesta(props) {\r\n\r\n\r\n  const [pesoEnabled, setPesoEnabled] = useState(false)\r\n  const [apetitoEnabled, setApetitoEnabled] = useState(false)\r\n  // For check if the encuesta existts on db\r\n  const [encuestaNotExists, setEncuestaNotExists] = useState(null)\r\n  const [checking, setChecking] = useState(true)\r\n  const [pacienteData, setPacienteData] = useState({})\r\n  const [medicoData, setMedicoData] = useState({})\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    checkEncuesta()\r\n  }, [])\r\n\r\n  const checkEncuesta = () => {\r\n\r\n    getData('getuser/' + props.idpaciente).then((rs) => { setPacienteData(rs) })\r\n    getData('getuser/' + props.idmedico).then((rs) => { setMedicoData(rs) })\r\n\r\n\r\n    getData(`encuestas/uuid/${props.token}`).then(rs => {\r\n      console.log(rs);\r\n      setEncuestaNotExists(rs.message === 'The survey does not exist')\r\n    }).then(() => { setChecking(false); console.log('Not exists: ', encuestaNotExists); })\r\n  }\r\n\r\n  const onFinish = (values) => {\r\n    let _score = 0;\r\n    let high1_4 = 0;\r\n    let high6_9 = 0;\r\n    console.log('Sintomatologia:', values);\r\n    // El mayor de la 1 a la 4\r\n    for (var i = 1; i < 5; i++) {\r\n      if (values[i] > high1_4) high1_4 = values[i]\r\n    }\r\n    // El mayor de la 6 a la 9\r\n    for (var i = 6; i < 10; i++) {\r\n      if (values[i] > high6_9) high6_9 = values[i]\r\n    }\r\n    // console.log('6-9', high6_9)\r\n    // Suma de la 10 a la 14\r\n    for (var i = 10; i < 15; i++) {\r\n      _score += values[i]\r\n    }\r\n    // Suma el mayor enre 15 y 16 y sumarlo\r\n    values[15] > values[16] ? _score += values[15] : _score += values[16];\r\n\r\n    // Sumar la 5 y el resto\r\n    _score = _score + high1_4 + values[5] + high6_9;\r\n\r\n    console.log('score: ', _score);\r\n    const body = {\r\n      usuario: props.idpaciente,\r\n      medico: props.idmedico,\r\n      score: _score,\r\n      tipo: 'depresion',\r\n      uuid: props.token\r\n    }\r\n\r\n    console.log('Efectos body:', body);\r\n    sendDataBody('encuestas/add', body).then((rs) => {\r\n      console.log(rs)\r\n      message.success(rs.message)\r\n    }).then(() => checkEncuesta())\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log('Failed:', errorInfo);\r\n    errorInfo.errorFields.map((p) => {\r\n      message.error('Conteste la pregunta ' + p.name)\r\n    })\r\n  };\r\n  const handleChange = (value) => {\r\n    // console.log(`selected ${value}`);\r\n  };\r\n\r\n  // Loading state\r\n  if (checking) return <div style={{ paddingTop: 180 }}>\r\n    <div style={{ margin: 'auto', width: '40%', textAlign: 'center' }}>\r\n      <h3 >Cargando</h3>\r\n    </div>\r\n  </div>\r\n\r\n  if (!encuestaNotExists) return <div style={{ paddingTop: 180 }}>\r\n    <div style={{ margin: 'auto', width: '40%', textAlign: 'center' }}>\r\n      <h3 >Gracias por contestar la encuesta</h3>\r\n      <img width={256} src={logo} alt=\"recreamedLogo\" style={{ margin: 'auto' }} />\r\n    </div>\r\n  </div>\r\n\r\n  return (\r\n    <div className='mainContainer'>\r\n      <h4>Encuesta de sintomatologia depresiva QUIDS (QUICK INVENTORY OF DEPRESSIVE SYMPTOMATOLOGY)</h4>\r\n      <br />\r\n      <h5>Medico: {medicoData.name}</h5>\r\n      <h5>Paciente: {pacienteData.name}</h5>\r\n      <br />\r\n\r\n      <Form\r\n        name=\"basic\"\r\n        layout='vertical'\r\n        // labelCol={{ span: 8 }}\r\n        // wrapperCol={{ span: 16 }}\r\n        initialValues={{ remember: true }}\r\n        onFinish={onFinish}\r\n        onFinishFailed={onFinishFailed}\r\n        autoComplete=\"off\"\r\n      >\r\n\r\n\r\n        {\r\n          depresion_catalog.map((p) => {\r\n            return <Form.Item\r\n              label={p.n + '. ' + p.pregunta}\r\n              name={p.n}\r\n              rules={[{ required: true, message: `Selecciona una opcion` }]}\r\n            >\r\n              <Radio.Group>\r\n                <Space direction=\"vertical\">\r\n                  {\r\n                    p.respuestas.map((r, i) => <Radio value={i}> {r} </Radio>)\r\n                  }\r\n                </Space>\r\n              </Radio.Group>\r\n            </Form.Item>\r\n          })\r\n        }\r\n\r\n        {/*Apetito*/}\r\n        <Card>\r\n          <Form.Item\r\n          // wrapperCol={{ offset: 8, span: 16 }} \r\n          >\r\n            Disminucion apetito <Switch onChange={() => setApetitoEnabled(!apetitoEnabled)} /> Aumento Apetito\r\n          </Form.Item>\r\n          <Row>\r\n            <Col md={10}>\r\n              <Form.Item\r\n                label='Disminucion Apetito'\r\n                name='6'\r\n                rules={[{ required: !apetitoEnabled, message: `Selecciona una opcion` }]}\r\n              >\r\n                <Radio.Group disabled={apetitoEnabled}>\r\n                  <Space direction=\"vertical\">\r\n                    {\r\n                      disminucion_apetito.map((s, i) => <Radio value={i}> {s} </Radio>)\r\n                    }\r\n                  </Space>\r\n                </Radio.Group>\r\n              </Form.Item>\r\n            </Col>\r\n\r\n            <Col>\r\n              <Form.Item\r\n                label='Aumento Apetito'\r\n                name='6'\r\n                rules={[{ required: apetitoEnabled, message: `Selecciona una opcion` }]}\r\n              >\r\n\r\n                <Radio.Group disabled={!apetitoEnabled}>\r\n                  <Space direction=\"vertical\">\r\n                    {\r\n                      aumento_apetito.map((s, i) => <Radio value={i}> {s} </Radio>)\r\n                    }\r\n                  </Space>\r\n                </Radio.Group>\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n        </Card>\r\n\r\n\r\n\r\n        {/* Peso */}\r\n        <Card>\r\n          <Form.Item\r\n          // wrapperCol={{ offset: 8, span: 16 }} \r\n          >\r\n            Disminucion de Peso <Switch onChange={() => setPesoEnabled(!pesoEnabled)} /> Aumento de Peso\r\n          </Form.Item>\r\n          <Row>\r\n            <Col md={10}>\r\n              <Form.Item\r\n                label='Perdida de Peso'\r\n                name='8'\r\n                rules={[{ required: !pesoEnabled, message: `Selecciona una opcion` }]}\r\n              >\r\n                <Radio.Group disabled={pesoEnabled}>\r\n                  <Space direction=\"vertical\">\r\n                    {\r\n                      perdida_peso.map((s, i) => <Radio value={i}> {s} </Radio>)\r\n                    }\r\n                  </Space>\r\n                </Radio.Group>\r\n              </Form.Item>\r\n            </Col>\r\n\r\n            <Col>\r\n              <Form.Item\r\n                label='Aumento Peso'\r\n                name='8'\r\n                rules={[{ required: pesoEnabled, message: `Selecciona una opcion` }]}\r\n              >\r\n\r\n                <Radio.Group disabled={!pesoEnabled}>\r\n                  <Space direction=\"vertical\">\r\n                    {\r\n                      aumento_peso.map((s, i) => <Radio value={i}> {s} </Radio>)\r\n                    }\r\n                  </Space>\r\n                </Radio.Group>\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n        </Card>\r\n\r\n        <br />\r\n\r\n        {\r\n          depresion_catalog2.map((p) => {\r\n            return <Form.Item\r\n              label={p.n + '. ' + p.pregunta}\r\n              name={p.n}\r\n              rules={[{ required: true, message: `Selecciona una opcion` }]}\r\n            >\r\n              <Radio.Group>\r\n                <Space direction=\"vertical\">\r\n                  {\r\n                    p.respuestas.map((r, i) => <Radio value={i}> {r} </Radio>)\r\n                  }\r\n                </Space>\r\n              </Radio.Group>\r\n            </Form.Item>\r\n          })\r\n        }\r\n\r\n\r\n\r\n        <Form.Item\r\n          wrapperCol={{ offset: 8, span: 16 }}\r\n        >\r\n          <Button type=\"primary\" htmlType=\"submit\">\r\n            Guardar\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n\r\n    </div>\r\n  )\r\n}\r\n","export const depresion2_catalog = [\r\n    {\r\n        \"n\": 1,\r\n        \"pregunta\": \". Humor deprimido (tristeza, depresión, desamparo, inutilidad)\",\r\n        \"respuestas\": [\r\n            \"0. Ausente\",\r\n            \"1. Estas sensaciones se indican solamente al ser preguntado\",\r\n            \"2. Estas sensaciones se relatan oral y espontáneamente\",\r\n            \"3. Sensaciones no comunicadas verbalmente, es decir, por la expresión facial,la postura, la voz y la tendencia al llanto.\",\r\n            \"4. El paciente manifiesta estas sensaciones en su comunicación verbal y no verbal de forma espontánea\",\r\n        ]\r\n    },\r\n    {\r\n        \"n\": 2,\r\n        \"pregunta\": \"2. Sensación de culpabilidad\",\r\n        \"respuestas\": [\r\n            \"0. Ausente\",\r\n            \"1. Se culpa a sí mismo, cree haber decepcionado a la gente\",\r\n            \"2. Ideas de culpabilidad, o meditación sobre errores pasados o malas acciones\",\r\n            \"3. La enfermedad actual es un castigo. Ideas delirantes de culpabilidad\",\r\n            \"4. Oye voces acusatorias o de denuncia y/o experimenta alucinaciones visuales amenazadoras\",\r\n        ]\r\n    },\r\n    {\r\n        \"n\": 3,\r\n        \"pregunta\": \"3. Suicidio\",\r\n        \"respuestas\": [\r\n            \"0. Ausente\",\r\n            \"1. Le parece que la vida no merece la pena ser vivida\",\r\n            \"2. Desearía estar muerto o tiene pensamientos sobre la posibilidad de morirse\",\r\n            \"3. Ideas de suicidio o amenazas\",\r\n            \"4. Intentos de suicidio(cualquier intento serio se califica 4)\",\r\n        ]\r\n    },\r\n    {\r\n        \"n\": 4, \"pregunta\": \" 4. Insomnio precoz\", \"respuestas\": [\r\n            \"0. Ausente\",\r\n            \"1. Dificultades ocasionales para dormirse, por ejemplo, más de media hora\",\r\n            \"2. Dificultades para dormirse cada noche\",\r\n        ]\r\n    },\r\n    {\r\n        \"n\": 5, \"pregunta\": \"5. Insomnio medio\", \"respuestas\": [\r\n            \"0. Ausente\",\r\n            \"1. El paciente se queja de estar inquieto durante la noche\",\r\n            \"2. Está despierto durante la noche; cualquier ocasión de levantarse de la cama se califica 2(excepto si está justificada: orinar, tomar o dar medicación, etc.)\",\r\n        ]\r\n    },\r\n    {\r\n        \"n\": 6,\r\n        \"pregunta\": \"6. Insomnio tardío \",\r\n        \"respuestas\": [\r\n            \"0. Ausente\",\r\n            \"1. Se despierta a primeras horas de la madrugada pero vuelve a dormirse\",\r\n            \"2. No puede volver a dormirse si se levanta de la cama\",\r\n        ]\r\n    },\r\n    {\r\n        \"n\": 7, \"pregunta\": \"7. Trabajo y actividades\", \"respuestas\": [\r\n            \"0. Ausente\",\r\n            \"1. Ideas y sentimientos de incapacidad.Fatiga o debilidad relacionadas con su actividad, trabajo o aficiones\",\r\n            \"2. Pérdida de interés en su actividad, aficiones, o trabajo, manifestado directamente por el enfermo o indirectamente por desatención, indecisión y vacilación\",\r\n            \"3. Disminución del tiempo dedicado a actividades o descenso en la productividad\",\r\n            \"4. Dejó de trabajar por la presente enfermedad\",\r\n        ]\r\n    },\r\n    {\r\n        \"n\": 8, \"pregunta\": \" 8. Inhibición(lentitud de pensamiento y de palabra, empeoramiento de la concentración, actividad motora disminuida)\",\r\n        \"respuestas\": [\r\n            \"0. Palabra y pensamiento normales\",\r\n            \"1. Ligero retraso en el diálogo\",\r\n            \"2. Evidente retraso en el diálogo\",\r\n            \"3. Diálogo difícil\",\r\n            \"4. Torpeza absoluta\",\r\n        ]\r\n    },\r\n    {\r\n        \"n\": 9, \"pregunta\": \" 9. Agitación\", \"respuestas\": [\r\n            \"0. Ninguna\",\r\n            \"1. “Juega” con sus manos, cabello, etc.\",\r\n            \"2. Se retuerce las manos, se muerde las uñas, los labios, se tira de los cabellos, etc.\",\r\n        ]\r\n    },\r\n    {\r\n        \"n\": 10, \"pregunta\": \"10. Ansiedad psíquica\", \"respuestas\": [\r\n            \"0. No hay dificultad\",\r\n            \"1. Tensión subjetiva e irritabilidad\",\r\n            \"2. Preocupación por pequeñas cosas\",\r\n            \"3. Actitud aprensiva aparente en la expresión o en el habla\",\r\n            \"4. Terrores expresados sin preguntarle\",\r\n        ]\r\n    },\r\n    {\r\n        \"n\": 11, \"pregunta\": \"11. Ansiedad somática\", \"respuestas\": [\r\n            \"0. Ausente\",\r\n            \"1. Ligera\",\r\n            \"2. Moderada\",\r\n            \"3. Grave\",\r\n            \"4. Incapacitante\\nSignos fisiológicos concomitantes de la ansiedad como: \\n -Gastrointestinales: boca seca, flatulencia, diarrea, eructos, retortijones\\n- Cardiovasculares: palpitaciones, cefalalgias\\n- Respiratorios: hiperventilación, suspiros\\n- Frecuencia urinaria\\n- Sudoración\"\r\n        ]\r\n    },\r\n    {\r\n        \"n\": 12, \"pregunta\": \"12. Síntomas somáticos gastrointestinales\",\r\n        \"respuestas\": [\r\n            \"0. Ninguno\",\r\n            \"1. Pérdida del apetito, pero come sin necesidad de que lo estimulen. Sensación de pesadez en el abdomen\",\r\n            \"2. Dificultad en comer si no se le insiste.Solicita o necesita laxantes o medicación intestinal para sus síntomas gastrointestinales.\",\r\n        ]\r\n    },\r\n    {\r\n        \"n\": 13, \"pregunta\": \"13. Síntomas somáticos generales\",\r\n        \"respuestas\": [\r\n            \"0. Ninguno\",\r\n            \"1. Pesadez en las extremidades, espalda o cabeza.Dorsalgias, cefalalgias, algias musculares.Pérdida de energía y fatigabilidad.\",\r\n            \"2. Cualquier síntoma bien definido se califica 2\",\r\n        ]\r\n    },\r\n    {\r\n        \"n\": 14, \"pregunta\": \"14. Síntomas genitales \",\r\n        \"respuestas\": [\r\n            \"0. Ausente\",\r\n            \"1. Débil\",\r\n            \"2. Grave\",\r\n            \"3. Incapacitante\\nSíntomas como\\n- Pérdida de la libido\\n- Trastornos menstruales\",\r\n        ]\r\n    },\r\n    {\r\n        \"n\": 15, \"pregunta\": \"15. Hipocondría\",\r\n        \"respuestas\": [\r\n            \"0. No la hay\",\r\n            \"1. Preocupado de sí mismo(corporalmente)\",\r\n            \"2. Preocupado por su salud\",\r\n            \"3. Se lamenta constantemente, solicita ayudas, etc.\",\r\n            \"4. Ideas delirantes hipocondríacas\",\r\n        ]\r\n    },\r\n    {\r\n        \"n\": 16, \"pregunta\": \"16. Pérdida de peso, según manifestaciones del paciente (primera evaluación)\",\r\n        respuestas: [\r\n            \"0. No hay pérdida de peso\",\r\n            \"1. Probable pérdida de peso asociada con la enfermedad actual\",\r\n            \"2. Pérdida de peso definida(según el enfermo)\",\r\n        ]\r\n    },\r\n    {\r\n        \"n\": \"B16\", \"pregunta\": \"16 B. Pérdida de peso, según pesaje hecho por el psiquiatra(evaluaciones siguientes)\",\r\n        \"respuestas\": [\r\n            \"0. Pérdida de peso inferior a 500 g en una semana\",\r\n            \"1. Pérdida de peso de más de 500 g en una semana\",\r\n            \"2. Pérdida de peso de más de 1 kg en una semana(por término medio)\",\r\n        ]\r\n    },\r\n    {\r\n        \"n\": 17, \"pregunta\": \"17. Insight(conciencia de enfermedad)\",\r\n        \"respuestas\": [\r\n            \"0. Se da cuenta de que está deprimido y enfermo\",\r\n            \"1. Se da cuenta de su enfermedad pero atribuye la causa a la mala alimentación, clima, exceso de trabajo, virus, etc.\",\r\n            \"2. Niega que esté enfermo\",\r\n        ]\r\n    },\r\n\r\n]\r\n\r\nexport const catalog2 = [\r\n    {\r\n        n: 1, pregunta: \"1. Tristeza observada\",\r\n        descripcion: \"Representa el abatimiento, la melancolía y la desesperación (algo más que una simple tristeza normal y pasajera) que se refleja en la manera de hablar, la expresión facial y la postura. Evalúe el grado de incapacidad para animarse.\",\r\n        respuestas: [\r\n            \"0. Sin tristeza\",\r\n            \"1.\",\r\n            \"2. Parece decaído/a pero se anima sin dificultad\",\r\n            \"3.\",\r\n            \"4. Parece triste y desgraciado/a la mayor parte del tiempo\",\r\n            \"5.\",\r\n            \"6. Parece siempre desgraciado/a. Extremadamente abatido/a\",\r\n        ]\r\n    },\r\n    {\r\n        n: 2, pregunta: \"2. Tristeza declarada por el paciente\",\r\n        descripcion: \"Representa un estado de ánimo depresivoque se siente, sin tener en cuenta si se refleja en la apariencia o no.Incluye tristeza,abatimiento o el sentimiento de que no hayesperanza y nada ni nadie puede ayudarle.Evalúe de acuerdo con la intensidad, la duración y la medida en que el estado de ánimo se ve influido por los acontecimientos.\",\r\n        respuestas: [\r\n            \"0. Tristeza esporádica según las circunstancias\",\r\n            \"1.\",\r\n            \"2. Triste o decaído / a, pero se anima sin dificultad\",\r\n            \"3.\",\r\n            \"4. Sentimientos generalizados de tristeza o melancolía.El estado\",\r\n            \"de ánimo todavía se ve influido por circunstancias externas\",\r\n            \"5.\",\r\n            \"6. Abatimiento, desdicha o tristeza continuada o invariable\",\r\n        ]\r\n    },\r\n    {\r\n        n: 3, pregunta: \"3. Tensión interna\",\r\n        descripcion: \"Representa sentimientos de malestar mal definido, irritabilidad, confusión interna y tensión mental hasta llegar al pánico, terror o angustia.Evalúe de acuerdo con la intensidad, frecuencia, duración y la medida en que se busca consuelo.\",\r\n        respuestas: [\r\n            \"0. Apacible.Sólo tensión interna pasajera\",\r\n            \"1.\",\r\n            \"2. Sentimientos ocasionales de nerviosismo y malestar indefinido\",\r\n            \"3.\",\r\n            \"4. Sentimientos continuados de tensión interna o pánico intermitente que el sujeto sólo puede dominar con alguna dificultad\",\r\n            \"5.\",\r\n            \"6. Terror o angustia tenaz.Pánico irresistible\",\r\n        ]\r\n    },\r\n    {\r\n        n: 4,\r\n        pregunta: \"4. Sueño reducido\", descripcion: \"Representa la reducción de la duración o profundidad del sueño comparada con las pautas normales del sujeto cuando se encuentra bien.\",\r\n        respuestas: [\r\n            \"0. Duerme como siempre\",\r\n            \"1.\",\r\n            \"2. Ligera dificultad para dormirse o sueño ligeramente reducido, sueño ligero o perturbado\",\r\n            \"3.\",\r\n            \"4. Sueño reducido o interrumpido durante al menos 2 h\",\r\n            \"5.\",\r\n            \"6. Menos de 2 o 3 h de sueño\",\r\n        ]\r\n    },\r\n    {\r\n        n: 5,\r\n        pregunta: \"5. Apetito reducido\", descripcion: \"Representa la sensación de pérdida de apetito comparada con el que tiene cuando se encuentra bien.Evalúe según la pérdida del deseo por la comida o la necesidad de forzarse a sí mismo/a para comer.\",\r\n        respuestas: [\r\n            \"0. Apetito normal o aumentado\",\r\n            \"1.\",\r\n            \"2. Apetito ligeramente reducido\",\r\n            \"3.\",\r\n            \"4. Sin apetito.La comida es insípida\",\r\n            \"5.\",\r\n            \"6. Necesita persuasión para comer algo \",\r\n        ]\r\n    },\r\n    {\r\n        n: 6,\r\n        pregunta: \"6. Dificultades para concentrarse\",\r\n        descripcion: \"Representa las dificultades para centrar los pensamientos en algo hasta llegar a la falta de concentración incapacitante.Evalúe según la intensidad, frecuencia y grado de incapacidad resultante.\",\r\n        respuestas: [\r\n            \"0. Ninguna dificultad para concentrarse\",\r\n            \"1.\",\r\n            \"2. Dificultades ocasionales para centrar los pensamientos\",\r\n            \"3.\",\r\n            \"4. Dificultades para concentrarse y seguir una idea que reduce la\",\r\n            \"capacidad de leer o mantener una conversación\",\r\n            \"5.\",\r\n            \"6. Incapaz de leer o mantener una conversación si no es con gran dificultad\",\r\n        ]\r\n    },\r\n    {\r\n        n: 7, pregunta: \"7. Lasitud\", descripcion: \"Representa la dificultad para empezar algo o la lentitud para iniciar y realizar las actividades diarias.\",\r\n        respuestas: [\r\n            \"0. Casi sin dificultad para empezar algo.Sin apatía\",\r\n            \"1.\",\r\n            \"2. Dificultades para empezar actividades\",\r\n            \"3.\",\r\n            \"4. Dificultades para empezar actividades rutinarias sencillas que\",\r\n            \"se llevan a cabo con esfuerzo\",\r\n            \"5.\",\r\n            \"6. Lasitud total.Incapaz de hacer nada sin ayuda\",\r\n        ]\r\n    },\r\n    {\r\n        n: 8, pregunta: \"8. Incapacidad para sentir\", descripcion: \"Representa la experiencia subjetiva de un menor interés por el entorno o por actividades que habitualmente dan placer.La capacidad para reaccionar con la emoción adecuada a las circunstancias o personas se ve reducida.\",\r\n        respuestas: [\r\n            \"0. Interés normal por el entorno y por otras personas\",\r\n            \"1.\",\r\n            \"2. Menor capacidad para disfrutar de las cosas que normalmente le interesan\",\r\n            \"3.\",\r\n            \"4. Pérdida de interés por el entorno.Pérdida de sentimientos\",\r\n            \"respecto a los amigos y conocidos\",\r\n            \"5.\",\r\n            \"6. La experiencia de estar emocionalmente paralizado, incapacidad para sentir enfado, pena o placer y una total o incluso dolorosa falta de sentimientos hacia los parientes próximos y amigos\",\r\n        ]\r\n    },\r\n    {\r\n        n: 9, pregunta: \"9. Pensamientos pesimistas\", descripcion: \"Representa los pensamientos de culpabilidad, inferioridad, autorreproche, pecado, remordimiento y ruina.\",\r\n        respuestas: [\r\n            \"0. Sin pensamientos pesimistas\",\r\n            \"1.\",\r\n            \"2. Ideas variables de fracaso, autorreproche o autodesprecio\",\r\n            \"3.\",\r\n            \"4. Autoacusaciones persistentes o ideas definidas, pero aún\",\r\n            \"racionales, de culpabilidad o pecado.Cada vez más pesimista\",\r\n            \"respecto al futuro\",\r\n            \"5.\",\r\n            \"6. Alucinaciones de ruina, remordimiento o pecado irredimible. Autoacusaciones que son absurdas e inquebrantables\",\r\n        ]\r\n    },\r\n    {\r\n        n: 10, pregunta: \"10. Pensamientos suicidas\", descripcion: \"Representa el sentimiento de que no vale la pena vivir, que desearía que le llegara una muerte natural, pensamientos suicidas y preparativos para el suicidio.Los intentos de suicidio en sí no deberían influir en la evaluación.\",\r\n        respuestas: [\r\n            \"0. Disfruta de la vida o la acepta tal como viene\",\r\n            \"1.\",\r\n            \"2. Cansado de vivir.Sólo pensamientos suicidas pasajeros\",\r\n            \"3.\",\r\n            \"4. Probablemente estaría mejor muerto / a.Los pensamientos\",\r\n            \"suicidas son habituales, y se considera el suicidio como una posible solución, pero sin ninguna intención o plan específico\",\r\n            \"5.\",\r\n            \"6. Planes explícitos de suicidio cuando se presente una oportunidad.Preparativos activos para el suicidio\",\r\n        ]\r\n    }\r\n]\r\n\r\nexport const catalog3 = [\r\n    \"Tener poco interés o disfrutar poco haciendo las cosas\",\r\n    \"Sentirse desanimado/a, deprimido/a o sin esperanza\",\r\n    \"Tener problemas para dormir o para mantenerse dormido, o dormir demasiado\",\r\n    \"Sentirse cansado/a o tener poca energía\",\r\n    \"Tener poco apetito o comer en exceso\",\r\n    \"Sentirse mal consigo mismo/a-o sentirse fracasado/a, o pensar que se ha decepcionado a sí mismo o a los que le rodean\",\r\n    \"Tener dificultades para concentrarse en cosas tales como leer el periódico o ver la televisión\",\r\n    \"Moverse o hablar tan lentamente que los demás lo han notado. O bien al contrario, estar tan agitado/a o inquieto/a que se mueve mucho más de lo habitual\",\r\n    \"Tener pensamientos sobre estar muerto/a o sobre hacerse daño a sí mismo de alguna manera\",\r\n\r\n]\r\n\r\nexport const preg10 = \"Si usted se identificó con cualquier problema en este cuestionario, ¿le ha sido difícil cumplir con su trabajo, atender su casa, o relacionarse con otras personas debido a estos problemas?\"","import React, { useState, useEffect } from 'react'\r\nimport { Form, Switch, Button, Radio, Space, Row, Col, Select, message, Divider } from 'antd'\r\nimport { Card } from 'react-bootstrap'\r\nimport { getData, sendDataBody } from '../../../resources';\r\nimport logo from \"../../../assets/Logo.png\";\r\nimport { depresion2_catalog, catalog2, catalog3, preg10 } from './depresion2_catalog'\r\nconst { Option } = Select;\r\n\r\nexport default function Depresion2Encuesta(props) {\r\n    const [pesoEnabled, setPesoEnabled] = useState(false)\r\n    const [apetitoEnabled, setApetitoEnabled] = useState(false)\r\n    // For check if the encuesta existts on db\r\n    const [encuestaNotExists, setEncuestaNotExists] = useState(null)\r\n    const [checking, setChecking] = useState(true)\r\n    const [pacienteData, setPacienteData] = useState({})\r\n    const [medicoData, setMedicoData] = useState({})\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        checkEncuesta()\r\n    }, [])\r\n\r\n    const checkEncuesta = () => {\r\n\r\n        getData('getuser/' + props.idpaciente).then((rs) => { setPacienteData(rs) })\r\n        getData('getuser/' + props.idmedico).then((rs) => { setMedicoData(rs) })\r\n\r\n\r\n        getData(`encuestas/uuid/${props.token}`).then(rs => {\r\n            console.log(rs);\r\n            setEncuestaNotExists(rs.message === 'The survey does not exist')\r\n        }).then(() => { setChecking(false); console.log('Not exists: ', encuestaNotExists); })\r\n    }\r\n\r\n    const onFinish = (values) => {\r\n        let primeros = 0, segundos = 0, terceros = 0;\r\n        console.log('Sintomatologia gpc:', values);\r\n\r\n        for (let i = 1; i < 17; i++) { primeros += values[i] }\r\n\r\n        for (let i = 1; i < 11; i++) {\r\n            const pos = `2_${i}`\r\n            segundos += values[pos]\r\n        }\r\n        for (let i = 1; i < 10; i++) {\r\n            const pos = `3_${i}`\r\n            terceros += values[pos]\r\n        }\r\n\r\n\r\n        const respuestas = {\r\n            hrsd: primeros,\r\n            madrs: segundos,\r\n            phq: terceros\r\n        }\r\n\r\n\r\n        console.log('repuestas: ', respuestas);\r\n        const body = {\r\n            usuario: props.idpaciente,\r\n            medico: props.idmedico,\r\n            respuestas_depresion2_gpc: respuestas,\r\n            tipo: 'depresion_gpc',\r\n            uuid: props.token\r\n        }\r\n\r\n        console.log('Efectos body:', body);\r\n        sendDataBody('encuestas/add', body).then((rs) => {\r\n          console.log(rs)\r\n          message.success(rs.message)\r\n        }).then(() => checkEncuesta())\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n        errorInfo.errorFields.map((p) => {\r\n            message.error('Conteste la pregunta ' + p.name)\r\n        })\r\n    };\r\n    const handleChange = (value) => {\r\n        // console.log(`selected ${value}`);\r\n    };\r\n\r\n    // Loading state\r\n    if (checking) return <div style={{ paddingTop: 180 }}>\r\n        <div style={{ margin: 'auto', width: '40%', textAlign: 'center' }}>\r\n            <h3 >Cargando</h3>\r\n        </div>\r\n    </div>\r\n\r\n    if (!encuestaNotExists) return <div style={{ paddingTop: 180 }}>\r\n        <div style={{ margin: 'auto', width: '40%', textAlign: 'center' }}>\r\n            <h3 >Gracias por contestar la encuesta</h3>\r\n            <img width={256} src={logo} alt=\"recreamedLogo\" style={{ margin: 'auto' }} />\r\n        </div>\r\n    </div>\r\n\r\n    // Depreison GPC\r\n    return (\r\n        <div className='mainContainer'>\r\n            <h4>Encuesta de las versiones validadas en español de las escalas HRSD, MADRS y PHQ-9</h4>\r\n            <br />\r\n            <h5>Medico: {medicoData.name}</h5>\r\n            <h5>Paciente: {pacienteData.name}</h5>\r\n            <br />\r\n\r\n            <Form\r\n                name=\"basic\"\r\n                layout='vertical'\r\n                // labelCol={{ span: 8 }}\r\n                // wrapperCol={{ span: 16 }}\r\n                initialValues={{ remember: true }}\r\n                onFinish={onFinish}\r\n                onFinishFailed={onFinishFailed}\r\n                autoComplete=\"off\"\r\n            >\r\n                <h4>Versión validada en español de la HRSD1</h4>\r\n\r\n                {\r\n                    depresion2_catalog.map((p) => {\r\n                        return <Form.Item\r\n                            key={p.n}\r\n                            label={p.pregunta}\r\n                            name={p.n}\r\n                            rules={[{ required: true, message: `Selecciona una opcion` }]}\r\n                        >\r\n                            <Radio.Group>\r\n                                <Space direction=\"vertical\">\r\n                                    {\r\n                                        p.respuestas.map((r, i) => <Radio value={i}> {r} </Radio>)\r\n                                    }\r\n                                </Space>\r\n                            </Radio.Group>\r\n                        </Form.Item>\r\n                    })\r\n                }\r\n                <h4>Versión validada en español de la escala Montgomery-Asberg Depression Rating Scale (MADRS)1</h4>\r\n                {\r\n                    catalog2.map((p) => {\r\n                        return <Form.Item\r\n                            key={p.n}\r\n                            label={p.pregunta}\r\n                            name={'2_' + p.n}\r\n                            rules={[{ required: true, message: `Selecciona una opcion` }]}\r\n                        >\r\n                            <Radio.Group>\r\n                                <Space direction=\"vertical\">\r\n                                    {\r\n                                        p.respuestas.map((r, i) => <Radio value={i}> {r} </Radio>)\r\n                                    }\r\n                                </Space>\r\n                            </Radio.Group>\r\n                        </Form.Item>\r\n                    })\r\n                }\r\n                <h4>Cuestionario sobre la Salud del Paciente (PHQ-9)108 ©1999 Pfizer Inc.</h4>\r\n                <h5>Durante  las  últimas  2  semanas,  ¿con  qué  frecuencia  le  han  molestado  cada  uno  de  los  siguientes problemas?</h5>\r\n                {\r\n                    catalog3.map((p, i) => {\r\n                        return <Form.Item\r\n                            key={i}\r\n                            label={p}\r\n                            name={'3_' + (i + 1)}\r\n                            rules={[{ required: true, message: `Selecciona una opcion` }]}\r\n                        >\r\n                            <Radio.Group>\r\n                                <Space direction=\"vertical\">\r\n                                    <Radio value={0}> Nunca </Radio>\r\n                                    <Radio value={1}> Varios Dias </Radio>\r\n                                    <Radio value={2}> Más de la mitad de los días </Radio>\r\n                                    <Radio value={3}> Todos o casi todos los días </Radio>\r\n                                </Space>\r\n                            </Radio.Group>\r\n                        </Form.Item>\r\n                    })\r\n                }\r\n\r\n                <Form.Item\r\n                    label={preg10}\r\n                    name='4_1'\r\n                    rules={[{ required: true, message: `Selecciona una opcion` }]}\r\n                >\r\n                    <Radio.Group>\r\n                        <Space direction=\"vertical\">\r\n                            <Radio value=\"0\"> Nada en absoluto </Radio>\r\n                            <Radio value=\"1\"> Algo difícil </Radio>\r\n                            <Radio value=\"2\"> Muy difícil </Radio>\r\n                            <Radio value=\"3\"> Extremadamente difícil </Radio>\r\n                        </Space>\r\n                    </Radio.Group>\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                    wrapperCol={{ offset: 8, span: 16 }}\r\n                >\r\n                    <Button type=\"primary\" htmlType=\"submit\">\r\n                        Guardar\r\n                    </Button>\r\n                </Form.Item>\r\n            </Form>\r\n\r\n        </div >\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { dolor_catalog, initialDolorValues } from './dolor_catalog';\r\nimport { Form, Input, Button, Slider, Checkbox, Radio, message } from 'antd';\r\nimport { getData, sendDataBody } from '../../resources';\r\nimport logo from \"../../assets/Logo.png\";\r\n\r\nexport default function DolorEncuesta(props) {\r\n    // For check if the encuesta existts on db\r\n    const [encuestaNotExists, setEncuestaNotExists] = useState(null)\r\n    const [checking, setChecking] = useState(true)\r\n    const [pacienteData, setPacienteData] = useState({})\r\n    const [medicoData, setMedicoData] = useState({})\r\n\r\n    useEffect(() => {\r\n        checkEncuesta()\r\n    }, [])\r\n\r\n\r\n    const checkEncuesta = () => {\r\n\r\n        getData('getuser/' + props.idpaciente).then((rs) => { setPacienteData(rs) })\r\n        getData('getuser/' + props.idmedico).then((rs) => { setMedicoData(rs) })\r\n\r\n\r\n        getData(`encuestas/uuid/${props.token}`).then(rs => {\r\n            console.log(rs);\r\n            setEncuestaNotExists(rs.message === 'The survey does not exist')\r\n        }).then(() => { setChecking(false); console.log('Not exists: ', encuestaNotExists); })\r\n    }\r\n\r\n    const onFinish = (values) => {\r\n        const body = {\r\n            usuario: props.idpaciente,\r\n            medico: props.idmedico,\r\n            respuestas_dolor: values,\r\n            tipo: 'dolor',\r\n            uuid: props.token\r\n        }\r\n        console.log('Body:', body);\r\n        sendDataBody('encuestas/add', body).then((rs) => {\r\n            console.log('add enc resp', rs)\r\n            message.success(rs.message)\r\n        }).then(() => checkEncuesta())\r\n    };\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('init', initialDolorValues)\r\n        console.log('Failed:', errorInfo);\r\n        errorInfo.errorFields.map((p) => {\r\n            message.error('Conteste la pregunta ' + p.name)\r\n        })\r\n    };\r\n    const onChange = (checkedValues) => {\r\n        console.log('checked = ', checkedValues);\r\n    };\r\n\r\n    const marks = { 0: '0', 10: '10' };\r\n\r\n    // Loading state\r\n    if (checking) return <div style={{ paddingTop: 180 }}>\r\n        <div style={{ margin: 'auto', width: '40%', textAlign: 'center' }}>\r\n            <h3 >Cargando</h3>\r\n        </div>\r\n    </div>\r\n\r\n    if (!encuestaNotExists) return <div style={{ paddingTop: 180 }}>\r\n        <div style={{ margin: 'auto', width: '40%', textAlign: 'center' }}>\r\n            <h3 >Gracias por contestar la encuesta</h3>\r\n            <img width={256} src={logo} alt=\"recreamedLogo\" style={{ margin: 'auto' }} />\r\n        </div>\r\n    </div>\r\n    return (\r\n        <div className='mainContainer'>\r\n            <h4>Encuesta de Dolor</h4>\r\n            <br />\r\n            <h5>Medico: {medicoData.name}</h5>\r\n            <h5>Paciente: {pacienteData.name}</h5>\r\n            <br />\r\n            <Form\r\n                layout='vertical'\r\n                name=\"basic\"\r\n                // labelCol={{ span: 24 }}\r\n                // wrapperCol={{ span: 24 }}\r\n                initialValues={initialDolorValues}\r\n                onFinish={onFinish}\r\n                onFinishFailed={onFinishFailed}\r\n                autoComplete=\"off\"\r\n            >\r\n                {\r\n                    dolor_catalog.map((p) => {\r\n                        let input;\r\n                        switch (p.tipo) {\r\n                            case 'metrica':\r\n                                input = <Slider defaultValue={0} min={0} max={10} marks={marks} />\r\n                                break;\r\n                            case 'multiple':\r\n                                input = <Checkbox.Group options={p.respuestas} defaultValue={['Apple']} onChange={onChange} />\r\n                                break;\r\n                            case 'seleccion':\r\n                                input = <Radio.Group>\r\n                                    {p.respuestas.map((r, i) => { return <Radio value={i}>{r}</Radio> })}\r\n                                </Radio.Group>;\r\n                                break;\r\n                            case 'texto':\r\n                                input = < Input />;\r\n                                break;\r\n                            default:\r\n                                input = < Input />;\r\n                        }\r\n\r\n                        return p.tipo !== 'titulo' ? <Form.Item\r\n                            key={p.n}\r\n                            label={p.pregunta}\r\n                            name={p.n}\r\n                            rules={[{ required: true, message: 'Conteste correctamente' }]}\r\n                        >\r\n                            {input}\r\n                        </Form.Item> : <h5>{`${p.n}.  ${p.pregunta}`}</h5>\r\n                    })\r\n                }\r\n\r\n\r\n                <Form.Item\r\n                    wrapperCol={{\r\n                        offset: 8,\r\n                        span: 16,\r\n                    }}\r\n                >\r\n                    <Button type=\"primary\" htmlType=\"submit\">\r\n                        Guardar\r\n                    </Button>\r\n                </Form.Item>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Form, Switch, Button, Radio, Space, Row, Col, Select, message, Input } from 'antd'\r\nimport { Card } from 'antd'\r\nimport { getData, sendDataBody } from '../../../resources';\r\nimport logo from \"../../../assets/Logo.png\";\r\nimport { post_catalog } from './p_t_catalog'\r\nconst { Option } = Select;\r\n\r\nexport default function PostTraumaticoEncuesta(props) {\r\n    const [pesoEnabled, setPesoEnabled] = useState(false)\r\n    const [apetitoEnabled, setApetitoEnabled] = useState(false)\r\n    // For check if the encuesta existts on db\r\n    const [encuestaNotExists, setEncuestaNotExists] = useState(null)\r\n    const [checking, setChecking] = useState(true)\r\n    const [pacienteData, setPacienteData] = useState({})\r\n    const [medicoData, setMedicoData] = useState({})\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        checkEncuesta()\r\n    }, [])\r\n\r\n    const checkEncuesta = () => {\r\n\r\n        getData('getuser/' + props.idpaciente).then((rs) => { setPacienteData(rs) })\r\n        getData('getuser/' + props.idmedico).then((rs) => { setMedicoData(rs) })\r\n\r\n\r\n        getData(`encuestas/uuid/${props.token}`).then(rs => {\r\n            console.log(rs);\r\n            setEncuestaNotExists(rs.message === 'The survey does not exist')\r\n        }).then(() => { setChecking(false); console.log('Not exists: ', encuestaNotExists); })\r\n    }\r\n\r\n    const onFinish = (values) => {\r\n        // console.log('OriginalsF: ', values);\r\n        Object.keys(values).map(k => {\r\n            // values[k] = Object.values(values[k]);\r\n            let newArr = [];\r\n            Object.values(values[k]).forEach(str => {\r\n                newArr.push(Number(str));\r\n            })\r\n            values[k] = newArr;\r\n        }\r\n        )\r\n        console.log('Values: ', values);\r\n        const body = {\r\n            usuario: props.idpaciente,\r\n            medico: props.idmedico,\r\n            respuestas_ept1_davidson: values,\r\n            tipo: 'post_traumatico',\r\n            uuid: props.token\r\n        }\r\n\r\n        console.log('Post Traum Body:', body);\r\n        sendDataBody('encuestas/add', body).then((rs) => {\r\n          console.log(rs)\r\n          message.success(rs.message)\r\n        }).then(() => checkEncuesta())\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n        errorInfo.errorFields.map((p) => {\r\n            message.error('Conteste la pregunta ' + p.name)\r\n        })\r\n    };\r\n    const handleChange = (value) => {\r\n        // console.log(`selected ${value}`);\r\n    };\r\n\r\n    // Loading state\r\n    if (checking) return <div style={{ paddingTop: 180 }}>\r\n        <div style={{ margin: 'auto', width: '40%', textAlign: 'center' }}>\r\n            <h3 >Cargando</h3>\r\n        </div>\r\n    </div>\r\n\r\n    if (!encuestaNotExists) return <div style={{ paddingTop: 180 }}>\r\n        <div style={{ margin: 'auto', width: '40%', textAlign: 'center' }}>\r\n            <h3 >Gracias por contestar la encuesta</h3>\r\n            <img width={256} src={logo} alt=\"recreamedLogo\" style={{ margin: 'auto' }} />\r\n        </div>\r\n    </div>\r\n\r\n    return (\r\n        <div className='mainContainer'>\r\n            <h4>La Evaluación Del Trastorno Por Estrés Postraumático: Aproximación A Las Propiedades Psicométricas De La Escala De Trauma De Davidson</h4>\r\n            <br />\r\n            <h5>Medico: {medicoData.name}</h5>\r\n            <h5>Paciente: {pacienteData.name}</h5>\r\n            <br />\r\n\r\n            <Form\r\n                name=\"basic\"\r\n                layout='vertical'\r\n                // labelCol={{ span: 8 }}\r\n                // wrapperCol={{ span: 16 }}\r\n                initialValues={{ remember: true }}\r\n                onFinish={onFinish}\r\n                onFinishFailed={onFinishFailed}\r\n                autoComplete=\"off\"\r\n            >\r\n\r\n\r\n                {\r\n                    post_catalog.map((p, i) => {\r\n                        return <Form.Item label={p}>\r\n                            <Input.Group compact>\r\n                                <Form.Item\r\n                                    label='Frecuencia'\r\n                                    name={[i + 1, 'Frecuencia']}\r\n                                    noStyle\r\n                                    rules={[{ required: true, message: 'Selecciona Frecuencia' },\r\n                                    ]}\r\n                                >\r\n                                    <Space direction=\"vertical\">\r\n                                        <Card style={{ padding: 6 }}>\r\n                                            <p style={{ color: \"#5fa1c4\" }}>Frecuencia: </p>\r\n                                            <Radio.Group>\r\n                                                <Space direction=\"vertical\">\r\n                                                    <Radio value={0}> Nunca </Radio>\r\n                                                    <Radio value={1}> A Veces </Radio>\r\n                                                    <Radio value={2}> 2-3 Veces </Radio>\r\n                                                    <Radio value={3}> 4-6 Veces </Radio>\r\n                                                    <Radio value={4}> A diario </Radio>\r\n                                                </Space>\r\n                                            </Radio.Group>\r\n                                        </Card>\r\n                                    </Space>\r\n                                </Form.Item>\r\n                                <Form.Item\r\n                                    label='Gravedad'\r\n                                    name={[i + 1, 'Gravedad']}\r\n                                    noStyle\r\n                                    rules={[{ required: true, message: 'Selecciona Gravedad' }]}\r\n                                >\r\n                                    <Space direction=\"vertical\">\r\n                                        <Card style={{ padding: 6 }}>\r\n                                            <p style={{ color: \"#5fa1c4\" }}>Gravedad: </p>\r\n                                            <Radio.Group >\r\n                                                <Space direction=\"vertical\">\r\n                                                    <Radio value={0}> Nada </Radio>\r\n                                                    <Radio value={1}> Leve </Radio>\r\n                                                    <Radio value={2}> Moderada </Radio>\r\n                                                    <Radio value={3}> Marcada </Radio>\r\n                                                    <Radio value={4}> Extrema </Radio>\r\n                                                </Space>\r\n                                            </Radio.Group>\r\n                                        </Card>\r\n                                    </Space>\r\n                                </Form.Item>\r\n                            </Input.Group>\r\n                        </Form.Item>\r\n                    })\r\n                }\r\n\r\n\r\n\r\n                <Form.Item\r\n                    wrapperCol={{ offset: 8, span: 16 }}\r\n                >\r\n                    <Button type=\"primary\" htmlType=\"submit\">\r\n                        Guardar\r\n                    </Button>\r\n                </Form.Item>\r\n            </Form>\r\n\r\n        </div >\r\n    )\r\n}\r\n","export const p_t_clinico_catalog = [\r\n    {\r\n        n: 'Acontecimiento 1',\r\n        criterio: 'A',\r\n        pregunta: \"¿Qué sucedió?(¿Qué edad tenía? ¿Quién más estuvo implicado? ¿Cuántas veces leocurrió? ¿Peligró su vida? ¿Sufrió alguna lesión grave?)\\n¿Cómo respondió usted emocionalmente?(¿Estaba muy ansioso/a o asustado/a?¿Horrorizado/a? ¿Indefenso? ¿Cómo fue? ¿Estaba aturdido/a, o en un estado deshock tal que no sentía nada en absoluto? ¿A qué se parecía? ¿Cómo fue? ¿Quénotaron otras personas sobre su respuesta emocional? Y después del aconteci-miento ¿cómo respondió emocionalmente?)\\nDescriba (p. ej., tipo de acontecimiento, víctima, causante, edad, frecuencia):\",\r\n\r\n    },\r\n    {\r\n        n: 'Acontecimiento 2',\r\n        criterio: 'B',\r\n        pregunta: \"¿Qué sucedió?(¿Qué edad tenía? ¿Quién más estuvo implicado? ¿Cuántas veces leocurrió? ¿Peligró su vida? ¿Sufrió alguna lesión grave?)\\n¿Cómo respondió usted emocionalmente?(¿Estaba muy ansioso/a o asustado/a?¿Horrorizado/a? ¿Indefenso? ¿Cómo fue? ¿Estaba aturdido/a, o en un estado deshock tal que no sentía nada en absoluto? ¿A qué se parecía? ¿Cómo fue? ¿Quénotaron otras personas sobre su respuesta emocional? Y después del aconteci-miento, ¿cómo respondió emocionalmente?)\\nDescriba (p. ej., tipo de acontecimiento, víctima, causante, edad, frecuencia):\",\r\n\r\n    },\r\n    {\r\n        n: 'Acontecimiento 3',\r\n        criterio: 'C',\r\n        pregunta: \"¿Qué sucedió?(¿Qué edad tenía? ¿Quién más estuvo implicado? ¿Cuántas veces le ocurrió? ¿Peligró su vida? ¿Sufrió alguna lesión grave?)\\n¿Cómo respondió usted emocionalmente?(¿Estaba muy ansioso/a o asustado/a?¿Horrorizado/a? ¿Indefenso? ¿Cómo fue? ¿Estaba aturdido/a, o en un estado deshock tal que no sentía nada en absoluto? ¿A qué se parecía? ¿Cómo fue? ¿Quénotaron otras personas sobre su respuesta emocional? Y después del aconteci-miento, ¿cómo respondió emocionalmente?)\\nDescriba (p. ej., tipo de acontecimiento, víctima, causante, edad, frecuencia):\",\r\n    }\r\n]\r\n\r\nexport const p_t_clinico_catalog_2 = [\r\n    [\r\n        {p: \"\",r: [\"\",\"\",\"\"]},\r\n        \"¿Alguna vez se ha disgustado cuando algo le ha recordado el acontecimiento? (Algo le ha desenca-denado malestar relacionado con elaconteci-miento) ¿Qué clase de recuerdos le han disgus-tado? ¿Con qué frecuencia durante el últimomes?0.  Nunca1.  Una o dos veces2.  Una o dos veces por semana3.  Varias veces por semana4.  Diariamente o casi todos los díasDescripción/Ejemplos: \",\r\n        \"¿Cuánto malestar o molestia le han causado estosrecuerdos? ¿Fue capaz de quitárselos de la mente yde pensar en otra cosa? ¿Cuánto esfuerzo tuvo quehacer? ¿Cuánto interfirieron estos recuerdos en suvida?\"\r\n    ],\r\n    [\r\n        \"\",\r\n        \"\"\r\n    ]\r\n]\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Form, Switch, Button, Radio, Space, Row, Col, Select, message, Input } from 'antd'\r\nimport { Card } from 'antd'\r\nimport { getData, sendDataBody } from '../../../resources';\r\nimport { p_t_clinico_catalog } from './p_t_clinico_catalog'\r\nimport logo from \"../../../assets/Logo.png\";\r\nconst { TextArea } = Input;\r\nexport default function PTClinicoEncuesta(props) {\r\n    const [pesoEnabled, setPesoEnabled] = useState(false)\r\n    const [apetitoEnabled, setApetitoEnabled] = useState(false)\r\n    // For check if the encuesta existts on db\r\n    const [encuestaNotExists, setEncuestaNotExists] = useState(null)\r\n    const [checking, setChecking] = useState(true)\r\n    const [pacienteData, setPacienteData] = useState({})\r\n    const [medicoData, setMedicoData] = useState({})\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        checkEncuesta()\r\n    }, [])\r\n\r\n    const checkEncuesta = () => {\r\n\r\n        getData('getuser/' + props.idpaciente).then((rs) => { setPacienteData(rs) })\r\n        getData('getuser/' + props.idmedico).then((rs) => { setMedicoData(rs) })\r\n\r\n\r\n        getData(`encuestas/uuid/${props.token}`).then(rs => {\r\n            console.log(rs);\r\n            setEncuestaNotExists(rs.message === 'The survey does not exist')\r\n        }).then(() => { setChecking(false); console.log('Not exists: ', encuestaNotExists); })\r\n    }\r\n\r\n    const onFinish = (values) => {\r\n\r\n\r\n        console.log('Vals EPTClinic: ', values);\r\n        const body = {\r\n            usuario: props.idpaciente,\r\n            medico: props.idmedico,\r\n            score: values,\r\n            tipo: 'depresion',\r\n            uuid: props.token\r\n        }\r\n\r\n        console.log('Efectos body:', body);\r\n        sendDataBody('encuestas/add', body).then((rs) => {\r\n            console.log(rs)\r\n            message.success(rs.message)\r\n        }).then(() => checkEncuesta())\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n        errorInfo.errorFields.map((p) => {\r\n            message.error('Conteste la pregunta ' + p.name)\r\n        })\r\n    };\r\n    const handleChange = (value) => {\r\n        // console.log(`selected ${value}`);\r\n    };\r\n\r\n    // Loading state\r\n    if (checking) return <div style={{ paddingTop: 180 }}>\r\n        <div style={{ margin: 'auto', width: '40%', textAlign: 'center' }}>\r\n            <h3 >Cargando</h3>\r\n        </div>\r\n    </div>\r\n\r\n    if (!encuestaNotExists) return <div style={{ paddingTop: 180 }}>\r\n        <div style={{ margin: 'auto', width: '40%', textAlign: 'center' }}>\r\n            <h3 >Gracias por contestar la encuesta</h3>\r\n            <img width={256} src={logo} alt=\"recreamedLogo\" style={{ margin: 'auto' }} />\r\n        </div>\r\n    </div>\r\n\r\n    const Radios = (props) => {\r\n        const l = props.letra;\r\n        const n = props.numero;\r\n        return <div>\r\n\r\n            <h6>A(1)</h6>\r\n\r\n            <Form.Item label='¿Amenaza vital?' name={`Ac${n}_A1_1`} rules={[{ required: true, message: `Selecciona una opcion` }]} >\r\n                <Radio.Group name={props.nombre} key={props.nombre} >\r\n                    <Radio value=\"No\">No</Radio>\r\n                    <Radio value=\"Si\">Si</Radio>\r\n                    <Radio value=\"Sujeto\">Sujeto</Radio>\r\n                    <Radio value=\"Otro\">Otro</Radio>\r\n                </Radio.Group>\r\n            </Form.Item>\r\n\r\n            <Form.Item label='¿Lesion Grave?' name={`Ac${n}_A1_2`} rules={[{ required: true, message: `Selecciona una opcion` }]} >\r\n                <Radio.Group name={props.nombre} key={props.nombre} >\r\n                    <Radio value=\"No\">No</Radio>\r\n                    <Radio value=\"Si\">Si</Radio>\r\n                    <Radio value=\"Sujeto\">Sujeto</Radio>\r\n                    <Radio value=\"Otro\">Otro</Radio>\r\n                </Radio.Group>\r\n            </Form.Item>\r\n\r\n            <Form.Item label='¿Amenaza de la integridad física?' name={`Ac${props.n}_A2`} rules={[{ required: true, message: `Selecciona una opcion` }]} >\r\n                <Radio.Group name={props.nombre} key={props.nombre} >\r\n                    <Radio value=\"No\">No</Radio>\r\n                    <Radio value=\"Si\">Si</Radio>\r\n                    <Radio value=\"Sujeto\">Sujeto</Radio>\r\n                    <Radio value=\"Otro\">Otro</Radio>\r\n                </Radio.Group>\r\n            </Form.Item>\r\n\r\n            <h6>{l}(2)</h6>\r\n            <Form.Item label='¿Miedo intenso/indefensión/horror?' name={`Ac${props.n}_CritA`} rules={[{ required: true, message: `Selecciona una opcion` }]} >\r\n                <Radio.Group name={props.nombre} key={props.nombre} >\r\n                    <Radio value=\"No\">No</Radio>\r\n                    <Radio value=\"Si\">Si</Radio>\r\n                    <Radio value=\"Durante\">Durante</Radio>\r\n                    <Radio value=\"Despues\">Despues</Radio>\r\n                </Radio.Group>\r\n            </Form.Item>\r\n\r\n            <h6>Criterio A</h6>\r\n            <Form.Item label='¿Se cumple?' name={`Ac${props.n}_A1_3`} rules={[{ required: true, message: `Selecciona una opcion` }]} >\r\n                <Radio.Group name={props.nombre} key={props.nombre} >\r\n                    <Radio value=\"No\">No</Radio>\r\n                    <Radio value=\"Probable\">Probable</Radio>\r\n                    <Radio value=\"Si\">Si</Radio>\r\n                </Radio.Group>\r\n            </Form.Item>\r\n\r\n        </div>\r\n\r\n\r\n    }\r\n\r\n    return (\r\n        <div className='mainContainer'>\r\n            <h4>Escala para el Trastorno por Estrés Postraumático Administradapor el Clínico (Clinician Administered PTSD Scale, CAPS)</h4>\r\n            <br />\r\n            <h5>Medico: {medicoData.name}</h5>\r\n            <h5>Paciente: {pacienteData.name}</h5>\r\n            <br />\r\n\r\n            <Form\r\n                name=\"basic\"\r\n                layout='vertical'\r\n                // labelCol={{ span: 8 }}\r\n                // wrapperCol={{ span: 16 }}\r\n                initialValues={{ remember: true }}\r\n                onFinish={onFinish}\r\n                onFinishFailed={onFinishFailed}\r\n                autoComplete=\"off\"\r\n            >\r\n\r\n                {\r\n                    p_t_clinico_catalog.map((p) => {\r\n                        return <div>\r\n\r\n                            <h5>{p.n}</h5>\r\n                            <Row>\r\n                                <Col span={12} style={{ padding: 6 }}>\r\n                                    <Form.Item\r\n                                        label={p.pregunta}\r\n                                        name=\"Ac1\"\r\n                                        rules={[{ required: true, message: `Selecciona una opcion` }]}\r\n                                    >\r\n                                        <TextArea />\r\n                                    </Form.Item>\r\n                                </Col>\r\n                                <Col span={12}>\r\n                                    <Card>\r\n                                        <Radios letra={p.criterio} />\r\n                                    </Card>\r\n                                </Col>\r\n\r\n\r\n                            </Row>\r\n                        </div>\r\n                    })\r\n                }\r\n\r\n                <Form.Item wrapperCol={{ offset: 8, span: 16 }} >\r\n                    <Button type=\"primary\" htmlType=\"submit\">\r\n                        Guardar\r\n                    </Button>\r\n                </Form.Item>\r\n            </Form>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Form, Switch, Button, Radio, Space, Row, Col, Select, message, Divider } from 'antd'\r\nimport { getData, sendDataBody } from '../../../resources';\r\nimport logo from \"../../../assets/Logo.png\";\r\nimport { catalog_ept_mexicana } from './p_t_mexicana_catalog';\r\n\r\nexport default function PTMexicanaEncuesta(props) {\r\n\r\n    const [pesoEnabled, setPesoEnabled] = useState(false)\r\n    const [apetitoEnabled, setApetitoEnabled] = useState(false)\r\n    // For check if the encuesta existts on db\r\n    const [encuestaNotExists, setEncuestaNotExists] = useState(null)\r\n    const [checking, setChecking] = useState(true)\r\n    const [pacienteData, setPacienteData] = useState({})\r\n    const [medicoData, setMedicoData] = useState({})\r\n\r\n\r\n    useEffect(() => {\r\n        checkEncuesta()\r\n    }, [])\r\n\r\n    const checkEncuesta = () => {\r\n\r\n        getData('getuser/' + props.idpaciente).then((rs) => { setPacienteData(rs) })\r\n        getData('getuser/' + props.idmedico).then((rs) => { setMedicoData(rs) })\r\n\r\n\r\n        getData(`encuestas/uuid/${props.token}`).then(rs => {\r\n            console.log(rs);\r\n            setEncuestaNotExists(rs.message === 'The survey does not exist')\r\n        }).then(() => { setChecking(false); console.log('Not exists: ', encuestaNotExists); })\r\n    }\r\n\r\n    const onFinish = (values) => {\r\n\r\n        console.log('vals depres MX: ', values);\r\n        const body = {\r\n            usuario: props.idpaciente,\r\n            medico: props.idmedico,\r\n            respuestas_ept_3mx: values,\r\n            tipo: 'post_traumatico_mx',\r\n            uuid: props.token\r\n        }\r\n        sendDataBody('encuestas/add', body).then((rs) => {\r\n            console.log(rs)\r\n            message.success(rs.message)\r\n        }).then(() => checkEncuesta())\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n        errorInfo.errorFields.map((p) => {\r\n            message.error('Conteste la pregunta ' + p.name)\r\n        })\r\n    };\r\n    const handleChange = (value) => {\r\n        // console.log(`selected ${value}`);\r\n    };\r\n\r\n    // Loading state\r\n    if (checking) return <div style={{ paddingTop: 180 }}>\r\n        <div style={{ margin: 'auto', width: '40%', textAlign: 'center' }}>\r\n            <h3 >Cargando</h3>\r\n        </div>\r\n    </div>\r\n\r\n    if (!encuestaNotExists) return <div style={{ paddingTop: 180 }}>\r\n        <div style={{ margin: 'auto', width: '40%', textAlign: 'center' }}>\r\n            <h3 >Gracias por contestar la encuesta</h3>\r\n            <img width={256} src={logo} alt=\"recreamedLogo\" style={{ margin: 'auto' }} />\r\n        </div>\r\n    </div>\r\n\r\n    return (\r\n        <div className='mainContainer'>\r\n            <h4>Validación mexicana de la Escala de Estrés Traumático Secundario  </h4>\r\n            <br />\r\n            <h5>Medico: {medicoData.name}</h5>\r\n            <h5>Paciente: {pacienteData.name}</h5>\r\n            <br />\r\n\r\n            <Form\r\n                name=\"p_t_mx\"\r\n                layout='vertical'\r\n                // labelCol={{ span: 8 }}\r\n                // wrapperCol={{ span: 16 }}\r\n                initialValues={{ remember: true }}\r\n                onFinish={onFinish}\r\n                onFinishFailed={onFinishFailed}\r\n                autoComplete=\"off\"\r\n            >\r\n\r\n                {\r\n                    catalog_ept_mexicana.map((p, i) => {\r\n                        return <Form.Item\r\n                            key={i}\r\n                            label={p}\r\n                            name={i + 1}\r\n                            rules={[{ required: true, message: `Selecciona una opcion` }]}\r\n                        >\r\n                            <Radio.Group>\r\n                                <Space direction=\"vertical\">\r\n                                    <Radio value={1}>Totalmente en desacuerdo.</Radio>\r\n                                    <Radio value={2}>En desacuerdo. </Radio>\r\n                                    <Radio value={3}>De acuerdo. </Radio>\r\n                                    <Radio value={4}>Totalmente de acuerdo. </Radio>\r\n                                </Space>\r\n                            </Radio.Group>\r\n                        </Form.Item>\r\n                    })\r\n                }\r\n\r\n                <br />\r\n\r\n                <Form.Item\r\n                    wrapperCol={{ offset: 8, span: 16 }}\r\n                >\r\n                    <Button type=\"primary\" htmlType=\"submit\">\r\n                        Guardar\r\n                    </Button>\r\n                </Form.Item>\r\n            </Form>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { satisfaccion_catalog } from './satisfaccion_catalog';\r\nimport { Form, Input, Button, Slider, Checkbox, Radio, message } from 'antd';\r\nimport { getData, sendDataBody } from '../../resources';\r\nimport logo from \"../../assets/Logo.png\";\r\n\r\nexport default function SatisfaccionEncuesta(props) {\r\n    // For check if the encuesta existts on db\r\n    const [encuestaNotExists, setEncuestaNotExists] = useState(null)\r\n    const [checking, setChecking] = useState(true)\r\n    const [pacienteData, setPacienteData] = useState({})\r\n    const [medicoData, setMedicoData] = useState({})\r\n\r\n    useEffect(() => {\r\n        checkEncuesta()\r\n    }, [])\r\n\r\n\r\n    const checkEncuesta = () => {\r\n\r\n        getData('getuser/' + props.idpaciente).then((rs) => { setPacienteData(rs) })\r\n        getData('getuser/' + props.idmedico).then((rs) => { setMedicoData(rs) })\r\n\r\n\r\n        getData(`encuestas/uuid/${props.token}`).then(rs => {\r\n            console.log(rs);\r\n            setEncuestaNotExists(rs.message === 'The survey does not exist')\r\n        }).then(() => { setChecking(false); console.log('Not exists: ', encuestaNotExists); })\r\n    }\r\n\r\n    const onFinish = (values) => {\r\n        const body = {\r\n            usuario: props.idpaciente,\r\n            medico: props.idmedico,\r\n            encuesta_satisfaccion: values,\r\n            tipo: 'satisfaccion',\r\n            uuid: props.token\r\n        }\r\n        console.log('Body:', body);\r\n        sendDataBody('encuestas/add', body).then((rs) => {\r\n            console.log('add enc resp', rs)\r\n            message.success(rs.message)\r\n        }).then(() => checkEncuesta())\r\n    };\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n        errorInfo.errorFields.map((p) => {\r\n            message.error('Conteste la pregunta ' + p.name)\r\n        })\r\n    };\r\n    const onChange = (checkedValues) => {\r\n        console.log('checked = ', checkedValues);\r\n    };\r\n\r\n    const marks = { 0: '0', 10: '10' };\r\n\r\n    // Loading state\r\n    if (checking) return <div style={{ paddingTop: 180 }}>\r\n        <div style={{ margin: 'auto', width: '40%', textAlign: 'center' }}>\r\n            <h3 >Cargando</h3>\r\n        </div>\r\n    </div>\r\n\r\n    if (!encuestaNotExists) return <div style={{ paddingTop: 180 }}>\r\n        <div style={{ margin: 'auto', width: '40%', textAlign: 'center' }}>\r\n            <h3 >Gracias por contestar la encuesta</h3>\r\n            <img width={256} src={logo} alt=\"recreamedLogo\" style={{ margin: 'auto' }} />\r\n        </div>\r\n    </div>\r\n    return (\r\n        <div className='mainContainer'>\r\n            <h4>Encuesta de Satisfaccion</h4>\r\n            <br />\r\n            <h5>Medico: {medicoData.name}</h5>\r\n            <h5>Paciente: {pacienteData.name}</h5>\r\n            <br />\r\n            <Form\r\n                layout='vertical'\r\n                name=\"basic\"\r\n                // labelCol={{ span: 24 }}\r\n                // wrapperCol={{ span: 24 }}\r\n                // initialValues={initialDolorValues}\r\n                onFinish={onFinish}\r\n                onFinishFailed={onFinishFailed}\r\n                autoComplete=\"off\"\r\n            >\r\n                {\r\n                    satisfaccion_catalog.map((p) => {\r\n                        let input;\r\n                        switch (p.tipo) {\r\n                            case 'radioButton':\r\n                                input = <Radio.Group onChange={onChange} defaultValue=\"a\">\r\n                                    {p.respuestas.map((r, i) => { return <Radio.Button value={i}>{r}</Radio.Button> })}\r\n                                </Radio.Group>\r\n                                break;\r\n                            case 'metrica':\r\n                                input = <Slider defaultValue={0} min={0} max={10} marks={marks} />\r\n                                break;\r\n                            case 'multiple':\r\n                                input = <Checkbox.Group options={p.respuestas} defaultValue={['Apple']} onChange={onChange} />\r\n                                break;\r\n                            case 'seleccion':\r\n                                input = <Radio.Group>\r\n                                    {p.respuestas.map((r, i) => { return <Radio value={i === 0 ? false : true}>{r} val: {i === 0 ? 'false' : 'true'}</Radio> })}\r\n                                </Radio.Group>;\r\n                                break;\r\n                            case 'texto':\r\n                                input = < Input />;\r\n                                break;\r\n                            default:\r\n                                input = < Input />;\r\n                        }\r\n\r\n                        return p.tipo !== 'titulo' ? <Form.Item\r\n                            key={p.n}\r\n                            label={p.pregunta}\r\n                            name={p.n}\r\n                            rules={[{ required: true, message: 'Conteste correctamente' }]}\r\n                        >\r\n                            {input}\r\n                        </Form.Item> : <h5>{`${p.n}.  ${p.pregunta}`}</h5>\r\n                    })\r\n                }\r\n\r\n\r\n                <Form.Item\r\n                    wrapperCol={{\r\n                        offset: 8,\r\n                        span: 16,\r\n                    }}\r\n                >\r\n                    <Button type=\"primary\" htmlType=\"submit\">\r\n                        Guardar\r\n                    </Button>\r\n                </Form.Item>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nimport { useParams } from \"react-router-dom\";\r\nimport KetaminaEncuesta from '../escalas/ketamina/ketaminaEncuesta'\r\nimport DepresionEncuesta from '../escalas/depresion/depresion_1/depresionEncuesta';\r\nimport Depresion2Encuesta from '../escalas/depresion/depresion_2/depresion2_encuesta';\r\nimport DolorEncuesta from '../escalas/dolor/dolorEncuesta';\r\nimport PostTraumaticoEncuesta from '../escalas/estres_post_traumatico/post_traumatico/p_t_encuesta';\r\nimport PTClinicoEncuesta from '../escalas/estres_post_traumatico/p_t_clinico/p_t_clinico_encuesta';\r\nimport PTMexicanaEncuesta from '../escalas/estres_post_traumatico/p_t_mexicana/p_t_mexicana_encuesta';\r\nimport SatisfaccionEncuesta from '../escalas/satisfaccion/satisfaccionEncuesta';\r\n\r\n// Ketamina\r\nexport function KetaminaPublic() {\r\n    let { idmedico, idpaciente, key } = useParams();\r\n    console.log(key)\r\n    return (\r\n        <div>\r\n            <KetaminaEncuesta idmedico={idmedico} idpaciente={idpaciente} token={key} />\r\n        </div>\r\n    )\r\n}\r\n\r\n// Depresion 1 \r\nexport function DepresionQidsPublic() {\r\n    let { idmedico, idpaciente, key } = useParams();\r\n    console.log(key)\r\n    return (\r\n        <div>\r\n            <DepresionEncuesta idmedico={idmedico} idpaciente={idpaciente} token={key} />\r\n        </div>\r\n    )\r\n}\r\n\r\n// Depresion 2 gpc \r\nexport function DepresionEspanolPublic() {\r\n    let { idmedico, idpaciente, key } = useParams();\r\n    console.log(key)\r\n    return (\r\n        <div>\r\n            <Depresion2Encuesta idmedico={idmedico} idpaciente={idpaciente} token={key} />\r\n        </div>\r\n    )\r\n}\r\n\r\n// Dolor\r\nexport function HeadachePublic() {\r\n    let { idmedico, idpaciente, key } = useParams();\r\n    console.log(key)\r\n    return (\r\n        <div>\r\n            <DolorEncuesta idmedico={idmedico} idpaciente={idpaciente} token={key} />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n// Post Trauma 1 \r\nexport function PostTraumaticoPublic() {\r\n    let { idmedico, idpaciente, key } = useParams();\r\n    console.log(key)\r\n    return (\r\n        <div>\r\n            <PostTraumaticoEncuesta idmedico={idmedico} idpaciente={idpaciente} token={key} />\r\n        </div>\r\n    )\r\n}\r\n\r\n// Post Trauma 2 Clinico Hoja Verde\r\nexport function PostTraumaticoClinicoPublic() {\r\n    let { idmedico, idpaciente, key } = useParams();\r\n    console.log(key)\r\n    return (\r\n        <div>\r\n            <PTClinicoEncuesta idmedico={idmedico} idpaciente={idpaciente} token={key} />\r\n        </div>\r\n    )\r\n}\r\n\r\n// Post Trauma Mexicana\r\nexport function PostTraumaticoMX() {\r\n    let { idmedico, idpaciente, key } = useParams();\r\n    console.log(key)\r\n    return (\r\n        <div>\r\n            <PTMexicanaEncuesta idmedico={idmedico} idpaciente={idpaciente} token={key} />\r\n        </div>\r\n    )\r\n}\r\n\r\n// Escala de satosfaccion\r\nexport function SatisfaccionPublic() {\r\n    let { idmedico, idpaciente, key } = useParams();\r\n    console.log(key)\r\n    return (\r\n        <div>\r\n            {/* <PTMexicanaEncuesta idmedico={idmedico} idpaciente={idpaciente} token={key} /> */}\r\n            <SatisfaccionEncuesta idmedico={idmedico} idpaciente={idpaciente} token={key} />\r\n        </div>\r\n    )\r\n}\r\n","import { Table } from 'antd';\r\nimport React from 'react'\r\n\r\nconst dataSource = [\r\n    {\r\n        key: '1',\r\n        name: '25/04/2023',\r\n        age: '8:00',\r\n        address: '16:00',\r\n    },\r\n    {\r\n        key: '1',\r\n        name: '25/04/2023',\r\n        age: '8:00',\r\n        address: '16:00',\r\n    },\r\n    {\r\n        key: '1',\r\n        name: '25/04/2023',\r\n        age: '8:00',\r\n        address: '16:00',\r\n    }\r\n];\r\n\r\nconst columns = [\r\n    {\r\n        title: 'Fecha',\r\n        dataIndex: 'name',\r\n        key: 'name',\r\n    },\r\n    {\r\n        title: 'Hora de entrada',\r\n        dataIndex: 'age',\r\n        key: 'age',\r\n    },\r\n    {\r\n        title: 'Hora de salida',\r\n        dataIndex: 'address',\r\n        key: 'address',\r\n    },\r\n];\r\n\r\nexport default function Horarios() {\r\n    return (\r\n        <div className='mainContainer'>\r\n            <h4>Horarios de: 6334b651YNSDFN739FJNKSJD </h4>\r\n\r\n            <Table dataSource={dataSource} columns={columns} />\r\n            <div style={{height: 200}}></div>\r\n        </div>\r\n\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Button } from 'antd'\r\nimport { Container, Nav, Navbar } from \"react-bootstrap\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport Patients from './pacientesDash/main.patients'\r\nimport Citas from './citas/main.citas'\r\n// import Recetas from './recetas'\r\nimport Perfil from './perfil'\r\nimport Home from './home/home'\r\nimport icon from '../assets/Icon.png';\r\nimport { Footer, logout } from '../resources'\r\nimport { usuario } from '../resources'\r\nimport { Historial } from './historial';\r\nimport MainPacientes from './pacientes/main.pacientes';\r\nimport Escalas from '../escalas/escalasMenu';\r\nimport Ingresos from './ingresos/ingresos';\r\nimport { KetaminaPublic, DepresionQidsPublic, DepresionEspanolPublic, HeadachePublic, PostTraumaticoPublic, PostTraumaticoClinicoPublic, PostTraumaticoMX } from '../session/public_escalas_routes';\r\nimport Horarios from './horarios/horarios';\r\n// import { KetaminaPublic, DepresionQidsPublic, DepresionEspanolPublic,HeadachePublic, PostTraumaticoPublic, PostTraumaticoClinicoPublic, PostTraumaticoMX } from './session/public_escalas_routes';\r\n\r\nfunction Navigator() {\r\n  console.log(\"DoctorApp\", usuario.name)\r\n  return <Navbar bg=\"primary\" variant=\"dark\" expand=\"lg\">\r\n    <Container>\r\n      <img\r\n        src={icon}\r\n        width=\"40\"\r\n        height=\"35\"\r\n        className=\"d-inline-block align-top\"\r\n        alt=\"Recreamed logo\"\r\n        style={{ marginRight: 6 }}\r\n      />\r\n      <Navbar.Brand href=\"#home\" style={{ fontFamily: 'Poppins', color: 'White' }}>\r\n        Bienvenido {usuario.name}\r\n      </Navbar.Brand>\r\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n      <Navbar.Collapse id=\"basic-navbar-nav\">\r\n        <Nav className=\"me-auto\">\r\n          <Nav.Link href=\"/\">Inicio</Nav.Link>\r\n          {/* <Nav.Link href=\"/pacientesdash\">PacientesDash</Nav.Link> */}\r\n          <Nav.Link href=\"/pacientes\" >Pacientes</Nav.Link>\r\n          <Nav.Link href=\"/citas\">Citas</Nav.Link>\r\n          <Nav.Link href=\"/escalas\">Escalas</Nav.Link>\r\n          {/* <Nav.Link href=\"/horarios\">Horarios</Nav.Link> */}\r\n          <Nav.Link href=\"/balances\">Balances</Nav.Link>\r\n          {/* <Nav.Link href=\"/expedientes\">Expedientes</Nav.Link> */}\r\n          {/* <Nav.Link href=\"/recetas\">Recetas</Nav.Link> */}\r\n          {/* <Nav.Link href=\"/notas\">Notas</Nav.Link> */}\r\n          {/* <Nav.Link href=\"/historial\">Historiales</Nav.Link> */}\r\n          <Nav.Link href=\"/perfil\">Mi Perfil</Nav.Link>\r\n        </Nav>\r\n      </Navbar.Collapse>\r\n      <Navbar.Collapse className=\"justify-content-end\">\r\n        <Button onClick={logout} ghost>Cerrar Sesion</Button>\r\n      </Navbar.Collapse>\r\n    </Container>\r\n  </Navbar>\r\n\r\n}\r\n\r\nexport default function RecepcionApp() {\r\n\r\n  return (\r\n    <Router>\r\n\r\n      <Navigator />\r\n\r\n      <Switch>\r\n\r\n        {/* Deprecated */}\r\n        <Route path=\"/pacientesdash\">\r\n          <Patients />\r\n        </Route>\r\n\r\n        <Route path=\"/pacientes\">\r\n          <MainPacientes />\r\n        </Route>\r\n\r\n        <Route path=\"/citas\">\r\n          <Citas />\r\n        </Route>\r\n\r\n        {/* <Route path=\"/Recetas\">\r\n          <Recetas />\r\n        </Route> */}\r\n\r\n        <Route path=\"/perfil\">\r\n          <Perfil />\r\n        </Route>\r\n\r\n        <Route path=\"/historial\">\r\n          <Historial />\r\n        </Route>\r\n\r\n        <Route path=\"/balances\">\r\n          <Ingresos />\r\n        </Route>\r\n\r\n        <Route path=\"/horarios\">\r\n          <Horarios />\r\n        </Route>\r\n\r\n        <Route path=\"/escalas\">\r\n          {/* This is taken from escalas directory*/}\r\n          <Escalas />\r\n        </Route>\r\n\r\n\r\n        {/* Scales Routes just like anonymous */}\r\n        <Route path=\"/ketamina_public/:idmedico/:idpaciente/:key\">\r\n          <KetaminaPublic />\r\n        </Route>\r\n        <Route path=\"/dolor_public/:idmedico/:idpaciente/:key\">\r\n          <HeadachePublic />\r\n        </Route>\r\n        <Route path=\"/depresion_qids_public/:idmedico/:idpaciente/:key\">\r\n          <DepresionQidsPublic />\r\n        </Route>\r\n        <Route path=\"/depresion_gpc_public/:idmedico/:idpaciente/:key\">\r\n          <DepresionEspanolPublic />\r\n        </Route>\r\n        <Route path=\"/post_traumatico_public/:idmedico/:idpaciente/:key\">\r\n          <PostTraumaticoPublic />\r\n        </Route>\r\n        <Route path=\"/post_traumatico_clinico_public/:idmedico/:idpaciente/:key\">\r\n          <PostTraumaticoClinicoPublic />\r\n        </Route>\r\n        <Route path=\"/post_traumatico_mx_public/:idmedico/:idpaciente/:key\">\r\n          <PostTraumaticoMX />\r\n        </Route>\r\n\r\n        {/* End of Scales Routes just like anonymous */}\r\n\r\n\r\n        <Route path=\"/\">\r\n          <MainPacientes />\r\n\r\n        </Route>\r\n\r\n      </Switch>\r\n\r\n      <Footer />\r\n    </Router>\r\n  )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Table, Space, Row, Col, Button, Modal, Form, Input, message, DatePicker } from 'antd';\r\nimport { Calendar, Badge } from 'antd';\r\nimport { API, getData } from '../resources';\r\nimport { usuario } from '../resources';\r\nimport Loading from '../loading'\r\n// import { API } from '../resources'\r\n// import Stripe from './stripe/stripe';\r\n\r\nexport default function MisCitas() {\r\n    const [isModalVisible, setIsModalVisible] = useState(false);\r\n    const [citasData, setCitasData] = useState([])\r\n    const [isLoading, setIsLoading] = useState(true)\r\n    const [cita, setCita] = useState({})\r\n    const [isDetailVisible, setIsDetailVisible] = useState(false);\r\n\r\n    useEffect(() => {\r\n        getCitasData()\r\n        // getData(`receta/${props.receta}`).then(rs => { setRecetaData(rs); setRecetaLoading(false) })\r\n\r\n    }, [])\r\n\r\n    const getCitasData = () => {\r\n        fetch(API + `citas/${usuario._id}`)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log(data); setCitasData(data);\r\n            })\r\n            .finally(() => setIsLoading(false))\r\n    }\r\n\r\n    // Add Modal\r\n    const showModal = () => { setIsModalVisible(true) };\r\n    const handleOk = () => { setIsModalVisible(false) };\r\n    const handleCancel = () => { setIsModalVisible(false) };\r\n    // Details Modal\r\n    const handleDetailOk = () => { setIsDetailVisible(false); };\r\n    const handleDetailCancel = () => { setIsDetailVisible(false); };\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Fecha y Hora',\r\n            dataIndex: 'fecha_hora',\r\n            key: 'fecha_hora',\r\n            render: text => <a>{text}</a>,\r\n        },\r\n        {\r\n            title: 'Paciente',\r\n            dataIndex: 'id_usuario',\r\n            key: 'id_usuario',\r\n        },\r\n        {\r\n            title: 'Sucursal',\r\n            dataIndex: 'id_sucursal',\r\n            key: 'v',\r\n        },\r\n        {\r\n            title: 'Comentarios',\r\n            dataIndex: 'comentarios',\r\n            key: 'comentarios',\r\n        },\r\n        {\r\n            title: 'Detalles',\r\n            key: 'detalles',\r\n            render: (text, record) => (\r\n                <Space size=\"middle\">\r\n                    {/* <a href>Enlace</a> */}\r\n                    <Button>Enlace</Button>\r\n                </Space>\r\n            ),\r\n        },\r\n    ];\r\n\r\n    const onFinish = (values) => {\r\n        values.medico = usuario._id;\r\n        console.log('Valores:', values);\r\n        fetch(API + 'citas/add', {\r\n            method: 'POST',\r\n            body: JSON.stringify(values),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }).then(res => res.json())\r\n            .then(response => { console.log('Success:', response); message.success(response.message || response.error); })\r\n            .catch(error => console.error('Error:', error))\r\n            .finally(() => { getCitasData(); setIsModalVisible(false) })\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    // DatePicker\r\n    function onChange(value, dateString) {\r\n        console.log('Selected Time: ', value);\r\n        console.log('Formatted Selected Time: ', dateString);\r\n    }\r\n    function onOk(value) {\r\n        console.log('onOk: ', value);\r\n    }\r\n\r\n    //Calendar Functions\r\n    const getMonthData = (value) => {\r\n        if (value.month() === 8) {\r\n            return 1394;\r\n        }\r\n    };\r\n    const monthCellRender = (value) => {\r\n        const num = getMonthData(value);\r\n        return num ? (\r\n            <div className=\"notes-month\">\r\n                <section>{num}</section>\r\n                <span>Backlog number</span>\r\n            </div>\r\n        ) : null;\r\n    };\r\n\r\n    const dateCellRender = (value) => {\r\n        // const hoy = value.format('L');\r\n        let hoy = value.format();\r\n        hoy = hoy.substring(0, 10)\r\n        return (\r\n            <ul className=\"events\">\r\n                {citasData.map((cita) => {\r\n\r\n                    cita.fecha_hora = cita.fecha_hora.substring(0, 10);\r\n                    return cita.fecha_hora === hoy ?\r\n                        <li style={{ listStyleType: 'none' }} key={cita._id}>\r\n                            <Badge status='success' text={cita.medico.name} onClick={() => { setCita(cita); setIsDetailVisible(true); }} />\r\n                        </li>\r\n                        : <></>\r\n\r\n                })\r\n                }\r\n            </ul >\r\n        );\r\n    };\r\n\r\n    return (\r\n        <div className='mainContainer'>\r\n            <Row>\r\n                <Col span={8}><h4>CALENDARIO DE CITAS</h4></Col>\r\n                <Col>\r\n                    <Button type=\"primary\" onClick={showModal}>\r\n                        Nueva Cita\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n\r\n            {/* {isLoading ? <Loading /> : <Table columns={columns} dataSource={citasData} />} */}\r\n\r\n            <Calendar dateCellRender={dateCellRender} monthCellRender={monthCellRender} />\r\n\r\n\r\n\r\n            <Modal title=\"Nuevo expediente\" visible={isModalVisible} onOk={handleOk} onCancel={handleCancel}>\r\n                <Form name=\"expediente\" labelCol={{ span: 8 }} wrapperCol={{ span: 12 }} onFinish={onFinish} onFinishFailed={onFinishFailed} autoComplete=\"off\" >\r\n\r\n                    <Form.Item label=\"Paciente\" name=\"usuario\" rules={[{ required: true, message: 'Ingresa RFC' }]} >\r\n                        <Input />\r\n                    </Form.Item>\r\n                    <Form.Item label=\"Sucursal\" name=\"sucursal\" rules={[{ required: true, message: 'Ingresa RFC' }]} >\r\n                        <Input />\r\n                    </Form.Item>\r\n                    <Form.Item label=\"Fecha y Hora\" name=\"fecha_hora\" rules={[{ required: true, message: 'Selecciona Fecha y Hora' }]} >\r\n                        <DatePicker showTime onChange={onChange} onOk={onOk} placeholder='Selecciona Fecha y Hora' />\r\n                    </Form.Item>\r\n                    <Form.Item label=\"Enlace a la reunion\" name=\"id_reunion\" rules={[{ required: true, message: 'Ingresa RFC' }]} >\r\n                        <Input />\r\n                    </Form.Item>\r\n                    <Form.Item label=\"Contraseña\" name=\"password_reunion\" rules={[{ required: true, message: 'Ingresa RFC' }]} >\r\n                        <Input placeholder='Opcional' />\r\n                    </Form.Item>\r\n                    <Form.Item label=\"Comentarios\" name=\"comentarios\" rules={[{ required: true, message: 'Ingresa RFC' }]} >\r\n                        <Input />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\r\n                        <Button type=\"primary\" htmlType=\"submit\" form='expediente'>\r\n                            Guardar\r\n                        </Button>\r\n                    </Form.Item>\r\n                </Form>\r\n            </Modal>\r\n            <Modal title=\"Detalles de la cita\" visible={isDetailVisible} onOk={handleDetailOk} onCancel={handleDetailCancel}>\r\n                {\r\n                    cita ?\r\n                        <>\r\n                            <p>Paciente: {cita.usuario?.name}</p>\r\n                            <p>fecha y hora: {cita.fecha_hora}</p>\r\n                            <p>Sucursal: {cita.sucursal?.nombre}</p>\r\n                            <p>Comentarios: {cita.comentarios}</p>\r\n                            <p> <a href={cita.id_reunion} target='_blank' rel='noreferrer'>ir a la cita </a> </p>\r\n                        </>\r\n                        :\r\n                        <p>Sin cita seleccionada</p>\r\n                }\r\n                {/* <Stripe /> */}\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { Table, Tag, Space, Button, Modal } from 'antd';\r\n\r\n\r\nexport default function Recetas() {\r\n\r\n    const [isModalVisible, setIsModalVisible] = useState(false);\r\n    const showModal = () => {\r\n        setIsModalVisible(true);\r\n    };\r\n\r\n    const handleOk = () => {\r\n        setIsModalVisible(false);\r\n    };\r\n\r\n    const handleCancel = () => {\r\n        setIsModalVisible(false);\r\n    };\r\n    const columns = [\r\n        {\r\n            title: 'ID Receta',\r\n            dataIndex: 'key',\r\n            key: '_id',\r\n            render: text => <a>{text}</a>,\r\n        },\r\n        {\r\n            title: 'ID Nota',\r\n            dataIndex: 'id_nota',\r\n            key: 'id_nota',\r\n        },\r\n        {\r\n            title: 'Prescripcion',\r\n            dataIndex: 'prescripcion',\r\n            key: 'prescripcion',\r\n        },\r\n        {\r\n            title: 'Detalles',\r\n            key: 'action',\r\n            render: (text, record) => (\r\n                <Space size=\"middle\">\r\n                    <Button onClick={showModal}>Detalles</Button>\r\n                </Space>\r\n            ),\r\n        },\r\n    ];\r\n\r\n    const data = [\r\n        {\r\n            key: \"62570ab89a6437369f835be7\",\r\n            id_nota: \"62570a9a9a6437369f835be5\",\r\n            prescripcion: \"Paracetamol cada 8 horas\",\r\n            createdAt: \"2022-04-13T17:39:04.541Z\",\r\n            updatedAt: \"2022-04-13T17:39:04.541Z\",\r\n            __v: 0\r\n        },\r\n        {\r\n            key: \"62570ab89a6437369f835be8\",\r\n            id_nota: \"62570a9a9a6437369f835be5\",\r\n            prescripcion: \"Ibuprofeno\",\r\n            createdAt: \"2022-04-13T17:39:04.541Z\",\r\n            updatedAt: \"2022-04-13T17:39:04.541Z\",\r\n            __v: 0\r\n        }\r\n    ];\r\n    return (\r\n        <div className='mainContainer'>\r\n            <h4>Mis Recetas</h4>\r\n            \r\n            <Table columns={columns} dataSource={data} />\r\n\r\n            <Modal title=\"Basic Modal\" visible={isModalVisible} onOk={handleOk} onCancel={handleCancel}>\r\n\r\n                <p> _id\": \"62570ab89a6437369f835be7\",</p>\r\n                <p> id_nota\": \"62570a9a9a6437369f835be5\",</p>\r\n                <p> prescripcion\": \"Paracetamol cada 8 horas\",</p>\r\n                <p> createdAt\": \"2022-04-13T17:39:04.541Z\",</p>\r\n                <p> updatedAt\": \"2022-04-13T17:39:04.541Z\",</p>\r\n                <p> __v\": 0</p>\r\n\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Form, Input, Button, message, Space, Row, Col, Upload } from 'antd'\r\nimport { MinusCircleOutlined, PlusOutlined, InboxOutlined } from '@ant-design/icons';\r\nimport { InputNumber, Select } from 'antd';\r\nimport { S_API, getData, API } from '../resources'\r\nconst { Option } = Select;\r\nconst { Dragger } = Upload;\r\n\r\n\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    xs: {\r\n      span: 24,\r\n    },\r\n    sm: {\r\n      span: 8,\r\n    },\r\n  },\r\n  wrapperCol: {\r\n    xs: {\r\n      span: 24,\r\n    },\r\n    sm: {\r\n      span: 14,\r\n    },\r\n  },\r\n};\r\nconst tailFormItemLayout = {\r\n  wrapperCol: {\r\n    xs: {\r\n      span: 24,\r\n      offset: 0,\r\n    },\r\n    sm: {\r\n      span: 16,\r\n      offset: 8,\r\n    },\r\n  },\r\n};\r\nexport default function PerfilEdit(props) {\r\n\r\n  const [form] = Form.useForm();\r\n\r\n  const [sucursales, setSucursales] = useState([]);\r\n  const [sucursalesLoading, setSucursalesLoading] = useState(true);\r\n  const [avatar, setAvatar] = useState(props.perfil.avatar)\r\n\r\n  //Start upload props Upload File\r\n  const dragDropProps = {\r\n    name: 'file',\r\n    multiple: false,\r\n    action: API + 'imagenes/upload',\r\n\r\n    onChange(info) {\r\n      const { status } = info.file;\r\n\r\n      if (status !== 'uploading') {\r\n        console.log(info.file, info.fileList);\r\n      }\r\n\r\n      if (status === 'done') {\r\n        message.success(`${info.file.name} file uploaded successfully.`);\r\n        console.log('New Files: ', info.file.response.file)\r\n        setAvatar(info.file.response.file)\r\n      } else if (status === 'error') {\r\n        message.error(`${info.file.name} file upload failed.`);\r\n      }\r\n    },\r\n\r\n    onDrop(e) {\r\n      console.log('Dropped files', e.dataTransfer.files);\r\n    },\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log('received Medic: ', props.perfil);\r\n    getData('sucursales').then((rs) => { setSucursales(rs); setSucursalesLoading(false) })\r\n  }, [])\r\n\r\n\r\n\r\n  const onFinish = (values) => {\r\n    values.avatar = avatar;\r\n    values.estatus = '1';\r\n    values.rol = 'Medico';\r\n    delete values.confirm;\r\n    delete values.prefix;\r\n\r\n    console.log('ready to send', values)\r\n    fetch(S_API + 'register', {\r\n      method: 'POST',\r\n      body: JSON.stringify(values),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).then(res => res.json())\r\n      .then(response => {\r\n        console.log('Success:', response);\r\n        response.message && response.message === 'Usuario creado correctamente' ?\r\n          window.location.href = 'doctores' : message.error(response.error);\r\n      })\r\n      .catch(error => console.error('Error:', error))\r\n  };\r\n\r\n  const onFinishEdit = (values) => {\r\n    values.avatar = avatar;\r\n    // values.estatus = '1';\r\n    // values.rol = 'Medico';\r\n    // delete values.confirm;\r\n    // delete values.prefix;\r\n\r\n    console.log('ready to send', values)\r\n    fetch(API + 'users/updateUser/' + props.perfil._id, {\r\n      method: 'PUt',\r\n      body: JSON.stringify(values),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).then(res => res.json())\r\n      .then(response => {\r\n        console.log('Success:', response);\r\n        response.message && response.message === 'Usuario actualizado correctamente' ?\r\n          props.setEditing(false) : message.error(response.error);\r\n      })\r\n      .catch(error => console.error('Error:', error))\r\n  };\r\n\r\n  const prefixSelector = (\r\n    <Form.Item name=\"prefix\" noStyle>\r\n      <Select\r\n        style={{\r\n          width: 70,\r\n        }}\r\n      >\r\n        <Option value=\"+52\">+52</Option>\r\n      </Select>\r\n    </Form.Item>\r\n  );\r\n  const suffixSelector = (\r\n    <Form.Item name=\"suffix\" noStyle>\r\n      <Select\r\n        style={{\r\n          width: 70,\r\n        }}\r\n      >\r\n        <Option value=\"USD\">$</Option>\r\n        <Option value=\"CNY\">¥</Option>\r\n      </Select>\r\n    </Form.Item>\r\n  );\r\n\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log('Failed:', errorInfo);\r\n  };\r\n  return (\r\n    <div>\r\n      <h4>Editar perfil</h4>\r\n      <br />\r\n      <Dragger {...dragDropProps}>\r\n        <p className=\"ant-upload-drag-icon\">\r\n          <InboxOutlined />\r\n        </p>\r\n        <p className=\"ant-upload-text\">Arrastra la imagen de perfil o click ara buscar</p>\r\n        <p className=\"ant-upload-hint\">\r\n          Selecciona archivos en formato png, jpeg o webp\r\n        </p>\r\n      </Dragger>\r\n      <br />\r\n      <Form\r\n        {...formItemLayout}\r\n        form={form}\r\n        name=\"register\"\r\n        onFinish={onFinishEdit}\r\n        // initialValues={{ horarios: [{ sucursal: '', horario: '' }], prefix: '+52' }}\r\n        initialValues={props.perfil}\r\n        scrollToFirstError\r\n      >\r\n\r\n        <Row>\r\n\r\n          <Col span={11}>\r\n            <Form.Item name=\"name\" label=\"Nombre\" rules={[{ required: true, message: 'Ingresa Nombre y apellidos' }]}>\r\n              <Input />\r\n            </Form.Item>\r\n            <Form.Item name=\"email\" label=\"Correo\" rules={[{ type: 'email', message: 'Ingresa un corrreo electronico valido' }, { required: true, message: 'Please input your E-mail!' }]}>\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            {/* <Form.Item name=\"password\" label=\"Contraseña\" rules={[{ required: true, message: 'Por favor ingrese su contraseña!', },]} hasFeedback >\r\n              <Input.Password />\r\n            </Form.Item>\r\n\r\n            <Form.Item name=\"confirm\" label=\"Confirmar contraseña\" dependencies={['password']} hasFeedback\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: 'Please confirm your password!',\r\n                },\r\n                ({ getFieldValue }) => ({\r\n                  validator(_, value) {\r\n                    if (!value || getFieldValue('password') === value) {\r\n                      return Promise.resolve();\r\n                    }\r\n                    return Promise.reject(new Error('Las contraseñas deben coincidir!'));\r\n                  },\r\n                }),\r\n              ]}\r\n            >\r\n              <Input.Password />\r\n            </Form.Item> */}\r\n\r\n            <Form.Item name=\"telefono\" label=\"Telefono\" rules={[{ required: true, message: 'Ingresa el numero de telefono correcto' },]}>\r\n              <Input addonBefore={prefixSelector} style={{ width: '100%', }} />\r\n            </Form.Item>\r\n\r\n\r\n            <Form.Item label=\"horarios\" rules={[{ required: true, message: 'Ingresa al menos un horario', },]}>\r\n              <Form.List name=\"horarios\" label=\"horarios list\"\r\n              >\r\n                {(fields, { add, remove }) => (\r\n                  <>\r\n                    {fields.map(({ key, name, ...restField }) => (\r\n                      <Space key={key} style={{ display: 'flex', marginBottom: 8 }} align=\"baseline\">\r\n                        <Form.Item\r\n                          {...restField}\r\n                          name={[name, 'sucursal']}\r\n                          rules={[{ required: true, message: 'Elije Sucursal' }]}\r\n                        >\r\n                          <Select placeholder=\"Elije Sucursal\" style={{ width: '120px' }} >\r\n                            {sucursalesLoading ? \"Cargando\" :\r\n                              sucursales.map(s => <Option value={s._id}>{s.nombre}</Option>)\r\n                            }\r\n                          </Select>\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                          {...restField}\r\n                          name={[name, 'horario']}\r\n                          rules={[{ required: true, message: 'Missing last name' }]}\r\n                        >\r\n                          <Input placeholder=\"Horario\" />\r\n                        </Form.Item>\r\n                        <MinusCircleOutlined onClick={() => remove(name)} />\r\n                      </Space>\r\n                    ))}\r\n                    <Form.Item>\r\n                      <Button type=\"dashed\" onClick={() => add()} block icon={<PlusOutlined />}>\r\n                        Agregar Horario\r\n                      </Button>\r\n                    </Form.Item>\r\n                  </>\r\n                )}\r\n              </Form.List>\r\n            </Form.Item>\r\n\r\n\r\n\r\n          </Col>\r\n          <Col span={12}>\r\n            <Form.Item name=\"cedula\" label=\"Cedula\" rules={[{ required: false, message: 'Ingresa cedula' }]}>\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            {/* Not Necesary For Medic. He'll be in hospital direction */}\r\n            {/* <Form.Item name=\"calle\" label=\"Calle\" rules={[{ required: true, message: 'Ingresa calle', whitespace: true }]}>\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item name=\"numexterior\" label=\"Num Exterior\" rules={[{ required: true, message: 'Ingresa numero exterior' }]}>\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item name=\"numinterior\" label=\"Num Interior\" rules={[{ required: true, message: 'Ingresa numinterior' }]}>\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item label=\"Colonia\" name=\"colonia\" rules={[{ required: true, message: 'Please input your colobnia!' }]}            >\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item name=\"estado\" label=\"Estado\" rules={[{ required: true, message: 'Apellido materno', },]}>\r\n              <Select placeholder=\"Elije tu estado\">\r\n                {estados.map(e => <Option value={e}>{e}</Option>)}\r\n              </Select>\r\n            </Form.Item>\r\n\r\n            <Form.Item name=\"municipio\" label=\"Municipio\" rules={[{ required: true, message: 'Ingresa tu municipio' }]} >\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item name=\"codigopostal\" label=\"Codigo Postal\" rules={[{ required: true, message: 'Ingresa codigopostal', },]}>\r\n              <InputNumber addonAfter={suffixSelector} style={{ width: '100%', }} />\r\n            </Form.Item> */}\r\n\r\n            <Form.Item name=\"certificacion\" label=\"Certificacion\" rules={[{ required: false, message: 'Ingresa tu certificacion' }]}>\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item name=\"universidad\" label=\"Universidad\" rules={[{ required: false, message: 'Ingresa tu universidad' }]} >\r\n              <Input />\r\n            </Form.Item>\r\n            <Form.Item {...tailFormItemLayout}>\r\n              <Button type=\"primary\" htmlType=\"submit\">\r\n                Guardar\r\n              </Button>\r\n            </Form.Item>\r\n          </Col>\r\n        </Row>\r\n\r\n\r\n\r\n\r\n\r\n        {/* <Form.Item\r\n          name=\"agreement\"\r\n          valuePropName=\"checked\"\r\n          rules={[\r\n            {\r\n              validator: (_, value) =>\r\n                value ? Promise.resolve() : Promise.reject(new Error('Should accept agreement')),\r\n            },\r\n          ]}\r\n          {...tailFormItemLayout}\r\n        >\r\n          <Checkbox>\r\n            He leído y acepto los <a href=\"https://recreamed.com\">terminos y condiciones</a>\r\n          </Checkbox>\r\n        </Form.Item> */}\r\n\r\n\r\n      </Form>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Row, Col, Space, Button, Divider, Image } from 'antd';\r\nimport { Avatar, Card } from 'antd';\r\nimport { UserOutlined } from '@ant-design/icons';\r\nimport { API, usuario } from '.././resources';\r\nimport Loading from '.././loading';\r\nimport { PlusOutlined, FormOutlined } from '@ant-design/icons';\r\nimport PerfilEdit from './perfilEdit';\r\n\r\n\r\nexport default function Perfil() {\r\n\r\n    const [profileData, setProfileData] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [profileForEdit, setProfileForEdit] = useState([]);\r\n    const [editing, setEditing] = useState(false)\r\n\r\n    useEffect(() => {\r\n        getProfileData()\r\n    }, [])\r\n\r\n    const getProfileData = () => {\r\n        fetch(API + 'userByMail/' + usuario.email)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log(data);\r\n                setProfileData(data[0]);\r\n                setIsLoading(false);\r\n            });\r\n    }\r\n\r\n    const DetailsProfile = () => {\r\n        // Two columns of 8 spaces with 4 spaces around\r\n        return <Row>\r\n            <Col span={8} offset={4}>\r\n                {\r\n                    // Profile Pic\r\n                    profileData.avatar.length > 8 ?\r\n                        <Image style={{ borderRadius: 12 }} width={256} src={'https://api.recreamed.com/images/' + profileData.avatar} />\r\n                        :\r\n                        <Avatar size={128} icon={<UserOutlined />} className='btnIconCentered' />\r\n                }\r\n                <Divider />\r\n                <p className='nombre'>{profileData.name} </p>\r\n                <p className='datos'>{profileData.email} </p>\r\n                <p className='datos'>{profileData.telefono} </p>\r\n            </Col>\r\n            <Col span={8}>\r\n                <p><span className='desc'>Estado:</span> {profileData.estado}</p>\r\n                <p><span className='desc'>Municipio:</span> {profileData.municipio}</p>\r\n                <p><span className='desc'>Colonia:</span> {profileData.colonia}</p>\r\n                <p><span className='desc'>Calle:</span> {profileData.calle}</p>\r\n                <p><span className='desc'>Codigo Postal:</span>{profileData.codigopostal} </p>\r\n            </Col>\r\n            {/* <Col span={8}>\r\n                <Card title='Horarios' style={{ borderRadius: 12 }}>\r\n                    {\r\n                        profileData.horarios.map((h) => {\r\n                            return <Card.Grid style={{ width: '100%' }} >\r\n                                <Row align=\"middle\">\r\n                                    <Col span={6} offset={4}><img width={64} src={'https://api.recreamed.com/images/' + h.sucursal.logo} alt=\"Logo\" /></Col>\r\n                                    <Col span={10}>{h.sucursal.nombre} <br /> {h.horario}</Col>\r\n                                </Row>\r\n                            </Card.Grid>\r\n                        })\r\n                    }\r\n                </Card>\r\n                <br />\r\n                <p><span className='desc'>Universidad:</span> {profileData.universidad} </p>\r\n                <p><span className='desc'>Certificacion:</span> {profileData.certificacion} </p>\r\n                <p><span className='desc'>Cedula:</span> {profileData.cedula} </p>\r\n            </Col> */}\r\n\r\n\r\n\r\n        </Row>\r\n    }\r\n    const editPerfil = async (p) => {\r\n        p.horarios.forEach((h) => { h.sucursal = h.sucursal._id })\r\n        console.log('Horarios before edit profile: ', p.horarios);\r\n        await setProfileForEdit(p)\r\n        setEditing(true);\r\n        console.log('Editar medico: ', p)\r\n    }\r\n\r\n    return (\r\n        <div className='mainContainer'>\r\n\r\n            <Space>\r\n                <h3>PERFIL</h3>\r\n                <Button onClick={() => editPerfil(profileData)} type=\"primary\" shape=\"circle\" icon={<FormOutlined />} />\r\n            </Space> <br /><br />\r\n            {isLoading ? <Loading /> :\r\n                <Card>\r\n                    {\r\n                        editing ?\r\n\r\n                            <>\r\n                                <PerfilEdit perfil={profileData} setEditing={setEditing} />\r\n                                <Button shape=\"circle\" title='Cancelar' />\r\n                                <Button onClick={() => setEditing(false)}>Cancelar</Button>\r\n                            </> :\r\n                            <DetailsProfile />\r\n                    }\r\n                </Card>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Row, Col, Statistic, Card } from 'antd'\r\n// import { Pie, Line } from '@ant-design/charts';\r\nimport './home.css'\r\n\r\nexport class Home extends Component {\r\n    \r\n    dataPie = [\r\n        {\r\n            type: 'Covid',\r\n            value: 130737,\r\n        },\r\n        {\r\n            type: 'Colesterol',\r\n            value: 21468,\r\n        },\r\n        {\r\n            type: 'Diabetes',\r\n            value: 18098,\r\n        },\r\n        {\r\n            type: 'Presion',\r\n            value: 17912,\r\n        },\r\n        {\r\n            type: 'Oseo',\r\n            value: 15282,\r\n        },\r\n        {\r\n            type: 'Migraña',\r\n            value: 11650,\r\n        },\r\n    ];\r\n\r\n    configPie = {\r\n        appendPadding: 10,\r\n        data: this.dataPie,\r\n        angleField: 'value',\r\n        colorField: 'type',\r\n        height: 450,\r\n        radius: 0.8,\r\n        label: {\r\n            type: 'inner',\r\n            offset: '-0.5',\r\n            content: '{name} {percentage}',\r\n            style: {\r\n                fill: '#fff',\r\n                fontSize: 14,\r\n                textAlign: 'center',\r\n            },\r\n        },\r\n    };\r\n\r\n    dataLine = [\r\n        { mes: 'Junio', consultas: 17945 },\r\n        { mes: 'Julio', consultas: 24011 },\r\n        { mes: 'Agosto', consultas: 46493 },\r\n        { mes: 'Septiembre', consultas: 105293 },\r\n        { mes: 'Octubre', consultas: 77190 }\r\n    ];\r\n\r\n    configLine = {\r\n        data: this.dataLine,\r\n        height: 410,\r\n        xField: 'mes',\r\n        yField: 'consultas',\r\n        color: '#01B075',\r\n        point: {\r\n            size: 5,\r\n            shape: 'diamond',\r\n            color: '#01B075'\r\n        },\r\n        label: {\r\n            style: {\r\n                fill: '#aaa',\r\n                fontSize: 16,\r\n                stroke: '#01B075'\r\n            },\r\n        },\r\n    };\r\n    render() {\r\n        return (\r\n            <>\r\n\r\n                <br />\r\n                <div className=\"contenedor\">\r\n                    <Row gutter={30}>\r\n                        <Col xs={24} sm={12} lg={6}>\r\n                            {/* <div className=\"cardsContenedor\" > */}\r\n                            <Card className=\"cardsContenedor\" hoverable bordered={false}>\r\n\r\n                                <Statistic title=\"Total Hospitales\" value=\"4\" valueStyle={{ color: 'white' }} style={{ backgroundColor: '#4BA6FE' }} className=\"cardsContenido\" />\r\n                            </Card>\r\n                        </Col>\r\n                        <Col xs={24} sm={12} lg={6}>\r\n                            <Card className=\"cardsContenedor\" hoverable bordered={false}>\r\n                                <Statistic title=\"Total Medicos\" value=\"14\" valueStyle={{ color: 'white' }} style={{ backgroundColor: '#FF838A' }} className=\"cardsContenido\" />\r\n                            </Card>\r\n                        </Col>\r\n\r\n                        <Col xs={24} sm={12} lg={6}>\r\n                            <Card className=\"cardsContenedor\" hoverable bordered={false}>\r\n\r\n                                <Statistic title=\"Total Pacientes\" value=\"241\" valueStyle={{ color: 'white' }} style={{ backgroundColor: '#18D0C2' }} className=\"cardsContenido\" />\r\n                            </Card>\r\n                        </Col>\r\n                        <Col xs={24} sm={12} lg={6}>\r\n                            <Card className=\"cardsContenedor\" hoverable bordered={false}>\r\n\r\n                                <Statistic title=\"Citas Hoy\" value={47} valueStyle={{ color: 'white' }} style={{ backgroundColor: '#847DFC' }} className=\"cardsContenido\" />\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n                    <br />\r\n                    <Row gutter={20}>\r\n                        <Col xs={24} md={12} className=\"graficaCircular\">\r\n                            {/* <Pie {...this.configPie} style={{ backgroundColor: '#1F263C' }} /> */}\r\n                        </Col>\r\n\r\n                        <Col xs={24} md={12}>\r\n                            {/* <Line {...this.configLine} style={{ backgroundColor: '#1F263C', padding: '20px' }} /> */}\r\n                        </Col>\r\n                    </Row>\r\n\r\n                </div>\r\n\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home\r\n","import React from 'react'\r\nimport { Container, Nav, Navbar } from \"react-bootstrap\";\r\nimport icon from '../assets/Icon.png';\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport { Button } from 'antd'\r\nimport MisCitas from './misCitas'\r\nimport Recetas from './recetas'\r\nimport Perfil from './perfil';\r\nimport Home from './home/home';\r\nimport { usuario } from '../resources'\r\n\r\nconst logout = () => { localStorage.removeItem('sessionToken'); localStorage.removeItem('userType'); window.location.href = '/'; }\r\n\r\nfunction Navigator() {\r\n\r\n  return <Navbar bg=\"primary\" variant=\"dark\" expand=\"lg\">\r\n    <Container>\r\n      <img\r\n        src={icon}\r\n        width=\"40\"\r\n        height=\"35\"\r\n        className=\"d-inline-block align-top\"\r\n        alt=\"Recreamed logo\"\r\n        style={{ marginRight: 6 }}\r\n      />\r\n      <Navbar.Brand href=\"#home\" style={{ fontFamily: 'Poppins', color: 'White' }}>\r\n        Bienvenido {usuario.name}\r\n      </Navbar.Brand>\r\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n      <Navbar.Collapse id=\"basic-navbar-nav\">\r\n        <Nav className=\"me-auto\">\r\n          {/* <Nav.Link href=\"/\">Landing</Nav.Link> */}\r\n          <Nav.Link href=\"/citas\">Mis Citas</Nav.Link>\r\n          <Nav.Link href=\"/recetas\">Mis Recetas</Nav.Link>\r\n          <Nav.Link href=\"/perfil\">Mi Perfil</Nav.Link>\r\n        </Nav>\r\n      </Navbar.Collapse>\r\n      <Navbar.Collapse className=\"justify-content-end\">\r\n        <Button onClick={logout} ghost>Cerrar Sesion</Button>\r\n      </Navbar.Collapse>\r\n    </Container>\r\n  </Navbar>;\r\n\r\n}\r\n\r\nexport default function PatientApp() {\r\n  return (\r\n    <Router>\r\n      <Navigator />\r\n      <Switch>\r\n        <Route path=\"/citas\">\r\n          <MisCitas />\r\n        </Route>\r\n        <Route path=\"/recetas\">\r\n          <Recetas />\r\n        </Route>\r\n        <Route path=\"/perfil\">\r\n          <Perfil />\r\n        </Route>\r\n        <Route path=\"/\">\r\n        <MisCitas />\r\n        </Route>\r\n      </Switch>\r\n    </Router>\r\n  )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Modal, Form, Select, Input, Button, message, Switch, DatePicker } from 'antd'\r\nimport { sendDataBody, updateData, ids_hospitales } from '../../resources';\r\n\r\nexport function CreateCitaForm(props) {\r\n\r\n    const isCreating = !props.cita || Object.keys(props.cita).length === 0;\r\n\r\n    // const [medicosLoading, setMedicosLoading] = useState(true)\r\n    const [medicos, setMedicos] = useState([])//Set Medicos for select\r\n    // const [medicosData, setMedicosData] = useState([]) // List of all Medicos\r\n    const [servicios, setServicios] = useState([])\r\n\r\n    const [errorMessage, setErrorMessage] = useState(\"\")\r\n    const [enableCreateCita, setEnableCreateCita] = useState(true)\r\n    // Body of cita\r\n    const [isOnline, setIsOnline] = useState(false)\r\n    const [costo, setCosto] = useState(0)\r\n\r\n    const [costoBaseCita, setCostoBaseCita] = useState(0)\r\n    const [usesCostoBase, setUsesCostoBase] = useState(false)\r\n\r\n\r\n    useEffect(() => {\r\n        // getDoctorsData()\r\n        console.log('Received Cita for edit', props.cita)\r\n        if (props.cita && props.cita.usuario) {\r\n            handlePatientChange(props.cita.usuario)\r\n\r\n            handleMedicochange(props.cita.medico)\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (props.cita && props.cita.medico) handleMedicochange(props.cita.medico)\r\n    }, [medicos])\r\n\r\n\r\n\r\n\r\n    // Form Methods\r\n    const onFinish = (values) => {\r\n        const tipo_pago = values.tipo_pago;\r\n        values.sucursal = props.hospital;\r\n        delete values.tratamiento;\r\n        values.servicio = values.servicio.title;\r\n        delete values.tipo_pago;\r\n\r\n        // Handle if its updating or creating cita\r\n        console.log('cita ready', values)\r\n        if (props.cita) {\r\n            updateData(`citas/update/${props.cita._id}`, values).then((response) => {\r\n                // message.success(response.message || response.error);\r\n                props.setIsModalOpen(false);\r\n                props.setEditingCita(false);\r\n            }).finally(() => { props.getCitasData(); })\r\n        } else {\r\n            sendDataBody('citas/add', values).then((response) => {\r\n                message.success(response.message || response.error);\r\n                createBalance(response.id_nueva_cita, values.medico, values.fecha_hora, tipo_pago, values.servicio)\r\n            }).finally(() => { props.getCitasData(); props.setIsModalOpen(false) })\r\n        }\r\n    }\r\n\r\n    const createBalance = (_cita, medico, _fecha_hora, tipo_pago, _concepto) => {\r\n        const balanceBody = {\r\n            tipo: 'ingreso',\r\n            medico: medico,\r\n            cita: _cita,\r\n            monto: costo,\r\n            forma_de_pago: tipo_pago,\r\n            fecha_hora: _fecha_hora,\r\n            estado: 'pendiente',\r\n            concepto: _concepto\r\n        }\r\n        console.log('Balance ready to send: ', balanceBody)\r\n        sendDataBody('balances/add', balanceBody).then((rs) => { message.success(rs.message || rs.error); console.log(rs) })\r\n    }\r\n\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    const handlePatientChange = (value) => {\r\n        const found = props.pacientesData.find((p) => p._id === value);\r\n        if (found) {\r\n            setEnableCreateCita(true)\r\n            let { medicos_asignados } = found\r\n            medicos_asignados.forEach((m) => {\r\n                m.label = m.name; m.value = m._id\r\n            });\r\n\r\n            console.log('Found', found)\r\n            console.log('meds', medicos_asignados)\r\n            setMedicos(medicos_asignados);\r\n\r\n        } else {\r\n            setEnableCreateCita(false)\r\n            setErrorMessage(\"Usuario no encontrado\")\r\n        }\r\n    };\r\n\r\n    const onSearchPatient = (value) => { };\r\n\r\n    const handleMedicochange = (_id) => {\r\n        console.log('selected', _id)\r\n        console.log('all medics handle med chang', medicos)\r\n        // Populate the \"servicio\" select\r\n        if (medicos.length > 0) {\r\n            let found = medicos.find((m) => m._id === _id)\r\n            if (found && found.configuracion.tratamientos_ofrecidos) {\r\n                setErrorMessage(\"\")\r\n                setEnableCreateCita(true)\r\n                if (props.enableCreateCita) props.setEditingCita(false)\r\n                let { configuracion: { tratamientos_ofrecidos } } = found;\r\n                console.log(\"found tr\", tratamientos_ofrecidos)\r\n                tratamientos_ofrecidos.forEach(t => {\r\n                    t.label = `${t.tratamiento} - $${t.costo}`; t.value = t.costo; t.title = t.tratamiento;\r\n                });\r\n                const { configuracion: { costo_cita = 0 } } = found;\r\n                setCostoBaseCita(costo_cita)\r\n                setServicios(tratamientos_ofrecidos)\r\n            }\r\n            else {\r\n                setEnableCreateCita(false);\r\n                setErrorMessage(\"No se puede crear la cita para este médico, no cuenta con servicios\")\r\n                if (props.enableCreateCita) props.enableCreateCita(false)\r\n            }\r\n            //   \r\n\r\n        }\r\n    }\r\n\r\n    const onSwitch = (checked) => {\r\n        setIsOnline(checked)\r\n    };\r\n\r\n    // Handle change for select servicio\r\n    const handleServicioChange = (selected) => {\r\n\r\n        setCosto(selected.value)\r\n        console.log(`selected service`, selected);\r\n    };\r\n\r\n    const onSwitchCosoBase = (checked) => {\r\n        // if(checked)se\r\n        console.log(`switch to ${checked}`);\r\n        setUsesCostoBase(checked)\r\n    };\r\n\r\n    const timeOptions = [\r\n        { label: 'Media Hora', value: 30 },\r\n        { label: 'Una Hora', value: 60 },\r\n        { label: 'Una Hora y Media', value: 90 },\r\n        { label: 'Dos Horas', value: 120 },\r\n        { label: 'Dos Horas Y Media', value: 150 },\r\n        { label: 'Tres Horas', value: 180 },\r\n        { label: 'Cuatro Horas', value: 210 },\r\n        { label: 'Cuatro Horas y Media', value: 240 },\r\n        { label: 'Cinco Horas', value: 270 },\r\n        { label: 'Cinco Horas y Media', value: 300 },\r\n    ]\r\n\r\n    const paymentOptions = [\r\n        { value: 'efectivo', label: 'Efectivo' },\r\n        { value: 'tarjeta', label: 'Tarjeta' },\r\n        { value: 'transferencia', label: 'Transferencia' },\r\n    ]\r\n\r\n    return <Form name=\"nueva_cita_admin\" labelCol={{ span: 8 }} wrapperCol={{ span: 12 }} onFinish={onFinish} onFinishFailed={onFinishFailed} autoComplete=\"off\"\r\n        initialValues={props.cita ? props.cita : { isOnline: false, tratamiento: 'Sin servicio', fecha_hora: props.fecha_hora, duracion: 60 }}>\r\n\r\n        <div>{errorMessage}</div>\r\n\r\n        <Form.Item label=\"Paciente\" name=\"usuario\" rules={[{ required: true, message: 'Selecciona Usuario' }]} >\r\n            <Select options={props.pacientesData} onChange={handlePatientChange} optionFilterProp=\"children\" onSearch={onSearchPatient} showSearch\r\n                filterOption={(input, option) => (option?.label ?? '').toLowerCase().includes(input.toLowerCase())} />\r\n        </Form.Item>\r\n\r\n        <Form.Item label=\"Medico\" name=\"medico\" rules={[{ required: true, message: 'Selecciona Medico' }]} >\r\n            <Select options={medicos} onChange={handleMedicochange} />\r\n        </Form.Item>\r\n\r\n\r\n        <Form.Item label=\"VideoLlamada\" name=\"isOnline\" >\r\n            <Switch onChange={onSwitch} />\r\n        </Form.Item>\r\n\r\n        <Form.Item label=\"Comentarios\" name=\"comentarios\" rules={[{ required: false, message: 'Ingresa Comentarios' }]} >\r\n            <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item label=\"Fecha y Hora\" name=\"fecha_hora\" rules={[{ required: false, message: 'Selecciona Fecha y Hora' }]} >\r\n            <DatePicker showTime format=\"DD/MM/YYYY HH:mm\" use12Hours={true} />\r\n        </Form.Item>\r\n\r\n        <Form.Item label=\"Duracion\" name=\"duracion\" rules={[{ required: true, message: 'Selecciona la duracion de la cita' }]} >\r\n            <Select options={timeOptions} />\r\n        </Form.Item>\r\n\r\n        <Form.Item label=\"Servicio\" name=\"servicio\" rules={[{ required: true, message: 'Selecciona Medico' }]} >\r\n            <Select options={servicios} onChange={handleServicioChange} labelInValue />\r\n        </Form.Item>\r\n\r\n        {\r\n            isCreating && <div>\r\n\r\n                <Form.Item label=\"Tipo de pago\" name=\"tipo_pago\" rules={[{ required: true, message: 'Selecciona tipo de pago' }]} >\r\n                    <Select options={paymentOptions} />\r\n                </Form.Item>\r\n\r\n                <Form.Item label={`costo de la cita $${costoBaseCita}`} >\r\n                    <Switch onChange={onSwitchCosoBase} />\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                    wrapperCol={{\r\n                        offset: 8,\r\n                        span: 16,\r\n                    }}\r\n                >\r\n                    <div className='fila'>\r\n                        <h6>Costo Total: ${usesCostoBase ? (costo + costoBaseCita) : costo} </h6>\r\n                    </div>\r\n                </Form.Item>\r\n\r\n            </div>\r\n        }\r\n\r\n        {\r\n            // Only if updating cita\r\n            props.cita && <div>\r\n\r\n\r\n                <Form.Item\r\n                    wrapperCol={{\r\n                        offset: 8,\r\n                        span: 16,\r\n                    }}\r\n                >\r\n                    <Button type=\"primary\" htmlType=\"submit\" form='nueva_cita_admin' disabled={!enableCreateCita}>\r\n                        Guardar\r\n                    </Button>\r\n                </Form.Item>\r\n            </div>\r\n        }\r\n\r\n    </Form>\r\n}\r\n\r\nexport default function CreateCita(props) {\r\n\r\n    const [enableCreate, setEnableCreate] = useState(true)\r\n    // Handle Modal Visibility\r\n    const handCreateleOk = () => { props.setIsModalOpen(false) }\r\n    const handCreateleCancel = () => { props.setIsModalOpen(false) }\r\n\r\n\r\n    return (\r\n        <Modal title=\"Nueva Cita\" open={props.isOpenModal} onOk={handCreateleOk} onCancel={handCreateleCancel} destroyOnClose\r\n            footer={[\r\n                <Button onClick={handCreateleCancel}>Cancelar</Button>,\r\n                <Button type=\"primary\" htmlType=\"submit\" form='nueva_cita_admin' disabled={!enableCreate}>\r\n                    Guardar\r\n                </Button>\r\n            ]}\r\n        >\r\n            {/* <CreateCitaForm setIsModalOpen={props.setIsModalOpen} hospital={props.hospital} fecha_hora={props.fecha_hora} getCitasData={props.getCitasData} pacientesData={props.pacientesData} setEnableCreateCita={setEnableCreate} /> */}\r\n            <CreateCitaForm {...props} />\r\n\r\n        </Modal>\r\n    )\r\n}\r\n\r\n\r\n    // Create the respective balance for cita\r\n    // const createBalance = (_cita, monto) => {\r\n    //     const balanceBody = {\r\n    //         medico: medico,\r\n    //         cita: _cita,\r\n    //         monto: monto,\r\n    //         forma_de_pago: 'efectivo',\r\n    //         estado: 'pendiente',\r\n    //     }\r\n    //     console.log('Balance ready to send: ', balanceBody)\r\n    //     sendDataBody('balances/add', balanceBody).then((rs) => console.log(rs))\r\n    // }","import React, { useState, useEffect } from 'react';\r\nimport { Modal, Button, Popconfirm, message } from \"antd\";\r\nimport { getData, deleteData } from '../../resources';\r\nimport { Calendar, dayjsLocalizer } from 'react-big-calendar';\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\nimport CreateCita, { CreateCitaForm } from './create-cita-for-medic';\r\nimport dayjs from 'dayjs';\r\n\r\nconst localizer = dayjsLocalizer(dayjs)\r\n\r\nexport default function HospitalTab(props) {\r\n    const [editingCita, setEditingCita] = useState(false)\r\n    const [citaForEdit, setCitaForEdit] = useState({})\r\n    const [citasData, setCitasData] = useState([])\r\n    const [loading, setLoading] = useState(true)\r\n    const [isModalOpen, setIsModalOpen] = useState(false);\r\n    const showModal = () => { setIsModalOpen(true) }\r\n    const handleOk = () => { setIsModalOpen(false); setEditingCita(false) }\r\n    const handleCancel = () => { setIsModalOpen(false); setEditingCita(false) }\r\n\r\n    // Tools for createCita Modal\r\n    const [fecha_hora, setFecha_hora] = useState('')\r\n    const [isCreateModalOpen, setIsCreateModalOpen] = useState(false)\r\n    // for pass to create cita model\r\n    const [pacientesData, setPacientesData] = useState([])\r\n\r\n    const findPatientsOfMyMedicos = (pacientesData) => {\r\n        let dl = [];\r\n        // Check on each horario of each medico of medicos asignados of patient to see if share sucursal with my horarios as admin\r\n        pacientesData.forEach(paciente => {\r\n            paciente.medicos_asignados.forEach(med => {\r\n                med.horarios.forEach(h => {\r\n                    if (h.sucursal === props.id_hospital && !dl.includes(paciente)) { paciente.label = paciente.name; paciente.value = paciente._id; dl.push(paciente) }\r\n                })\r\n            });\r\n        });\r\n        return dl;\r\n    }\r\n\r\n    const getPacientesData = () => {\r\n        // First of all, get pacientes data for pass to the create cita component\r\n        getData('users_by_rol/Paciente').then((rs) => {\r\n            setPacientesData(findPatientsOfMyMedicos(rs))\r\n        })\r\n    }\r\n\r\n    useEffect(() => { getPacientesData(); getCitasData() }, [])\r\n\r\n    const getCitasData = () => {\r\n        getData(`citas/sucursal/${props.id_hospital}`).then((rs) => {\r\n            console.log(`getCitasData ${props.id_hospiatl} before format admin`, rs[rs.length - 1])\r\n            rs.forEach(cita => {\r\n                cita.start = new Date(Date.parse(cita.fecha_hora));\r\n                const endDate = new Date(Date.parse(cita.fecha_hora));\r\n                endDate.setTime(endDate.getTime() + 1 * (cita.duracion ?? 60) * 60 * 1000)\r\n                cita.end = new Date(Date.parse(endDate));\r\n                cita.title = cita.usuario?.name;\r\n                cita.key = cita._id;\r\n            });\r\n            console.log(`getCitasData ${props.id_hospiatl} before format admin`, rs[rs.length - 1])\r\n            setCitasData(rs)\r\n        }\r\n        ).finally(() => setLoading(false))\r\n    }\r\n\r\n    // Select cita to show details and show confirm button\r\n    const selectEvent = (e) => {\r\n        console.log('For eedit', e)\r\n        if (!e.doctor) e.doctor = e.medico; // For details\r\n        if (!e.paciente) e.paciente = e.usuario; // For details\r\n        if (e.medico && e.medico._id) e.medico = e.medico._id;  // For edit\r\n        if (e.usuario && e.usuario._id) e.usuario = e.usuario._id;  // For edit\r\n        e.fecha_hora = dayjs(e.fecha_hora) //For edit\r\n        setCitaForEdit(e)\r\n        if (citaForEdit) showModal()\r\n    }\r\n\r\n\r\n    const handleSlotSelection = ({ start, end, action }) => {\r\n        setFecha_hora(dayjs(start))\r\n        setIsCreateModalOpen(true)\r\n        return { style: { backgroundColor: 'red' } };\r\n    };\r\n    // Delete button\r\n    const confirm = (e) => {\r\n        deleteData(`citas/remove/${citaForEdit._id}`).then((rs) => { console.log(rs); getCitasData(); handleCancel() })\r\n        deleteData(`balances/remove/cita/${citaForEdit._id}`)\r\n\r\n    };\r\n\r\n    const cancel = (e) => { console.log(e) }\r\n\r\n    return loading ? <p>Cargando...</p> : <div>\r\n        <br />\r\n        <h6>Citas del hospital {props.hospital}</h6>\r\n        <br />\r\n        <Calendar\r\n            scrollToTime={new Date(Date.now())}\r\n            selectable='true'\r\n            localizer={localizer}\r\n            events={citasData}\r\n            startAccessor=\"start\"\r\n            endAccessor=\"end\"\r\n            style={{ height: 500 }}\r\n            messages={{\r\n                next: \"Sig\",\r\n                previous: \"Ant\",\r\n                today: \"Hoy\",\r\n                month: \"Mes\",\r\n                week: \"Semana\",\r\n                day: \"Día\"\r\n            }}\r\n            defaultView=\"week\"\r\n            onDoubleClickEvent={(e) => console.log(e)}\r\n            onSelectEvent={selectEvent}\r\n            onSelecting={(e) => console.log(e)}\r\n            // onSelectSlot={handleSlotSelection}\r\n            onSelectSlot={handleSlotSelection}\r\n        />\r\n\r\n\r\n        <Modal title=\"Detalles Cita\" open={isModalOpen} onOk={handleOk} onCancel={handleCancel} destroyOnClose\r\n            footer={[\r\n                <Popconfirm\r\n                    title=\"Eliminar Cita\"\r\n                    description=\"Seguro que quiere eliminar la cita?\"\r\n                    onConfirm={confirm}\r\n                    onCancel={cancel}\r\n                    okText=\"Si\"\r\n                    cancelText=\"No\"\r\n                >\r\n                    <Button danger>Eliminar</Button>\r\n                </Popconfirm>,\r\n                <Button onClick={() => setEditingCita(!editingCita)}>{editingCita ? \"Cancelar\" : \"Modificar\"}</Button>,\r\n                <Button onClick={handleCancel}>Cerrar</Button>\r\n            ]}>\r\n\r\n\r\n            {editingCita ?\r\n                <CreateCitaForm cita={citaForEdit} setIsModalOpen={setIsModalOpen} getCitasData={getCitasData} setEditingCita={setEditingCita} hospital={props.id_hospital} pacientesData={pacientesData} />\r\n                : <div>{citaForEdit && <div>\r\n                    <p><strong>Medico </strong>{citaForEdit.doctor ? citaForEdit.doctor.name : 'Sin medico'}</p>\r\n                    <p><strong>Paciente </strong>{citaForEdit.paciente ? citaForEdit.paciente.name : 'Sin paciente'}</p>\r\n                    <p><strong>Fecha </strong>{new Date(citaForEdit.fecha_hora).toLocaleDateString()}</p>\r\n                    <p><strong>Hora </strong>{new Date(citaForEdit.fecha_hora).toLocaleTimeString()}</p>\r\n                    <p><strong>Servicio </strong>{citaForEdit.servicio}</p>\r\n                    <p><strong>Comentarios </strong>{citaForEdit.comentarios}</p>\r\n                    {/* <Button type='primary' onClick={confirmService}>Confirmar Servicio</Button>, */}\r\n                </div>\r\n                }\r\n                </div>\r\n            }\r\n        </Modal>\r\n\r\n        <CreateCita setIsModalOpen={setIsCreateModalOpen} isOpenModal={isCreateModalOpen} hospital={props.id_hospital} fecha_hora={fecha_hora} getCitasData={getCitasData} pacientesData={pacientesData} />\r\n    </div>\r\n}","import React from 'react'\r\nimport { Tabs } from 'antd'\r\nimport { myHospitals } from '../../resources'\r\nimport HospitalTab from './hospital-tab.citas';\r\n\r\nexport default function Citas() {\r\n\r\n    // Create items for TABS\r\n    myHospitals.forEach(h => {\r\n        h.label = h.nombre;\r\n        h.key = h._id;\r\n        h.children = <HospitalTab hospital={h.nombre} id_hospital={h._id} />\r\n    });\r\n\r\n    return (\r\n        <div className='mainContainer'>\r\n            <h4>Citas</h4>\r\n            <Tabs defaultActiveKey=\"1\" items={myHospitals} />\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Form, Input, Button, message, Space, Divider, Upload, Switch, DatePicker } from 'antd'\r\nimport { InputNumber, Select } from 'antd';\r\nimport { S_API, API, getData } from '../../resources'\r\nimport { usuario, estados } from '../../resources'\r\nimport { UploadOutlined, PlusOutlined, MinusCircleOutlined } from '@ant-design/icons'\r\n\r\n\r\nconst { Option } = Select;\r\n\r\nconst id_sucursales = usuario && usuario.horarios.map(function (item) {\r\n  return item['sucursal']['_id'];\r\n})\r\n\r\nexport default function Register(props) {\r\n\r\n  const [form] = Form.useForm();\r\n  const [avatar, setAvatar] = useState(props.paciente ? props.paciente.avatar : 'noimg.jpg')\r\n  const [medicosData, setMedicosData] = useState([])\r\n\r\n  useEffect(() => {\r\n    getData('users_by_rol/Medico').then((rs) => {\r\n      setMedicosData(findMyDoctors(rs))\r\n    })\r\n  }, [])\r\n\r\n  // EScoger solo los medicos que compartan siucursal y darlse formato pára el select\r\n  const findMyDoctors = (arr) => {\r\n    let doctorsFound = [];\r\n    arr.forEach((doctor) => {\r\n      doctor.horarios.forEach(h => {\r\n        if (id_sucursales.includes(h.sucursal._id) && !doctorsFound.includes(doctor)) {\r\n          doctor.label = doctor.name;\r\n          doctor.value = doctor._id;\r\n          doctorsFound.push(doctor)\r\n        }\r\n      })\r\n    })\r\n    return doctorsFound;\r\n  }\r\n\r\n  async function addHistoria() {\r\n    return await fetch(API + 'historias/add', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        historial: \"Historia clinica al \" + new Date()\r\n      })\r\n    }).then(res => res.json())\r\n      .then(response => {\r\n        console.log('Story Created: ', response);\r\n        return response\r\n      })\r\n      .catch(error => console.error('Error:', error))\r\n  }\r\n\r\n  const createPAtientData = async (usr) => {\r\n    const historia = await addHistoria();\r\n    console.log('historia on Register: ', historia);\r\n    const postBody = {\r\n      usuario: usr,\r\n      historia: historia.id_historia,\r\n      notas: [],\r\n      recetas: []\r\n    }\r\n    console.log('postBodyForExpedient: ', postBody);\r\n    await fetch(API + 'expedientes/add', {\r\n      method: 'POST',\r\n      body: JSON.stringify(postBody),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).then(res => res.json())\r\n      .then(response => {\r\n        console.log('Success:', response);\r\n        message.success(response.message || response.error);\r\n        // if (response.message && response.message === 'Expediente creado correctamente') {\r\n        //   props.setAdding(false)\r\n        // }\r\n      })\r\n      .catch(error => console.error('Error:', error))\r\n  }\r\n\r\n  const onFinish = async (values) => {\r\n\r\n    // Register patient\r\n    values.avatar = avatar;\r\n    values.estatus = '1';\r\n    values.rol = 'Paciente';\r\n    values.password = '' + values.telefono;\r\n    values.universidades = [];\r\n    values.certificacion = '';\r\n    values.cedula = '';\r\n    values.horarios = [];\r\n    // values.medicos_asignados = props.paciente ? props.paciente.medicos_asignados : [usuario._id];\r\n    values.responsable = props.paciente ? props.paciente.responsable : { nombre: values.res_name, telefono: values.res_phone }\r\n\r\n    delete values.prefix;\r\n    delete values.res_name;\r\n    delete values.res_phone;\r\n\r\n    const url = props.paciente ? API + 'users/updateUser/' + props.paciente._id : S_API + 'register';\r\n\r\n    console.log(values)\r\n    console.log('url: ', url);\r\n\r\n    await fetch(url, {\r\n      method: props.paciente ? 'PUT' : 'POST',\r\n      body: JSON.stringify(values),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).then(res => res.json())\r\n      .then(response => {\r\n        message.success(response.message || response.error);\r\n        props.paciente ? console.log('Editing, not creating patient') : createPAtientData(response.user_id);\r\n        response.message === 'Usuario creado correctamente' ?\r\n          window.location.reload(false) : console.log(response)\r\n        // props.setAdding(false) : console.log(response);\r\n        response.message === 'Usuario actualizado correctamente' ?\r\n          props.setAdding(false) : console.log(response);\r\n\r\n      })\r\n      .catch(error => console.error('Error:', error))\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log('Failed:', errorInfo);\r\n    errorInfo.errorFields.forEach((p) => {\r\n      message.error('Ingrese el campo ' + p.name)\r\n    })\r\n  };\r\n\r\n\r\n  //Start upload props Upload File\r\n  const dragDropProps = {\r\n    name: 'file',\r\n    multiple: false,\r\n    action: API + 'imagenes/upload',\r\n\r\n    onChange(info) {\r\n      const { status } = info.file;\r\n\r\n      if (status !== 'uploading') {\r\n        console.log(info.file, info.fileList);\r\n      }\r\n\r\n      if (status === 'done') {\r\n        message.success(`${info.file.name} file uploaded successfully.`);\r\n        console.log('New Files: ', info.file.response.file)\r\n        setAvatar(info.file.response.file)\r\n      } else if (status === 'error') {\r\n        message.error(`${info.file.name} file upload failed.`);\r\n      }\r\n    },\r\n\r\n    // onDrop(e) {\r\n    //   console.log('Dropped files', e.dataTransfer.files);\r\n    // },\r\n  };\r\n  return (\r\n    <div className='mainContainer'>\r\n      {\r\n        props.paciente ? <h4>Editar paciente</h4> : <h4>Registrar Paciente</h4>\r\n      }\r\n\r\n      <br />\r\n\r\n\r\n      <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\r\n        <Upload {...dragDropProps}>\r\n          <Button type=\"dashed\" icon={<UploadOutlined style={{ fontSize: 24, color: '#0d6efd' }} />} style={{ width: 400, height: 80 }} block>Selecciona la foto de perfil</Button>\r\n        </Upload>\r\n      </div>\r\n      <br />\r\n      <Form\r\n        // {...formItemLayout}\r\n        labelCol={{ span: 6 }} wrapperCol={{ span: 16 }}\r\n        form={form}\r\n        name=\"register\"\r\n        onFinish={onFinish}\r\n        onFinishFailed={onFinishFailed}\r\n        initialValues={props.paciente}\r\n        scrollToFirstError\r\n      >\r\n\r\n        <Form.Item\r\n          name=\"name\"\r\n          label=\"Nombre\"\r\n          rules={[{ required: true, message: 'Ingresa Nombre y apellidos' }]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"email\"\r\n          label=\"Correo\"\r\n          rules={[{ type: 'email', message: 'Ingresa un correo electronico vaido!' }, { required: true, message: 'Ingresa un correo electronico' }]}>\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"telefono\"\r\n          label=\"Telefono\"\r\n          rules={[{ required: true, message: 'Ingresa tu numero de telefono' },]}\r\n        >\r\n          <InputNumber maxLength={10} minLength={10} style={{ width: '100%' }} />\r\n        </Form.Item>\r\n\r\n        {/* Start Adding Medicos ASignados */}\r\n        <Form.Item name=\"medicos_asignados\" label=\"Medicos Asignados\" rules={[{ required: true, message: 'Agrega al mennos un medico' }]} >\r\n          <Form.List name=\"medicos_asignados\" >\r\n            {(fields, { add, remove }, { errors }) => (\r\n              <>\r\n                {fields.map((field, index) => (\r\n                  <Form.Item label='' required={false} key={field.key}>\r\n                    <Form.Item {...field} noStyle\r\n                      validateTrigger={['onChange', 'onBlur']}\r\n                      rules={[{ required: true, whitespace: true, message: \"Selecciona un Medico o elimina este campo\" }]}\r\n                    >\r\n                      <Select options={medicosData} placeholder=\"Selecciona Medico\" style={{ width: fields.length > 1 ? '90%' : '100%' }} />\r\n                    </Form.Item>\r\n                    {fields.length > 1 ? (\r\n                      <MinusCircleOutlined\r\n                        className=\"dynamic-delete-button\"\r\n                        onClick={() => remove(field.name)}\r\n                      />\r\n                    ) : null}\r\n                  </Form.Item>\r\n                ))}\r\n                <Form.Item>\r\n                  <Button type=\"dashed\" onClick={() => add()} icon={<PlusOutlined />}>\r\n                    Agregar Medico\r\n                  </Button>\r\n\r\n                  <Form.ErrorList errors={errors} />\r\n                </Form.Item>\r\n              </>\r\n            )}\r\n          </Form.List>\r\n        </Form.Item>\r\n        {/* End of Adding Medicos ASignados */}\r\n\r\n        <Divider>Responsable (opcional) </Divider>\r\n        <Form.Item name=\"res_name\" label=\"Nombre Responsable\" >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item name=\"res_phone\" label=\"Telefono Responsable\">\r\n          <Input />\r\n        </Form.Item>\r\n        <Divider />\r\n\r\n        <Form.Item\r\n          name=\"calle\"\r\n          label=\"Calle\"\r\n          rules={[{ required: false, message: 'Ingresa calle', whitespace: true }]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"numexterior\"\r\n          label=\"Num Exterior\"\r\n          rules={[{ required: false, message: 'Ingresa numero exterior' }]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"numinterior\"\r\n          label=\"Num Interior\"\r\n          rules={[{ required: false, message: 'Ingresa numinterior' }]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"Colonia\"\r\n          name=\"colonia\"\r\n          rules={[{ required: false, message: 'Ingresa ' }]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"estado\"\r\n          label=\"Estado\"\r\n          rules={[{ required: false, message: 'Apellido materno', },]}>\r\n          <Select placeholder=\"Elije tu estado\" showSearch>\r\n            {estados.map(e => <Option value={e}>{e}</Option>)}\r\n          </Select>\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"municipio\"\r\n          label=\"Municipio\"\r\n          rules={[{ required: false, message: 'Ingresa tu municipio' }]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"codigopostal\"\r\n          label=\"Codigo Postal\"\r\n          rules={[{ required: false, message: 'Ingresa codigopostal', },]}>\r\n          <InputNumber style={{ width: '100%', }} />\r\n        </Form.Item>\r\n\r\n        <Form.Item name=\"sexo\" label=\"sexo\" rules={[{ required: false, message: 'Selecciona una opcion' }]}>\r\n          <Select placeholder=\"Elije el sexo\" >\r\n            <Option value=\"H\">H</Option>\r\n            <Option value=\"M\">M</Option>\r\n            <Option value=\"Otro\">Otro</Option>\r\n          </Select>\r\n        </Form.Item>\r\n\r\n        <Form.Item name=\"edad\" label=\"Edad\" rules={[{ required: false, message: 'Ingresa edad' }]} >\r\n          <InputNumber min={1} max={120} />\r\n        </Form.Item>\r\n\r\n        <Form.Item name=\"diagnostico\" label=\"Diagnostico\" rules={[{ required: false, message: 'Ingresa el diagnostico' }]} >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item name=\"peso\" label=\"Peso\" rules={[{ required: false, message: 'Ingresa el peso' }]} >\r\n          <InputNumber min={1} max={200} />\r\n        </Form.Item>\r\n\r\n        <Form.Item name=\"talla\" label=\"Talla\" rules={[{ required: false, message: 'Ingresa la talla' }]} >\r\n          <InputNumber min={1} max={200} />\r\n        </Form.Item>\r\n\r\n        <Form.Item name=\"ocupacion\" label=\"Ocupacion\" rules={[{ required: false, message: 'Ingresa ocupacion' }]} >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item name=\"estado_civil\" label=\"Estado Civil\" rules={[{ required: false, message: 'Ingresa estado civil' }]} >\r\n          <Select placeholder=\"Elije el estado civil\" >\r\n            <Option value=\"Soltero\">Soltero</Option>\r\n            <Option value=\"Casado\">Casado</Option>\r\n            <Option value=\"Divorciado\">Divorciado</Option>\r\n            <Option value=\"Separación en proceso judicial\">Separación en proceso judicial</Option>\r\n            <Option value=\"Viudo\">Viudo</Option>\r\n            <Option value=\"Concubinato\">Concubinato</Option>\r\n          </Select>\r\n        </Form.Item>\r\n\r\n        <Form.Item name=\"escolaridad\" label=\"Escolaridad\" rules={[{ required: false, message: 'Ingresa escolaridad' }]} >\r\n          <Select placeholder=\"Elije escolaridad\" >\r\n            <Option value=\"Ninguno\">Ninguno</Option>\r\n            <Option value=\"Preescolar\">Preescolar</Option>\r\n            <Option value=\"Primaria\">Primaria</Option>\r\n            <Option value=\"Secundaria\">Secundaria</Option>\r\n            <Option value=\"Medio Superior\">Medio Superior</Option>\r\n            <Option value=\"Superior\">Superior</Option>\r\n            <Option value=\"Posgrado\">Posgrado</Option>\r\n          </Select>\r\n        </Form.Item>\r\n\r\n        <Form.Item name=\"lugar_de_nacimiento\" label=\"Lugar De Nacimiento\" rules={[{ required: false, message: 'Ingresa el lugar de nacimiento' }]} >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item name=\"fecha_nacimiento\" label=\"Fecha De Nacimiento\" rules={[{ required: false, message: 'Ingresa la fecha de nacimiento' }]} >\r\n          <DatePicker/>\r\n        </Form.Item>\r\n\r\n        <Form.Item name=\"ciudad\" label=\"Ciudad de residencia\" rules={[{ required: false, message: 'Ingresa ciudad' }]} >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item name=\"fuma\" label=\"Fuma\" rules={[{ required: false, message: 'Ingresa tu universidad' }]} >\r\n          <Switch defaultChecked={false} />\r\n        </Form.Item>\r\n\r\n        <Form.Item name=\"alcohol\" label=\"Alcohol\" rules={[{ required: false, message: 'Ingresa tu universidad' }]} >\r\n          <Switch defaultChecked={false} />\r\n        </Form.Item>\r\n\r\n        <Form.Item name=\"drogas\" label=\"Drogas\" rules={[{ required: false, message: 'Selecciona una opcion' }]} >\r\n          <Select placeholder=\"Elije una opcion\" >\r\n            <Option value=\"Antes\">Antes</Option>\r\n            <Option value=\"Ahora\">Ahora</Option>\r\n            <Option value=\"Nunca\">Nunca</Option>\r\n          </Select>\r\n        </Form.Item>\r\n\r\n        <Form.Item name=\"cuales_drogas\" label=\"Cuales Drogas\" rules={[{ required: false, message: 'Selecciona una opcion' }]} >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item name=\"enfermedades_familiares\" label=\"Enfermedades Familiares\" rules={[{ required: false, message: 'Ingresa tu universidad' }]} >\r\n          <Form.List name=\"enfermedades_familiares\" >\r\n            {(fields, { add, remove }, { errors }) => (\r\n              <>\r\n                {fields.map((field, index) => (\r\n                  <Form.Item label='' required={false} key={field.key}>\r\n                    <Form.Item {...field} noStyle\r\n                      validateTrigger={['onChange', 'onBlur']}\r\n                      rules={[{ required: true, whitespace: true, message: \"Ingresa la enfermedad o elimina este campo\" }]}\r\n                    >\r\n                      <Input placeholder=\"Ingresa enfermedad\" style={{ width: fields.length > 1 ? '90%' : '100%' }} />\r\n                    </Form.Item>\r\n                    {fields.length > 1 ? (\r\n                      <MinusCircleOutlined\r\n                        className=\"dynamic-delete-button\"\r\n                        onClick={() => remove(field.name)}\r\n                      />\r\n                    ) : null}\r\n                  </Form.Item>\r\n                ))}\r\n                <Form.Item>\r\n                  <Button type=\"dashed\" onClick={() => add()} icon={<PlusOutlined />}>\r\n                    Agregar Enfermedad Familiar\r\n                  </Button>\r\n\r\n                  <Form.ErrorList errors={errors} />\r\n                </Form.Item>\r\n              </>\r\n            )}\r\n          </Form.List>\r\n        </Form.Item>\r\n\r\n        <Form.Item name=\"enfermedades_medicas\" label=\"Enfermedades Medicas\" rules={[{ required: false, message: 'Ingresa tu universidad' }]} >\r\n          <Form.List name=\"enfermedades_medicas\">\r\n            {(fields, { add, remove }, { errors }) => (\r\n              <>\r\n                {fields.map((field, index) => (\r\n                  <Form.Item label='' required={false} key={field.key}>\r\n                    <Form.Item {...field} noStyle\r\n                      validateTrigger={['onChange', 'onBlur']}\r\n                      rules={[{ required: true, whitespace: true, message: \"Ingresa la enfermedad o elimina este campo\" }]}\r\n                    >\r\n                      <Input placeholder=\"Ingresa enfermedad\" style={{ width: fields.length > 1 ? '90%' : '100%' }} />\r\n                    </Form.Item>\r\n                    {fields.length > 1 ? (\r\n                      <MinusCircleOutlined\r\n                        className=\"dynamic-delete-button\"\r\n                        onClick={() => remove(field.name)}\r\n                      />\r\n                    ) : null}\r\n                  </Form.Item>\r\n                ))}\r\n                <Form.Item>\r\n                  <Button type=\"dashed\" onClick={() => add()} icon={<PlusOutlined />}>\r\n                    Agregar Enfermedad Medica\r\n                  </Button>\r\n\r\n                  <Form.ErrorList errors={errors} />\r\n                </Form.Item>\r\n              </>\r\n            )}\r\n          </Form.List>\r\n        </Form.Item>\r\n\r\n        <Form.Item name=\"tratamiento_actual\" label=\"Tratamiento actual\" rules={[{ required: false, message: 'Ingresa tu universidad' }]} >\r\n          <Form.List name=\"tratamiento_actual\" >\r\n            {(fields, { add, remove }, { errors }) => (\r\n              <>\r\n                {fields.map((field, index) => (\r\n                  <Form.Item\r\n                    // label={`Tratamiento ${index + 1}`} \r\n                    label=''\r\n                    required={false} key={field.key}>\r\n                    <Form.Item {...field} noStyle\r\n                      validateTrigger={['onChange', 'onBlur']}\r\n                      rules={[{ required: true, whitespace: true, message: \"Ingresa la enfermedad o elimina este campo\" }]}\r\n                    >\r\n                      <Input placeholder=\"Ingresa enfermedad\" style={{ width: fields.length > 1 ? '90%' : '100%' }} />\r\n                    </Form.Item>\r\n                    {fields.length > 1 ? (\r\n                      <MinusCircleOutlined\r\n                        className=\"dynamic-delete-button\"\r\n                        onClick={() => remove(field.name)}\r\n                      />\r\n                    ) : null}\r\n                  </Form.Item>\r\n                ))}\r\n                <Form.Item>\r\n                  <Button type=\"dashed\" onClick={() => add()} icon={<PlusOutlined />}>\r\n                    Agregar Tratamiento\r\n                  </Button>\r\n\r\n                  <Form.ErrorList errors={errors} />\r\n                </Form.Item>\r\n              </>\r\n            )}\r\n          </Form.List>\r\n        </Form.Item>\r\n\r\n        <Form.Item labelCol={{ span: 6 }} wrapperCol={{ offset: 6, span: 16 }}>\r\n          <Space>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              {props.paciente ? 'Guardar' : 'Registrar'}\r\n            </Button>\r\n            {\r\n              props.setAdding && <Button onClick={() => props.setAdding(false)}>Cancelar</Button>\r\n            }\r\n          </Space>\r\n\r\n        </Form.Item>\r\n      </Form>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { getData, deleteData, sendDataBody } from '../../resources'\r\nimport { Table, Avatar, Space, Button, Popconfirm, Modal, Card, Input } from 'antd'\r\nimport { UserOutlined, EditOutlined, SearchOutlined } from '@ant-design/icons'\r\nimport Register from './register.user'\r\nimport Loading from '../../loading'\r\n\r\nexport default function HospitalTab(props) {\r\n    const [loading, setLoading] = useState(true)\r\n    const [value, setValue] = useState(''); // For search input\r\n    const [pacientesData, setPacientesData] = useState([])\r\n    const [searchText, setSearchText] = useState('');//For search input\r\n    const [paciente, setPaciente] = useState({});\r\n    const [isModalVisible, setIsModalVisible] = useState(false);\r\n    const [editingProfile, setEditingProfile] = useState(false)\r\n    const showModal = () => { setIsModalVisible(true); };\r\n    const handleOk = () => { setIsModalVisible(false); };\r\n    const handleCancel = () => { setIsModalVisible(false); setEditingProfile(false) };\r\n\r\n\r\n    // useEffect(() => {\r\n    //     const fetchData = async () => {\r\n    //         const response = await getData('users_by_rol/Paciente');\r\n    //         setPacientesData(response);\r\n    //         setLoading(false)\r\n    //     };\r\n    //     fetchData();\r\n    // }, []);\r\n\r\n\r\n    // New method\r\n    useEffect(() => {\r\n        getPacientes()\r\n    }, [])\r\n\r\n    const getPacientes = async () => {\r\n\r\n        const meds = await getData(`users/hospital/${props.id_hospital}`)\r\n\r\n        const idmeds = meds.map(doc => {\r\n            return doc._id\r\n        })\r\n\r\n        sendDataBody('pacientes/medicos', { medicos: idmeds }).then((rs) => {\r\n            setPacientesData(rs)\r\n            setLoading(false)\r\n        })\r\n    }\r\n\r\n\r\n    const deleteUser = (id_paciente) => {\r\n        const newPatients = pacientesData.filter((p) => p._id !== id_paciente)\r\n        deleteData(`users/remove/${id_paciente}`).then((rs) => {\r\n            setPacientesData(newPatients)\r\n        })\r\n    }\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Rol',\r\n            dataIndex: 'rol',\r\n            key: 'rol',\r\n            onFilter: (value, record) => record.rol === \"Medico\",\r\n        },\r\n        {\r\n            title: 'Avatar',\r\n            dataIndex: 'avatar',\r\n            key: 'avatar',\r\n            render: (_, { avatar }) => {\r\n                return avatar.length > 9 ?\r\n                    <img width={64} src={'https://api.recreamed.com/images/' + avatar} alt='ProfilePic' /> :\r\n                    <Avatar size={64} icon={<UserOutlined />} className='btnIconCentered' />\r\n            }\r\n        },\r\n        {\r\n            title: 'Nombre',\r\n            dataIndex: 'name',\r\n            key: 'name',\r\n        },\r\n        {\r\n            title: 'Medicos Asignados',\r\n            dataIndex: 'medicos_asignados',\r\n            key: 'medicos_asignados',\r\n            render: (_, { medicos_asignados }) => <ul>{\r\n                medicos_asignados.map((m) => <li key={m._id}>{m.name}</li>)\r\n            }</ul>\r\n        },\r\n        {\r\n            title: 'Correo',\r\n            dataIndex: 'email',\r\n            key: 'email',\r\n        },\r\n        {\r\n            title: 'Telefono',\r\n            dataIndex: 'telefono',\r\n            key: 'telefono',\r\n        },\r\n        {\r\n            title: 'Acciones',\r\n            key: 'detalles',\r\n            render: (text, record) => (\r\n                <Space size=\"middle\">\r\n                    <Button onClick={() => { setPaciente(record); showModal(); }}>Detalles</Button>\r\n                    <Popconfirm\r\n                        title=\"Borrar Paciente\"\r\n                        description=\"Esta seguro que quiere eliminar al paciente?\"\r\n                        onConfirm={() => deleteUser(record._id)}\r\n                        onCancel={(e) => console.log(e)}\r\n                        okText=\"Si\"\r\n                        cancelText=\"No\"\r\n                    >\r\n                        <Button danger>Eliminar</Button>\r\n                    </Popconfirm>\r\n                </Space>\r\n            )\r\n        }\r\n    ];\r\n\r\n    // Populate table\r\n    // Find my patients by medico asignado\r\n    // const findPatientsOfMyMedicos = (id_hospital) => {\r\n    //     let dl = [];\r\n    //     // Check on each horario of each medico of medicos asignados of patient to see if share sucursal with my horarios as admin\r\n    //     pacientesData.forEach(paciente => {\r\n    //         paciente.medicos_asignados.forEach(med => {\r\n    //             med.horarios.forEach(h => {\r\n    //                if (h.sucursal === id_hospital && !dl.includes(paciente) && paciente.name.toLowerCase().includes(searchText.toLowerCase())) { console.log(paciente); dl.push(paciente) }\r\n    //             })\r\n    //         });\r\n    //     });\r\n    //     return dl;\r\n    // }\r\n\r\n    // Populate table new Form\r\n    const findPatientsOfMyMedicos = () => {\r\n        let dl = [];\r\n        pacientesData.forEach(paciente => {\r\n            if (!dl.includes(paciente) && paciente.name.toLowerCase().includes(searchText.toLowerCase())) { dl.push(paciente) }\r\n        });\r\n        return dl;\r\n    }\r\n\r\n    // const pacientesDataFiltered = findPatientsOfMyMedicos(); // Get medicos data before render TAble\r\n    const pacientesDataFiltered = pacientesData.filter((paciente) =>\r\n        paciente.name.toLowerCase().includes(searchText.toLowerCase())\r\n    );\r\n    // Fill Modal\r\n    const gridStyle = {\r\n        width: '50%',\r\n        height: '50px',\r\n        textAlign: 'center',\r\n        display: 'inline-flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center'\r\n    };\r\n    function DetalleUsuario() {\r\n        const datosSimples = [\r\n            \"rol\",\r\n            \"name\",\r\n            \"email\",\r\n            \"telefono\",\r\n            \"calle\",\r\n            \"municipio\",\r\n            \"estado\",\r\n            \"codigopostal\",\r\n            \"alcohol\",\r\n            \"ciudad\",\r\n            \"colonia\",\r\n            \"cuales_drogas\",\r\n            \"diagnostico\",\r\n            \"drogas\", \"edad\",\r\n            \"escolaridad\",\r\n            \"estado_civil\",\r\n            \"fuma\", \"lugar_de_nacimiento\",\r\n            \"numexterior\",\r\n            \"numinterior\",\r\n            \"ocupacion\",\r\n            \"peso\", \"sexo\",\r\n            \"talla\"\r\n        ]\r\n\r\n        return <div>\r\n            {\r\n                editingProfile ? <Register paciente={paciente} setAdding={setEditingProfile} /> :\r\n                    <Card bordered={false} title={<Space><h4>Detalles del paciente </h4> <Button type='primary' ghost onClick={setEditingProfile} shape=\"circle\" icon={<EditOutlined />} title='Editar' className='btnIconCentered' /></Space>}>\r\n                        {\r\n                            datosSimples.map(k => <><Card.Grid style={gridStyle}>{k}</Card.Grid><Card.Grid style={gridStyle} size='small'>{paciente[k]}</Card.Grid></>)\r\n                        }\r\n                    </Card>\r\n            }\r\n        </div>\r\n    }\r\n\r\n    const handleSearch = e => {\r\n        setValue(e.target.value)\r\n        setSearchText(e.target.value);\r\n    };\r\n\r\n    if (loading) return <Loading />\r\n\r\n    return <div>\r\n        <h6>Pacientes de {props.hospital}</h6>\r\n\r\n        <Input\r\n            style={{ width: '20em' }}\r\n            placeholder=\"Buscar Paciente\"\r\n            value={value}\r\n            onChange={handleSearch}\r\n            addonAfter={<SearchOutlined />}\r\n        />\r\n\r\n        <Table dataSource={pacientesDataFiltered} columns={columns} pagination={false} />\r\n\r\n        <Modal width={800} open={isModalVisible} onOk={handleOk} onCancel={handleCancel} destroyOnClose>\r\n            <DetalleUsuario />\r\n        </Modal>\r\n    </div>\r\n}\r\n","import React from 'react'\r\nimport { myHospitals } from '../../resources'\r\nimport { Tabs } from 'antd'\r\nimport HospitalTab from './dash.patients.hospital-tab'\r\n\r\n\r\nconst onChange = (key) => { console.log(key) }\r\n\r\nexport default function Dash() {\r\n\r\n    // Create items for TABS\r\n    myHospitals.forEach(h => {\r\n        h.label = h.nombre;\r\n        h.key = h._id;\r\n        h.children = <HospitalTab hospital={h.nombre} id_hospital={h._id} />\r\n    });\r\n\r\n    return (\r\n        <div className='mainContainer'>\r\n\r\n            <h4>Pacientes de los diferentes hospitaels</h4>\r\n            \r\n            <Tabs defaultActiveKey=\"1\" items={myHospitals} onChange={onChange} />\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Tabs } from 'antd'\r\nimport Register from './register.user';\r\nimport Dash from './dash.patients.main'\r\n\r\nexport default function Users() {\r\n    const items = [\r\n        { label: 'Pacientes', key: 'item-1', children: <Dash /> },\r\n        { label: 'Registrar', key: 'item-2', children: <Register /> },\r\n    ];\r\n    return (\r\n        <div >\r\n            <Tabs items={items} tabPosition='left' />\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { Form, Input, Button, message } from 'antd'\r\nimport { InputNumber, Select } from 'antd';\r\nimport { S_API,estados } from '../../resources'\r\nconst { Option } = Select;\r\n\r\nexport default function Register() {\r\n\r\n  const [form] = Form.useForm();\r\n\r\n  const onFinish = (values) => {\r\n    values.avatar = 'https://';\r\n    values.estatus = '1';\r\n    values.rol = 'Medico';\r\n    delete values.confirm;\r\n    delete values.prefix;\r\n    delete values.agreement;\r\n\r\n    console.log(values)\r\n    fetch(S_API + 'register', {\r\n      method: 'POST',\r\n      body: JSON.stringify(values),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).then(res => res.json())\r\n      .then(response => { console.log('Success:', response); message.success(response.message || response.error); })\r\n      .catch(error => console.error('Error:', error))\r\n  };\r\n\r\n  const prefixSelector = (\r\n    <Form.Item name=\"prefix\" noStyle>\r\n      <Select\r\n        style={{\r\n          width: 70,\r\n        }}\r\n      >\r\n        <Option value=\"+52\">+52</Option>\r\n      </Select>\r\n    </Form.Item>\r\n  );\r\n  const suffixSelector = (\r\n    <Form.Item name=\"suffix\" noStyle>\r\n      <Select\r\n        style={{\r\n          width: 70,\r\n        }}\r\n      >\r\n        <Option value=\"USD\">$</Option>\r\n        <Option value=\"CNY\">¥</Option>\r\n      </Select>\r\n    </Form.Item>\r\n  );\r\n\r\n\r\n  \r\n  return (\r\n    <div className='mainContainer'>\r\n      <h1>Registrar doctor</h1>\r\n      <br />\r\n      {/* <Form name=\"basic\" labelCol={{ span: 6 }} wrapperCol={{ span: 16 }} initialValues={{ remember: true }} onFinish={onFinish} onFinishFailed={onFinishFailed} autoComplete=\"off\" >\r\n        <Form.Item label=\"Hospital\" name=\"Hospital\" rules={[{ required: true, message: 'Please input your username!' }]} >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item label=\"Nombre\" name=\"username\" rules={[{ required: true, message: 'Please input your username!' }]} >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item label=\"Apellido Paterno\" name=\"rfc\" rules={[{ required: true, message: 'Ingresa RFC' }]} >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item label=\"Apellido Materno\" name=\"calle\" rules={[{ required: true, message: 'Avenida Madero esquina con Santiago Tapia' }]} >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item label=\"Cedula\" name=\"nint\" rules={[{ required: true, message: '74B' }]} >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item label=\"Calle\" name=\"next\" rules={[{ required: true, message: '12' }]} >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item label=\"Numero\" name=\"colonia\" rules={[{ required: true, message: 'Centro' }]} >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item label=\"Colonia\" name=\"cp\" rules={[{ required: true, message: '58000' }]} >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item label=\"Telefono\" name=\"ciudad_municipio\" rules={[{ required: true, message: 'Ingresa ciudad/municipio' }]} >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item label=\"Correo\" name=\"estado\" rules={[{ required: true, message: 'Ingresa estado' }]} >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\r\n          <Button type=\"primary\" htmlType=\"submit\">\r\n            Guardar\r\n          </Button>\r\n        </Form.Item>\r\n      </Form> */}\r\n      <Form\r\n        // {...formItemLayout}\r\n        labelCol={{ span: 6 }} wrapperCol={{ span: 16 }}\r\n        form={form}\r\n        name=\"register\"\r\n        onFinish={onFinish}\r\n        initialValues={{\r\n          residence: ['zhejiang', 'hangzhou', 'xihu'],\r\n          prefix: '52',\r\n        }}\r\n        scrollToFirstError\r\n      >\r\n        <Form.Item\r\n          name=\"email\"\r\n          label=\"Correo\"\r\n          rules={[\r\n            {\r\n              type: 'email',\r\n              message: 'The input is not valid E-mail!',\r\n            },\r\n            {\r\n              required: true,\r\n              message: 'Please input your E-mail!',\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item name=\"password\" label=\"Contraseña\" rules={[{ required: true, message: 'Por favor ingrese su contraseña!', },]} hasFeedback >\r\n          <Input.Password />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"confirm\"\r\n          label=\"Confirmar contraseña\"\r\n          dependencies={['password']}\r\n          hasFeedback\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Please confirm your password!',\r\n            },\r\n            ({ getFieldValue }) => ({\r\n              validator(_, value) {\r\n                if (!value || getFieldValue('password') === value) {\r\n                  return Promise.resolve();\r\n                }\r\n                return Promise.reject(new Error('Las contraseñas deben coincidir!'));\r\n              },\r\n            }),\r\n          ]}\r\n        >\r\n          <Input.Password />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"telefono\"\r\n          label=\"Telefono\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Please input your phone number!',\r\n            },\r\n          ]}\r\n        >\r\n          <Input\r\n            addonBefore={prefixSelector}\r\n            style={{\r\n              width: '100%',\r\n            }}\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"id_sucursal\"\r\n          label=\"Id Sucursal\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Ingresa el ID de la sucursal',\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"id_medicoasignado\"\r\n          label=\"Id Medico Asignado\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Ingresa el ID del medico ',\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"name\"\r\n          label=\"Nombre\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Ingresa Nombre y apellidos',\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"cedula\"\r\n          label=\"Cedula\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Ingresa cedula',\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"calle\"\r\n          label=\"Calle\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Ingresa calle',\r\n              whitespace: true,\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"numexterior\"\r\n          label=\"Num Exterior\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Ingresa numero exterior',\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"numinterior\"\r\n          label=\"Num Interior\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Ingresa numinterior',\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"Colonia\"\r\n          name=\"colonia\"\r\n          rules={[{ required: true, message: 'Please input your colobnia!' }]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item name=\"estado\" label=\"Estado\" rules={[{ required: true, message: 'Apellido materno', },]}>\r\n          <Select placeholder=\"Elije tu estado\" showSearch>\r\n            {estados.map(e => <Option value={e}>{e}</Option>)}\r\n          </Select>\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"municipio\"\r\n          label=\"Municipio\"\r\n          rules={[{ required: true, message: 'Ingresa tu municipio' }]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item name=\"codigopostal\" label=\"Codigo Postal\" rules={[{ required: true, message: 'Ingresa codigopostal', },]}>\r\n          <InputNumber addonAfter={suffixSelector} style={{ width: '100%', }} />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"certificacion\"\r\n          label=\"Certificacion\"\r\n          rules={[{ required: true, message: 'Ingresa tu certificacion' }]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"universidad\"\r\n          label=\"Universidad\" rules={[{ required: true, message: 'Ingresa tu universidad' }]} >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item wrapperCol={{ offset: 6, span: 16 }}>\r\n          <Button type=\"primary\" htmlType=\"submit\">\r\n            Registrar\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Table, Avatar } from 'antd'\r\nimport { UserOutlined } from '@ant-design/icons'\r\nimport { getData } from '../../resources'\r\nimport Loading from '../../loading'\r\n\r\nexport default function HospitalTab(props) {\r\n  const [doctorsData, setDoctorsData] = useState([])\r\n  const [loading, setLoading] = useState(false)\r\n\r\n  // Before all, get DoctorsData\r\n  useEffect(() => { getDoctorsData() }, [])\r\n  const getDoctorsData = () => {\r\n    getData('users_by_rol/Medico').then((rs) => { setDoctorsData(rs) }).finally(() => setLoading(false))\r\n  }\r\n  const columns = [\r\n    {\r\n      title: 'Avatar',\r\n      dataIndex: 'avatar',\r\n      key: 'avatar',\r\n      render: (_, { avatar }) => {\r\n        return avatar.length > 9 ?\r\n          <img width={64} src={'https://api.recreamed.com/images/' + avatar} alt='ProfilePic' /> :\r\n          <Avatar size={64} icon={<UserOutlined />} className='btnIconCentered' />\r\n      }\r\n    },\r\n    {\r\n      title: 'Nombre',\r\n      dataIndex: 'name',\r\n      key: 'name',\r\n    },\r\n    {\r\n      title: 'Correo',\r\n      dataIndex: 'email',\r\n      key: 'email',\r\n    },\r\n    {\r\n      title: 'Telefono',\r\n      dataIndex: 'telefono',\r\n      key: 'telefono',\r\n    },\r\n  ];\r\n  const myDoctors = (id_hospital) => {\r\n    let doctorsFound = [];\r\n    doctorsData.forEach(doctor => {\r\n      doctor.horarios.forEach(horario => {\r\n        if (!doctorsFound.includes(doctor) && horario.sucursal._id === id_hospital) doctorsFound.push(doctor)\r\n      });\r\n    });\r\n    console.log(`Founds for ${id_hospital}: `, doctorsFound)\r\n    return doctorsFound;\r\n  }\r\n  const doctoresData = myDoctors(props.id_hospital); // Get medicos data before render TAble\r\n  // Filter doctors of each hospital\r\n\r\n\r\n  if (loading) return <Loading />\r\n\r\n  return <div>\r\n    <h6>Doctores del hospital {props.hospital}</h6>\r\n    \r\n    <Table dataSource={doctoresData} columns={columns} />\r\n  </div>\r\n}\r\n","import React from 'react'\r\nimport { Tabs } from 'antd'\r\nimport { myHospitals } from '../../resources'\r\nimport HospitalTab from './dash.doctors.hospitalTab';\r\n\r\nexport default function Dash() {\r\n\r\n    // Create items for TABS\r\n    myHospitals.forEach(h => {\r\n        h.label = h.nombre;\r\n        h.key = h._id;\r\n        h.children = <HospitalTab hospital={h.nombre} id_hospital={h._id} />\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <h4 className='spacedTitle'>Recepcionistas de los diferentes hospitales</h4>\r\n            <Tabs defaultActiveKey=\"1\" items={myHospitals} />\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport { Tabs } from 'antd'\r\nimport { TeamOutlined, UserAddOutlined } from '@ant-design/icons';\r\nimport Register from './register.doctor';\r\nimport Dash from './dash.doctors.main';\r\n\r\nconst items = [\r\n    { key: '1', label: <><TeamOutlined /> Medicos</>, children: <Dash /> },\r\n    { key: '2', label: <><UserAddOutlined /> Registrar Medico</>, children: <Register /> },\r\n];\r\nconst onChange = (key) => { console.log(key) }\r\n\r\nexport default function Doctors() {\r\n    return (\r\n        <div>\r\n            <Tabs defaultActiveKey=\"1\" items={items} onChange={onChange} tabPosition='left' />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Sucursal() {\r\n  return (\r\n    <div>Perfil de la sucursal</div>\r\n  )\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Form, Input, Button, message, Space, Row, Col, Upload } from 'antd'\r\nimport { MinusCircleOutlined, PlusOutlined, InboxOutlined } from '@ant-design/icons';\r\nimport { Select } from 'antd';\r\nimport { getData, API } from '../../resources'\r\nconst { Option } = Select;\r\nconst { Dragger } = Upload;\r\n\r\n\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    xs: {\r\n      span: 24,\r\n    },\r\n    sm: {\r\n      span: 8,\r\n    },\r\n  },\r\n  wrapperCol: {\r\n    xs: {\r\n      span: 24,\r\n    },\r\n    sm: {\r\n      span: 14,\r\n    },\r\n  },\r\n};\r\nconst tailFormItemLayout = {\r\n  wrapperCol: {\r\n    xs: {\r\n      span: 24,\r\n      offset: 0,\r\n    },\r\n    sm: {\r\n      span: 16,\r\n      offset: 8,\r\n    },\r\n  },\r\n};\r\nexport default function PerfilEdit(props) {\r\n\r\n  const [form] = Form.useForm();\r\n\r\n  const [sucursales, setSucursales] = useState([]);\r\n  const [sucursalesLoading, setSucursalesLoading] = useState(true);\r\n  const [avatar, setAvatar] = useState(props.perfil.avatar)\r\n\r\n  //Start upload props Upload File\r\n  const dragDropProps = {\r\n    name: 'file',\r\n    multiple: false,\r\n    action: API + 'imagenes/upload',\r\n\r\n    onChange(info) {\r\n      const { status } = info.file;\r\n\r\n      if (status !== 'uploading') {\r\n        console.log(info.file, info.fileList);\r\n      }\r\n\r\n      if (status === 'done') {\r\n        message.success(`${info.file.name} file uploaded successfully.`);\r\n        console.log('New Files: ', info.file.response.file)\r\n        setAvatar(info.file.response.file)\r\n      } else if (status === 'error') {\r\n        message.error(`${info.file.name} file upload failed.`);\r\n      }\r\n    },\r\n\r\n    onDrop(e) {\r\n      console.log('Dropped files', e.dataTransfer.files);\r\n    },\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log('received Medic: ', props.perfil);\r\n    getData('sucursales').then((rs) => { setSucursales(rs); setSucursalesLoading(false) })\r\n  },[])\r\n\r\n\r\n\r\n  // const onFinish = (values) => {\r\n  //   values.avatar = avatar;\r\n  //   values.estatus = '1';\r\n  //   values.rol = 'Medico';\r\n  //   delete values.confirm;\r\n  //   delete values.prefix;\r\n\r\n  //   console.log('ready to send', values)\r\n  //   fetch(S_API + 'register', {\r\n  //     method: 'POST',\r\n  //     body: JSON.stringify(values),\r\n  //     headers: {\r\n  //       'Content-Type': 'application/json'\r\n  //     }\r\n  //   }).then(res => res.json())\r\n  //     .then(response => {\r\n  //       console.log('Success:', response);\r\n  //       response.message && response.message === 'Usuario creado correctamente' ?\r\n  //         window.location.href = 'doctores' : message.error(response.error);\r\n  //     })\r\n  //     .catch(error => console.error('Error:', error))\r\n  // };\r\n\r\n  const onFinishEdit = (values) => {\r\n    values.avatar = avatar;\r\n    // values.estatus = '1';\r\n    // values.rol = 'Medico';\r\n    // delete values.confirm;\r\n    // delete values.prefix;\r\n\r\n    console.log('ready to send', values)\r\n    fetch(API + 'users/updateUser/' + props.perfil._id, {\r\n      method: 'PUt',\r\n      body: JSON.stringify(values),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).then(res => res.json())\r\n      .then(response => {\r\n        console.log('Success:', response);\r\n        response.message && response.message === 'Usuario actualizado correctamente' ?\r\n          props.setEditing(false) : message.error(response.error);\r\n      })\r\n      .catch(error => console.error('Error:', error))\r\n  };\r\n\r\n  const prefixSelector = (\r\n    <Form.Item name=\"prefix\" noStyle>\r\n      <Select\r\n        style={{\r\n          width: 70,\r\n        }}\r\n      >\r\n        <Option value=\"+52\">+52</Option>\r\n      </Select>\r\n    </Form.Item>\r\n  );\r\n\r\n\r\n  return (\r\n    <div>\r\n      <h4>Editar perfil</h4>\r\n      <br />\r\n      <Dragger {...dragDropProps}>\r\n        <p className=\"ant-upload-drag-icon\">\r\n          <InboxOutlined />\r\n        </p>\r\n        <p className=\"ant-upload-text\">Arrastra la imagen de perfil o click ara buscar</p>\r\n        <p className=\"ant-upload-hint\">\r\n          Selecciona archivos en formato png, jpeg o webp\r\n        </p>\r\n      </Dragger>\r\n      <br />\r\n      <Form\r\n        {...formItemLayout}\r\n        form={form}\r\n        name=\"register\"\r\n        onFinish={onFinishEdit}\r\n        // initialValues={{ horarios: [{ sucursal: '', horario: '' }], prefix: '+52' }}\r\n        initialValues={props.perfil}\r\n        scrollToFirstError\r\n      >\r\n\r\n        <Row>\r\n\r\n          <Col span={11}>\r\n            <Form.Item name=\"name\" label=\"Nombre\" rules={[{ required: true, message: 'Ingresa Nombre y apellidos' }]}>\r\n              <Input />\r\n            </Form.Item>\r\n            <Form.Item name=\"email\" label=\"Correo\" rules={[{ type: 'email', message: 'Ingresa un corrreo electronico valido' }, { required: true, message: 'Please input your E-mail!' }]}>\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            {/* <Form.Item name=\"password\" label=\"Contraseña\" rules={[{ required: true, message: 'Por favor ingrese su contraseña!', },]} hasFeedback >\r\n              <Input.Password />\r\n            </Form.Item>\r\n\r\n            <Form.Item name=\"confirm\" label=\"Confirmar contraseña\" dependencies={['password']} hasFeedback\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: 'Please confirm your password!',\r\n                },\r\n                ({ getFieldValue }) => ({\r\n                  validator(_, value) {\r\n                    if (!value || getFieldValue('password') === value) {\r\n                      return Promise.resolve();\r\n                    }\r\n                    return Promise.reject(new Error('Las contraseñas deben coincidir!'));\r\n                  },\r\n                }),\r\n              ]}\r\n            >\r\n              <Input.Password />\r\n            </Form.Item> */}\r\n\r\n            <Form.Item name=\"telefono\" label=\"Telefono\" rules={[{ required: true, message: 'Ingresa el numero de telefono correcto' },]}>\r\n              <Input addonBefore={prefixSelector} style={{ width: '100%', }} />\r\n            </Form.Item>\r\n\r\n\r\n            <Form.Item label=\"horarios\" rules={[{ required: true, message: 'Ingresa al menos un horario', },]}>\r\n              <Form.List name=\"horarios\" label=\"horarios list\"\r\n              >\r\n                {(fields, { add, remove }) => (\r\n                  <>\r\n                    {fields.map(({ key, name, ...restField }) => (\r\n                      <Space key={key} style={{ display: 'flex', marginBottom: 8 }} align=\"baseline\">\r\n                        <Form.Item\r\n                          {...restField}\r\n                          name={[name, 'sucursal']}\r\n                          rules={[{ required: true, message: 'Elije Sucursal' }]}\r\n                        >\r\n                          <Select placeholder=\"Elije Sucursal\" style={{ width: '120px' }} >\r\n                            {sucursalesLoading ? \"Cargando\" :\r\n                              sucursales.map(s => <Option value={s._id}>{s.nombre}</Option>)\r\n                            }\r\n                          </Select>\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                          {...restField}\r\n                          name={[name, 'horario']}\r\n                          rules={[{ required: true, message: 'Missing last name' }]}\r\n                        >\r\n                          <Input placeholder=\"Horario\" />\r\n                        </Form.Item>\r\n                        <MinusCircleOutlined onClick={() => remove(name)} />\r\n                      </Space>\r\n                    ))}\r\n                    <Form.Item>\r\n                      <Button type=\"dashed\" onClick={() => add()} block icon={<PlusOutlined />}>\r\n                        Agregar Horario\r\n                      </Button>\r\n                    </Form.Item>\r\n                  </>\r\n                )}\r\n              </Form.List>\r\n            </Form.Item>\r\n\r\n\r\n\r\n          </Col>\r\n          <Col span={12}>\r\n            <Form.Item name=\"cedula\" label=\"Cedula\" rules={[{ required: false, message: 'Ingresa cedula' }]}>\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            {/* Not Necesary For Medic. He'll be in hospital direction */}\r\n            {/* <Form.Item name=\"calle\" label=\"Calle\" rules={[{ required: true, message: 'Ingresa calle', whitespace: true }]}>\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item name=\"numexterior\" label=\"Num Exterior\" rules={[{ required: true, message: 'Ingresa numero exterior' }]}>\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item name=\"numinterior\" label=\"Num Interior\" rules={[{ required: true, message: 'Ingresa numinterior' }]}>\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item label=\"Colonia\" name=\"colonia\" rules={[{ required: true, message: 'Please input your colobnia!' }]}            >\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item name=\"estado\" label=\"Estado\" rules={[{ required: true, message: 'Apellido materno', },]}>\r\n              <Select placeholder=\"Elije tu estado\">\r\n                {estados.map(e => <Option value={e}>{e}</Option>)}\r\n              </Select>\r\n            </Form.Item>\r\n\r\n            <Form.Item name=\"municipio\" label=\"Municipio\" rules={[{ required: true, message: 'Ingresa tu municipio' }]} >\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item name=\"codigopostal\" label=\"Codigo Postal\" rules={[{ required: true, message: 'Ingresa codigopostal', },]}>\r\n              <InputNumber addonAfter={suffixSelector} style={{ width: '100%', }} />\r\n            </Form.Item> */}\r\n\r\n            <Form.Item name=\"certificacion\" label=\"Certificacion\" rules={[{ required: false, message: 'Ingresa tu certificacion' }]}>\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item name=\"universidad\" label=\"Universidad\" rules={[{ required: false, message: 'Ingresa tu universidad' }]} >\r\n              <Input />\r\n            </Form.Item>\r\n            <Form.Item {...tailFormItemLayout}>\r\n              <Button type=\"primary\" htmlType=\"submit\">\r\n                Guardar\r\n              </Button>\r\n            </Form.Item>\r\n          </Col>\r\n        </Row>\r\n\r\n\r\n\r\n\r\n\r\n        {/* <Form.Item\r\n          name=\"agreement\"\r\n          valuePropName=\"checked\"\r\n          rules={[\r\n            {\r\n              validator: (_, value) =>\r\n                value ? Promise.resolve() : Promise.reject(new Error('Should accept agreement')),\r\n            },\r\n          ]}\r\n          {...tailFormItemLayout}\r\n        >\r\n          <Checkbox>\r\n            He leído y acepto los <a href=\"https://recreamed.com\">terminos y condiciones</a>\r\n          </Checkbox>\r\n        </Form.Item> */}\r\n\r\n\r\n      </Form>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Row, Col, Space, Button, Image } from 'antd';\r\nimport { Avatar, Card } from 'antd';\r\nimport { UserOutlined } from '@ant-design/icons';\r\nimport { API, usuario } from '../../resources';\r\nimport Loading from '../../loading';\r\nimport { FormOutlined } from '@ant-design/icons';\r\nimport PerfilEdit from './perfil.edit';\r\n\r\nexport default function PerfilAdministrador() {\r\n\r\n  const [profileData, setProfileData] = useState([]);\r\n  const [editing, setEditing] = useState(false)\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => { getProfileData() }, [])\r\n\r\n  useEffect(() => {\r\n    getProfileData()\r\n  }, [editing])\r\n\r\n  const getProfileData = () => {\r\n    fetch(API + 'userByMail/' + usuario.email)\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        console.log(data);\r\n        setProfileData(data[0]);\r\n        setIsLoading(false);\r\n      });\r\n  }\r\n\r\n  const editPerfil = async (p) => {\r\n    p.horarios.forEach((h) => { h.sucursal = h.sucursal._id })\r\n    console.log('Horarios before edit profile: ', p.horarios);\r\n\r\n    setEditing(true);\r\n    console.log('Editar medico: ', p)\r\n  }\r\n\r\n  const DetailsProfile = () => {\r\n    // Two Columns of 8 spaces with space of 4 around\r\n    return <Row>\r\n      <Col span={8} offset={4}>\r\n        {\r\n          // Profile Pic \r\n          profileData.avatar.length > 9 ?\r\n            <Image style={{ borderRadius: 12 }} width={256} src={'https://api.recreamed.com/images/' + profileData.avatar} />\r\n            :\r\n            <Avatar size={128} icon={<UserOutlined />} style={{ marginLeft: 80 }} className='btnIconCentered' />\r\n        }\r\n        <br /><br /><br />\r\n        <p className='nombre'> {profileData.name} </p>\r\n        <p className='datos'> {profileData.rol} </p>\r\n        <p className='datos'>Correo: {profileData.email} </p>\r\n        <p className='datos'>Telefono: {profileData.telefono} </p>\r\n      </Col>\r\n      {/* <Col span={8}>\r\n                <p>Estado: {profileData.estado}</p>\r\n                <p>Municipio: {profileData.municipio}</p>\r\n                <p>Colonia: {profileData.colonia}</p>\r\n                <p>Calle: {profileData.calle}</p>\r\n                <p>Codigo Postal:{profileData.codigopostal} </p>\r\n            </Col> */}\r\n      <Col span={7} offset={1}>\r\n        <Card title='Horarios' style={{ borderRadius: 12 }}>\r\n          {\r\n            profileData.horarios.map((h) => {\r\n              return <Card.Grid style={{ width: '100%' }} >\r\n                <Row align=\"middle\">\r\n                  <Col span={6} offset={4}><img width={64} src={'https://api.recreamed.com/images/' + h.sucursal.logo} alt=\"Logo\" /></Col>\r\n                  <Col span={10}>{h.sucursal.nombre} <br /> {h.horario}</Col>\r\n                </Row>\r\n              </Card.Grid>\r\n            })\r\n          }\r\n        </Card>\r\n        <br />\r\n        {/* <p>Universidad: {profileData.universidad} </p> */}\r\n      </Col>\r\n\r\n\r\n\r\n    </Row>\r\n  }\r\n\r\n  return (\r\n    <div className='mainContainer'>\r\n\r\n      <Space>\r\n        <h3>PERFIL</h3>\r\n        <Button onClick={() => editPerfil(profileData)} type=\"primary\" shape=\"circle\" icon={<FormOutlined />} className='btnIconCentered' />\r\n      </Space>\r\n      <br /><br />\r\n      {isLoading ? <Loading /> :\r\n        <Card style={{ borderRadius: 16 }}>\r\n          {\r\n            editing ?\r\n              <>\r\n                <PerfilEdit perfil={profileData} setEditing={setEditing} />\r\n                <Button onClick={() => setEditing(false)}>Cancelar</Button>\r\n              </> :\r\n              <DetailsProfile />\r\n          }\r\n        </Card>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Button, Modal, Form, Input, Select, message, DatePicker, InputNumber } from 'antd';\r\nimport { getData, sendDataBody, updateData } from '../../resources';\r\n// ADMIN CREATE INGRESO\r\nexport default function CreateBalance(props) {\r\n\r\n    const isCreating = !props.balanceForEdit || Object.keys(props.balanceForEdit).length === 0;\r\n    const [pacientesData, setPacientesData] = useState([])\r\n    const [loading, setLoading] = useState(true)\r\n\r\n    const handleOk = () => { props.setIsModalOpen(false) };\r\n    const handleCancel = () => { props.setIsModalOpen(false); props.setBalanceForEdit(null) };\r\n\r\n    useEffect(() => {\r\n        console.log('receivd for edit', props)\r\n        if (props.balanceForEdit && props.balanceForEdit.medico) {\r\n            getPacientesData(props.balanceForEdit.medico)\r\n        }\r\n\r\n    }, [props.balanceForEdit])\r\n\r\n\r\n    // Start of filtering patients to show in select\r\n    const getPacientesData = (medico) => {\r\n        // if (props.balanceForEdi) {\r\n        getData(`mispacientes/${medico}`).then((rs) => {\r\n            if (rs) {\r\n                rs.forEach(patient => {\r\n                    patient.value = patient._id; patient.label = patient.name;\r\n                });\r\n                console.log('Pacientes: ', rs)\r\n                setPacientesData(rs)\r\n            }\r\n        }).finally(() => { setLoading(false) })\r\n        // }\r\n    }\r\n    // End of filtering patients to show in select\r\n\r\n    // Form methods\r\n    const onFinish = (values) => {\r\n\r\n        values.tipo = props.tipo;\r\n        console.log('Ready to send:', values);\r\n        console.log('For Edit: ', props.balanceForEdit);\r\n        if (isCreating) {\r\n            sendDataBody(`balances/add`, values).then((rs) => { console.log(rs); message.success(rs.message || rs.error) }).finally(() => { props.getIngresos(); props.setIsModalOpen(false) })\r\n        } else {\r\n            updateData(`/balances/update/${props.balanceForEdit._id}`, values).then((rs) => {\r\n                props.getIngresos(); props.setBalanceForEdit({}); props.setIsModalOpen(false);\r\n            })\r\n        }\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => { console.log('Failed:', errorInfo) };\r\n\r\n    const handleDoctorChange = (value) => { getPacientesData(value) };\r\n\r\n    return (\r\n        <Modal title={isCreating ? `Agregar ${props.tipo}` : `Editar ${props.tipo}`} open={props.isModalOpen} onOk={handleOk} onCancel={handleCancel} destroyOnClose\r\n            footer={[\r\n                <Button type=\"primary\" htmlType=\"submit\" form='edit_balance'>\r\n                    Guardar\r\n                </Button>,\r\n                <Button onClick={handleCancel}>\r\n                    Cancelar\r\n                </Button>\r\n            ]}>\r\n            <Form\r\n                name=\"edit_balance\"\r\n                labelCol={{ span: 8 }}\r\n                wrapperCol={{ span: 16 }}\r\n                initialValues={props.balanceForEdit}\r\n                onFinish={onFinish}\r\n                onFinishFailed={onFinishFailed}\r\n                autoComplete=\"off\"\r\n            >\r\n                <Form.Item label=\"Monto\" name=\"monto\" rules={[{ required: true, message: 'Ingresa el monto' }]} >\r\n                    <InputNumber style={{ width: '100%' }} />\r\n                </Form.Item>\r\n\r\n                <Form.Item label=\"abono\" name=\"abono\" rules={[{ required: true, message: 'Ingresa el abobo' }]} >\r\n                    <InputNumber style={{ width: '100%' }} />\r\n                </Form.Item>\r\n\r\n                <Form.Item label=\"Forma de Pago\" name=\"forma_de_pago\" >\r\n                    <Select\r\n                        // onChange={handleDoctorChange}\r\n                        options={[\r\n                            {\r\n                                value: 'efectivo',\r\n                                label: 'Efectivo',\r\n                            },\r\n                            {\r\n                                value: 'tarjeta',\r\n                                label: 'Tarjeta',\r\n                            },\r\n                            {\r\n                                value: 'transferencia',\r\n                                label: 'Transferencia',\r\n                            },\r\n                        ]}\r\n                    />\r\n                </Form.Item>\r\n\r\n                {isCreating && <div><Form.Item\r\n                    label=\"Estado\"\r\n                    name=\"estado\"\r\n                    rules={[{ required: true, message: 'Ingresa el monto' }]}\r\n                >\r\n                    <Select options={[\r\n                        {\r\n                            value: 'pendiente',\r\n                            label: 'Pendiente',\r\n                        },\r\n                        {\r\n                            value: 'pagado',\r\n                            label: 'Pagado',\r\n                        },\r\n                        {\r\n                            value: 'pago parcial',\r\n                            label: 'Pago parcial',\r\n                        },\r\n                    ]}\r\n                    />\r\n                </Form.Item>\r\n\r\n                    <Form.Item label=\"Medico\" name=\"medico\" >\r\n                        <Select options={props.medicosData} onChange={handleDoctorChange} />\r\n                    </Form.Item>\r\n\r\n\r\n                    {\r\n                        // Para el caso que sea un ingreso sin cita\r\n                        (!props.balanceForEdit || Object.keys(props.balanceForEdit).length === 0) && <div>\r\n                            <Form.Item\r\n                                label=\"Concepto\"\r\n                                name=\"concepto\"\r\n                                rules={[{ required: true, message: 'Ingresa el concepto' }]}\r\n                            >\r\n                                <Input />\r\n                            </Form.Item>\r\n\r\n                            {\r\n                                props.tipo === 'ingreso' && <Form.Item\r\n                                    label=\"Paciente\"\r\n                                    name=\"paciente\"\r\n                                >\r\n                                    <Select\r\n                                        options={pacientesData}\r\n                                    />\r\n                                </Form.Item>\r\n                            }\r\n\r\n                        </div>\r\n                    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                    <Form.Item\r\n                        label=\"Fecha y Hora\"\r\n                        name=\"fecha_hora\"\r\n                        rules={[{ required: true, message: 'Selecciona Fecha y Hora' }]}\r\n                    >\r\n                        <DatePicker showTime format=\"DD-MM-YYYY HH:mm\" />\r\n                    </Form.Item> </div>}\r\n\r\n            </Form>\r\n        </Modal>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Document, Page, Text, View, StyleSheet, Image } from '@react-pdf/renderer';\r\nimport { PDFViewer } from '@react-pdf/renderer';\r\n\r\n\r\n// Estilo para el ticket\r\nconst styles = StyleSheet.create({\r\n    titleContainer: {\r\n        flexDirection: 'row',\r\n        justifyContent: 'center',\r\n        marginBottom: 10,\r\n    },\r\n    reportTitle: {\r\n        fontSize: 18,\r\n        textAlign: 'center',\r\n        fontFamily: 'Helvetica-Bold',\r\n        textTransform: 'uppercase',\r\n    },\r\n    subtitle: {\r\n        fontSize: 14,\r\n        textAlign: 'center',\r\n        fontFamily: 'Helvetica',\r\n        marginBottom: 20,\r\n    },\r\n    text: {\r\n        margin: 10,\r\n        fontSize: 12,\r\n        textAlign: 'justify',\r\n        fontFamily: 'Helvetica',\r\n    },\r\n    sellerBuyerInfo: {\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-between',\r\n        marginBottom: 10,\r\n    },\r\n    infoTitle: {\r\n        fontFamily: 'Helvetica-Bold',\r\n        fontSize: 12,\r\n    },\r\n    infoText: {\r\n        fontFamily: 'Helvetica',\r\n        fontSize: 12,\r\n    },\r\n    table: {\r\n        display: 'table',\r\n        width: 'auto',\r\n        marginTop: 10,\r\n        borderStyle: 'solid',\r\n        borderWidth: 1,\r\n        borderColor: '#bfbfbf',\r\n    },\r\n    tableRow: {\r\n        margin: 'auto',\r\n        flexDirection: 'row',\r\n    },\r\n    tableColHeader: {\r\n        width: '25%',\r\n        borderStyle: 'solid',\r\n        borderWidth: 1,\r\n        borderColor: '#bfbfbf',\r\n        backgroundColor: '#f0f0f0',\r\n        textAlign: 'center',\r\n        fontFamily: 'Helvetica-Bold',\r\n        fontSize: 12,\r\n        paddingTop: 5,\r\n        paddingBottom: 5,\r\n    },\r\n    tableCol: {\r\n        width: '25%',\r\n        borderStyle: 'solid',\r\n        borderWidth: 1,\r\n        borderColor: '#bfbfbf',\r\n        textAlign: 'center',\r\n        fontFamily: 'Helvetica',\r\n        fontSize: 10,\r\n        paddingTop: 5,\r\n        paddingBottom: 5,\r\n    },\r\n    tableCellHeader: {\r\n        margin: 'auto',\r\n        marginTop: 5,\r\n        marginBottom: 5,\r\n        flexDirection: 'row',\r\n    },\r\n    total: {\r\n        fontFamily: 'Helvetica-Bold',\r\n        fontSize: 14,\r\n        marginTop: 30,\r\n        textAlign: 'right',\r\n        paddingRight: 50,\r\n    },\r\n\r\n    page: {\r\n        fontFamily: 'Helvetica',\r\n        fontSize: 12,\r\n        padding: 40,\r\n    },\r\n    header: {\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        borderBottom: '1pt solid #000',\r\n        paddingBottom: 10,\r\n        marginBottom: 10,\r\n    },\r\n    logo: {\r\n        width: 80,\r\n        height: 'auto',\r\n        marginRight: 10,\r\n    },\r\n    title: {\r\n        fontSize: 20,\r\n        marginLeft: 10,\r\n    },\r\n    company: {\r\n        fontSize: 14,\r\n        marginTop: 5,\r\n        marginLeft: 10,\r\n    },\r\n});\r\n\r\n// Componente del ticket\r\nexport default function Ticket({ ingresos, logo, hospital, seller, buyer }) {\r\n    console.log('Received for print ', ingresos)\r\n\r\n    const { usuario: { name: userName } = {} } = ingresos[0]\r\n    const { cita: { usuario: { name: citaName } = {} } = {} } = ingresos[0]\r\n\r\n    return <PDFViewer height={500} width={550}>\r\n        <Document>\r\n            <Page size=\"A4\" style={styles.page}>\r\n                <View>\r\n                    <View style={styles.header}>\r\n                        <Image style={styles.logo} src={logo} />\r\n                        <View>\r\n                            <Text style={styles.title}>Nota de Venta</Text>\r\n                            <Text style={styles.company}>{hospital} </Text>\r\n                            <Text style={styles.company}>{new Date(ingresos[0].createdAt).toLocaleString()} </Text>\r\n                        </View>\r\n                    </View>\r\n                    <View style={styles.sellerBuyerInfo}>\r\n                        <View>\r\n                            <Text style={styles.infoTitle}>Medico:</Text>\r\n                            <Text style={styles.infoText}>{ingresos[0].doctor.name}</Text>\r\n                        </View>\r\n                        <View>\r\n                            <Text style={styles.infoTitle}>Paciente:</Text>\r\n                            {userName && <Text style={styles.infoText}>{userName}</Text>}\r\n                            {citaName && <Text style={styles.infoText}>{citaName}</Text>}\r\n                        </View>\r\n                    </View>\r\n                    <View style={styles.table}>\r\n                        <View style={styles.tableRow}>\r\n                            <Text style={styles.tableColHeader}>Concepto</Text>\r\n                            <Text style={styles.tableColHeader}>Cantidad</Text>\r\n                            <Text style={styles.tableColHeader}>Precio Unitario</Text>\r\n                            <Text style={styles.tableColHeader}>Subtotal</Text>\r\n                        </View>\r\n                        {ingresos.map((item) => (\r\n                            <View style={styles.tableRow} key={item.id}>\r\n                                <Text style={styles.tableCol}>{item.concepto}</Text>\r\n                                <Text style={styles.tableCol}>1</Text>\r\n                                <Text style={styles.tableCol}>${item.monto.toFixed(2)}</Text>\r\n                                <Text style={styles.tableCol}>\r\n                                    {/* ${(item.monto * item.quantity).toFixed(2)} */}\r\n                                    ${item.monto.toFixed(2)}\r\n                                </Text>\r\n                            </View>\r\n                        ))}\r\n                    </View>\r\n                    <Text style={styles.total}>\r\n                        Total: ${ingresos.reduce((acc, item) => acc + item.monto * 1, 0).toFixed(2)}\r\n                    </Text>\r\n                </View>\r\n            </Page>\r\n        </Document>\r\n\r\n    </PDFViewer>\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { Table, Tag, Button, Typography, Modal, Card, Row, Col } from 'antd';\r\nimport { CheckCircleTwoTone } from '@ant-design/icons'\r\nimport moment from 'moment/moment';\r\n\r\nimport { getData, usuario, sendDataBody, ids_hospitales } from '../../resources';\r\nimport CreateBalance from './create-ingreso';\r\nimport Loading from '../../loading';\r\nimport Ticket from './ticket-for-print';\r\n\r\nconst { Text } = Typography;\r\n\r\nexport default function Ingresos() {\r\n    const [loading, setLoading] = useState(true)\r\n    const [medicosData, setMedicosData] = useState({}) // Populate the main select component\r\n    const [medico, setMedico] = useState(null)\r\n    const [ingresosData, setIngresosData] = useState([])\r\n    const [ingresoForEdit, setIngresoForEdit] = useState({})\r\n    const [ingresoForPrint, setIngresoForPrint] = useState([])\r\n\r\n    // Modal For Add/Edit Inreso\r\n    const [isIngresoModalOpen, setIsIngresoModalOpen] = useState(false);\r\n    const showIngresoModal = () => { setIsIngresoModalOpen(true) };\r\n    // Modal For Add/Edit Enreso\r\n    const [isEgresoModalOpen, setIsEgresoModalOpen] = useState(false)\r\n    const showEgresoModal = () => { setIsEgresoModalOpen(true) };\r\n\r\n    // Select logo for print in receta. Switches the modal view into select logo hospital/pdf recipe for print\r\n    const [logoHospital, setLogoHospital] = useState(null)\r\n    const [nombreHospital, setNombreHospital] = useState(null)\r\n    const [isLogoSelected, setIsLogoSelected] = useState(false)\r\n\r\n    // Modal For Ticket\r\n    const [isTicketModalOpen, setIsTicketModalOpen] = useState(false);\r\n    const showTicketModal = () => { setIsTicketModalOpen(true); };\r\n    const handleTicketOk = () => { setIsTicketModalOpen(false); setIsLogoSelected(false) };\r\n    const handleTicketCancel = () => { setIsTicketModalOpen(false);; setIsLogoSelected(false) };\r\n\r\n    const [lastFecha, setLastFecha] = useState(\"\")\r\n    const [firstFecha, setFirstFecha] = useState(\"\")\r\n\r\n    useEffect(() => {\r\n        getIngresos()\r\n    }, [])\r\n\r\n    function subtractMonths(date, months) { date.setMonth(date.getMonth() - months); return date; }\r\n    const getIngresos = async () => {\r\n        const medicos = await sendDataBody('users/getMany/hospitals', { ids_hospitales: ids_hospitales })\r\n\r\n        medicos.forEach(m => { m.label = m.name; m.value = m._id; })// to pass to create modal\r\n        setMedicosData(medicos) // to pass to create modal\r\n\r\n        const lastFechaCierre = await getData(`cortes/${usuario._id}`).then((rs) => {\r\n            setFirstFecha(rs.at(0).fecha_cierre)\r\n            setLastFecha(rs.length > 1 ? rs.at(-1).fecha_cierre : subtractMonths(new Date(), 3).toString())\r\n            return rs.length > 1 ? rs.at(-1).fecha_cierre : subtractMonths(new Date(), 3)\r\n        })\r\n\r\n        const ids = medicos.map(doc => {\r\n            return doc._id\r\n        });\r\n        const body = {\r\n            fecha_inicio: lastFechaCierre,\r\n            medico: ids\r\n        }\r\n        console.log(body)\r\n        sendDataBody('balances', body).then((rs) => {\r\n            console.log(rs)\r\n            rs.forEach((i) => { i.doctor = i.medico; i.medico = i.medico._id; if (i.paciente) { i.usuario = i.paciente; i.paciente = i.paciente._id; } })\r\n            setIngresosData(rs)\r\n        }).finally(() => setLoading(false))\r\n    }\r\n\r\n    const handleEditIngreso = (record) => {\r\n        record.fecha_hora = moment.utc(record.fecha_hora)\r\n        setIngresoForEdit(record);\r\n        showIngresoModal()\r\n    }\r\n\r\n\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Médico',\r\n            dataIndex: 'medico',\r\n            key: 'createdAt',\r\n            render: (_, { doctor }) => { return <>{doctor.name}</> }\r\n        },\r\n        // {\r\n        //     title: 'Concepto',\r\n        //     dataIndex: 'concepto',\r\n        //     key: 'concepto',\r\n        // },\r\n        {\r\n            title: 'Tipo',\r\n            dataIndex: 'tipo',\r\n            key: 'tipo',\r\n            render: (_, { tipo }) => {\r\n                let color = (tipo && tipo === 'ingreso') ? 'geekblue' : 'volcano';\r\n                return tipo ? <Tag color={color} >{tipo.toUpperCase()}</Tag> : <Tag color={color}>Indefinido</Tag>\r\n            },\r\n        },\r\n        {\r\n            title: 'Fecha',\r\n            dataIndex: 'fecha_hora',\r\n            key: 'fecha_hora',\r\n            render: (_, { fecha_hora }) => { return <>{new Date(fecha_hora).toLocaleString()}</> },\r\n            defaultSortOrder: 'descend',\r\n            // sorter: (a, b) => a.fecha_hora > b.fecha_hora,\r\n        },\r\n        {\r\n            title: 'Monto',\r\n            dataIndex: 'monto',\r\n            key: 'monto',\r\n            render: (_, { monto }) => { return <>${monto}</> }\r\n        },\r\n        {\r\n            title: 'Abono',\r\n            dataIndex: 'abono',\r\n            key: 'abono',\r\n            render: (_, { abono }) => { return abono && <>${abono}</> }\r\n        },\r\n        {\r\n            title: 'Adeudo',\r\n            dataIndex: 'adeudo',\r\n            key: 'adeudo',\r\n            render: (_, record) => { return <>${record.monto - record.abono}</> }\r\n\r\n        },\r\n        {\r\n            title: 'Forma de pago',\r\n            key: 'forma_de_pago',\r\n            dataIndex: 'forma_de_pago',\r\n            render: (_, { forma_de_pago }) => {\r\n                let color = forma_de_pago === 'efectivo' ? 'geekblue' : 'green';\r\n                return <Tag color={color} >{forma_de_pago.toUpperCase()}</Tag>\r\n            },\r\n        },\r\n        {\r\n            title: 'Paciente',\r\n            key: 'usuario',\r\n            dataIndex: 'usuario',\r\n            render: (_, record) => {\r\n                // if (record.cita) return <>{record.cita.usuario}</>\r\n                if (record.cita) return <div style={{ display: 'flex', flexDirection: 'column' }}>{record.cita.usuario.name} <span style={{ fontSize: 9 }}>Tomado de la cita</span></div> //when populate is ready\r\n                else if (record.usuario) return <>{record.usuario.name}</>\r\n                else return <Text type=\"secondary\"> Sin Paciente</Text>\r\n            },\r\n        },\r\n        {\r\n            title: 'Factura',\r\n            key: 'Factura',\r\n            dataIndex: 'factura',\r\n            render: (_, { factura }) => { return factura && <CheckCircleTwoTone /> }\r\n\r\n        },\r\n        {\r\n            title: 'Estado',\r\n            key: 'Estado',\r\n            dataIndex: 'estado',\r\n            // render: (_, { estado }) => {\r\n            //     let color = estado === 'pagado' ? 'green' : 'geekblue';\r\n            //     if (estado === 'pendiente' || estado === 'sin pagar') color = 'volcano';\r\n            //     return <Tag color={color}> {estado.toUpperCase()} </Tag>\r\n            // }\r\n            render: (_, { abono, monto }) => {\r\n                const pagado = abono === monto;\r\n                let color = pagado ? 'green' : 'volcano';\r\n                return <Tag color={color}> {pagado ? 'PAGADO' : 'PENDIENTE'} </Tag>\r\n            }\r\n\r\n        },\r\n        {\r\n            title: 'Acciones',\r\n            key: 'Editar',\r\n            render: (_, record) => <div style={{ display: 'flex', gap: 2, flexDirection: 'column' }}>\r\n                {/* <Button onClick={() => { deleteData(`balances/remove/${record._id}`).then(()=>getIngresos()) }}>Eliminar</Button> */}\r\n                <Button size='small' onClick={() => handleEditIngreso(record)}>Editar Monto</Button>\r\n                <Button size='small' onClick={() => { setIngresoForPrint([record]); showTicketModal() }}>Imprimir Nota</Button>\r\n            </div>\r\n        },\r\n    ];\r\n\r\n\r\n    if (loading) return <Loading />\r\n\r\n    return (\r\n        <div className='mainContainer'>\r\n            {/* <div>first fecha cierre {firstFecha} </div>\r\n            <div>last fecha cierre {lastFecha} </div> */}\r\n            <h4>Ingresos de todos los medicos</h4>\r\n            <br />\r\n\r\n            {/* <div></div> */}\r\n\r\n            <Button ghost onClick={showIngresoModal} type='primary' style={{ marginBottom: 22 }} >Agregar Nuevo Ingreso</Button>\r\n            <Button ghost onClick={showEgresoModal} type='primary' style={{ marginBottom: 22, marginLeft: 6 }} >Agregar Nuevo Gasto</Button>\r\n\r\n            <Table columns={columns} dataSource={ingresosData} />\r\n\r\n            <div style={{ height: 200 }}></div>\r\n\r\n            {/* Ingreso */}\r\n            <CreateBalance tipo='ingreso' balanceForEdit={ingresoForEdit} setBalanceForEdit={setIngresoForEdit} setIsModalOpen={setIsIngresoModalOpen} isModalOpen={isIngresoModalOpen} getIngresos={getIngresos} medico={medico} medicosData={medicosData} />\r\n\r\n            {/* Gasto */}\r\n            <CreateBalance tipo='egreso' balanceForEdit={ingresoForEdit} setBalanceForEdit={setIngresoForEdit} setIsModalOpen={setIsEgresoModalOpen} isModalOpen={isEgresoModalOpen} getIngresos={getIngresos} medico={medico} medicosData={medicosData} />\r\n\r\n            <Modal title=\"Imprimir Nota de Venta\" open={isTicketModalOpen} onOk={handleTicketOk} onCancel={handleTicketCancel} width={600}>\r\n                {\r\n                    isLogoSelected ? // Si ya hay logo seleccionado, se pasa a la receta y se muestra en pdf\r\n                        <Ticket ingresos={ingresoForPrint} logo={'https://api.recreamed.com/images/' + logoHospital} hospital={nombreHospital} seller='Médico: ' buyer='Paciente: ' />\r\n                        :\r\n                        <div>\r\n                            <Card title='Selecciona un hospital' bordered={false}>\r\n                                {\r\n                                    usuario.horarios.map((h) => {\r\n                                        return <Card.Grid style={{ width: '100%' }} onClick={() => { console.log(h.sucursal); setLogoHospital(h.sucursal.logo); setNombreHospital(h.sucursal.nombre); setIsLogoSelected(true) }} key={h._id}>\r\n                                            <Row align=\"middle\">\r\n                                                <Col span={6} offset={4}><img width={64} src={'https://api.recreamed.com/images/' + h.sucursal.logo} alt=\"Logo\" /></Col>\r\n                                                <Col span={10}>{h.sucursal.nombre} <br /> {h.horario}</Col>\r\n                                            </Row>\r\n                                        </Card.Grid>\r\n                                    })\r\n                                }\r\n                            </Card>\r\n                        </div>\r\n                }\r\n\r\n            </Modal>\r\n        </div >\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport { Button, Modal, Typography, Table } from 'antd'\r\nimport * as FileSaver from 'file-saver';\r\nimport XLSX from \"sheetjs-style\";\r\n\r\nimport { sendDataBody, getData, usuario, deleteData } from '../../resources'\r\nimport CorteDocument from \"../../doctorViews/cortes/corteForPrint\";\r\n\r\nconst { Text } = Typography;\r\n\r\nexport default function Detalles(props) {\r\n    console.log('Corte for details ', props.corte)\r\n\r\n    const [isPrinting, setIsPrinting] = useState(false)\r\n\r\n    const [pacientesData, setPacientesData] = useState([])\r\n\r\n    const [totales, setTotales] = useState({})\r\n    const handleOk = () => { props.setIsModalOpen(false) };\r\n\r\n    useEffect(() => { return getPacientesData() }, [])\r\n\r\n    // Here creates the main data\r\n    useEffect(() => {\r\n        sendDataBody(`balances/ingresos/corte`, props.corte).then(rs => {\r\n            console.log(rs)\r\n            let totalIngresos = 0;\r\n            let totalPendiente = 0;\r\n            let totalCobros = rs.length;\r\n            let totalPagados = 0;\r\n            let totalPendientes = 0;\r\n            let _listOfDeudors = [];\r\n            let _listOfPagados = [];\r\n            rs.forEach(c => {\r\n                if ((c && c.estado === 'pagado') || c.monto === c.abono) {\r\n                    totalIngresos += c.monto;\r\n                    totalPagados++\r\n                    _listOfPagados.push(c)\r\n                } else {\r\n                    totalPendiente += c.monto;\r\n                    totalPendientes++;\r\n                    _listOfDeudors.push(c)\r\n                }\r\n            });\r\n            const totales = {\r\n                ingresosTotales: totalIngresos,\r\n                deudasTotales: totalPendiente,\r\n                cobrosTotales: totalCobros,\r\n                pagados: totalPagados,\r\n                pendientes: totalPendientes,\r\n                listOfDeudors: _listOfDeudors,\r\n                listOfPagados: _listOfPagados\r\n            }\r\n            setTotales(totales)\r\n        })\r\n\r\n\r\n    }, [props.corte])\r\n\r\n\r\n\r\n    // Give me the patients to match names\r\n    const getPacientesData = () => { getData(`mispacientes/${usuario._id}`).then((rs) => { setPacientesData(rs); }) }\r\n    const MatchPatient = ({ paciente }) => {\r\n        const patient = pacientesData.find((p) => paciente === p._id)\r\n        return <div>{patient ? patient.name : <Text disabled>Paciente eliminado o no existente</Text>} <p style={{ fontSize: 10 }}>Tomado de la cita</p></div>\r\n    }\r\n    const columns = [\r\n        {\r\n            title: 'Paciente',\r\n            key: 'cita.paciente',\r\n            dataIndex: 'cita',\r\n            // render: (_, record) => {\r\n            //     if (record.cita) return <MatchPatient paciente={record.cita.usuario} />\r\n            //     else if (record.paciente) return <>{record.paciente.name}</>\r\n            //     else return <Text type=\"secondary\"> Sin Paciente</Text>\r\n            // },\r\n            render: (_, record) => {\r\n                if (record.cita) return <>{record.cita.usuario.name}</>\r\n                else if (record.paciente) return <>{record.paciente.name}</>\r\n                else return <Text type=\"secondary\"> Sin Paciente</Text>\r\n            },\r\n        },\r\n        {\r\n            title: 'Monto',\r\n            dataIndex: 'monto',\r\n            key: 'monto',\r\n            render: (_, { monto }) => <>${monto}</>\r\n        },\r\n        {\r\n            title: 'Fecha y Hora',\r\n            dataIndex: 'fecha_hora',\r\n            key: 'fecha_hora',\r\n            render: (_, { fecha_hora }) => { return <>{new Date(fecha_hora).toLocaleString()}</> }\r\n        },\r\n\r\n    ]; const filetype = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\r\n    const fileExtextension = '.xlsx';\r\n\r\n    const exportToExcel = async () => {\r\n\r\n        const ws = XLSX.utils.json_to_sheet([totales]);\r\n        const wb = { Sheets: { 'data': ws }, SheetNames: ['data'] };\r\n        const excelBuffer = XLSX.write(wb, { bookType: 'xlsx', type: 'array' });\r\n        const data = new Blob([excelBuffer], { type: filetype })\r\n        FileSaver.saveAs(data, 'corte' + new Date().toLocaleDateString() + fileExtextension)\r\n    }\r\n\r\n    return <Modal title=\"Detalles del corte\" open={props.isModalOpen} onCancel={handleOk} destroyOnClose\r\n        footer={[\r\n            <Button onClick={() => setIsPrinting(!isPrinting)}>{isPrinting ? \"Cancelar Impresion\" : \"Imprimir PDF\"}</Button>,\r\n            <Button onClick={() => exportToExcel()}>Exportar a excel</Button>,\r\n            <Button onClick={handleOk}>Cerrar</Button>\r\n        ]}\r\n    >\r\n        {\r\n            isPrinting ?\r\n                // Called from Medico views\r\n                <CorteDocument totales={totales} logo=\"https://api.recreamed.com/images/bd71d914-1f11-4bea-81e5-81b55e11a4e1.jpg\" company='Hospital: ' seller='Médico: ' buyer='Paciente: ' /> :\r\n                <>\r\n                    <h5>Total ingresos: <span style={{ color: '#3277a8' }}>${totales.ingresosTotales}</span></h5>\r\n                    {\r\n                        totales.listOfPagados && totales.listOfPagados.length > 0 && <Table dataSource={totales.listOfPagados} columns={columns} bordered={false} size='small' />\r\n                    }\r\n\r\n                    <h5>Pendientes</h5>\r\n                    <h5>Total: <span style={{ color: '#eb3d43' }}>${totales.deudasTotales}</span></h5>\r\n\r\n                    {\r\n                        totales.listOfDeudors && totales.listOfDeudors.length > 0 && <Table dataSource={totales.listOfDeudors} columns={columns} bordered={false} size='small' />\r\n                    }\r\n                </>\r\n        }\r\n\r\n    </ Modal>\r\n}\r\n","import { useEffect, useState } from 'react'\r\nimport { Button, Table, Space, Select, Popconfirm } from 'antd'\r\nimport { getData, sendDataBody, usuario, ids_hospitales } from '../../resources'\r\nimport Loading from '../../loading'\r\nimport Detalles from './details.corte'\r\n\r\nexport default function Cortes() {\r\n    const [medico, setMedico] = useState(null)\r\n    const [balance, setBalance] = useState({})\r\n    const [cortesData, setCortesData] = useState([])\r\n    const [loading, setLoading] = useState(true)\r\n\r\n    // Data before all\r\n    const [idsMedicos, setIdsMedicos] = useState([])\r\n\r\n    // For details modal\r\n    const [corteForDetails, setCorteForDetails] = useState({})\r\n    const [isModalOpen, setIsModalOpen] = useState(false)\r\n    const showModal = (corte) => {\r\n        corte.medico = idsMedicos; // in controller, medics is used for flter balances not cortes   \r\n        setCorteForDetails(corte); setIsModalOpen(true)\r\n    };\r\n\r\n    useEffect(() => {\r\n        getDoctorsData()\r\n        getCortesData()\r\n    }, [])\r\n\r\n    const getDoctorsData = () => { //Para el caso que la sesion sea de Administrador. Is used for filter balances by corte\r\n        sendDataBody('users/getMany/hospitals', { ids_hospitales: ids_hospitales }).then(rs => {\r\n            const md = rs.map(doc => {\r\n                return doc._id\r\n            });\r\n            setIdsMedicos(md)\r\n        }).finally(() => setLoading(false))\r\n    }\r\n\r\n    const getCortesData = () => {\r\n        getData(`cortes/${usuario._id}`).then((rs) => {\r\n            console.log('cortesData', rs)\r\n            setCortesData(rs.reverse())\r\n        }).finally(() => { setLoading(false) })\r\n    }\r\n\r\n    const createCorte = () => {\r\n        const newCorte = {\r\n            // medico: medico,\r\n            medico: usuario._id,\r\n            fecha_inicio: cortesData.length === 0 ? new Date() : cortesData.at(0).fecha_cierre,\r\n            fecha_cierre: new Date(),\r\n            comentario: ''\r\n        }\r\n        console.log('ready to send ', newCorte)\r\n        sendDataBody('cortes/add', newCorte).then((rs) => {\r\n            console.log(rs);\r\n            getCortesData(medico)\r\n        })\r\n    }\r\n\r\n    const handleDoctorChange = (value) => { setMedico(value); getCortesData(value); };\r\n\r\n    const columns = [\r\n        {\r\n            title: 'fecha y hora de Inicio',\r\n            dataIndex: 'fecha_inicio',\r\n            key: 'fecha_inicio',\r\n            render: (_, { fecha_inicio }) => <> {new Date(fecha_inicio).toLocaleString()}</>\r\n        },\r\n        {\r\n            title: 'Fecha y hora de Cierre',\r\n            dataIndex: 'fecha_cierre',\r\n            key: 'fecha_cierre',\r\n            render: (_, { fecha_cierre }) => <> {new Date(fecha_cierre).toLocaleString()}</>\r\n        },\r\n        {\r\n            title: 'Comentario',\r\n            dataIndex: 'comentario',\r\n            key: 'comentario',\r\n        },\r\n        {\r\n            title: 'Acciones',\r\n            key: 'Acciones',\r\n            render: (_, record) => (\r\n                <Space size=\"middle\">\r\n                    <Button onClick={() => { showModal(record) }}>Ver Detalles</Button>\r\n                    {/* <Button onClick={() => console.log(record)}>Editar</Button> */}\r\n                    {/* <Button onClick={() => deleteData(`cortes/remove/${record._id}`)}>Eliminar</Button> */}\r\n                </Space>)\r\n        }\r\n    ];\r\n\r\n\r\n    return <div className='mainContainer'>\r\n\r\n        <h4>Cortes de cada Medico</h4>\r\n        <br />\r\n        {/* <p className='datos'>Selecciona un medico a continuacion para ver sus cortes</p> */}\r\n\r\n        {/* <Select options={medicosData} onChange={handleDoctorChange} style={{ width: 240 }} placeholder='Seleccione medico' /> */}\r\n\r\n        <Popconfirm\r\n            placement='bottomRight'\r\n            title=\"Crear Corte\"\r\n            description=\"Seguro que quere generar un corte de caja a la fecha y hora actuales?\"\r\n            onConfirm={createCorte}\r\n            onCancel={() => console.log('Cancelled corte')}\r\n            okText=\"Si\"\r\n            cancelText=\"No\"\r\n        >\r\n\r\n            <Button type='primary' style={{ marginLeft: 12 }}>{cortesData.length === 0 ? 'Generar Primer Corte' : 'Generar Corte'}</Button>\r\n        </Popconfirm>\r\n\r\n\r\n        <Table columns={columns} dataSource={cortesData} />\r\n\r\n        <div style={{ height: 200 }}></div>\r\n        {/* {\r\n            !medico ? <div>Seleccione un medico para ver sus cortes</div>\r\n                :\r\n                <div>\r\n                    <div className='fila'>\r\n                        <h4>Cortes</h4>\r\n                        <Button onClick={createCorte} type='primary' style={{ marginLeft: 12 }}>{cortesData.length === 0 ? 'Generar Primer Corte' : 'Generar Corte'}</Button>\r\n                    </div>\r\n                    <br />\r\n                    <Table columns={columns} dataSource={cortesData} />\r\n                </div>\r\n        } */}\r\n\r\n        <Detalles corte={corteForDetails} isModalOpen={isModalOpen} setIsModalOpen={setIsModalOpen} />\r\n\r\n    </div>\r\n}","import React from 'react';\r\nimport { Form, Input, Button, message } from 'antd'\r\nimport { InputNumber, Select } from 'antd';\r\nimport { S_API,estados } from '../../resources'\r\nconst { Option } = Select;\r\n\r\nexport default function Register() {\r\n\r\n  const [form] = Form.useForm();\r\n\r\n  const onFinish = (values) => {\r\n    values.avatar = 'https://';\r\n    values.estatus = '1';\r\n    values.rol = 'Recepcion';\r\n    delete values.confirm;\r\n    delete values.prefix;\r\n    delete values.agreement;\r\n\r\n    console.log(values)\r\n    fetch(S_API + 'register', {\r\n      method: 'POST',\r\n      body: JSON.stringify(values),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).then(res => res.json())\r\n      .then(response => { console.log('Success:', response); message.success(response.message || response.error); })\r\n      .catch(error => console.error('Error:', error))\r\n  };\r\n\r\n  const prefixSelector = (\r\n    <Form.Item name=\"prefix\" noStyle>\r\n      <Select\r\n        style={{\r\n          width: 70,\r\n        }}\r\n      >\r\n        <Option value=\"+52\">+52</Option>\r\n      </Select>\r\n    </Form.Item>\r\n  );\r\n  const suffixSelector = (\r\n    <Form.Item name=\"suffix\" noStyle>\r\n      <Select\r\n        style={{\r\n          width: 70,\r\n        }}\r\n      >\r\n        <Option value=\"USD\">$</Option>\r\n        <Option value=\"CNY\">¥</Option>\r\n      </Select>\r\n    </Form.Item>\r\n  );\r\n\r\n\r\n  \r\n  return (\r\n    <div className='mainContainer'>\r\n      <h1>Registrar doctor</h1>\r\n      <br />\r\n      {/* <Form name=\"basic\" labelCol={{ span: 6 }} wrapperCol={{ span: 16 }} initialValues={{ remember: true }} onFinish={onFinish} onFinishFailed={onFinishFailed} autoComplete=\"off\" >\r\n        <Form.Item label=\"Hospital\" name=\"Hospital\" rules={[{ required: true, message: 'Please input your username!' }]} >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item label=\"Nombre\" name=\"username\" rules={[{ required: true, message: 'Please input your username!' }]} >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item label=\"Apellido Paterno\" name=\"rfc\" rules={[{ required: true, message: 'Ingresa RFC' }]} >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item label=\"Apellido Materno\" name=\"calle\" rules={[{ required: true, message: 'Avenida Madero esquina con Santiago Tapia' }]} >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item label=\"Cedula\" name=\"nint\" rules={[{ required: true, message: '74B' }]} >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item label=\"Calle\" name=\"next\" rules={[{ required: true, message: '12' }]} >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item label=\"Numero\" name=\"colonia\" rules={[{ required: true, message: 'Centro' }]} >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item label=\"Colonia\" name=\"cp\" rules={[{ required: true, message: '58000' }]} >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item label=\"Telefono\" name=\"ciudad_municipio\" rules={[{ required: true, message: 'Ingresa ciudad/municipio' }]} >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item label=\"Correo\" name=\"estado\" rules={[{ required: true, message: 'Ingresa estado' }]} >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\r\n          <Button type=\"primary\" htmlType=\"submit\">\r\n            Guardar\r\n          </Button>\r\n        </Form.Item>\r\n      </Form> */}\r\n      <Form\r\n        // {...formItemLayout}\r\n        labelCol={{ span: 6 }} wrapperCol={{ span: 16 }}\r\n        form={form}\r\n        name=\"register\"\r\n        onFinish={onFinish}\r\n        initialValues={{\r\n          residence: ['zhejiang', 'hangzhou', 'xihu'],\r\n          prefix: '52',\r\n        }}\r\n        scrollToFirstError\r\n      >\r\n        <Form.Item\r\n          name=\"email\"\r\n          label=\"Correo\"\r\n          rules={[\r\n            {\r\n              type: 'email',\r\n              message: 'The input is not valid E-mail!',\r\n            },\r\n            {\r\n              required: true,\r\n              message: 'Please input your E-mail!',\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item name=\"password\" label=\"Contraseña\" rules={[{ required: true, message: 'Por favor ingrese su contraseña!', },]} hasFeedback >\r\n          <Input.Password />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"confirm\"\r\n          label=\"Confirmar contraseña\"\r\n          dependencies={['password']}\r\n          hasFeedback\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Please confirm your password!',\r\n            },\r\n            ({ getFieldValue }) => ({\r\n              validator(_, value) {\r\n                if (!value || getFieldValue('password') === value) {\r\n                  return Promise.resolve();\r\n                }\r\n                return Promise.reject(new Error('Las contraseñas deben coincidir!'));\r\n              },\r\n            }),\r\n          ]}\r\n        >\r\n          <Input.Password />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"telefono\"\r\n          label=\"Telefono\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Please input your phone number!',\r\n            },\r\n          ]}\r\n        >\r\n          <Input\r\n            addonBefore={prefixSelector}\r\n            style={{\r\n              width: '100%',\r\n            }}\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"id_sucursal\"\r\n          label=\"Id Sucursal\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Ingresa el ID de la sucursal',\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"id_medicoasignado\"\r\n          label=\"Id Medico Asignado\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Ingresa el ID del medico ',\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"name\"\r\n          label=\"Nombre\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Ingresa Nombre y apellidos',\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"cedula\"\r\n          label=\"Cedula\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Ingresa cedula',\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"calle\"\r\n          label=\"Calle\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Ingresa calle',\r\n              whitespace: true,\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"numexterior\"\r\n          label=\"Num Exterior\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Ingresa numero exterior',\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"numinterior\"\r\n          label=\"Num Interior\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Ingresa numinterior',\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"Colonia\"\r\n          name=\"colonia\"\r\n          rules={[{ required: true, message: 'Please input your colobnia!' }]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item name=\"estado\" label=\"Estado\" rules={[{ required: true, message: 'Apellido materno', },]}>\r\n          <Select placeholder=\"Elije tu estado\" showSearch>\r\n            {estados.map(e => <Option value={e}>{e}</Option>)}\r\n          </Select>\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"municipio\"\r\n          label=\"Municipio\"\r\n          rules={[{ required: true, message: 'Ingresa tu municipio' }]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item name=\"codigopostal\" label=\"Codigo Postal\" rules={[{ required: true, message: 'Ingresa codigopostal', },]}>\r\n          <InputNumber addonAfter={suffixSelector} style={{ width: '100%', }} />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"certificacion\"\r\n          label=\"Certificacion\"\r\n          rules={[{ required: true, message: 'Ingresa tu certificacion' }]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"universidad\"\r\n          label=\"Universidad\" rules={[{ required: true, message: 'Ingresa tu universidad' }]} >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item wrapperCol={{ offset: 6, span: 16 }}>\r\n          <Button type=\"primary\" htmlType=\"submit\">\r\n            Registrar\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Table, Avatar } from 'antd'\r\nimport { UserOutlined } from '@ant-design/icons'\r\nimport { getData } from '../../resources'\r\nimport Loading from '../../loading'\r\n\r\nexport default function HospitalTab(props) {\r\n  const [receptorsrData, setReceptorsData] = useState([])\r\n  const [loading, setLoading] = useState(false)\r\n\r\n  // Before all, get DoctorsData\r\n  useEffect(() => { getReceptorsData() }, [])\r\n  const getReceptorsData = () => {\r\n    getData('users_by_rol/Recepcion').then((rs) => { setReceptorsData(rs) }).finally(() => setLoading(false))\r\n  }\r\n  const columns = [\r\n    {\r\n      title: 'Avatar',\r\n      dataIndex: 'avatar',\r\n      key: 'avatar',\r\n      render: (_, { avatar }) => {\r\n        return avatar.length > 9 ?\r\n          <img width={64} src={'https://api.recreamed.com/images/' + avatar} alt='ProfilePic' /> :\r\n          <Avatar size={64} icon={<UserOutlined />} className='btnIconCentered' />\r\n      }\r\n    },\r\n    {\r\n      title: 'Nombre',\r\n      dataIndex: 'name',\r\n      key: 'name',\r\n    },\r\n    {\r\n      title: 'Correo',\r\n      dataIndex: 'email',\r\n      key: 'email',\r\n    },\r\n    {\r\n      title: 'Telefono',\r\n      dataIndex: 'telefono',\r\n      key: 'telefono',\r\n    },\r\n  ];\r\n  const myReceptors = (id_hospital) => {\r\n    let doctorsFound = [];\r\n    receptorsrData.forEach(doctor => {\r\n      doctor.horarios.forEach(horario => {\r\n        if (!doctorsFound.includes(doctor) && horario.sucursal._id === id_hospital) doctorsFound.push(doctor)\r\n      });\r\n    });\r\n    console.log(`Founds for ${id_hospital}: `, doctorsFound)\r\n    return doctorsFound;\r\n  }\r\n  const doctoresData = myReceptors(props.id_hospital); // Get medicos data before render TAble\r\n  // Filter doctors of each hospital\r\n\r\n\r\n  if (loading) return <Loading />\r\n\r\n  return <div>\r\n    <h6>Recepcionistas del hospital {props.hospital}</h6>\r\n    <Table dataSource={doctoresData} columns={columns} />\r\n  </div>\r\n}\r\n","import React from 'react'\r\nimport { Tabs } from 'antd'\r\nimport { myHospitals } from '../../resources'\r\nimport HospitalTab from './dash.receptionists.hospitalTab';\r\n\r\nexport default function Dash() {\r\n\r\n    // Create items for TABS\r\n    myHospitals.forEach(h => {\r\n        h.label = h.nombre;\r\n        h.key = h._id;\r\n        h.children = <HospitalTab hospital={h.nombre} id_hospital={h._id} />\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <h4 className='spacedTitle'>Recepcionistas de los diferentes hospitales</h4>\r\n            <Tabs defaultActiveKey=\"1\" items={myHospitals} />\r\n        </div>\r\n    )\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { Tabs, Select } from 'antd'\r\nimport { myHospitals } from '../../resources'\r\nimport { Table, Avatar } from 'antd'\r\nimport { UserOutlined } from '@ant-design/icons'\r\nimport { getData } from '../../resources'\r\nimport Loading from '../../loading'\r\n\r\nexport default function Horarios() {\r\n\r\n    // Create items for TABS\r\n    myHospitals.forEach(h => {\r\n        h.label = h.nombre;\r\n        h.key = h._id;\r\n        h.children = <HospitalTab hospital={h.nombre} id_hospital={h._id} />\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <h4 className='spacedTitle'>Recepcionistas de los diferentes hospitales</h4>\r\n            <Tabs defaultActiveKey=\"1\" items={myHospitals} />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\nfunction HospitalTab(props) {\r\n    const [receptorsrData, setReceptorsData] = useState([])\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    // To show Schedules\r\n    const [receptionist, setReceptionist] = useState(null)\r\n    const [shedule, setShedule] = useState([])\r\n    const [loadinSchedules, setLoadinSchedules] = useState(true)\r\n\r\n    const scheduleColumns = [\r\n        // {\r\n        //     title: 'Usuario',\r\n        //     dataIndex: 'usuario',\r\n        //     key: 'usuario',\r\n        //     render: (_, { usuario }) => { return <div>{usuario.name}</div> }\r\n        // },\r\n        {\r\n            title: 'Fecha',\r\n            dataIndex: 'createdAt',\r\n            key: 'createdAt',\r\n            render: (_, { createdAt }) => { return <div>{new Date(createdAt).toLocaleDateString()}</div> }\r\n        },\r\n        {\r\n            title: 'Hora de Entrada',\r\n            dataIndex: 'fecha_hora_entrada',\r\n            key: 'fecha_hora_entrada',\r\n            render: (_, { fecha_hora_entrada }) => { return <div>{new Date(fecha_hora_entrada).toLocaleTimeString()}</div> }\r\n        },\r\n        {\r\n            title: 'Hora de Salida',\r\n            dataIndex: 'fecha_hora_salida',\r\n            key: 'fecha_hora_salida',\r\n            render: (_, { fecha_hora_salida }) => { return <div>{new Date(fecha_hora_salida).toLocaleTimeString()}</div> }\r\n        }\r\n    ]\r\n\r\n    // Before all, get DoctorsData\r\n    useEffect(() => { getReceptorsData() }, [])\r\n    const getReceptorsData = () => {\r\n        getData('users_by_rol/Recepcion').then((rs) => { setReceptorsData(rs) }).finally(() => setLoading(false))\r\n    }\r\n    const columns = [\r\n        {\r\n            title: 'Avatar',\r\n            dataIndex: 'avatar',\r\n            key: 'avatar',\r\n            render: (_, { avatar }) => {\r\n                return avatar.length > 9 ?\r\n                    <img width={64} src={'https://api.recreamed.com/images/' + avatar} alt='ProfilePic' /> :\r\n                    <Avatar size={64} icon={<UserOutlined />} className='btnIconCentered' />\r\n            }\r\n        },\r\n        {\r\n            title: 'Nombre',\r\n            dataIndex: 'name',\r\n            key: 'name',\r\n        },\r\n        {\r\n            title: 'Correo',\r\n            dataIndex: 'email',\r\n            key: 'email',\r\n        },\r\n        {\r\n            title: 'Telefono',\r\n            dataIndex: 'telefono',\r\n            key: 'telefono',\r\n        },\r\n    ];\r\n    const myReceptors = (id_hospital) => {\r\n        let doctorsFound = [];\r\n        receptorsrData.forEach(receptor => {\r\n            receptor.horarios.forEach(horario => {\r\n                if (!doctorsFound.includes(receptor) && horario.sucursal._id === id_hospital) {\r\n                    receptor.label = receptor.name; receptor.value = receptor._id;\r\n                    doctorsFound.push(receptor);\r\n                }\r\n            });\r\n        });\r\n        // console.log(`Founds for ${id_hospital}: `, doctorsFound)\r\n        return doctorsFound;\r\n    }\r\n    const filteredReceptors = myReceptors(props.id_hospital); // Get medicos data before render TAble\r\n    // Filter doctors of each hospital\r\n\r\n    // For Select receptor\r\n    const handleChange = async (value) => {\r\n        console.log(`selected ${value}`);\r\n        const horarios = await getData(`asistencias/${value}`)\r\n        console.log(horarios)\r\n        setShedule(horarios)\r\n        setReceptionist(value)\r\n    };\r\n\r\n    const getSchedules = () => {\r\n    }\r\n\r\n    if (loading) return <Loading />\r\n\r\n    return <div>\r\n        <h6>Recepcionistas del hospital {props.hospital}</h6>\r\n        {/* <Table dataSource={doctoresData} columns={columns} /> */}\r\n        {/* {receptionist || \"Not Selected\"} */}\r\n        <Select\r\n            // defaultValue=\"lucy\"\r\n            style={{ width: 260 }}\r\n            onChange={handleChange}\r\n            options={filteredReceptors}\r\n        />\r\n        <Table columns={scheduleColumns} dataSource={shedule} />\r\n    </div>\r\n}","import React from 'react'\r\nimport { Tabs } from 'antd'\r\nimport { TeamOutlined, UserAddOutlined } from '@ant-design/icons';\r\nimport Register from './register.receptionist';\r\nimport Dash from './dash.receptionists.main';\r\nimport Horarios from \"./horarios.receptionists\";\r\n\r\nconst items = [\r\n    { key: '1', label: <><TeamOutlined /> Recepcionistas</>, children: <Dash /> },\r\n    { key: '2', label: <><TeamOutlined /> Horarios</>, children: <Horarios /> },\r\n    { key: '3', label: <><UserAddOutlined /> Registrar</>, children: <Register /> },\r\n];\r\nconst onChange = (key) => { console.log(key) }\r\n\r\nexport default function Receptionists() {\r\n    return (\r\n        <div>\r\n            <Tabs defaultActiveKey=\"1\" items={items} onChange={onChange} tabPosition='left' />\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Form, Input, Button, message, Space, Row, Col, Upload } from 'antd'\r\nimport { MinusCircleOutlined, PlusOutlined, InboxOutlined } from '@ant-design/icons';\r\nimport { Divider, Select } from 'antd';\r\nimport { S_API, getData, API } from '../../resources'\r\nconst { Option } = Select;\r\nconst { Dragger } = Upload;\r\n\r\n\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    xs: {\r\n      span: 24,\r\n    },\r\n    sm: {\r\n      span: 8,\r\n    },\r\n  },\r\n  wrapperCol: {\r\n    xs: {\r\n      span: 24,\r\n    },\r\n    sm: {\r\n      span: 14,\r\n    },\r\n  },\r\n};\r\nconst tailFormItemLayout = {\r\n  wrapperCol: {\r\n    xs: {\r\n      span: 24,\r\n      offset: 0,\r\n    },\r\n    sm: {\r\n      span: 16,\r\n      offset: 8,\r\n    },\r\n  },\r\n};\r\nexport default function Register(props) {\r\n\r\n  const [form] = Form.useForm();\r\n\r\n  const [sucursales, setSucursales] = useState([]);\r\n  const [sucursalesLoading, setSucursalesLoading] = useState(true);\r\n  const [avatar, setAvatar] = useState(props.medico ? props.medico.avatar : 'https://')\r\n\r\n  //Start upload props Upload File\r\n  const dragDropProps = {\r\n    name: 'file',\r\n    multiple: false,\r\n    action: API + 'imagenes/upload',\r\n\r\n    onChange(info) {\r\n      const { status } = info.file;\r\n\r\n      if (status !== 'uploading') {\r\n        console.log(info.file, info.fileList);\r\n      }\r\n\r\n      if (status === 'done') {\r\n        message.success(`${info.file.name} file uploaded successfully.`);\r\n        console.log('New Files: ', info.file.response.file)\r\n        setAvatar(info.file.response.file)\r\n      } else if (status === 'error') {\r\n        message.error(`${info.file.name} file upload failed.`);\r\n      }\r\n    },\r\n\r\n    onDrop(e) {\r\n      console.log('Dropped files', e.dataTransfer.files);\r\n    },\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log('received Medic: ', props.medico);\r\n    getData('sucursales').then((rs) => { setSucursales(rs); setSucursalesLoading(false) })\r\n  }, [])\r\n\r\n\r\n\r\n  const onFinish = (values) => {\r\n    values.avatar = avatar;\r\n    values.estatus = '1';\r\n    values.rol = 'Enfermero';\r\n    delete values.confirm;\r\n    delete values.prefix;\r\n\r\n    console.log('ready to send', values)\r\n    fetch(S_API + 'register', {\r\n      method: 'POST',\r\n      body: JSON.stringify(values),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).then(res => res.json())\r\n      .then(response => {\r\n        console.log('Success:', response);\r\n        response.message && response.message === 'Usuario creado correctamente' ?\r\n          window.location.href = 'enfermeros' : message.error(response.error);\r\n      })\r\n      .catch(error => console.error('Error:', error))\r\n  };\r\n\r\n  const onFinishEdit = (values) => {\r\n    values.avatar = avatar;\r\n    // values.estatus = '1';\r\n    // values.rol = 'Medico';\r\n    // delete values.confirm;\r\n    // delete values.prefix;\r\n\r\n    console.log('ready to send', values)\r\n    fetch(API + 'users/updateUser/' + props.medico._id, {\r\n      method: 'PUT',\r\n      body: JSON.stringify(values),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).then(res => res.json())\r\n      .then(response => {\r\n        console.log('Success:', response);\r\n        response.message && response.message === 'Usuario actualizado correctamente' ?\r\n          props.setIsModalVisible(false) : message.error(response.error);\r\n      })\r\n      .catch(error => console.error('Error:', error))\r\n  };\r\n\r\n  const prefixSelector = (\r\n    <Form.Item name=\"prefix\" noStyle>\r\n      <Select\r\n        style={{\r\n          width: 70,\r\n        }}\r\n      >\r\n        <Option value=\"+52\">+52</Option>\r\n      </Select>\r\n    </Form.Item>\r\n  );\r\n  const suffixSelector = (\r\n    <Form.Item name=\"suffix\" noStyle>\r\n      <Select\r\n        style={{\r\n          width: 70,\r\n        }}\r\n      >\r\n        <Option value=\"USD\">$</Option>\r\n        <Option value=\"CNY\">¥</Option>\r\n      </Select>\r\n    </Form.Item>\r\n  );\r\n\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log('Failed:', errorInfo);\r\n  };\r\n  return (\r\n    <div>\r\n      {\r\n        props.medico ?\r\n          <></> : <h1>Registrar enfermero</h1>\r\n      }\r\n      <br />\r\n      <Dragger {...dragDropProps}>\r\n        <p className=\"ant-upload-drag-icon\">\r\n          <InboxOutlined />\r\n        </p>\r\n        <p className=\"ant-upload-text\">Arrastra la imagen de perfil o click ara buscar</p>\r\n        <p className=\"ant-upload-hint\">\r\n          Selecciona archivos en formato png, jpeg o webp\r\n        </p>\r\n      </Dragger>\r\n      <br />\r\n      <Form\r\n        {...formItemLayout}\r\n        form={form}\r\n        name=\"register\"\r\n        onFinish={props.medico ? onFinishEdit : onFinish}\r\n        // initialValues={{ horarios: [{ sucursal: '', horario: '' }], prefix: '+52' }}\r\n        initialValues={props.medico}\r\n        scrollToFirstError\r\n      >\r\n\r\n        <Row>\r\n\r\n          <Col span={11}>\r\n            <Form.Item name=\"name\" label=\"Nombre\" rules={[{ required: true, message: 'Ingresa Nombre y apellidos' }]}>\r\n              <Input />\r\n            </Form.Item>\r\n            <Form.Item name=\"email\" label=\"Correo\" rules={[{ type: 'email', message: 'Ingresa un corrreo electronico valido' }, { required: true, message: 'Please input your E-mail!' }]}>\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            {\r\n              props.medico ? <></> : <>\r\n                <Form.Item name=\"password\" label=\"Contraseña\" rules={[{ required: true, message: 'Por favor ingrese su contraseña!', },]} hasFeedback >\r\n                  <Input.Password />\r\n                </Form.Item>\r\n\r\n                <Form.Item name=\"confirm\" label=\"Confirmar contraseña\" dependencies={['password']} hasFeedback\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: 'Please confirm your password!',\r\n                    },\r\n                    ({ getFieldValue }) => ({\r\n                      validator(_, value) {\r\n                        if (!value || getFieldValue('password') === value) {\r\n                          return Promise.resolve();\r\n                        }\r\n                        return Promise.reject(new Error('Las contraseñas deben coincidir!'));\r\n                      },\r\n                    }),\r\n                  ]}\r\n                >\r\n                  <Input.Password />\r\n                </Form.Item>\r\n              </>\r\n            }\r\n\r\n\r\n            <Form.Item name=\"telefono\" label=\"Telefono\" rules={[{ required: true, message: 'Ingresa el numero de telefono correcto' },]}>\r\n              <Input addonBefore={prefixSelector} style={{ width: '100%', }} />\r\n            </Form.Item>\r\n\r\n\r\n\r\n\r\n          </Col>\r\n          <Col span={11}>\r\n            <Form.Item label=\"horarios\" rules={[{ required: true, message: 'Ingresa al menos un horario', },]}>\r\n              <Form.List name=\"horarios\" label=\"horarios list\"\r\n              >\r\n                {(fields, { add, remove }) => (\r\n                  <>\r\n                    {fields.map(({ key, name, ...restField }) => (\r\n                      <Space key={key} style={{ display: 'flex', marginBottom: 8 }} align=\"baseline\">\r\n                        <Form.Item\r\n                          {...restField}\r\n                          name={[name, 'sucursal']}\r\n                          rules={[{ required: true, message: 'Elije Sucursal' }]}\r\n                        >\r\n                          <Select placeholder=\"Elije Sucursal\" style={{ width: '120px' }} >\r\n                            {sucursalesLoading ? \"Cargando\" :\r\n                              sucursales.map(s => <Option value={s._id}>{s.nombre}</Option>)\r\n                            }\r\n                          </Select>\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                          {...restField}\r\n                          name={[name, 'horario']}\r\n                          rules={[{ required: false, message: 'Missing last name' }]}\r\n                        >\r\n                          <Input placeholder=\"Horario\" />\r\n                        </Form.Item>\r\n                        <MinusCircleOutlined onClick={() => remove(name)} />\r\n                      </Space>\r\n                    ))}\r\n                    <Form.Item>\r\n                      <Button type=\"dashed\" onClick={() => add()} block icon={<PlusOutlined />}>\r\n                        Agregar Horario\r\n                      </Button>\r\n                    </Form.Item>\r\n                  </>\r\n                )}\r\n              </Form.List>\r\n            </Form.Item>\r\n\r\n            <Form.Item name=\"certificacion\" label=\"Certificacion\" rules={[{ required: false, message: 'Ingresa tu certificacion' }]}>\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item label=\"Universidades\" rules={[{ required: true, message: 'Ingresa al menos una universidad', },]}>\r\n              <Form.List name=\"universidades\" label=\"universidades list\">\r\n                {(fields, { add, remove }) => (\r\n                  <>\r\n                    {fields.map(({ key, name, ...restField }) => (\r\n                      <Space key={key} style={{ display: 'flex', marginBottom: 8 }} align=\"baseline\">\r\n                        <Form.Item\r\n                          {...restField}\r\n                          name={[name, 'universidad']}\r\n                          rules={[{ required: true, message: 'Ingresa la universidad' }]}\r\n                        >\r\n                          <Input placeholder=\"Universidad\" />\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                          {...restField}\r\n                          name={[name, 'carrera']}\r\n                          rules={[{ required: true, message: 'Ingresa la carrera' }]}\r\n                        >\r\n                          <Input placeholder=\"Carrera\" />\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                          {...restField}\r\n                          name={[name, 'cedula']}\r\n                          rules={[{ required: false, message: 'Ingresa la cedula' }]}\r\n                        >\r\n                          <Input placeholder=\"Cedula\" />\r\n                        </Form.Item>\r\n                        <MinusCircleOutlined onClick={() => remove(name)} />\r\n                      </Space>\r\n                    ))}\r\n                    <Form.Item>\r\n                      <Button type=\"dashed\" onClick={() => add()} block icon={<PlusOutlined />}>\r\n                        Agregar Universidad\r\n                      </Button>\r\n                    </Form.Item>\r\n                  </>\r\n                )}\r\n              </Form.List>\r\n            </Form.Item>\r\n\r\n            <Form.Item name=\"especialidad\" label=\"Especialidad\" rules={[{ required: false, message: 'Ingresa especialidad' }]}>\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item {...tailFormItemLayout}>\r\n              {\r\n                props.setIsModalVisible && <Button onClick={() => props.setIsModalVisible(false)} style={{ marginRight: 6 }}>\r\n                  Cancelar\r\n                </Button>\r\n              }\r\n              <Button type=\"primary\" htmlType=\"submit\">\r\n                Guardar\r\n              </Button>\r\n            </Form.Item>\r\n          </Col>\r\n\r\n        </Row>\r\n\r\n\r\n\r\n\r\n\r\n        {/* <Form.Item\r\n          name=\"agreement\"\r\n          valuePropName=\"checked\"\r\n          rules={[\r\n            {\r\n              validator: (_, value) =>\r\n                value ? Promise.resolve() : Promise.reject(new Error('Should accept agreement')),\r\n            },\r\n          ]}\r\n          {...tailFormItemLayout}\r\n        >\r\n          <Checkbox>\r\n            He leído y acepto los <a href=\"https://recreamed.com\">terminos y condiciones</a>\r\n          </Checkbox>\r\n        </Form.Item> */}\r\n\r\n\r\n      </Form>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Table, Avatar } from 'antd'\r\nimport { UserOutlined } from '@ant-design/icons'\r\nimport { getData } from '../../resources'\r\nimport Loading from '../../loading'\r\n\r\nexport default function HospitalTab(props) {\r\n  const [receptorsrData, setReceptorsData] = useState([])\r\n  const [loading, setLoading] = useState(false)\r\n\r\n  // Before all, get DoctorsData\r\n  useEffect(() => { getReceptorsData() }, [])\r\n  const getReceptorsData = () => {\r\n    getData('users_by_rol/Enfermero').then((rs) => { setReceptorsData(rs) }).finally(() => setLoading(false))\r\n  }\r\n  const columns = [\r\n    {\r\n      title: 'Avatar',\r\n      dataIndex: 'avatar',\r\n      key: 'avatar',\r\n      render: (_, { avatar }) => {\r\n        return avatar.length > 9 ?\r\n          <img width={64} src={'https://api.recreamed.com/images/' + avatar} alt='ProfilePic' /> :\r\n          <Avatar size={64} icon={<UserOutlined />} className='btnIconCentered' />\r\n      }\r\n    },\r\n    {\r\n      title: 'Nombre',\r\n      dataIndex: 'name',\r\n      key: 'name',\r\n    },\r\n    {\r\n      title: 'Correo',\r\n      dataIndex: 'email',\r\n      key: 'email',\r\n    },\r\n    {\r\n      title: 'Telefono',\r\n      dataIndex: 'telefono',\r\n      key: 'telefono',\r\n    },\r\n  ];\r\n  const myReceptors = (id_hospital) => {\r\n    let doctorsFound = [];\r\n    receptorsrData.forEach(doctor => {\r\n      doctor.horarios.forEach(horario => {\r\n        if (!doctorsFound.includes(doctor) && horario.sucursal._id === id_hospital) doctorsFound.push(doctor)\r\n      });\r\n    });\r\n    console.log(`Founds for ${id_hospital}: `, doctorsFound)\r\n    return doctorsFound;\r\n  }\r\n  const doctoresData = myReceptors(props.id_hospital); // Get medicos data before render TAble\r\n  // Filter doctors of each hospital\r\n\r\n\r\n  if (loading) return <Loading />\r\n\r\n  return <div>\r\n    <h6>Enfermeros del hospital {props.hospital}</h6>\r\n    <Table dataSource={doctoresData} columns={columns} />\r\n  </div>\r\n}\r\n","import React from 'react'\r\nimport { Tabs } from 'antd'\r\nimport { myHospitals } from '../../resources'\r\nimport HospitalTab from './dash.enfermeros.hospitalTab';\r\n\r\nexport default function Dash() {\r\n\r\n    // Create items for TABS\r\n    myHospitals.forEach(h => {\r\n        h.label = h.nombre;\r\n        h.key = h._id;\r\n        h.children = <HospitalTab hospital={h.nombre} id_hospital={h._id} />\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <h4 className='spacedTitle'>Enfermeros de los diferentes hospitales</h4>\r\n            <Tabs defaultActiveKey=\"1\" items={myHospitals} />\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport { Tabs } from 'antd'\r\nimport { TeamOutlined, UserAddOutlined } from '@ant-design/icons';\r\nimport Register from './register.enfermero';\r\nimport Dash from './dash.enfermeros.main';\r\n// import Horarios from \"./horarios.receptionists\";\r\n\r\nconst items = [\r\n    { key: '1', label: <><TeamOutlined /> Enfermeros</>, children: <Dash /> },\r\n    // { key: '2', label: <><TeamOutlined /> Horarios</>, children: <Horarios /> },\r\n    { key: '3', label: <><UserAddOutlined /> Registrar</>, children: <Register /> },\r\n];\r\nconst onChange = (key) => { console.log(key) }\r\n\r\nexport default function Enfermeros() {\r\n    return (\r\n        <div>\r\n            <Tabs defaultActiveKey=\"1\" items={items} onChange={onChange} tabPosition='left' />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Container, Nav, Navbar } from \"react-bootstrap\";\r\nimport { Button } from 'antd'\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport Citas from './citas/main.citas'\r\nimport Users from './patients/main.users';\r\nimport Doctors from './doctors/main.doctors'\r\nimport Sucursal from './sucursal'\r\nimport PerfilAdministrador from './perfil/perfil.administrador'\r\nimport Ingresos from './ingresos/ingresos'\r\nimport icon from '../assets/Icon.png';\r\nimport Escalas from '../escalas/escalasMenu';\r\nimport { usuario } from '../resources'\r\nimport Cortes from './cortes/main.cortes';\r\nimport Receptionists from './receptionists/main.receptionists';\r\nimport Enfermeros from './enfermeros/main.enfermeros';\r\n\r\nconst logout = () => { localStorage.removeItem('sessionToken'); localStorage.removeItem('userType'); window.location.href = '/'; }\r\n\r\nfunction Navigator() {\r\n  return <Navbar bg=\"primary\" variant=\"dark\" expand=\"lg\">\r\n    <Container>\r\n      <img\r\n        src={icon}\r\n        width=\"40\"\r\n        height=\"35\"\r\n        className=\"d-inline-block align-top\"\r\n        alt=\"Recreamed logo\"\r\n        style={{ marginRight: 6 }}\r\n      />\r\n      <Navbar.Brand href=\"#home\" style={{ fontFamily: 'Poppins', color: 'White' }}>\r\n        Bienvenido {usuario.name}\r\n      </Navbar.Brand>\r\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n      <Navbar.Collapse id=\"basic-navbar-nav\">\r\n        <Nav className=\"me-auto\">\r\n\r\n          <Nav.Link href=\"/\">Inicio</Nav.Link>\r\n          <Nav.Link href=\"pacientes\">Pacientes</Nav.Link>\r\n          <Nav.Link href=\"doctores\">Medicos</Nav.Link>\r\n          <Nav.Link href=\"recepcionistas\">Recepcionistas</Nav.Link>\r\n          <Nav.Link href=\"enfermeros\">Enfermeros</Nav.Link>\r\n          <Nav.Link href=\"citas\">Citas</Nav.Link>\r\n          <Nav.Link href=\"escalas\">Escalas</Nav.Link>\r\n          <Nav.Link href=\"balances\">Balances</Nav.Link>\r\n          <Nav.Link href=\"cortes\">Cortes</Nav.Link>\r\n          <Nav.Link href=\"perfil\">Perfil</Nav.Link>\r\n\r\n        </Nav>\r\n      </Navbar.Collapse>\r\n      <Navbar.Collapse className=\"justify-content-end\">\r\n        <Button onClick={logout} ghost>Cerrar Sesion</Button>\r\n      </Navbar.Collapse>\r\n    </Container>\r\n  </Navbar>;\r\n}\r\n\r\nexport default function AdminHospitalApp() {\r\n  return (\r\n    <Router>\r\n      <Navigator />\r\n      <Switch>\r\n        <Route path=\"/sucursal\">\r\n          <Sucursal />\r\n        </Route>\r\n        <Route path=\"/recepcionistas\">\r\n          <Receptionists />\r\n        </Route>\r\n        <Route path=\"/enfermeros\">\r\n          <Enfermeros />\r\n        </Route>\r\n        <Route path=\"/doctores\">\r\n          <Doctors />\r\n        </Route>\r\n        <Route path=\"/citas\">\r\n          <Citas />\r\n        </Route>\r\n        <Route path=\"/pacientes\">\r\n          <Users />\r\n        </Route>\r\n        <Route path=\"/escalas\">\r\n          <Escalas />\r\n        </Route>\r\n        <Route path=\"/balances\">\r\n          <Ingresos />\r\n        </Route>\r\n        <Route path=\"/cortes\">\r\n          <Cortes />\r\n        </Route>\r\n        <Route path=\"/perfil\">\r\n          <PerfilAdministrador />\r\n        </Route>\r\n        <Route path=\"/\">\r\n          <Users />\r\n        </Route>\r\n\r\n      </Switch>\r\n    </Router>\r\n  )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Form, Input, Button, message, Upload, Divider, Row, Col } from 'antd'\r\nimport { InputNumber, Select } from 'antd';\r\nimport { InboxOutlined, MinusCircleOutlined, PlusOutlined } from '@ant-design/icons'\r\nimport { S_API, API, getData, estados } from '../../resources'\r\n\r\nconst { Option } = Select;\r\nconst { Dragger } = Upload;\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    xs: {\r\n      span: 24,\r\n    },\r\n    sm: {\r\n      span: 4,\r\n    },\r\n  },\r\n  wrapperCol: {\r\n    xs: {\r\n      span: 24,\r\n    },\r\n    sm: {\r\n      span: 20,\r\n    },\r\n  },\r\n};\r\nconst formItemLayoutWithOutLabel = {\r\n  wrapperCol: {\r\n    xs: {\r\n      span: 24,\r\n      offset: 0,\r\n    },\r\n    sm: {\r\n      span: 20,\r\n      offset: 4,\r\n    },\r\n  },\r\n};\r\nexport default function Register(props) {\r\n\r\n  const [form] = Form.useForm();\r\n\r\n  const [medicosData, setMedicosData] = useState(null)\r\n  const [medicosDataLoading, setMedicosDataLoading] = useState(true)\r\n  const [avatar, setAvatar] = useState(props.paciente ? props.paciente.avatar : 'https://')\r\n\r\n  useEffect(() => {\r\n    getData('/users_by_rol/Medico').then((res) => { setMedicosData(res); setMedicosDataLoading(false); })\r\n  }, [])\r\n\r\n\r\n  //Start upload props Upload File\r\n  const dragDropProps = {\r\n    name: 'file',\r\n    multiple: false,\r\n    action: API + 'imagenes/upload',\r\n\r\n    onChange(info) {\r\n      const { status } = info.file;\r\n\r\n      if (status !== 'uploading') {\r\n        console.log(info.file, info.fileList);\r\n      }\r\n\r\n      if (status === 'done') {\r\n        message.success(`${info.file.name} file uploaded successfully.`);\r\n        console.log('New Files: ', info.file.response.file)\r\n        setAvatar(info.file.response.file)\r\n      } else if (status === 'error') {\r\n        message.error(`${info.file.name} file upload failed.`);\r\n      }\r\n    },\r\n\r\n    onDrop(e) {\r\n      console.log('Dropped files', e.dataTransfer.files);\r\n    },\r\n  };\r\n\r\n  async function addHistoria() {\r\n    return await fetch(API + 'historias/add', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        historial: \"Historia clinica al \" + new Date()\r\n      })\r\n    }).then(res => res.json())\r\n      .then(response => {\r\n        console.log('Story Created: ', response);\r\n        return response\r\n      })\r\n      .catch(error => console.error('Error:', error))\r\n  }\r\n\r\n  const createPAtientData = async (usr) => {\r\n    const historia = await addHistoria();\r\n    console.log('historia on Register: ', historia);\r\n    const postBody = {\r\n      usuario: usr,\r\n      historia: historia.id_historia,\r\n      notas: [],\r\n      recetas: []\r\n    }\r\n    console.log('postBodyForExpedient: ', postBody);\r\n    await fetch(API + 'expedientes/add', {\r\n      method: 'POST',\r\n      body: JSON.stringify(postBody),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).then(res => res.json())\r\n      .then(response => {\r\n        console.log('Exp on register pat:', response);\r\n        message.success(response.message || response.error);\r\n        if (response.message && response.message === 'Expediente creado correctamente') {\r\n          window.location.href = '/pacientes';\r\n          console.log('Ready to navigate');\r\n\r\n        }\r\n      })\r\n      .catch(error => console.error('Error:', error))\r\n    // .finally(() => { props.setAdding(false) }) here will be close modal\r\n  }\r\n\r\n  const onFinish = async (values) => {\r\n\r\n    // Register patient\r\n    values.avatar = avatar;\r\n    values.estatus = '1';\r\n    values.rol = 'Paciente';\r\n    values.password = '' + values.telefono;\r\n    values.universidades = [    ];\r\n    values.certificacion = '';\r\n    values.cedula = '';\r\n    values.horarios = [];\r\n    // values.medicos_asignados = props.paciente ? props.paciente.medicos_asignados : [usuario._id];\r\n    values.responsable = props.paciente ? props.paciente.responsable : { nombre: values.res_name, telefono: values.res_phone }\r\n\r\n    delete values.prefix;\r\n    delete values.res_name;\r\n    delete values.res_phone;\r\n\r\n    const url = props.paciente ? API + 'users/updateUser/' + props.paciente._id : S_API + 'register';\r\n\r\n    console.log(values)\r\n    console.log('url: ', url);\r\n    await fetch(url, {\r\n      method: props.paciente ? 'PUT' : 'POST',\r\n      body: JSON.stringify(values),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).then(res => res.json())\r\n      .then(response => {\r\n        console.log('Create User Response:', response);\r\n        message.success(response.message || response.error);\r\n        props.paciente ? console.log('Editing, not creating patient') : createPAtientData(response.user_id);\r\n      })\r\n      .catch(error => console.error('Error:', error))\r\n  };\r\n\r\n  const onFinishEdit = (values) => {\r\n    values.avatar = avatar;\r\n    // values.estatus = '1';\r\n    // values.rol = 'Paciente';\r\n    // delete values.confirm;\r\n    // delete values.prefix;\r\n    // delete values.agreement;\r\n\r\n    console.log(values)\r\n    fetch(API + '/users/updateUser/:_id', {\r\n      method: 'PUT',\r\n      body: JSON.stringify(values),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).then(res => res.json())\r\n      .then(response => { console.log('Success:', response); message.success(response.message || response.error); })\r\n      .catch(error => console.error('Error:', error))\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log('Failed:', errorInfo);\r\n  };\r\n\r\n  const prefixSelector = (\r\n    <Form.Item name=\"prefix\" noStyle>\r\n      <Select\r\n        style={{\r\n          width: 70,\r\n        }}\r\n      >\r\n        <Option value=\"+52\">+52</Option>\r\n      </Select>\r\n    </Form.Item>\r\n  );\r\n  const suffixSelector = (\r\n    <Form.Item name=\"suffix\" noStyle>\r\n      <Select\r\n        style={{\r\n          width: 70,\r\n        }}\r\n      >\r\n        <Option value=\"USD\">$</Option>\r\n        <Option value=\"CNY\">¥</Option>\r\n      </Select>\r\n    </Form.Item>\r\n  );\r\n  return (\r\n    <div>\r\n      <h4>Registrar Usuario</h4>\r\n      <br />\r\n      <Dragger {...dragDropProps}>\r\n        <p className=\"ant-upload-drag-icon\">\r\n          <InboxOutlined />\r\n        </p>\r\n        <p className=\"ant-upload-text\">Arrastra la imagen de perfil o click ara buscar</p>\r\n        <p className=\"ant-upload-hint\">\r\n          Selecciona archivos en formato png, jpeg o webp\r\n        </p>\r\n      </Dragger>\r\n      <br />\r\n      <Form\r\n        // {...formItemLayout}\r\n        labelCol={{ span: 6 }} wrapperCol={{ span: 16 }}\r\n        form={form}\r\n        name=\"register\"\r\n        onFinish={onFinish}\r\n        initialValues={props.paciente}\r\n        scrollToFirstError\r\n      >\r\n        <Row>\r\n          <Col span={10}>\r\n            <Form.Item\r\n              name=\"name\"\r\n              label=\"Nombre\"\r\n              rules={[{ required: true, message: 'Ingresa Nombre y apellidos' }]}\r\n            >\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            <Form.List\r\n              name=\"medicos_asignados\"\r\n              rules={[\r\n                {\r\n                  validator: async (_, medicos_asignados) => {\r\n                    if (!medicos_asignados || medicos_asignados.length < 1) {\r\n                      return Promise.reject(new Error('Ingrese al menos un medico'));\r\n                    }\r\n                  },\r\n                },\r\n              ]}\r\n            >\r\n              {(fields, { add, remove }, { errors }) => (\r\n                <>\r\n                  {fields.map((field, index) => (\r\n                    <Form.Item\r\n                      {...(index === 0 ? formItemLayout : formItemLayoutWithOutLabel)}\r\n                      label={index === 0 ? 'Medico' : ''}\r\n                      required={false}\r\n                      key={field.key}\r\n                    >\r\n                      <Form.Item\r\n                        {...field}\r\n                        validateTrigger={['onChange', 'onBlur']}\r\n                        rules={[\r\n                          {\r\n                            required: true,\r\n                            whitespace: true,\r\n                            message: \"Ingrese nombre del medico o borre este campo.\",\r\n                          },\r\n                        ]}\r\n                        noStyle\r\n                      >\r\n                        <Select\r\n                          // defaultValue=\"lucy\"\r\n                          style={{\r\n                            marginLeft: 36,\r\n                            width: '80%',\r\n                          }}\r\n                        // onChange={handleChange}\r\n                        >\r\n                          {\r\n                            medicosDataLoading ? <Option value=\"loading\">Cargando...</Option> :\r\n                              medicosData.map((m) => <Option value={m._id}>{m.name}</Option>)\r\n                          }\r\n\r\n                        </Select>\r\n                      </Form.Item>\r\n                      {\r\n                        fields.length > 1 ? (\r\n                          <MinusCircleOutlined\r\n                            style={{ marginLeft: 2 }}\r\n                            className=\"dynamic-delete-button\"\r\n                            onClick={() => remove(field.name)}\r\n                          />\r\n                        ) : null\r\n                      }\r\n                    </Form.Item>\r\n                  ))}\r\n                  <Form.Item>\r\n                    <Button type=\"dashed\" onClick={() => add()} style={{ width: '100%', marginLeft: 108 }} icon={<PlusOutlined />}>\r\n                      Asignar Medico\r\n                    </Button>\r\n                    {/* <Button type=\"dashed\" onClick={() => { add('The head item', 0) }} style={{ width: '60%', marginTop: '20px' }} icon={<PlusOutlined />}>Add field at head</Button> */}\r\n                    <Form.ErrorList errors={errors} />\r\n                  </Form.Item>\r\n                </>\r\n              )}\r\n            </Form.List>\r\n\r\n            <Form.Item\r\n              name=\"email\"\r\n              label=\"Correo\"\r\n              rules={[{ type: 'email', message: 'Ingresa un correo electronico vaido!' }, { required: true, message: 'Please input your E-mail!' }]}>\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n              name=\"telefono\"\r\n              label=\"Telefono\"\r\n              rules={[{ required: true, message: 'Please input your phone number!' }]}\r\n            >\r\n              <Input\r\n                addonBefore={prefixSelector}\r\n                style={{\r\n                  width: '100%',\r\n                }}\r\n              />\r\n            </Form.Item>\r\n\r\n            <Divider>Responsable (opcional)</Divider>\r\n            <Form.Item\r\n              name=\"res_name\"\r\n              label=\"Nombre\"\r\n              rules={[{ message: 'Ingresa Nombre y apellidos' }]}\r\n            >\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n              name=\"res_phone\"\r\n              label=\"Telefono\"\r\n              rules={[{ message: 'Ingresa Nombre y apellidos' }\r\n              ]}\r\n            >\r\n              <Input />\r\n            </Form.Item>\r\n          </Col>\r\n\r\n\r\n          <Col span={10}>\r\n            <Form.Item\r\n              name=\"calle\"\r\n              label=\"Calle\"\r\n              rules={[{ required: false, message: 'Ingresa calle', whitespace: true }]}\r\n            >\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n              name=\"numexterior\"\r\n              label=\"Num Exterior\"\r\n              rules={[{ required: false, message: 'Ingresa numero exterior' }]}\r\n            >\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n              name=\"numinterior\"\r\n              label=\"Num Interior\"\r\n              rules={[{ required: false, message: 'Ingresa numinterior' }]}\r\n            >\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n              label=\"Colonia\"\r\n              name=\"colonia\"\r\n              rules={[{ required: false, message: 'Please input your colobnia!' }]}\r\n            >\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item name=\"estado\" label=\"Estado\" rules={[{ required: true, message: 'Apellido materno', },]}>\r\n              <Select placeholder=\"Elije tu estado\" showSearch>\r\n                {estados.map(e => <Option value={e}>{e}</Option>)}\r\n              </Select>\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n              name=\"municipio\"\r\n              label=\"Municipio\"\r\n              rules={[{ required: true, message: 'Ingresa tu municipio' }]}\r\n            >\r\n              <Input />\r\n            </Form.Item>\r\n            <Form.Item name=\"codigopostal\" label=\"Codigo Postal\" rules={[{ required: false, message: 'Ingresa codigopostal', },]}>\r\n              <InputNumber style={{ width: '100%', }} />\r\n            </Form.Item>\r\n\r\n            <Form.Item wrapperCol={{ span: 12 }} labelCol={{ span: 2 }} >\r\n              {\r\n                props.setIsModalVisible && <Button onClick={() => props.setIsModalVisible(false)} style={{ marginRight: 8 }}>Cancelar</Button>\r\n              }\r\n              <Button type=\"primary\" htmlType=\"submit\">\r\n                Registrar\r\n              </Button>\r\n            </Form.Item>\r\n\r\n          </Col>\r\n\r\n\r\n\r\n\r\n        </Row>\r\n      </Form>\r\n    </div >\r\n  )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Table, Space, Button, Card, Modal, Popconfirm, Avatar } from 'antd'\r\nimport { API, deleteData } from '../../resources';\r\nimport Loading from '../../loading';\r\nimport Register from './register.patient'\r\nimport { UserOutlined } from '@ant-design/icons'\r\n\r\nexport default function Dash() {\r\n\r\n  const [usuario, setUsuario] = useState({});\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [isEditModalVisible, setIsEditModalVisible] = useState(false);\r\n  const [isLoading, setILoading] = useState(true);\r\n  const [pacientesData, setPacientesData] = useState([]);\r\n  const [patientForEdit, setPatientForEdit] = useState(null)\r\n  const showModal = () => { setIsModalVisible(true); };\r\n  const handleOk = () => { setIsModalVisible(false); };\r\n  const handleCancel = () => { setIsModalVisible(false); };\r\n  const handleOkEdit = () => { setIsEditModalVisible(false); };\r\n  const handleCancelEdit = () => { setIsEditModalVisible(false); };\r\n\r\n  useEffect(() => {\r\n    getPacientesData()\r\n  }, [])\r\n\r\n  const getPacientesData = () => {\r\n    fetch(API + 'users_by_rol/Paciente')\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        console.log(data); setPacientesData(data);\r\n      })\r\n      .finally(() => setILoading(false))\r\n  }\r\n\r\n  const editPatient = async (p) => {\r\n    await setPatientForEdit(p)\r\n    setIsEditModalVisible(true);\r\n    console.log('Editar paciente: ', p)\r\n  }\r\n\r\n  const deletePatient = (patient) => {\r\n    deleteData('/users/remove/' + patient._id).then(() => {\r\n      console.log('removed: ', patient._id);\r\n      getPacientesData()\r\n    })\r\n  }\r\n\r\n  const columns = [\r\n    {\r\n      title: 'Foto',\r\n      dataIndex: 'avatar',\r\n      key: 'avatar',\r\n      render: (_, { avatar }) => (\r\n        avatar.lenght > 12 ?\r\n          <img src={'https://api.recreamed.com/images/' + avatar} alt=\"Logo\" width={64} />\r\n          : <Avatar icon={<UserOutlined />} size={64} className='btnIconCentered' />\r\n\r\n      ),\r\n    },\r\n    {\r\n      title: 'Nombre',\r\n      dataIndex: 'name',\r\n      key: 'name',\r\n    },\r\n\r\n    {\r\n      title: 'Correo',\r\n      dataIndex: 'email',\r\n      key: 'email',\r\n    },\r\n\r\n    {\r\n      title: 'Telefono',\r\n      dataIndex: 'telefono',\r\n      key: 'tel',\r\n    },\r\n    // {\r\n    //   title: 'Detalles',\r\n    //   key: 'detalles',\r\n    //   render: (text, record) => (\r\n    //     <Space size=\"middle\">\r\n    //       <Button onClick={() => { setUsuario(record); showModal(); }}>Detalles</Button>\r\n    //     </Space>\r\n    //   )\r\n    // },\r\n    {\r\n      title: 'Opciones',\r\n      key: 'action',\r\n      render: (_, record) => (\r\n        <Space size=\"middle\">\r\n          <Button size='small' onClick={() => { editPatient(record) }}>\r\n            Editar\r\n          </Button>\r\n          <Popconfirm\r\n            title=\"Seguro que quiere borrar este paciente?\"\r\n            onConfirm={() => deletePatient(record)}\r\n            // onCancel={cancel}\r\n            okText=\"Si\"\r\n            cancelText=\"No\"\r\n          >\r\n            <Button danger size='small'>\r\n              Borrar\r\n            </Button>\r\n          </Popconfirm>\r\n\r\n        </Space>\r\n      ),\r\n    }\r\n  ];\r\n\r\n  const gridStyle = {\r\n    width: '50%',\r\n    height: '50px',\r\n    textAlign: 'center',\r\n    display: 'inline-flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center'\r\n  };\r\n\r\n  function DetalleUsuario() {\r\n    return <div>\r\n      <Card bordered={false}>\r\n        {\r\n          Object.keys(usuario).map(k => {\r\n            return <><Card.Grid style={gridStyle}>{k}</Card.Grid><Card.Grid style={gridStyle} size='small'>{usuario[k]}</Card.Grid></>\r\n          })\r\n        }\r\n      </Card>\r\n    </div>\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h4>Pacientes</h4>\r\n      {isLoading ? <Loading /> :\r\n\r\n        <Table dataSource={pacientesData} columns={columns} />\r\n      }\r\n      <Modal width={800} title={<h4>Datos del paciente </h4>} open={isModalVisible} onOk={handleOk} onCancel={handleCancel} destroyOnClose={true}>\r\n        <DetalleUsuario />\r\n      </Modal>\r\n\r\n      <Modal width={1000} title={<h4>Editar Paciente</h4>} open={isEditModalVisible} onOk={handleOkEdit} onCancel={handleCancelEdit} destroyOnClose\r\n        footer={[]}\r\n      >\r\n        <Register paciente={patientForEdit} setIsModalVisible={setIsEditModalVisible} />\r\n      </Modal>\r\n    </div>\r\n  )\r\n\r\n}\r\n","import { Tabs } from 'antd';\r\nimport Register from './register.patient';\r\nimport Dash from './dash.patients';\r\nconst onChange = (key) => {\r\n    console.log(key);\r\n};\r\nconst items = [\r\n    { key: '1', label: `Pacientes`, children: <Dash /> },\r\n    { key: '2', label: `Registrar Paciente`, children: <Register /> }\r\n];\r\n\r\n\r\nexport default function Patients() {\r\n    return <div style={{ marginTop: 6 }}>\r\n        <Tabs tabPosition='left' defaultActiveKey=\"1\" items={items} onChange={onChange} />\r\n    </div>\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Form, Input, Button, message, Space, Row, Col, Upload } from 'antd'\r\nimport { MinusCircleOutlined, PlusOutlined, InboxOutlined } from '@ant-design/icons';\r\nimport { Divider, Select } from 'antd';\r\nimport { S_API, getData, API } from '../../resources'\r\nconst { Option } = Select;\r\nconst { Dragger } = Upload;\r\n\r\n\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    xs: {\r\n      span: 24,\r\n    },\r\n    sm: {\r\n      span: 8,\r\n    },\r\n  },\r\n  wrapperCol: {\r\n    xs: {\r\n      span: 24,\r\n    },\r\n    sm: {\r\n      span: 14,\r\n    },\r\n  },\r\n};\r\nconst tailFormItemLayout = {\r\n  wrapperCol: {\r\n    xs: {\r\n      span: 24,\r\n      offset: 0,\r\n    },\r\n    sm: {\r\n      span: 16,\r\n      offset: 8,\r\n    },\r\n  },\r\n};\r\nexport default function Register(props) {\r\n\r\n  const [form] = Form.useForm();\r\n\r\n  const [sucursales, setSucursales] = useState([]);\r\n  const [sucursalesLoading, setSucursalesLoading] = useState(true);\r\n  const [avatar, setAvatar] = useState(props.medico ? props.medico.avatar : 'https://')\r\n\r\n  //Start upload props Upload File\r\n  const dragDropProps = {\r\n    name: 'file',\r\n    multiple: false,\r\n    action: API + 'imagenes/upload',\r\n\r\n    onChange(info) {\r\n      const { status } = info.file;\r\n\r\n      if (status !== 'uploading') {\r\n        console.log(info.file, info.fileList);\r\n      }\r\n\r\n      if (status === 'done') {\r\n        message.success(`${info.file.name} file uploaded successfully.`);\r\n        console.log('New Files: ', info.file.response.file)\r\n        setAvatar(info.file.response.file)\r\n      } else if (status === 'error') {\r\n        message.error(`${info.file.name} file upload failed.`);\r\n      }\r\n    },\r\n\r\n    onDrop(e) {\r\n      console.log('Dropped files', e.dataTransfer.files);\r\n    },\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log('received Medic: ', props.medico);\r\n    getData('sucursales').then((rs) => { setSucursales(rs); setSucursalesLoading(false) })\r\n  }, [])\r\n\r\n\r\n\r\n  const onFinish = (values) => {\r\n    values.avatar = avatar;\r\n    values.estatus = '1';\r\n    values.rol = 'Medico';\r\n    delete values.confirm;\r\n    delete values.prefix;\r\n\r\n    console.log('ready to send', values)\r\n    fetch(S_API + 'register', {\r\n      method: 'POST',\r\n      body: JSON.stringify(values),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).then(res => res.json())\r\n      .then(response => {\r\n        console.log('Success:', response);\r\n        response.message && response.message === 'Usuario creado correctamente' ?\r\n          window.location.href = 'doctores' : message.error(response.error);\r\n      })\r\n      .catch(error => console.error('Error:', error))\r\n  };\r\n\r\n  const onFinishEdit = (values) => {\r\n    values.avatar = avatar;\r\n    // values.estatus = '1';\r\n    // values.rol = 'Medico';\r\n    // delete values.confirm;\r\n    // delete values.prefix;\r\n\r\n    console.log('ready to send', values)\r\n    fetch(API + 'users/updateUser/' + props.medico._id, {\r\n      method: 'PUT',\r\n      body: JSON.stringify(values),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).then(res => res.json())\r\n      .then(response => {\r\n        console.log('Success:', response);\r\n        response.message && response.message === 'Usuario actualizado correctamente' ?\r\n          props.setIsModalVisible(false) : message.error(response.error);\r\n      })\r\n      .catch(error => console.error('Error:', error))\r\n  };\r\n\r\n  const prefixSelector = (\r\n    <Form.Item name=\"prefix\" noStyle>\r\n      <Select\r\n        style={{\r\n          width: 70,\r\n        }}\r\n      >\r\n        <Option value=\"+52\">+52</Option>\r\n      </Select>\r\n    </Form.Item>\r\n  );\r\n  const suffixSelector = (\r\n    <Form.Item name=\"suffix\" noStyle>\r\n      <Select\r\n        style={{\r\n          width: 70,\r\n        }}\r\n      >\r\n        <Option value=\"USD\">$</Option>\r\n        <Option value=\"CNY\">¥</Option>\r\n      </Select>\r\n    </Form.Item>\r\n  );\r\n\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log('Failed:', errorInfo);\r\n  };\r\n  return (\r\n    <div>\r\n      {\r\n        props.medico ?\r\n          <></> : <h1>Registrar doctor</h1>\r\n      }\r\n      <br />\r\n      <Dragger {...dragDropProps}>\r\n        <p className=\"ant-upload-drag-icon\">\r\n          <InboxOutlined />\r\n        </p>\r\n        <p className=\"ant-upload-text\">Arrastra la imagen de perfil o click ara buscar</p>\r\n        <p className=\"ant-upload-hint\">\r\n          Selecciona archivos en formato png, jpeg o webp\r\n        </p>\r\n      </Dragger>\r\n      <br />\r\n      <Form\r\n        {...formItemLayout}\r\n        form={form}\r\n        name=\"register\"\r\n        onFinish={props.medico ? onFinishEdit : onFinish}\r\n        // initialValues={{ horarios: [{ sucursal: '', horario: '' }], prefix: '+52' }}\r\n        initialValues={props.medico}\r\n        scrollToFirstError\r\n      >\r\n\r\n        <Row>\r\n\r\n          <Col span={11}>\r\n            <Form.Item name=\"name\" label=\"Nombre\" rules={[{ required: true, message: 'Ingresa Nombre y apellidos' }]}>\r\n              <Input />\r\n            </Form.Item>\r\n            <Form.Item name=\"email\" label=\"Correo\" rules={[{ type: 'email', message: 'Ingresa un corrreo electronico valido' }, { required: true, message: 'Please input your E-mail!' }]}>\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            {\r\n              props.medico ? <></> : <>\r\n                <Form.Item name=\"password\" label=\"Contraseña\" rules={[{ required: true, message: 'Por favor ingrese su contraseña!', },]} hasFeedback >\r\n                  <Input.Password />\r\n                </Form.Item>\r\n\r\n                <Form.Item name=\"confirm\" label=\"Confirmar contraseña\" dependencies={['password']} hasFeedback\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: 'Please confirm your password!',\r\n                    },\r\n                    ({ getFieldValue }) => ({\r\n                      validator(_, value) {\r\n                        if (!value || getFieldValue('password') === value) {\r\n                          return Promise.resolve();\r\n                        }\r\n                        return Promise.reject(new Error('Las contraseñas deben coincidir!'));\r\n                      },\r\n                    }),\r\n                  ]}\r\n                >\r\n                  <Input.Password />\r\n                </Form.Item>\r\n              </>\r\n            }\r\n\r\n\r\n            <Form.Item name=\"telefono\" label=\"Telefono\" rules={[{ required: true, message: 'Ingresa el numero de telefono correcto' },]}>\r\n              <Input addonBefore={prefixSelector} style={{ width: '100%', }} />\r\n            </Form.Item>\r\n\r\n\r\n\r\n\r\n          </Col>\r\n          <Col span={11}>\r\n            <Form.Item label=\"horarios\" rules={[{ required: true, message: 'Ingresa al menos un horario', },]}>\r\n              <Form.List name=\"horarios\" label=\"horarios list\"\r\n              >\r\n                {(fields, { add, remove }) => (\r\n                  <>\r\n                    {fields.map(({ key, name, ...restField }) => (\r\n                      <Space key={key} style={{ display: 'flex', marginBottom: 8 }} align=\"baseline\">\r\n                        <Form.Item\r\n                          {...restField}\r\n                          name={[name, 'sucursal']}\r\n                          rules={[{ required: true, message: 'Elije Sucursal' }]}\r\n                        >\r\n                          <Select placeholder=\"Elije Sucursal\" style={{ width: '120px' }} >\r\n                            {sucursalesLoading ? \"Cargando\" :\r\n                              sucursales.map(s => <Option value={s._id}>{s.nombre}</Option>)\r\n                            }\r\n                          </Select>\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                          {...restField}\r\n                          name={[name, 'horario']}\r\n                          rules={[{ required: false, message: 'Missing last name' }]}\r\n                        >\r\n                          <Input placeholder=\"Horario\" />\r\n                        </Form.Item>\r\n                        <MinusCircleOutlined onClick={() => remove(name)} />\r\n                      </Space>\r\n                    ))}\r\n                    <Form.Item>\r\n                      <Button type=\"dashed\" onClick={() => add()} block icon={<PlusOutlined />}>\r\n                        Agregar Horario\r\n                      </Button>\r\n                    </Form.Item>\r\n                  </>\r\n                )}\r\n              </Form.List>\r\n            </Form.Item>\r\n\r\n            <Form.Item name=\"cedula\" label=\"Cedula\" rules={[{ required: false, message: 'Ingresa cedula' }]}>\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            {/* Not Necesary For Medic. He'll be in hospital direction */}\r\n            {/* <Form.Item name=\"calle\" label=\"Calle\" rules={[{ required: true, message: 'Ingresa calle', whitespace: true }]}>\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item name=\"numexterior\" label=\"Num Exterior\" rules={[{ required: true, message: 'Ingresa numero exterior' }]}>\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item name=\"numinterior\" label=\"Num Interior\" rules={[{ required: true, message: 'Ingresa numinterior' }]}>\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item label=\"Colonia\" name=\"colonia\" rules={[{ required: true, message: 'Please input your colobnia!' }]}            >\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item name=\"estado\" label=\"Estado\" rules={[{ required: true, message: 'Apellido materno', },]}>\r\n              <Select placeholder=\"Elije tu estado\">\r\n                {estados.map(e => <Option value={e}>{e}</Option>)}\r\n              </Select>\r\n            </Form.Item>\r\n\r\n            <Form.Item name=\"municipio\" label=\"Municipio\" rules={[{ required: true, message: 'Ingresa tu municipio' }]} >\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item name=\"codigopostal\" label=\"Codigo Postal\" rules={[{ required: true, message: 'Ingresa codigopostal', },]}>\r\n              <InputNumber addonAfter={suffixSelector} style={{ width: '100%', }} />\r\n            </Form.Item> */}\r\n\r\n            <Form.Item name=\"certificacion\" label=\"Certificacion\" rules={[{ required: false, message: 'Ingresa tu certificacion' }]}>\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item name=\"universidad\" label=\"Universidad\" rules={[{ required: false, message: 'Ingresa tu universidad' }]} >\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item name=\"especialidad\" label=\"Especialidad\" rules={[{ required: false, message: 'Ingresa especialidad' }]}>\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item {...tailFormItemLayout}>\r\n              {\r\n                props.setIsModalVisible && <Button onClick={() => props.setIsModalVisible(false)} style={{ marginRight: 6 }}>\r\n                  Cancelar\r\n                </Button>\r\n              }\r\n              <Button type=\"primary\" htmlType=\"submit\">\r\n                Guardar\r\n              </Button>\r\n            </Form.Item>\r\n          </Col>\r\n\r\n        </Row>\r\n\r\n\r\n\r\n\r\n\r\n        {/* <Form.Item\r\n          name=\"agreement\"\r\n          valuePropName=\"checked\"\r\n          rules={[\r\n            {\r\n              validator: (_, value) =>\r\n                value ? Promise.resolve() : Promise.reject(new Error('Should accept agreement')),\r\n            },\r\n          ]}\r\n          {...tailFormItemLayout}\r\n        >\r\n          <Checkbox>\r\n            He leído y acepto los <a href=\"https://recreamed.com\">terminos y condiciones</a>\r\n          </Checkbox>\r\n        </Form.Item> */}\r\n\r\n\r\n      </Form>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Table, Space, Button, Popconfirm, Modal, Avatar } from 'antd';\r\nimport { API, deleteData } from '../../resources'\r\nimport Loading from '../../loading';\r\nimport { HomeOutlined, ClockCircleOutlined, UserOutlined } from '@ant-design/icons'\r\nimport Register from './register.doctor';\r\n\r\nexport default function Dash() {\r\n\r\n  const [isLoading, setILoading] = useState(true);\r\n  const [doctoresData, setDoctoresData] = useState([]);\r\n  const [doctorForEdit, setDoctorForEdit] = useState(null)\r\n  const [isModalVisible, setIsModalVisible] = useState(false)\r\n\r\n  useEffect(() => { getDoctoresData() }, [])\r\n  useEffect(() => { getDoctoresData() }, [isModalVisible])\r\n\r\n  const getDoctoresData = () => {\r\n    fetch(API + 'users_by_rol/Medico')\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        console.log(data); setDoctoresData(data);\r\n      })\r\n      .finally(() => setILoading(false))\r\n  }\r\n\r\n  const editDoctor = async (rd) => {\r\n    let d = JSON.parse(JSON.stringify(rd));\r\n    d.horarios.forEach((h) => { h.sucursal = h.sucursal._id })\r\n    console.log('Horarios before edit: ', d.horarios);\r\n    await setDoctorForEdit(d)\r\n    setIsModalVisible(true);\r\n    console.log('Editar medico: ', d)\r\n  }\r\n\r\n  const deleteDoctor = (doctor) => {\r\n    deleteData('/users/remove/' + doctor._id).then(() => {\r\n      console.log('removed: ', doctor._id);\r\n      getDoctoresData()\r\n    })\r\n  }\r\n\r\n\r\n\r\n  const handleCancel = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: 'Foto',\r\n      key: 'avatar',\r\n      render: (_, { avatar }) => (\r\n        avatar.lenght > 12 ?\r\n          <img src={'https://api.recreamed.com/images/' + avatar} alt=\"Logo\" width={64} />\r\n          : <Avatar icon={<UserOutlined />} size={64} className='btnIconCentered' />\r\n\r\n      ),\r\n    },\r\n    {\r\n      title: 'Nombre',\r\n      dataIndex: 'name',\r\n      key: 'name',\r\n    },\r\n    {\r\n      title: 'Correo',\r\n      dataIndex: 'email',\r\n      key: 'email',\r\n    },\r\n    {\r\n      title: 'Telefono',\r\n      dataIndex: 'telefono',\r\n      key: 'telefono',\r\n    },\r\n    {\r\n      title: 'Horarios',\r\n      dataIndex: 'horarios',\r\n      key: 'horarios',\r\n      render: (_, record) => (\r\n\r\n        <p>{record.horarios.map((h) => { return <Space size='small'><p><HomeOutlined style={{ marginTop: -6 }} />{h.sucursal.nombre}</p><p><ClockCircleOutlined />{h.horario}</p></Space> })}</p>\r\n\r\n      ),\r\n    },\r\n    {\r\n      title: 'Opciones',\r\n      key: 'action',\r\n      render: (_, record) => (\r\n        <Space size=\"middle\">\r\n          <Button size='small' onClick={() => { editDoctor(record) }}>\r\n            Editar\r\n          </Button>\r\n          <Popconfirm\r\n            title=\"Seguro que quiere borrar este doctor?\"\r\n            onConfirm={() => deleteDoctor(record)}\r\n            // onCancel={cancel}\r\n            okText=\"Si\"\r\n            cancelText=\"No\"\r\n          >\r\n            <Button danger size='small'>\r\n              Borrar\r\n            </Button>\r\n          </Popconfirm>\r\n\r\n        </Space>\r\n      ),\r\n    }\r\n  ];\r\n  return (\r\n    <div>\r\n      <h4>Doctores</h4>\r\n      {isLoading ? <Loading /> :\r\n        <Table dataSource={doctoresData} columns={columns} />\r\n      }\r\n\r\n      <Modal width={900} title=\"Editar Medico\" visible={isModalVisible} onCancel={handleCancel} destroyOnClose={true} footer={[]}>\r\n        <Register medico={doctorForEdit} setIsModalVisible={setIsModalVisible} />\r\n      </Modal>\r\n    </div>\r\n  )\r\n}\r\n","import { React, Component } from 'react';\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\nimport { Layout, Menu } from 'antd';\r\nimport { TeamOutlined, UserAddOutlined, MenuOutlined } from '@ant-design/icons';\r\n\r\nimport Register from './register.doctor';\r\nimport Dash from './dash.doctors';\r\n\r\nconst { Header, Content, Footer, Sider } = Layout;\r\n\r\nclass SideMenu extends Component {\r\n  handleClick = e => {\r\n    console.log('click ', e);\r\n  };\r\n\r\n  state = {\r\n    collapsed: false,\r\n  };\r\n\r\n  onCollapse = (collapsed) => {\r\n    this.setState({ collapsed });\r\n  }\r\n  toggle = () => {\r\n    this.setState({\r\n      collapsed: !this.state.collapsed,\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <Layout style={{ minHeight: '100vh' }}>\r\n          <Sider\r\n            theme=\"light\"\r\n            collapsible\r\n            collapsed={this.state.collapsed}\r\n            onCollapse={this.onCollapse}>\r\n            <div className=\"logo\" />\r\n            <Menu defaultSelectedKeys={['1']} mode=\"inline\">\r\n              <Menu.Item icon={<TeamOutlined />} key=\"1\">\r\n                <span>Médicos</span>\r\n                <Link to=\"/doctores\" />\r\n              </Menu.Item>\r\n              <Menu.Item icon={<UserAddOutlined />} key=\"2\">\r\n                <span>Registrar Médico</span>\r\n                <Link to=\"/registrar\" />\r\n              </Menu.Item>\r\n            </Menu>\r\n            {/* <Menu\r\n        onClick={this.handleClick}\r\n        style={{ width: 256 }}\r\n        defaultSelectedKeys={['1']}\r\n        defaultOpenKeys={['sub1']}\r\n        mode=\"inline\"\r\n      >\r\n        <SubMenu key=\"sub1\" icon={<MailOutlined />} title=\"Navigation One\">\r\n          <Menu.ItemGroup key=\"g1\" title=\"Item 1\">\r\n            <Menu.Item key=\"1\" href=\"/dash\">Option 1 <Link to=\"/meseros\" /> </Menu.Item>\r\n            <Menu.Item key=\"2\">Option 2</Menu.Item>\r\n          </Menu.ItemGroup>\r\n          <Menu.ItemGroup key=\"g2\" title=\"Item 2\">\r\n            <Menu.Item key=\"3\">Option 3</Menu.Item>\r\n            <Menu.Item key=\"4\">Option 4</Menu.Item>\r\n          </Menu.ItemGroup>\r\n        </SubMenu>\r\n        <SubMenu key=\"sub2\" icon={<AppstoreOutlined />} title=\"Navigation Two\">\r\n          <Menu.Item key=\"5\">Option 5</Menu.Item>\r\n          <Menu.Item key=\"6\">Option 6</Menu.Item>\r\n          <SubMenu key=\"sub3\" title=\"Submenu\">\r\n            <Menu.Item key=\"7\">Option 7</Menu.Item>\r\n            <Menu.Item key=\"8\">Option 8</Menu.Item>\r\n          </SubMenu>\r\n        </SubMenu>\r\n        <SubMenu key=\"sub4\" icon={<SettingOutlined />} title=\"Navigation Three\">\r\n          <Menu.Item key=\"9\">Option 9</Menu.Item>\r\n          <Menu.Item key=\"10\">Option 10</Menu.Item>\r\n          <Menu.Item key=\"11\">Option 11</Menu.Item>\r\n          <Menu.Item key=\"12\">Option 12</Menu.Item>\r\n        </SubMenu>\r\n      </Menu> */}\r\n          </Sider>\r\n          <Layout>\r\n\r\n            <Header style={{ background: '#fff', padding: 0, paddingLeft: 16 }}>\r\n              <MenuOutlined className=\"trigger\" style={{ cursor: 'pointer' }} onClick={this.toggle} />\r\n            </Header>\r\n\r\n            <Content style={{ margin: '24px 16px', padding: 24, background: '#fff', minHeight: 280 }}>\r\n              <Route exact path=\"/registrar\" component={Register} />\r\n              <Route path=\"/doctores\" component={Dash} />\r\n            </Content>\r\n\r\n            <Footer style={{ textAlign: 'center' }}>\r\n              RECREAMED ©2021 Created by Realidad Creativa\r\n            </Footer>\r\n          </Layout>\r\n\r\n        </Layout>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SideMenu\r\n\r\n\r\n","import React, { Component } from 'react'\r\n// import {Card } from 'antd'\r\nimport SideMenu from './side.doctors';\r\n\r\nexport class Doctors extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div>\r\n                            <SideMenu />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Doctors\r\n","import React, { Component, useState } from 'react'\r\nimport { Form, Input, Button, Row, Col, Upload } from 'antd';\r\nimport { InboxOutlined } from '@ant-design/icons';\r\n// import { Upload } from 'antd';\r\nimport { message } from 'antd';\r\n// import { UploadOutlined } from '@ant-design/icons';\r\nimport { API, sendDataBody, updateData } from '../../resources'\r\nconst { Dragger } = Upload;\r\n\r\n\r\nexport default function Register(props) {\r\n  const [profilePic, setProfilePic] = useState('https://')\r\n\r\n  //Start upload props Upload File\r\n  const dragDropProps = {\r\n    name: 'file',\r\n    multiple: false,\r\n    action: API + 'imagenes/upload', // Production\r\n\r\n    beforeUpload: (file) => {\r\n      const isPNGorJPG = file.type === 'image/png' || file.type === 'image/jpeg';\r\n\r\n      if (!isPNGorJPG) {\r\n        message.error(`${file.name} no es una imagen tipo PNG o JPG`);\r\n      }\r\n\r\n      return isPNGorJPG || Upload.LIST_IGNORE;\r\n    },\r\n    onChange(info) {\r\n      const { status } = info.file;\r\n\r\n      if (status !== 'uploading') {\r\n        console.log(info.file, info.fileList);\r\n      }\r\n\r\n      if (status === 'done') {\r\n        message.success(`${info.file.name} file uploaded successfully.`);\r\n        console.log('New Files: ', info.file.response.file)\r\n        setProfilePic(info.file.response.file)\r\n      } else if (status === 'error') {\r\n        message.error(`${info.file.name} file upload failed.`);\r\n      }\r\n    },\r\n\r\n    onDrop(e) {\r\n      console.log('Dropped files', e.dataTransfer.files);\r\n    },\r\n  };\r\n\r\n  const onFinish = (values) => {\r\n    values.logo = profilePic;\r\n    values.estatus = '1';\r\n    values.delete = '0';\r\n    console.log(\"Ready to send:\", values)\r\n    sendDataBody('sucursales/add', values).then((rs) => {\r\n      // message.success(rs.message || rs.error);\r\n      console.log('resp: ', rs);\r\n      if (rs.message && rs.message === 'Sucursal creada correctamente') window.location.href = '/hospitales'\r\n      else message.warning(rs.message || rs.error)\r\n      console.log('tosend: ', values);\r\n    })\r\n  };\r\n\r\n  const onFinishEdit = (values) => {\r\n    values.logo = profilePic;\r\n    console.log(\"Ready to send editing:\", values)\r\n    updateData('sucursales/update/' + props.hospital._id, values).then(() => {\r\n      props.setModalVisible(false)\r\n    })\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log('Failed:', errorInfo);\r\n  };\r\n  return (\r\n    <div>\r\n      {props.hospital ? <></> : <h4>Registrar Nuevo Hospital</h4>}\r\n\r\n      <Dragger {...dragDropProps}>\r\n        <p className=\"ant-upload-drag-icon\">\r\n          <InboxOutlined />\r\n        </p>\r\n        <p className=\"ant-upload-text\">Arrastra la imagen con el logotipo o click ara buscar</p>\r\n        <p className=\"ant-upload-hint\">\r\n          Selecciona archivos en formato png, jpeg o webp\r\n        </p>\r\n      </Dragger>\r\n      <br />\r\n      <Form name=\"basic\" labelCol={{ span: 12 }} wrapperCol={{ span: 12 }} initialValues={props.hospital} onFinish={props.hospital ? onFinishEdit : onFinish} onFinishFailed={onFinishFailed} autoComplete=\"off\" >\r\n\r\n        <Row>\r\n          <Col>\r\n\r\n            <Form.Item label=\"Nombre\" name=\"nombre\" rules={[{ required: true, message: 'Please input your username!' }]} >\r\n              <Input />\r\n            </Form.Item>\r\n            <Form.Item label=\"RFC\" name=\"rfc\" rules={[{ required: true, message: 'Ingresa RFC' }]} >\r\n              <Input />\r\n            </Form.Item>\r\n            <Form.Item label=\"Calle\" name=\"calle\" rules={[{ required: true, message: 'Ingresa nombre de la calle' }]} >\r\n              <Input />\r\n            </Form.Item>\r\n            <Form.Item label=\"Numero exterior\" name=\"num_exterior\" rules={[{ required: true, message: 'Ingresa numero exterion' }]} >\r\n              <Input />\r\n            </Form.Item>\r\n            <Form.Item label=\"Numero Interior\" name=\"num_interior\" rules={[{ required: false, message: 'Ingresa numero interior' }]} >\r\n              <Input />\r\n            </Form.Item>\r\n            <Form.Item label=\"Colonia\" name=\"colonia\" rules={[{ required: true, message: 'Ingresa nombre de colonia' }]} >\r\n              <Input />\r\n            </Form.Item>\r\n          </Col>\r\n\r\n          <Col>\r\n            <Form.Item label=\"Codigo Postal\" name=\"codigo_postal\" rules={[{ required: true, message: 'Ingresa codigo postal' }]} >\r\n              <Input />\r\n            </Form.Item>\r\n            <Form.Item label=\"Ciudad Municipio\" name=\"ciudad_municipio\" rules={[{ required: true, message: 'Ingresa ciudad/municipio' }]} >\r\n              <Input />\r\n            </Form.Item>\r\n            <Form.Item label=\"Estado\" name=\"estado\" rules={[{ required: true, message: 'Ingresa estado' }]} >\r\n              <Input />\r\n            </Form.Item>\r\n            <Form.Item label=\"Telefono\" name=\"telefono\" rules={[{ required: true, message: 'Ingresa numero de telefono' }]} >\r\n              <Input />\r\n            </Form.Item>\r\n            <Form.Item label=\"Correo Electronico\" name=\"email\" rules={[{ required: true, message: 'Correo@Hopspital.com' }]} >\r\n              <Input />\r\n            </Form.Item>\r\n            <Form.Item label=\"Sitio Web\" name=\"sitio_web\" rules={[{ required: true, message: 'www.hospital.com' }]} >\r\n              <Input />\r\n            </Form.Item>\r\n\r\n          </Col>\r\n        </Row>\r\n\r\n\r\n\r\n\r\n        <Form.Item wrapperCol={{ offset: 9 }}>\r\n\r\n\r\n          <Button type=\"primary\" htmlType=\"submit\" style={{ marginRight: 8 }}>\r\n            Guardar\r\n          </Button>\r\n          {props.setModalVisible && <Button onClick={() => props.setModalVisible(false)} >Cancelar</Button>}\r\n        </Form.Item>\r\n      </Form>\r\n    </div >\r\n  )\r\n}\r\n\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Table, Space, Button, Modal, Popconfirm } from 'antd';\r\nimport Loading from '../../loading'\r\nimport { API, deleteData } from '../../resources'\r\nimport Register from './register.hospital';\r\n\r\nexport default function Dash() {\r\n\r\n  const [isLoading, setILoading] = useState(true);\r\n  const [hospitalesData, setHospitalesData] = useState([]);\r\n  const [hospitalForEdit, setHospitalForEdit] = useState(null)\r\n  const [isModalVisible, setIsModalVisible] = useState(false)\r\n\r\n  useEffect(() => {\r\n    getHospitalesData()\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    getHospitalesData()\r\n  }, [isModalVisible])\r\n\r\n  const getHospitalesData = () => {\r\n    fetch(API + 'sucursales')\r\n      .then(response => response.json())\r\n      .then(data => { console.log(data); setHospitalesData(data); setILoading(false); });\r\n  }\r\n\r\n  // Edit Hospital\r\n  const editHospital = async (h) => {\r\n    await setHospitalForEdit(h)\r\n    setIsModalVisible(true);\r\n    console.log('Editar hospital: ', h)\r\n  }\r\n  // Confitmar Borrar\r\n  const confirm = (e) => {\r\n    console.log('toDel: ', e);\r\n    deleteData('sucursales/remove/' + e._id).then(() => getHospitalesData())\r\n  };\r\n  const cancel = (e) => {\r\n    console.log(e);\r\n  };\r\n\r\n  const handleOk = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  //Start tabla data\r\n  const columns = [\r\n    {\r\n      title: 'Logo',\r\n      key: 'logo',\r\n      render: (_, record) => (\r\n        <img src={'https://api.recreamed.com/images/' + record.logo} alt=\"Logo\" width={64} />\r\n      ),\r\n    },\r\n    {\r\n      title: 'Sucursal',\r\n      dataIndex: 'nombre'\r\n    },\r\n    {\r\n      title: 'Ciudad_municipio',\r\n      dataIndex: 'ciudad_municipio',\r\n      defaultSortOrder: 'descend',\r\n    },\r\n    {\r\n      title: 'Colonia',\r\n      dataIndex: 'colonia',\r\n    },\r\n\r\n    {\r\n      title: 'calle',\r\n      dataIndex: 'calle',\r\n    },\r\n    {\r\n      title: 'Telefono',\r\n      dataIndex: 'telefono',\r\n      defaultSortOrder: 'descend',\r\n    },\r\n    {\r\n      title: 'Opciones',\r\n      key: 'action',\r\n      render: (_, record) => (\r\n        <Space size=\"middle\">\r\n          <Button size='small' onClick={() => { editHospital(record) }}>\r\n            Editar\r\n          </Button>\r\n          <Popconfirm\r\n            title=\"Seguro que quiere borrar esta sucursal?\"\r\n            onConfirm={() => confirm(record)}\r\n            onCancel={cancel}\r\n            okText=\"Si\"\r\n            cancelText=\"No\"\r\n          >\r\n            <Button danger size='small'>\r\n              Borrar\r\n            </Button>\r\n          </Popconfirm>\r\n\r\n        </Space>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  const onChange = (pagination, filters, sorter, extra) => {\r\n    console.log('params', pagination, filters, sorter, extra);\r\n  }\r\n  //End tabla data\r\n\r\n  return (\r\n    isLoading ? <Loading /> :\r\n      <div>\r\n        <h1>Hospitales</h1>\r\n        <Table columns={columns} dataSource={hospitalesData} onChange={onChange} />\r\n\r\n        <Modal width={800} title=\"Editar Hospital\" visible={isModalVisible} onOk={handleOk} onCancel={handleCancel} destroyOnClose={true} footer={[]}>\r\n          <Register hospital={hospitalForEdit} setModalVisible={setIsModalVisible} />\r\n        </Modal>\r\n      </div>\r\n  )\r\n\r\n}\r\n\r\n","import { React, Component } from 'react';\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\nimport { Layout, Menu } from 'antd';\r\nimport { BankOutlined, AppstoreAddOutlined, MenuOutlined } from '@ant-design/icons';\r\n\r\nimport Register from './register.hospital';\r\nimport Dash from './dash.hospitals';\r\n\r\nconst { Header, Content, Footer, Sider } = Layout;\r\n\r\nclass SideMenu extends Component {\r\n  handleClick = e => {\r\n    console.log('click ', e);\r\n  };\r\n\r\n  state = {\r\n    collapsed: false,\r\n  };\r\n\r\n  onCollapse = (collapsed) => {\r\n    this.setState({ collapsed });\r\n  }\r\n  toggle = () => {\r\n    this.setState({\r\n      collapsed: !this.state.collapsed,\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <Layout style={{ minHeight: '100vh' }}>\r\n          <Sider\r\n            theme=\"light\"\r\n            collapsible\r\n            collapsed={this.state.collapsed}\r\n            onCollapse={this.onCollapse}>\r\n            <div className=\"logo\" />\r\n            <Menu defaultSelectedKeys={['1']} mode=\"inline\">\r\n              <Menu.Item icon={<BankOutlined />} key=\"1\">\r\n                {/* <Icon type=\"pie-chart\" /> */}\r\n                <span>Hospitales</span>\r\n                <Link to=\"/hospitales\" />\r\n              </Menu.Item>\r\n              <Menu.Item icon={<AppstoreAddOutlined />} key=\"2\">\r\n                {/* <Icon type=\"desktop\" /> */}\r\n                <span>Registrar Hospital</span>\r\n                <Link to=\"/registrar\" />\r\n              </Menu.Item>\r\n            </Menu>\r\n            {/* <Menu\r\n        onClick={this.handleClick}\r\n        style={{ width: 256 }}\r\n        defaultSelectedKeys={['1']}\r\n        defaultOpenKeys={['sub1']}\r\n        mode=\"inline\"\r\n      >\r\n        <SubMenu key=\"sub1\" icon={<MailOutlined />} title=\"Navigation One\">\r\n          <Menu.ItemGroup key=\"g1\" title=\"Item 1\">\r\n            <Menu.Item key=\"1\" href=\"/dash\">Option 1 <Link to=\"/meseros\" /> </Menu.Item>\r\n            <Menu.Item key=\"2\">Option 2</Menu.Item>\r\n          </Menu.ItemGroup>\r\n          <Menu.ItemGroup key=\"g2\" title=\"Item 2\">\r\n            <Menu.Item key=\"3\">Option 3</Menu.Item>\r\n            <Menu.Item key=\"4\">Option 4</Menu.Item>\r\n          </Menu.ItemGroup>\r\n        </SubMenu>\r\n        <SubMenu key=\"sub2\" icon={<AppstoreOutlined />} title=\"Navigation Two\">\r\n          <Menu.Item key=\"5\">Option 5</Menu.Item>\r\n          <Menu.Item key=\"6\">Option 6</Menu.Item>\r\n          <SubMenu key=\"sub3\" title=\"Submenu\">\r\n            <Menu.Item key=\"7\">Option 7</Menu.Item>\r\n            <Menu.Item key=\"8\">Option 8</Menu.Item>\r\n          </SubMenu>\r\n        </SubMenu>\r\n        <SubMenu key=\"sub4\" icon={<SettingOutlined />} title=\"Navigation Three\">\r\n          <Menu.Item key=\"9\">Option 9</Menu.Item>\r\n          <Menu.Item key=\"10\">Option 10</Menu.Item>\r\n          <Menu.Item key=\"11\">Option 11</Menu.Item>\r\n          <Menu.Item key=\"12\">Option 12</Menu.Item>\r\n        </SubMenu>\r\n      </Menu> */}\r\n          </Sider>\r\n          <Layout>\r\n            <Header style={{ background: '#fff', padding: 0, paddingLeft: 16 }}>\r\n              <MenuOutlined className=\"trigger\"\r\n                style={{ cursor: 'pointer' }}\r\n                onClick={this.toggle} />\r\n              {/* { this.state.collapsed ? (<MenuUnfoldOutlined onClick={this.toggle} style={{ cursor: 'pointer' }}/>) : (<MenuFoldOutlined onClick={this.toggle} style={{ cursor: 'pointer' }}/>) } */}\r\n              {/* <Header > */}\r\n              {/* <Icon\r\n                        className=\"trigger\"\r\n                        type={this.state.collapsed ? 'menu-unfold' : 'menu-fold'}\r\n                        style={{ cursor: 'pointer' }}\r\n                        onClick={this.toggle}\r\n                    /> */}\r\n            </Header>\r\n            <Content style={{ margin: '24px 16px', padding: 24, background: '#fff', minHeight: 280 }}>\r\n              <Route exact path=\"/registrar\" component={Register} />\r\n              <Route path=\"/hospitales\" component={Dash} />\r\n            </Content>\r\n            <Footer style={{ textAlign: 'center' }}>\r\n              Ant Design ©2016 Created by Ant UED\r\n            </Footer>\r\n          </Layout>\r\n\r\n        </Layout>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SideMenu\r\n\r\n\r\n","import React, { Component } from \"react\";\r\nimport SideMenu from \"./side.hospitals\";\r\n\r\nexport class Hospitales extends Component {\r\n    \r\n  render() {\r\n    return (\r\n      <div>\r\n        <SideMenu />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Hospitales;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Form, Input, Button, message, Space, Row, Col, Upload } from 'antd'\r\nimport { MinusCircleOutlined, PlusOutlined, InboxOutlined } from '@ant-design/icons';\r\nimport { Divider, Select } from 'antd';\r\nimport { S_API, getData, API } from '../../resources'\r\nconst { Option } = Select;\r\nconst { Dragger } = Upload;\r\n\r\n\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    xs: {\r\n      span: 24,\r\n    },\r\n    sm: {\r\n      span: 8,\r\n    },\r\n  },\r\n  wrapperCol: {\r\n    xs: {\r\n      span: 24,\r\n    },\r\n    sm: {\r\n      span: 14,\r\n    },\r\n  },\r\n};\r\nconst tailFormItemLayout = {\r\n  wrapperCol: {\r\n    xs: {\r\n      span: 24,\r\n      offset: 0,\r\n    },\r\n    sm: {\r\n      span: 16,\r\n      offset: 8,\r\n    },\r\n  },\r\n};\r\nexport default function Register(props) {\r\n\r\n  const [form] = Form.useForm();\r\n\r\n  const [sucursales, setSucursales] = useState([]);\r\n  const [sucursalesLoading, setSucursalesLoading] = useState(true);\r\n  const [avatar, setAvatar] = useState(props.medico ? props.medico.avatar : 'https://')\r\n\r\n  //Start upload props Upload File\r\n  const dragDropProps = {\r\n    name: 'file',\r\n    multiple: false,\r\n    action: API + 'imagenes/upload',\r\n\r\n    onChange(info) {\r\n      const { status } = info.file;\r\n\r\n      if (status !== 'uploading') {\r\n        console.log(info.file, info.fileList);\r\n      }\r\n\r\n      if (status === 'done') {\r\n        message.success(`${info.file.name} file uploaded successfully.`);\r\n        console.log('New Files: ', info.file.response.file)\r\n        setAvatar(info.file.response.file)\r\n      } else if (status === 'error') {\r\n        message.error(`${info.file.name} file upload failed.`);\r\n      }\r\n    },\r\n\r\n    onDrop(e) {\r\n      console.log('Dropped files', e.dataTransfer.files);\r\n    },\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log('received Medic: ', props.medico);\r\n    getData('sucursales').then((rs) => { setSucursales(rs); setSucursalesLoading(false) })\r\n  }, [])\r\n\r\n\r\n\r\n  const onFinish = (values) => {\r\n    values.avatar = avatar;\r\n    values.estatus = '1';\r\n    values.rol = 'Administrador';\r\n    delete values.confirm;\r\n    delete values.prefix;\r\n\r\n    console.log('ready to send', values)\r\n    fetch(S_API + 'register', {\r\n      method: 'POST',\r\n      body: JSON.stringify(values),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).then(res => res.json())\r\n      .then(response => {\r\n        console.log('Success:', response);\r\n        response.message && response.message === 'Usuario creado correctamente' ?\r\n          window.location.href = 'doctores' : message.error(response.error);\r\n      })\r\n      .catch(error => console.error('Error:', error))\r\n  };\r\n\r\n  const onFinishEdit = (values) => {\r\n    values.avatar = avatar;\r\n    // values.estatus = '1';\r\n    // values.rol = 'Medico';\r\n    // delete values.confirm;\r\n    // delete values.prefix;\r\n\r\n    console.log('ready to send', values)\r\n    fetch(API + 'users/updateUser/' + props.medico._id, {\r\n      method: 'PUT',\r\n      body: JSON.stringify(values),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).then(res => res.json())\r\n      .then(response => {\r\n        console.log('Success:', response);\r\n        response.message && response.message === 'Usuario actualizado correctamente' ?\r\n          props.setIsModalVisible(false) : message.error(response.error);\r\n      })\r\n      .catch(error => console.error('Error:', error))\r\n  };\r\n\r\n  const prefixSelector = (\r\n    <Form.Item name=\"prefix\" noStyle>\r\n      <Select\r\n        style={{\r\n          width: 70,\r\n        }}\r\n      >\r\n        <Option value=\"+52\">+52</Option>\r\n      </Select>\r\n    </Form.Item>\r\n  );\r\n  const suffixSelector = (\r\n    <Form.Item name=\"suffix\" noStyle>\r\n      <Select\r\n        style={{\r\n          width: 70,\r\n        }}\r\n      >\r\n        <Option value=\"USD\">$</Option>\r\n        <Option value=\"CNY\">¥</Option>\r\n      </Select>\r\n    </Form.Item>\r\n  );\r\n\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log('Failed:', errorInfo);\r\n  };\r\n  return (\r\n    <div>\r\n      {\r\n        props.medico ?\r\n          <></> : <h1>Registrar doctor</h1>\r\n      }\r\n      <br />\r\n      <Dragger {...dragDropProps}>\r\n        <p className=\"ant-upload-drag-icon\">\r\n          <InboxOutlined />\r\n        </p>\r\n        <p className=\"ant-upload-text\">Arrastra la imagen de perfil o click ara buscar</p>\r\n        <p className=\"ant-upload-hint\">\r\n          Selecciona archivos en formato png, jpeg o webp\r\n        </p>\r\n      </Dragger>\r\n      <br />\r\n      <Form\r\n        {...formItemLayout}\r\n        form={form}\r\n        name=\"register\"\r\n        onFinish={props.medico ? onFinishEdit : onFinish}\r\n        // initialValues={{ horarios: [{ sucursal: '', horario: '' }], prefix: '+52' }}\r\n        initialValues={props.medico}\r\n        scrollToFirstError\r\n      >\r\n\r\n        <Row>\r\n\r\n          <Col span={11}>\r\n            <Form.Item name=\"name\" label=\"Nombre\" rules={[{ required: true, message: 'Ingresa Nombre y apellidos' }]}>\r\n              <Input />\r\n            </Form.Item>\r\n            <Form.Item name=\"email\" label=\"Correo\" rules={[{ type: 'email', message: 'Ingresa un corrreo electronico valido' }, { required: true, message: 'Please input your E-mail!' }]}>\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            {\r\n              props.medico ? <></> : <>\r\n                <Form.Item name=\"password\" label=\"Contraseña\" rules={[{ required: true, message: 'Por favor ingrese su contraseña!', },]} hasFeedback >\r\n                  <Input.Password />\r\n                </Form.Item>\r\n\r\n                <Form.Item name=\"confirm\" label=\"Confirmar contraseña\" dependencies={['password']} hasFeedback\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: 'Please confirm your password!',\r\n                    },\r\n                    ({ getFieldValue }) => ({\r\n                      validator(_, value) {\r\n                        if (!value || getFieldValue('password') === value) {\r\n                          return Promise.resolve();\r\n                        }\r\n                        return Promise.reject(new Error('Las contraseñas deben coincidir!'));\r\n                      },\r\n                    }),\r\n                  ]}\r\n                >\r\n                  <Input.Password />\r\n                </Form.Item>\r\n              </>\r\n            }\r\n\r\n\r\n            <Form.Item name=\"telefono\" label=\"Telefono\" rules={[{ required: true, message: 'Ingresa el numero de telefono correcto' },]}>\r\n              <Input addonBefore={prefixSelector} style={{ width: '100%', }} />\r\n            </Form.Item>\r\n\r\n\r\n\r\n\r\n          </Col>\r\n          <Col span={11}>\r\n            <Form.Item label=\"horarios\" rules={[{ required: true, message: 'Ingresa al menos un horario', },]}>\r\n              <Form.List name=\"horarios\" label=\"horarios list\"\r\n              >\r\n                {(fields, { add, remove }) => (\r\n                  <>\r\n                    {fields.map(({ key, name, ...restField }) => (\r\n                      <Space key={key} style={{ display: 'flex', marginBottom: 8 }} align=\"baseline\">\r\n                        <Form.Item\r\n                          {...restField}\r\n                          name={[name, 'sucursal']}\r\n                          rules={[{ required: true, message: 'Elije Sucursal' }]}\r\n                        >\r\n                          <Select placeholder=\"Elije Sucursal\" style={{ width: '120px' }} >\r\n                            {sucursalesLoading ? \"Cargando\" :\r\n                              sucursales.map(s => <Option value={s._id}>{s.nombre}</Option>)\r\n                            }\r\n                          </Select>\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                          {...restField}\r\n                          name={[name, 'horario']}\r\n                          rules={[{ required: false, message: 'Missing last name' }]}\r\n                        >\r\n                          <Input placeholder=\"Horario\" />\r\n                        </Form.Item>\r\n                        <MinusCircleOutlined onClick={() => remove(name)} />\r\n                      </Space>\r\n                    ))}\r\n                    <Form.Item>\r\n                      <Button type=\"dashed\" onClick={() => add()} block icon={<PlusOutlined />}>\r\n                        Agregar Horario\r\n                      </Button>\r\n                    </Form.Item>\r\n                  </>\r\n                )}\r\n              </Form.List>\r\n            </Form.Item>\r\n\r\n            <Form.Item name=\"cedula\" label=\"Cedula\" rules={[{ required: false, message: 'Ingresa cedula' }]}>\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            {/* Not Necesary For Medic. He'll be in hospital direction */}\r\n            {/* <Form.Item name=\"calle\" label=\"Calle\" rules={[{ required: true, message: 'Ingresa calle', whitespace: true }]}>\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item name=\"numexterior\" label=\"Num Exterior\" rules={[{ required: true, message: 'Ingresa numero exterior' }]}>\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item name=\"numinterior\" label=\"Num Interior\" rules={[{ required: true, message: 'Ingresa numinterior' }]}>\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item label=\"Colonia\" name=\"colonia\" rules={[{ required: true, message: 'Please input your colobnia!' }]}            >\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item name=\"estado\" label=\"Estado\" rules={[{ required: true, message: 'Apellido materno', },]}>\r\n              <Select placeholder=\"Elije tu estado\">\r\n                {estados.map(e => <Option value={e}>{e}</Option>)}\r\n              </Select>\r\n            </Form.Item>\r\n\r\n            <Form.Item name=\"municipio\" label=\"Municipio\" rules={[{ required: true, message: 'Ingresa tu municipio' }]} >\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item name=\"codigopostal\" label=\"Codigo Postal\" rules={[{ required: true, message: 'Ingresa codigopostal', },]}>\r\n              <InputNumber addonAfter={suffixSelector} style={{ width: '100%', }} />\r\n            </Form.Item> */}\r\n\r\n            <Form.Item name=\"certificacion\" label=\"Certificacion\" rules={[{ required: false, message: 'Ingresa tu certificacion' }]}>\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item name=\"universidad\" label=\"Universidad\" rules={[{ required: false, message: 'Ingresa tu universidad' }]} >\r\n              <Input />\r\n            </Form.Item>\r\n            <Form.Item {...tailFormItemLayout}>\r\n              {\r\n                props.setIsModalVisible && <Button onClick={() => props.setIsModalVisible(false)} style={{ marginRight: 6 }}>\r\n                  Cancelar\r\n                </Button>\r\n              }\r\n              <Button type=\"primary\" htmlType=\"submit\">\r\n                Guardar\r\n              </Button>\r\n            </Form.Item>\r\n          </Col>\r\n\r\n        </Row>\r\n\r\n\r\n\r\n\r\n\r\n        {/* <Form.Item\r\n          name=\"agreement\"\r\n          valuePropName=\"checked\"\r\n          rules={[\r\n            {\r\n              validator: (_, value) =>\r\n                value ? Promise.resolve() : Promise.reject(new Error('Should accept agreement')),\r\n            },\r\n          ]}\r\n          {...tailFormItemLayout}\r\n        >\r\n          <Checkbox>\r\n            He leído y acepto los <a href=\"https://recreamed.com\">terminos y condiciones</a>\r\n          </Checkbox>\r\n        </Form.Item> */}\r\n\r\n\r\n      </Form>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Table, Space, Button, Popconfirm, Modal, Avatar } from 'antd';\r\nimport { API, deleteData } from '../../resources'\r\nimport Loading from '../../loading';\r\nimport { HomeOutlined, ClockCircleOutlined, UserOutlined } from '@ant-design/icons'\r\nimport Register from './register.admin';\r\n\r\nexport default function Dash() {\r\n\r\n  const [isLoading, setILoading] = useState(true);\r\n  const [doctoresData, setDoctoresData] = useState([]);\r\n  const [doctorForEdit, setDoctorForEdit] = useState(null)\r\n  const [isModalVisible, setIsModalVisible] = useState(false)\r\n\r\n  useEffect(() => { getAdminsData() }, [])\r\n  useEffect(() => { getAdminsData() }, [isModalVisible])\r\n\r\n  const getAdminsData = () => {\r\n    fetch(API + 'users_by_rol/Administrador')\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        console.log(data); setDoctoresData(data);\r\n      })\r\n      .finally(() => setILoading(false))\r\n  }\r\n\r\n  const editDoctor = async (rd) => {\r\n    let d = JSON.parse(JSON.stringify(rd));\r\n    d.horarios.forEach((h) => { h.sucursal = h.sucursal._id })\r\n    console.log('Horarios before edit: ', d.horarios);\r\n    await setDoctorForEdit(d)\r\n    setIsModalVisible(true);\r\n    console.log('Editar medico: ', d)\r\n  }\r\n\r\n  const deleteDoctor = (doctor) => {\r\n    deleteData('/users/remove/' + doctor._id).then(() => {\r\n      console.log('removed: ', doctor._id);\r\n      getAdminsData()\r\n    })\r\n  }\r\n\r\n\r\n\r\n  const handleCancel = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: 'Foto',\r\n      key: 'avatar',\r\n      render: (_, { avatar }) => (\r\n        avatar.lenght > 8 ?\r\n          <img src={'https://api.recreamed.com/images/' + avatar} alt=\"Logo\" width={64} /> :\r\n          <Avatar size={64} icon={<UserOutlined />} className='btnIconCentered' />\r\n      ),\r\n    },\r\n    {\r\n      title: 'Nombre',\r\n      dataIndex: 'name',\r\n      key: 'name',\r\n    },\r\n    {\r\n      title: 'Correo',\r\n      dataIndex: 'email',\r\n      key: 'email',\r\n    },\r\n    {\r\n      title: 'Telefono',\r\n      dataIndex: 'telefono',\r\n      key: 'telefono',\r\n    },\r\n    {\r\n      title: 'Horarios',\r\n      dataIndex: 'horarios',\r\n      key: 'horarios',\r\n      render: (_, record) => (\r\n\r\n        <p>{record.horarios.map((h) => { return <Space size='small'><p><HomeOutlined style={{ marginTop: -6 }} />{h.sucursal ? h.sucursal.nombre : 'Sin Sucursal'}</p><p><ClockCircleOutlined />{h.horario}</p></Space> })}</p>\r\n\r\n      ),\r\n    },\r\n    {\r\n      title: 'Opciones',\r\n      key: 'action',\r\n      render: (_, record) => (\r\n        <Space size=\"middle\">\r\n          <Button size='small' onClick={() => { editDoctor(record) }}>\r\n            Editar\r\n          </Button>\r\n          <Popconfirm\r\n            title=\"Seguro que quiere borrar este doctor?\"\r\n            onConfirm={() => deleteDoctor(record)}\r\n            // onCancel={cancel}\r\n            okText=\"Si\"\r\n            cancelText=\"No\"\r\n          >\r\n            <Button danger size='small'>\r\n              Borrar\r\n            </Button>\r\n          </Popconfirm>\r\n\r\n        </Space>\r\n      ),\r\n    }\r\n  ];\r\n  return (\r\n    <div>\r\n      <h4>Administradores</h4>\r\n      {isLoading ? <Loading /> :\r\n        <Table dataSource={doctoresData} columns={columns} />\r\n      }\r\n\r\n      <Modal width={900} title=\"Editar Medico\" visible={isModalVisible} onCancel={handleCancel} destroyOnClose={true} footer={[]}>\r\n        <Register medico={doctorForEdit} setIsModalVisible={setIsModalVisible} />\r\n      </Modal>\r\n    </div>\r\n  )\r\n}\r\n","import { React, Component } from 'react';\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\nimport { Layout, Menu } from 'antd';\r\nimport { TeamOutlined, UserAddOutlined, MenuOutlined } from '@ant-design/icons';\r\n\r\nimport Register from './register.admin';\r\nimport Dash from './dash.admins';\r\n\r\nconst { Header, Content, Footer, Sider } = Layout;\r\n\r\nclass SideMenu extends Component {\r\n  handleClick = e => {\r\n    console.log('click ', e);\r\n  };\r\n\r\n  state = {\r\n    collapsed: false,\r\n  };\r\n\r\n  onCollapse = (collapsed) => {\r\n    this.setState({ collapsed });\r\n  }\r\n  toggle = () => {\r\n    this.setState({\r\n      collapsed: !this.state.collapsed,\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <Layout style={{ minHeight: '100vh' }}>\r\n          <Sider\r\n            theme=\"light\"\r\n            collapsible\r\n            collapsed={this.state.collapsed}\r\n            onCollapse={this.onCollapse}>\r\n            <div className=\"logo\" />\r\n            <Menu defaultSelectedKeys={['1']} mode=\"inline\">\r\n              <Menu.Item icon={<TeamOutlined />} key=\"1\">\r\n                <span>Administradores</span>\r\n                <Link to=\"/administradores\" />\r\n              </Menu.Item>\r\n              <Menu.Item icon={<UserAddOutlined />} key=\"2\">\r\n                <span>Registrar Administrador</span>\r\n                <Link to=\"/registrar\" />\r\n              </Menu.Item>\r\n            </Menu>\r\n            {/* <Menu\r\n        onClick={this.handleClick}\r\n        style={{ width: 256 }}\r\n        defaultSelectedKeys={['1']}\r\n        defaultOpenKeys={['sub1']}\r\n        mode=\"inline\"\r\n      >\r\n        <SubMenu key=\"sub1\" icon={<MailOutlined />} title=\"Navigation One\">\r\n          <Menu.ItemGroup key=\"g1\" title=\"Item 1\">\r\n            <Menu.Item key=\"1\" href=\"/dash\">Option 1 <Link to=\"/meseros\" /> </Menu.Item>\r\n            <Menu.Item key=\"2\">Option 2</Menu.Item>\r\n          </Menu.ItemGroup>\r\n          <Menu.ItemGroup key=\"g2\" title=\"Item 2\">\r\n            <Menu.Item key=\"3\">Option 3</Menu.Item>\r\n            <Menu.Item key=\"4\">Option 4</Menu.Item>\r\n          </Menu.ItemGroup>\r\n        </SubMenu>\r\n        <SubMenu key=\"sub2\" icon={<AppstoreOutlined />} title=\"Navigation Two\">\r\n          <Menu.Item key=\"5\">Option 5</Menu.Item>\r\n          <Menu.Item key=\"6\">Option 6</Menu.Item>\r\n          <SubMenu key=\"sub3\" title=\"Submenu\">\r\n            <Menu.Item key=\"7\">Option 7</Menu.Item>\r\n            <Menu.Item key=\"8\">Option 8</Menu.Item>\r\n          </SubMenu>\r\n        </SubMenu>\r\n        <SubMenu key=\"sub4\" icon={<SettingOutlined />} title=\"Navigation Three\">\r\n          <Menu.Item key=\"9\">Option 9</Menu.Item>\r\n          <Menu.Item key=\"10\">Option 10</Menu.Item>\r\n          <Menu.Item key=\"11\">Option 11</Menu.Item>\r\n          <Menu.Item key=\"12\">Option 12</Menu.Item>\r\n        </SubMenu>\r\n      </Menu> */}\r\n          </Sider>\r\n          <Layout>\r\n\r\n            <Header style={{ background: '#fff', padding: 0, paddingLeft: 16 }}>\r\n              <MenuOutlined className=\"trigger\" style={{ cursor: 'pointer' }} onClick={this.toggle} />\r\n            </Header>\r\n\r\n            <Content style={{ margin: '24px 16px', padding: 24, background: '#fff', minHeight: 280 }}>\r\n              <Route exact path=\"/registrar\" component={Register} />\r\n              <Route path=\"/administradores\" component={Dash} />\r\n            </Content>\r\n\r\n            <Footer style={{ textAlign: 'center' }}>\r\n              RECREAMED ©2021 Created by Realidad Creativa\r\n            </Footer>\r\n          </Layout>\r\n\r\n        </Layout>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SideMenu\r\n\r\n\r\n","import React, { Component } from 'react'\r\n// import {Card } from 'antd'\r\nimport SideMenu from './side.admins';\r\n\r\nexport class Admins extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div>\r\n                            <SideMenu />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Admins\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Form, Input, Button, message, Space, Row, Col, Upload } from 'antd'\r\nimport { MinusCircleOutlined, PlusOutlined, InboxOutlined } from '@ant-design/icons';\r\nimport { Divider, Select } from 'antd';\r\nimport { S_API, getData, API } from '../../resources'\r\nconst { Option } = Select;\r\nconst { Dragger } = Upload;\r\n\r\n\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    xs: {\r\n      span: 24,\r\n    },\r\n    sm: {\r\n      span: 8,\r\n    },\r\n  },\r\n  wrapperCol: {\r\n    xs: {\r\n      span: 24,\r\n    },\r\n    sm: {\r\n      span: 14,\r\n    },\r\n  },\r\n};\r\nconst tailFormItemLayout = {\r\n  wrapperCol: {\r\n    xs: {\r\n      span: 24,\r\n      offset: 0,\r\n    },\r\n    sm: {\r\n      span: 16,\r\n      offset: 8,\r\n    },\r\n  },\r\n};\r\nexport default function Register(props) {\r\n\r\n  const [form] = Form.useForm();\r\n\r\n  const [sucursales, setSucursales] = useState([]);\r\n  const [sucursalesLoading, setSucursalesLoading] = useState(true);\r\n  const [avatar, setAvatar] = useState(props.medico ? props.medico.avatar : 'https://')\r\n\r\n  //Start upload props Upload File\r\n  const dragDropProps = {\r\n    name: 'file',\r\n    multiple: false,\r\n    action: API + 'imagenes/upload',\r\n\r\n    onChange(info) {\r\n      const { status } = info.file;\r\n\r\n      if (status !== 'uploading') {\r\n        console.log(info.file, info.fileList);\r\n      }\r\n\r\n      if (status === 'done') {\r\n        message.success(`${info.file.name} file uploaded successfully.`);\r\n        console.log('New Files: ', info.file.response.file)\r\n        setAvatar(info.file.response.file)\r\n      } else if (status === 'error') {\r\n        message.error(`${info.file.name} file upload failed.`);\r\n      }\r\n    },\r\n\r\n    onDrop(e) {\r\n      console.log('Dropped files', e.dataTransfer.files);\r\n    },\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log('received Medic: ', props.medico);\r\n    getData('sucursales').then((rs) => { setSucursales(rs); setSucursalesLoading(false) })\r\n  }, [])\r\n\r\n\r\n\r\n  const onFinish = (values) => {\r\n    values.avatar = avatar;\r\n    values.estatus = '1';\r\n    values.rol = 'Recepcion';\r\n    delete values.confirm;\r\n    delete values.prefix;\r\n\r\n    console.log('ready to send', values)\r\n    fetch(S_API + 'register', {\r\n      method: 'POST',\r\n      body: JSON.stringify(values),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).then(res => res.json())\r\n      .then(response => {\r\n        console.log('Success:', response);\r\n        response.message && response.message === 'Usuario creado correctamente' ?\r\n          window.location.href = 'recepcionistas' : message.error(response.error);\r\n      })\r\n      .catch(error => console.error('Error:', error))\r\n  };\r\n\r\n  const onFinishEdit = (values) => {\r\n    values.avatar = avatar;\r\n    // values.estatus = '1';\r\n    // values.rol = 'Medico';\r\n    // delete values.confirm;\r\n    // delete values.prefix;\r\n\r\n    console.log('ready to send', values)\r\n    fetch(API + 'users/updateUser/' + props.medico._id, {\r\n      method: 'PUT',\r\n      body: JSON.stringify(values),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).then(res => res.json())\r\n      .then(response => {\r\n        console.log('Success:', response);\r\n        response.message && response.message === 'Usuario actualizado correctamente' ?\r\n          props.setIsModalVisible(false) : message.error(response.error);\r\n      })\r\n      .catch(error => console.error('Error:', error))\r\n  };\r\n\r\n  const prefixSelector = (\r\n    <Form.Item name=\"prefix\" noStyle>\r\n      <Select\r\n        style={{\r\n          width: 70,\r\n        }}\r\n      >\r\n        <Option value=\"+52\">+52</Option>\r\n      </Select>\r\n    </Form.Item>\r\n  );\r\n  const suffixSelector = (\r\n    <Form.Item name=\"suffix\" noStyle>\r\n      <Select\r\n        style={{\r\n          width: 70,\r\n        }}\r\n      >\r\n        <Option value=\"USD\">$</Option>\r\n        <Option value=\"CNY\">¥</Option>\r\n      </Select>\r\n    </Form.Item>\r\n  );\r\n\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log('Failed:', errorInfo);\r\n  };\r\n  return (\r\n    <div>\r\n      {\r\n        props.medico ?\r\n          <></> : <h1>Registrar Recepcionista</h1>\r\n      }\r\n      <br />\r\n      <Dragger {...dragDropProps}>\r\n        <p className=\"ant-upload-drag-icon\">\r\n          <InboxOutlined />\r\n        </p>\r\n        <p className=\"ant-upload-text\">Arrastra la imagen de perfil o click ara buscar</p>\r\n        <p className=\"ant-upload-hint\">\r\n          Selecciona archivos en formato png, jpeg o webp\r\n        </p>\r\n      </Dragger>\r\n      <br />\r\n      <Form\r\n        {...formItemLayout}\r\n        form={form}\r\n        name=\"register\"\r\n        onFinish={props.medico ? onFinishEdit : onFinish}\r\n        // initialValues={{ horarios: [{ sucursal: '', horario: '' }], prefix: '+52' }}\r\n        initialValues={props.medico}\r\n        scrollToFirstError\r\n      >\r\n\r\n        <Row>\r\n\r\n          <Col span={11}>\r\n            <Form.Item name=\"name\" label=\"Nombre\" rules={[{ required: true, message: 'Ingresa Nombre y apellidos' }]}>\r\n              <Input />\r\n            </Form.Item>\r\n            <Form.Item name=\"email\" label=\"Correo\" rules={[{ type: 'email', message: 'Ingresa un corrreo electronico valido' }, { required: true, message: 'Please input your E-mail!' }]}>\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            {\r\n              props.medico ? <></> : <>\r\n                <Form.Item name=\"password\" label=\"Contraseña\" rules={[{ required: true, message: 'Por favor ingrese su contraseña!', },]} hasFeedback >\r\n                  <Input.Password />\r\n                </Form.Item>\r\n\r\n                <Form.Item name=\"confirm\" label=\"Confirmar contraseña\" dependencies={['password']} hasFeedback\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: 'Please confirm your password!',\r\n                    },\r\n                    ({ getFieldValue }) => ({\r\n                      validator(_, value) {\r\n                        if (!value || getFieldValue('password') === value) {\r\n                          return Promise.resolve();\r\n                        }\r\n                        return Promise.reject(new Error('Las contraseñas deben coincidir!'));\r\n                      },\r\n                    }),\r\n                  ]}\r\n                >\r\n                  <Input.Password />\r\n                </Form.Item>\r\n              </>\r\n            }\r\n\r\n\r\n            <Form.Item name=\"telefono\" label=\"Telefono\" rules={[{ required: true, message: 'Ingresa el numero de telefono correcto' },]}>\r\n              <Input addonBefore={prefixSelector} style={{ width: '100%', }} />\r\n            </Form.Item>\r\n\r\n\r\n\r\n\r\n          </Col>\r\n          <Col span={11}>\r\n            <Form.Item label=\"horarios\" rules={[{ required: true, message: 'Ingresa al menos un horario', },]}>\r\n              <Form.List name=\"horarios\" label=\"horarios list\"\r\n              >\r\n                {(fields, { add, remove }) => (\r\n                  <>\r\n                    {fields.map(({ key, name, ...restField }) => (\r\n                      <Space key={key} style={{ display: 'flex', marginBottom: 8 }} align=\"baseline\">\r\n                        <Form.Item\r\n                          {...restField}\r\n                          name={[name, 'sucursal']}\r\n                          rules={[{ required: true, message: 'Elije Sucursal' }]}\r\n                        >\r\n                          <Select placeholder=\"Elije Sucursal\" style={{ width: '120px' }} >\r\n                            {sucursalesLoading ? \"Cargando\" :\r\n                              sucursales.map(s => <Option value={s._id}>{s.nombre}</Option>)\r\n                            }\r\n                          </Select>\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                          {...restField}\r\n                          name={[name, 'horario']}\r\n                          rules={[{ required: false, message: 'Missing last name' }]}\r\n                        >\r\n                          <Input placeholder=\"Horario\" />\r\n                        </Form.Item>\r\n                        <MinusCircleOutlined onClick={() => remove(name)} />\r\n                      </Space>\r\n                    ))}\r\n                    <Form.Item>\r\n                      <Button type=\"dashed\" onClick={() => add()} block icon={<PlusOutlined />}>\r\n                        Agregar Horario\r\n                      </Button>\r\n                    </Form.Item>\r\n                  </>\r\n                )}\r\n              </Form.List>\r\n            </Form.Item>\r\n\r\n            <Form.Item name=\"cedula\" label=\"Cedula\" rules={[{ required: false, message: 'Ingresa cedula' }]}>\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            {/* Not Necesary For Medic. He'll be in hospital direction */}\r\n            {/* <Form.Item name=\"calle\" label=\"Calle\" rules={[{ required: true, message: 'Ingresa calle', whitespace: true }]}>\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item name=\"numexterior\" label=\"Num Exterior\" rules={[{ required: true, message: 'Ingresa numero exterior' }]}>\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item name=\"numinterior\" label=\"Num Interior\" rules={[{ required: true, message: 'Ingresa numinterior' }]}>\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item label=\"Colonia\" name=\"colonia\" rules={[{ required: true, message: 'Please input your colobnia!' }]}            >\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item name=\"estado\" label=\"Estado\" rules={[{ required: true, message: 'Apellido materno', },]}>\r\n              <Select placeholder=\"Elije tu estado\">\r\n                {estados.map(e => <Option value={e}>{e}</Option>)}\r\n              </Select>\r\n            </Form.Item>\r\n\r\n            <Form.Item name=\"municipio\" label=\"Municipio\" rules={[{ required: true, message: 'Ingresa tu municipio' }]} >\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item name=\"codigopostal\" label=\"Codigo Postal\" rules={[{ required: true, message: 'Ingresa codigopostal', },]}>\r\n              <InputNumber addonAfter={suffixSelector} style={{ width: '100%', }} />\r\n            </Form.Item> */}\r\n\r\n            <Form.Item name=\"certificacion\" label=\"Certificacion\" rules={[{ required: false, message: 'Ingresa tu certificacion' }]}>\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item name=\"universidad\" label=\"Universidad\" rules={[{ required: false, message: 'Ingresa tu universidad' }]} >\r\n              <Input />\r\n            </Form.Item>\r\n            <Form.Item {...tailFormItemLayout}>\r\n              {\r\n                props.setIsModalVisible && <Button onClick={() => props.setIsModalVisible(false)} style={{ marginRight: 6 }}>\r\n                  Cancelar\r\n                </Button>\r\n              }\r\n              <Button type=\"primary\" htmlType=\"submit\">\r\n                Guardar\r\n              </Button>\r\n            </Form.Item>\r\n          </Col>\r\n\r\n        </Row>\r\n\r\n\r\n\r\n\r\n\r\n        {/* <Form.Item\r\n          name=\"agreement\"\r\n          valuePropName=\"checked\"\r\n          rules={[\r\n            {\r\n              validator: (_, value) =>\r\n                value ? Promise.resolve() : Promise.reject(new Error('Should accept agreement')),\r\n            },\r\n          ]}\r\n          {...tailFormItemLayout}\r\n        >\r\n          <Checkbox>\r\n            He leído y acepto los <a href=\"https://recreamed.com\">terminos y condiciones</a>\r\n          </Checkbox>\r\n        </Form.Item> */}\r\n\r\n\r\n      </Form>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Table, Space, Button, Popconfirm, Modal, Avatar } from 'antd';\r\nimport { API, deleteData } from '../../resources'\r\nimport Loading from '../../loading';\r\nimport { HomeOutlined, ClockCircleOutlined, UserOutlined } from '@ant-design/icons'\r\nimport Register from './register.receptionist';\r\n\r\nexport default function Dash() {\r\n\r\n  const [isLoading, setILoading] = useState(true);\r\n  const [doctoresData, setDoctoresData] = useState([]);\r\n  const [doctorForEdit, setDoctorForEdit] = useState(null)\r\n  const [isModalVisible, setIsModalVisible] = useState(false)\r\n\r\n  useEffect(() => { getDoctoresData() }, [])\r\n  useEffect(() => { getDoctoresData() }, [isModalVisible])\r\n\r\n  const getDoctoresData = () => {\r\n    fetch(API + 'users_by_rol/Recepcion')\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        console.log(data); setDoctoresData(data);\r\n      })\r\n      .finally(() => setILoading(false))\r\n  }\r\n\r\n  const editDoctor = async (rd) => {\r\n    let d = JSON.parse(JSON.stringify(rd));\r\n    d.horarios.forEach((h) => { h.sucursal = h.sucursal._id })\r\n    console.log('Horarios before edit: ', d.horarios);\r\n    await setDoctorForEdit(d)\r\n    setIsModalVisible(true);\r\n    console.log('Editar medico: ', d)\r\n  }\r\n\r\n  const deleteDoctor = (doctor) => {\r\n    deleteData('/users/remove/' + doctor._id).then(() => {\r\n      console.log('removed: ', doctor._id);\r\n      getDoctoresData()\r\n    })\r\n  }\r\n\r\n\r\n\r\n  const handleCancel = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: 'Foto',\r\n      key: 'avatar',\r\n      render: (_, { avatar }) => (\r\n        avatar.lenght > 12 ?\r\n          <img src={'https://api.recreamed.com/images/' + avatar} alt=\"Logo\" width={64} />\r\n          : <Avatar icon={<UserOutlined />} size={64} className='btnIconCentered' />\r\n\r\n      ),\r\n    },\r\n    {\r\n      title: 'Nombre',\r\n      dataIndex: 'name',\r\n      key: 'name',\r\n    },\r\n    {\r\n      title: 'Correo',\r\n      dataIndex: 'email',\r\n      key: 'email',\r\n    },\r\n    {\r\n      title: 'Telefono',\r\n      dataIndex: 'telefono',\r\n      key: 'telefono',\r\n    },\r\n    {\r\n      title: 'Horarios',\r\n      dataIndex: 'horarios',\r\n      key: 'horarios',\r\n      render: (_, record) => (\r\n\r\n        <p>{record.horarios.map((h) => { return <Space size='small'><p><HomeOutlined style={{ marginTop: -6 }} />{h.sucursal.nombre}</p><p><ClockCircleOutlined />{h.horario}</p></Space> })}</p>\r\n\r\n      ),\r\n    },\r\n    {\r\n      title: 'Opciones',\r\n      key: 'action',\r\n      render: (_, record) => (\r\n        <Space size=\"middle\">\r\n          <Button size='small' onClick={() => { editDoctor(record) }}>\r\n            Editar\r\n          </Button>\r\n          <Popconfirm\r\n            title=\"Seguro que quiere borrar este doctor?\"\r\n            onConfirm={() => deleteDoctor(record)}\r\n            // onCancel={cancel}\r\n            okText=\"Si\"\r\n            cancelText=\"No\"\r\n          >\r\n            <Button danger size='small'>\r\n              Borrar\r\n            </Button>\r\n          </Popconfirm>\r\n\r\n        </Space>\r\n      ),\r\n    }\r\n  ];\r\n  return (\r\n    <div>\r\n      <h4>Recepcionistas</h4>\r\n      {isLoading ? <Loading /> :\r\n        <Table dataSource={doctoresData} columns={columns} />\r\n      }\r\n\r\n      <Modal width={900} title=\"Editar Medico\" visible={isModalVisible} onCancel={handleCancel} destroyOnClose={true} footer={[]}>\r\n        <Register medico={doctorForEdit} setIsModalVisible={setIsModalVisible} />\r\n      </Modal>\r\n    </div>\r\n  )\r\n}\r\n","import { React, Component } from 'react';\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\nimport { Layout, Menu } from 'antd';\r\nimport { TeamOutlined, UserAddOutlined, MenuOutlined } from '@ant-design/icons';\r\n\r\nimport Register from './register.receptionist';\r\nimport Dash from './dash.receptionists';\r\n\r\nconst { Header, Content, Footer, Sider } = Layout;\r\n\r\nclass SideMenu extends Component {\r\n  handleClick = e => {\r\n    console.log('click ', e);\r\n  };\r\n\r\n  state = {\r\n    collapsed: false,\r\n  };\r\n\r\n  onCollapse = (collapsed) => {\r\n    this.setState({ collapsed });\r\n  }\r\n  toggle = () => {\r\n    this.setState({\r\n      collapsed: !this.state.collapsed,\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <Layout style={{ minHeight: '100vh' }}>\r\n          <Sider\r\n            theme=\"light\"\r\n            collapsible\r\n            collapsed={this.state.collapsed}\r\n            onCollapse={this.onCollapse}>\r\n            <div className=\"logo\" />\r\n            <Menu defaultSelectedKeys={['1']} mode=\"inline\">\r\n              <Menu.Item icon={<TeamOutlined />} key=\"1\">\r\n                <span>Recepcionistas</span>\r\n                <Link to=\"/recepcionistas\" />\r\n              </Menu.Item>\r\n              <Menu.Item icon={<UserAddOutlined />} key=\"2\">\r\n                <span>Registrar Recepcionista</span>\r\n                <Link to=\"/registrar\" />\r\n              </Menu.Item>\r\n            </Menu>\r\n            {/* <Menu\r\n        onClick={this.handleClick}\r\n        style={{ width: 256 }}\r\n        defaultSelectedKeys={['1']}\r\n        defaultOpenKeys={['sub1']}\r\n        mode=\"inline\"\r\n      >\r\n        <SubMenu key=\"sub1\" icon={<MailOutlined />} title=\"Navigation One\">\r\n          <Menu.ItemGroup key=\"g1\" title=\"Item 1\">\r\n            <Menu.Item key=\"1\" href=\"/dash\">Option 1 <Link to=\"/meseros\" /> </Menu.Item>\r\n            <Menu.Item key=\"2\">Option 2</Menu.Item>\r\n          </Menu.ItemGroup>\r\n          <Menu.ItemGroup key=\"g2\" title=\"Item 2\">\r\n            <Menu.Item key=\"3\">Option 3</Menu.Item>\r\n            <Menu.Item key=\"4\">Option 4</Menu.Item>\r\n          </Menu.ItemGroup>\r\n        </SubMenu>\r\n        <SubMenu key=\"sub2\" icon={<AppstoreOutlined />} title=\"Navigation Two\">\r\n          <Menu.Item key=\"5\">Option 5</Menu.Item>\r\n          <Menu.Item key=\"6\">Option 6</Menu.Item>\r\n          <SubMenu key=\"sub3\" title=\"Submenu\">\r\n            <Menu.Item key=\"7\">Option 7</Menu.Item>\r\n            <Menu.Item key=\"8\">Option 8</Menu.Item>\r\n          </SubMenu>\r\n        </SubMenu>\r\n        <SubMenu key=\"sub4\" icon={<SettingOutlined />} title=\"Navigation Three\">\r\n          <Menu.Item key=\"9\">Option 9</Menu.Item>\r\n          <Menu.Item key=\"10\">Option 10</Menu.Item>\r\n          <Menu.Item key=\"11\">Option 11</Menu.Item>\r\n          <Menu.Item key=\"12\">Option 12</Menu.Item>\r\n        </SubMenu>\r\n      </Menu> */}\r\n          </Sider>\r\n          <Layout>\r\n\r\n            <Header style={{ background: '#fff', padding: 0, paddingLeft: 16 }}>\r\n              <MenuOutlined className=\"trigger\" style={{ cursor: 'pointer' }} onClick={this.toggle} />\r\n            </Header>\r\n\r\n            <Content style={{ margin: '24px 16px', padding: 24, background: '#fff', minHeight: 280 }}>\r\n              <Route exact path=\"/registrar\" component={Register} />\r\n              <Route path=\"/recepcionistas\" component={Dash} />\r\n            </Content>\r\n\r\n            <Footer style={{ textAlign: 'center' }}>\r\n              RECREAMED ©2021 Created by Realidad Creativa\r\n            </Footer>\r\n          </Layout>\r\n\r\n        </Layout>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SideMenu\r\n\r\n\r\n","import React, { Component } from 'react'\r\n// import {Card } from 'antd'\r\nimport SideMenu from './side.receptionists';\r\n\r\nexport class Receptionists extends Component {\r\n    render() {\r\n        return <SideMenu />\r\n    }\r\n}\r\n\r\nexport default Receptionists\r\n","import React from 'react'\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport { Container, Nav, Navbar } from \"react-bootstrap\";\r\nimport { Button } from 'antd'\r\nimport icon from '../assets/Icon.png';\r\nimport Patients from \"./patients/main.patients\";\r\nimport Doctors from \"./doctors/main.doctors\";\r\nimport { Hospitales } from \"./hospitals/main.hospitals\";\r\nimport { usuario } from '../resources'\r\nimport Admins from './admins/main.admins';\r\nimport Receptionists from './receptionists/main.receptionists';\r\n\r\nconst logout = () => { localStorage.removeItem('sessionToken'); localStorage.removeItem('userType'); window.location.href = '/'; }\r\n\r\nfunction Navigator() {\r\n  return <Navbar bg=\"primary\" variant=\"dark\" expand=\"lg\">\r\n    <Container>\r\n      <img\r\n        src={icon}\r\n        width=\"40\"\r\n        height=\"35\"\r\n        className=\"d-inline-block align-top\"\r\n        alt=\"Recreamed logo\"\r\n      />\r\n      <Navbar.Brand href=\"#home\" style={{ fontFamily: 'Poppins', color: 'White' }}>\r\n        Bienvenido {usuario.name}\r\n\r\n      </Navbar.Brand>\r\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n      <Navbar.Collapse id=\"basic-navbar-nav\">\r\n        <Nav className=\"me-auto\">\r\n          <Nav.Link href=\"hospitales\">Hospitales</Nav.Link>\r\n          <Nav.Link href=\"administradores\">Administradores</Nav.Link>\r\n          <Nav.Link href=\"recepcionistas\">Recepcionistas</Nav.Link>\r\n          <Nav.Link href=\"doctores\">Medicos</Nav.Link>\r\n          <Nav.Link href=\"pacientes\">Pacientes</Nav.Link>\r\n        </Nav>\r\n      </Navbar.Collapse>\r\n      <Navbar.Collapse className=\"justify-content-end\">\r\n        <Button onClick={logout} ghost>Cerrar Sesion</Button>\r\n      </Navbar.Collapse>\r\n    </Container>\r\n  </Navbar>;\r\n\r\n\r\n}\r\n\r\nexport default function SuperAdminApp() {\r\n  return (\r\n    <Router>\r\n      <Navigator />\r\n      <Switch>\r\n\r\n        <Route path=\"/hospitales\">\r\n          <Hospitales />\r\n        </Route>\r\n        <Route path=\"/administradores\">\r\n          <Admins />\r\n        </Route>\r\n        <Route path=\"/doctores\">\r\n          <Doctors />\r\n        </Route>\r\n        <Route path=\"/recepcionistas\">\r\n          <Receptionists />\r\n        </Route>\r\n        <Route path=\"/pacientes\">\r\n          <Patients />\r\n        </Route>\r\n        <Route path=\"/\">\r\n          <Patients />\r\n\r\n        </Route>\r\n\r\n      </Switch>\r\n    </Router>\r\n  )\r\n}\r\n","import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n// import 'antd/dist/antd.css';\r\nimport { Login } from \"./session/login\";\r\nimport { Register } from \"./session/register\";\r\nimport \"./App.css\"\r\nimport DoctorApp from \"./doctorViews/doctorApp\";\r\nimport RecepcionApp from \"./recepcionViews/recepcionApp\";\r\nimport PatientApp from \"./patientViews/patientApp\";\r\nimport AdminHospitalApp from \"./admHospitalViews/adminHospitalApp\";\r\nimport SuperAdminApp from \"./superAdminViews/superAdminApp\";\r\nimport { KetaminaPublic, DepresionQidsPublic, DepresionEspanolPublic, HeadachePublic, PostTraumaticoPublic, PostTraumaticoClinicoPublic, PostTraumaticoMX, SatisfaccionPublic } from './session/public_escalas_routes';\r\n\r\nconst userType = localStorage.getItem('userType');\r\n\r\n// Changing Repo\r\n\r\nexport function App() {\r\n\r\n  const token = localStorage.getItem('sessionToken');\r\n\r\n  // Public Routes\r\n  if (!token) {\r\n    console.log(\"tok:\", localStorage.getItem('sessionToken'));\r\n    return <Router>\r\n      <Switch>\r\n        <Route path=\"/ketamina_public/:idmedico/:idpaciente/:key\">\r\n          <KetaminaPublic />\r\n        </Route>\r\n        <Route path=\"/dolor_public/:idmedico/:idpaciente/:key\">\r\n          <HeadachePublic />\r\n        </Route>\r\n        <Route path=\"/depresion_qids_public/:idmedico/:idpaciente/:key\">\r\n          <DepresionQidsPublic />\r\n        </Route>\r\n        <Route path=\"/depresion_gpc_public/:idmedico/:idpaciente/:key\">\r\n          <DepresionEspanolPublic />\r\n        </Route>\r\n        <Route path=\"/post_traumatico_public/:idmedico/:idpaciente/:key\">\r\n          <PostTraumaticoPublic />\r\n        </Route>\r\n        <Route path=\"/post_traumatico_clinico_public/:idmedico/:idpaciente/:key\">\r\n          <PostTraumaticoClinicoPublic />\r\n        </Route>\r\n        <Route path=\"/post_traumatico_mx_public/:idmedico/:idpaciente/:key\">\r\n          <PostTraumaticoMX />\r\n        </Route>\r\n        <Route path=\"/satisfaccion_public/:idmedico/:idpaciente/:key\">\r\n          <SatisfaccionPublic />\r\n        </Route>\r\n\r\n        <Route path=\"/register\">\r\n          <Register />\r\n        </Route>\r\n        <Router path=\"/\">\r\n          <Login />\r\n        </Router>\r\n\r\n      </Switch>\r\n    </Router>\r\n  }\r\n\r\n  switch (userType) {\r\n    case 'SuperAdministrador':\r\n      return <SuperAdminApp />\r\n    case 'Administrador':\r\n      return <AdminHospitalApp />\r\n    case 'Recepcion':\r\n      return <RecepcionApp />\r\n    case 'Enfermero':\r\n      return <RecepcionApp />\r\n    case 'Paciente':\r\n      return <PatientApp />\r\n    case 'Medico':\r\n      return <DoctorApp />\r\n    default:\r\n      return 'foo';\r\n  }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { App } from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n//Main\r\n\r\n"],"sourceRoot":""}