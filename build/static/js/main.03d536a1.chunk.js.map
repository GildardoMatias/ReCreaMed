{"version":3,"sources":["resources.jsx","assets/Logo.png","session/login.jsx","session/register.jsx","doctorViews/pacientesDash/register.patient.jsx","loading.jsx","doctorViews/pacientesDash/dash.patients.jsx","doctorViews/pacientesDash/move.patients.jsx","doctorViews/pacientesDash/detalles.paciente.jsx","doctorViews/pacientesDash/side.patients.jsx","doctorViews/pacientesDash/main.patients.jsx","doctorViews/citas.jsx","doctorViews/expedientes/createExpedient.jsx","doctorViews/expedientes/nuevaNota.jsx","doctorViews/expedientes/detalleNota.jsx","doctorViews/expedientes/detalleReceta.jsx","doctorViews/expedientes/detalleHistoria.jsx","doctorViews/expedientes/expedientes.jsx","doctorViews/recetas.jsx","doctorViews/perfil.jsx","doctorViews/doctorNotas.jsx","doctorViews/home/home.jsx","assets/Icon.png","doctorViews/historial.jsx","doctorViews/pacientes/register.patient.jsx","doctorViews/pacientes/detalles.paciente.jsx","doctorViews/pacientes/main.pacientes.jsx","doctorViews/doctorApp.js","recepcionViews/pacientes/register.patient.jsx","recepcionViews/pacientes/dash.patients.jsx","recepcionViews/pacientes/side.patients.jsx","recepcionViews/pacientes/main.patients.jsx","recepcionViews/citas.jsx","recepcionViews/home/home.jsx","recepcionViews/recepcionApp.js","patientViews/misCitas.jsx","patientViews/recetas.jsx","patientViews/perfil.jsx","patientViews/home/home.jsx","patientViews/patientApp.js","admHospitalViews/citas/citas.jsx","admHospitalViews/users/register.user.jsx","admHospitalViews/users/dash.users.jsx","admHospitalViews/users/side.users.jsx","admHospitalViews/users/main.users.jsx","admHospitalViews/doctors/register.doctor.jsx","admHospitalViews/doctors/dash.doctors.jsx","admHospitalViews/doctors/side.doctors.jsx","admHospitalViews/doctors/main.doctors.jsx","admHospitalViews/sucursal.jsx","admHospitalViews/perfilAdministrador.jsx","admHospitalViews/home/home.jsx","admHospitalViews/adminHospitalApp.js","superAdminViews/users/register.user.jsx","superAdminViews/users/dash.users.jsx","superAdminViews/users/side.users.jsx","superAdminViews/users/main.users.jsx","superAdminViews/doctors/register.doctor.jsx","superAdminViews/doctors/dash.doctors.jsx","superAdminViews/doctors/side.doctors.jsx","superAdminViews/doctors/main.doctors.jsx","superAdminViews/expedientes.jsx","superAdminViews/hospitals/register.hospital.jsx","superAdminViews/hospitals/dash.hospitals.jsx","superAdminViews/hospitals/side.hospitals.jsx","superAdminViews/hospitals/main.hospitals.jsx","superAdminViews/home/home.jsx","superAdminViews/superAdminApp.js","App.js","index.js"],"names":["API","S_API","logout","localStorage","removeItem","window","location","href","usuario","JSON","parse","getItem","getData","endpoint","a","fetch","then","response","json","data","Login","span","offset","hoverable","justify","src","logo","alt","width","name","className","initialValues","remember","onFinish","values","console","log","method","headers","body","stringify","res","message","setItem","user","rol","token","info","error","catch","err","alert","Item","rules","required","prefix","UserOutlined","placeholder","LockOutlined","type","valuePropName","noStyle","block","htmlType","Option","Select","estados","formItemLayout","labelCol","xs","sm","wrapperCol","tailFormItemLayout","Register","Form","useForm","form","useState","sucursales","setSucursales","sucursalesLoading","setSucursalesLoading","useEffect","getHospitalesData","prefixSelector","style","value","suffixSelector","avatar","estatus","confirm","agreement","success","horarios","id_sucursal","horario","scrollToFirstError","label","hasFeedback","Password","dependencies","getFieldValue","validator","_","Promise","reject","Error","resolve","addonBefore","List","fields","add","remove","map","key","restField","display","marginBottom","align","s","_id","nombre","MinusCircleOutlined","onClick","icon","PlusOutlined","whitespace","e","addonAfter","password","telefono","universidad","certificacion","cedula","medicos_asignados","residence","Loading","margin","padding","textAlign","background","borderRadius","Dash","pacientesData","setPacientesData","isLoading","setIsLoading","getPacientesData","finally","columns","title","dataIndex","render","text","dataSource","MovePatients","medicosData","setMedicosData","getMedicosData","onChange","onSearch","val","userMedicos","find","p","id_usuario","push","medico","postBody","onFinishFailed","errorInfo","autoComplete","showSearch","optionFilterProp","DetallesPaciente","Header","Layout","Content","Footer","Sider","SideMenu","handleClick","state","collapsed","onCollapse","setState","toggle","minHeight","theme","collapsible","this","defaultSelectedKeys","mode","to","UserAddOutlined","SwapOutlined","paddingLeft","MenuOutlined","cursor","exact","path","component","Component","Patients","Citas","isModalVisible","setIsModalVisible","citasData","setCitasData","getCitasData","dateCellRender","hoy","format","substring","cita","fecha_hora","listStyleType","status","monthCellRender","num","month","getMonthData","visible","onOk","onCancel","showTime","dateString","CreateExpedient","props","historiasData","sethistoriasData","historiasLoading","sethistoriasLoading","notasData","setNotasData","notasLoading","setNotasLoading","recetasData","setRecetasData","recetasLoading","setRecetasLoading","rs","defaultValue","h","historial","n","createdAt","r","prescripcion","id_medico","formItemLayoutWithOutLabel","NuevaNota","marginLeft","estudios","names","length","errors","field","index","validateTrigger","position","alignItems","justifyContent","ErrorList","DetalleNota","notaData","setNotaData","notaLoading","setnotaLoading","view","setView","nota","finifhGet","gridStyle","height","NotaView","Object","keys","k","Grid","size","bordered","shape","FormOutlined","DetalleReceta","recetaData","setRecetaData","recetaLoading","setRecetaLoading","setEditing","receta","DetalleHistoria","historiaData","setHistoriaData","setHistoriaLoading","editing","historia","marginTop","HistoriaDetails","disabled","Expedientes","setExpedientesData","setExpedientesLoading","setPacienteSelected","setHistoria","setNota","setReceta","paciente","getExpedientesData","id_paciente","Recetas","showModal","record","id_nota","updatedAt","__v","Perfil","profileData","setProfileData","getProfileData","email","estado","municipio","colonia","calle","codigopostal","DoctorNotas","isModalDetailVisible","setIsModalDetailVisible","getNotasData","Home","dataPie","configPie","appendPadding","angleField","colorField","radius","content","fill","fontSize","dataLine","mes","consultas","configLine","xField","yField","color","point","stroke","gutter","lg","valueStyle","backgroundColor","md","TextArea","Input","Historial","rows","addHistoria","Date","createPAtientData","usr","id_historia","notas","recetas","setAdding","url","user_id","pacienteData","setPacienteData","pacienteLoading","setPacienteLoading","ProfileDetails","TabPane","Tabs","MainPacientes","setPaciente","adding","tabPosition","onTabClick","pt","tab","Navigator","Navbar","bg","expand","Container","Brand","Toggle","Collapse","id","Nav","Link","DoctorApp","RecepcionApp","PatientApp","setUsuario","setILoading","DetalleUsuario","Users","doctoresData","setDoctoresData","getDoctoresData","onFilter","TeamOutlined","Doctors","Sucursal","PerfilAdministrador","AdminHospitalApp","SuperAdminExpedientes","expedientesData","delete","hospitalesData","setHospitalesData","sorter","b","sortDirections","defaultSortOrder","pagination","filters","extra","BankOutlined","AppstoreAddOutlined","Hospitales","SuperAdminApp","userType","App","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.03d536a1.chunk.js","sourcesContent":["export const API = \"https://api.recreamed.com/api/\"\r\nexport const S_API = \"https://api.recreamed.com/session/\"\r\n\r\nexport const logout = () => { localStorage.removeItem('sessionToken'); localStorage.removeItem('userType'); localStorage.removeItem('userData'); window.location.href = '/'; }\r\n\r\nexport const usuario = JSON.parse(localStorage.getItem('userData'));\r\n\r\nexport async function getData(endpoint) {\r\n    return await fetch(API + endpoint)\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            return data;\r\n        });\r\n}\r\n\r\nexport async function sendData(endpoint) {\r\n\r\n    return await fetch(S_API + 'endpoint', {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    }).then(res => res.json())\r\n        .then(response => {\r\n            console.log('Success:', response);\r\n        })\r\n        .catch(error => console.error('Error:', error))\r\n};\r\n\r\nexport async function sendDataValues(values) {\r\n\r\n    return await fetch(S_API + 'register', {\r\n        method: 'POST',\r\n        body: JSON.stringify(values),\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    }).then(res => res.json())\r\n        .then(response => {\r\n            console.log('Success:', response);\r\n            // message.success(response.message);\r\n        })\r\n        .catch(error => console.error('Error:', error))\r\n};\r\n\r\n\r\nconst getHospitalesData = () => {\r\n    fetch(API + 'sucursales')\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            console.log(data);\r\n            // setHospitalesData(data);\r\n            // setILoading(false);\r\n        });\r\n}\r\n\r\n\r\n\r\nconst onFinish = (values) => {\r\n    values.avatar = 'https://';\r\n    values.estatus = '1';\r\n    delete values.confirm;\r\n    delete values.prefix;\r\n    delete values.agreement;\r\n\r\n    console.log(values)\r\n    fetch(S_API + 'register', {\r\n        method: 'POST',\r\n        body: JSON.stringify(values),\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    }).then(res => res.json())\r\n        .then(response => {\r\n            console.log('Success:', response);\r\n            // message.success(response.message);\r\n        })\r\n        .catch(error => console.error('Error:', error))\r\n};\r\n","export default __webpack_public_path__ + \"static/media/Logo.bcbe104c.png\";","import { Form, Input, Button, Checkbox, Row, Col, Card, message } from 'antd';\r\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\r\nimport { S_API } from '../resources'\r\nimport logo from '../assets/Logo.png';\r\n\r\nexport function Login() {\r\n\r\n  const onFinish = (values) => {\r\n    delete values.remember;\r\n    console.log('Received values of form: ', values);\r\n\r\n    // Inicio de sesion\r\n    fetch(S_API + 'login', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(values)\r\n    })\r\n      .then((data) => { console.log(\"data\", data); return data.json() })\r\n      .then(res => {\r\n        console.log(\"resp\", res);\r\n        if (res.message === \"Bienvenido\") {\r\n          localStorage.setItem(\"userType\", res.user.rol);\r\n          localStorage.setItem('sessionToken', res.data.token);\r\n          localStorage.setItem('userData', JSON.stringify(res.user) );\r\n          window.location.href = '/';\r\n        } else (message.info(res.error || res.message))\r\n      })\r\n      .catch(err => window.alert(\"Error: \", err))\r\n\r\n  };\r\n\r\n  return (\r\n    <Row>\r\n      <Col span={8} offset={8}>\r\n        <br />\r\n        <br />\r\n        <Card hoverable>\r\n          <br />\r\n          <Row justify=\"center\"> <img src={logo} alt=\"Logo\" width={160} /></Row>\r\n          <br />\r\n          <Row justify=\"center\">\r\n            <h3>Inicio de Sesion</h3>\r\n          </Row>\r\n          <br />\r\n          <br />\r\n          <Form\r\n            name=\"normal_login\"\r\n            className=\"login-form\"\r\n            initialValues={{\r\n              remember: true,\r\n            }}\r\n            onFinish={onFinish}\r\n          >\r\n            <Form.Item\r\n              name=\"email\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: 'Por favor ingresa el correo de tu cuenta!',\r\n                },\r\n              ]}\r\n            >\r\n              <Input prefix={<UserOutlined className=\"site-form-item-icon\" />} placeholder=\"Usuario\" />\r\n            </Form.Item>\r\n            <Form.Item\r\n              name=\"password\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: 'Por favor ingresa tu contraseña!',\r\n                },\r\n              ]}\r\n            >\r\n              <Input\r\n                prefix={<LockOutlined className=\"site-form-item-icon\" />} type=\"password\" placeholder=\"Contraseña\" />\r\n            </Form.Item>\r\n            <Form.Item>\r\n              <Form.Item name=\"remember\" valuePropName=\"checked\" noStyle>\r\n                <Checkbox>Mantener la sesion</Checkbox>\r\n              </Form.Item>\r\n\r\n              <a className=\"login-form-forgot\" href=\"\">\r\n                Recuperar contraseña\r\n              </a>\r\n            </Form.Item>\r\n\r\n            <Form.Item>\r\n              <Button block type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n                Iniciar Sesion\r\n              </Button>\r\n            </Form.Item>\r\n            <Form.Item>\r\n              <Row justify=\"center\"> O <a href=\"register\">Registrarse</a></Row>\r\n\r\n            </Form.Item>\r\n          </Form>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n\r\n  );\r\n};","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Card,\r\n  Form,\r\n  Input,\r\n  InputNumber,\r\n  Cascader,\r\n  Select,\r\n  Row,\r\n  Col,\r\n  Checkbox,\r\n  Button,\r\n  AutoComplete,\r\n  message,\r\n  Space\r\n} from 'antd';\r\nimport { MinusCircleOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport { S_API, API } from '../resources'\r\nimport logo from '../assets/Logo.png';\r\nimport './login.css';\r\n\r\nconst { Option } = Select;\r\nconst estados = [\"Michoacan\", \"Morelos\", \"Guerrero\"];\r\n\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    xs: {\r\n      span: 24,\r\n    },\r\n    sm: {\r\n      span: 8,\r\n    },\r\n  },\r\n  wrapperCol: {\r\n    xs: {\r\n      span: 24,\r\n    },\r\n    sm: {\r\n      span: 16,\r\n    },\r\n  },\r\n};\r\nconst tailFormItemLayout = {\r\n  wrapperCol: {\r\n    xs: {\r\n      span: 24,\r\n      offset: 0,\r\n    },\r\n    sm: {\r\n      span: 16,\r\n      offset: 8,\r\n    },\r\n  },\r\n};\r\n\r\nexport function Register() {\r\n  const [form] = Form.useForm();\r\n  const [sucursales, setSucursales] = useState([]);\r\n  const [sucursalesLoading, setSucursalesLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    getHospitalesData()\r\n\r\n  }, [])\r\n\r\n\r\n  const getHospitalesData = () => {\r\n    fetch(API + 'sucursales')\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        console.log(data);\r\n        setSucursales(data);\r\n        setSucursalesLoading(false);\r\n      });\r\n  }\r\n\r\n  const onFinish = (values) => {\r\n    values.avatar = 'https://';\r\n    values.estatus = '1';\r\n    delete values.confirm;\r\n    delete values.prefix;\r\n    delete values.agreement;\r\n\r\n    console.log(values)\r\n    fetch(S_API + 'register', {\r\n      method: 'POST',\r\n      body: JSON.stringify(values),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).then(res => res.json())\r\n      .then(response => { console.log('Success:', response); response.message ? message.success(response.message) : message.error(response.error); })\r\n      .catch(error => console.error('Error:', error))\r\n  };\r\n\r\n  const prefixSelector = (\r\n    <Form.Item name=\"prefix\" noStyle>\r\n      <Select\r\n        style={{\r\n          width: 70,\r\n        }}\r\n      >\r\n        <Option value=\"+52\">+52</Option>\r\n      </Select>\r\n    </Form.Item>\r\n  );\r\n  const suffixSelector = (\r\n    <Form.Item name=\"suffix\" noStyle>\r\n      <Select\r\n        style={{\r\n          width: 70,\r\n        }}\r\n      >\r\n        <Option value=\"USD\">$</Option>\r\n        <Option value=\"CNY\">¥</Option>\r\n      </Select>\r\n    </Form.Item>\r\n  );\r\n\r\n  return (\r\n    <Row>\r\n      <Col span={12} offset={6}>\r\n        <br />\r\n        <br />\r\n        <Card hoverable>\r\n          <Row justify=\"center\"> <img src={logo} alt=\"Logo\" width={160} /></Row>\r\n          <br />\r\n          <br />\r\n          <Row justify=\"center\">\r\n            <h3>Registro de Usuario</h3>\r\n          </Row>\r\n          <br />\r\n          <br />\r\n          <Form\r\n            {...formItemLayout}\r\n            form={form}\r\n            name=\"register\"\r\n            onFinish={onFinish}\r\n            initialValues={{\r\n              horarios: [{ id_sucursal: '', horario: '' }],\r\n              prefix: '+52',\r\n            }}\r\n            scrollToFirstError\r\n          >\r\n\r\n            <Form.Item name=\"rol\" label=\"Rol\" rules={[{ required: true, message: 'Elije el rol', },]}>\r\n              <Select placeholder=\"Elije el tipo de rol\">\r\n                <Option value=\"Administrador\">Administrador de Hospital</Option>\r\n                <Option value=\"Recepcion\">Recepcion</Option>\r\n                <Option value=\"Medico\">Medico</Option>\r\n                <Option value=\"Paciente\">Paciente</Option>\r\n              </Select>\r\n            </Form.Item>\r\n\r\n            <Form.Item name=\"email\" label=\"Correo\" rules={[{ type: 'email', message: 'The input is not valid E-mail!' }, { required: true, message: 'Please input your E-mail!' }]}>\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item name=\"password\" label=\"Contraseña\" rules={[{ required: true, message: 'Por favor ingrese su contraseña!', },]} hasFeedback >\r\n              <Input.Password />\r\n            </Form.Item>\r\n\r\n            <Form.Item name=\"confirm\" label=\"Confirmar contraseña\" dependencies={['password']} hasFeedback\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: 'Please confirm your password!',\r\n                },\r\n                ({ getFieldValue }) => ({\r\n                  validator(_, value) {\r\n                    if (!value || getFieldValue('password') === value) {\r\n                      return Promise.resolve();\r\n                    }\r\n                    return Promise.reject(new Error('Las contraseñas deben coincidir!'));\r\n                  },\r\n                }),\r\n              ]}\r\n            >\r\n              <Input.Password />\r\n            </Form.Item>\r\n\r\n            <Form.Item name=\"telefono\" label=\"Telefono\" rules={[{ required: true, message: 'Please input your phone number!', },]}>\r\n              <Input addonBefore={prefixSelector} style={{ width: '100%', }} />\r\n            </Form.Item>\r\n\r\n            <Form.Item label=\"horarios\" rules={[{ required: true, message: 'Ingresa al menos un horario', },]}>\r\n              <Form.List name=\"horarios\" label=\"horarios list\"\r\n              // rules={[\r\n              //   {\r\n              //     validator: async (_, horarios) => {\r\n              //       if (!horarios || horarios.length < 1) {\r\n              //         message.error('Debes Ingresar al menos un horario')\r\n              //         return Promise.reject(new Error('Debe haber al menos un horario'));\r\n              //       }\r\n              //     },\r\n              //   },\r\n              // ]}\r\n              >\r\n                {(fields, { add, remove }) => (\r\n                  <>\r\n                    {fields.map(({ key, name, ...restField }) => (\r\n                      <Space key={key} style={{ display: 'flex', marginBottom: 8 }} align=\"baseline\">\r\n                        <Form.Item\r\n                          {...restField}\r\n                          name={[name, 'id_sucursal']}\r\n                          rules={[{ required: true, message: 'Elije Sucursal' }]}\r\n                        >\r\n                          <Select placeholder=\"Elije Sucursal\" style={{width:'180px'}} >\r\n                            { sucursalesLoading ? \"Cargando\" :\r\n                              sucursales.map(s => <Option value={s._id}>{s.nombre}</Option>)\r\n                            }\r\n                          </Select>\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                          {...restField}\r\n                          name={[name, 'horario']}\r\n                          rules={[{ required: true, message: 'Missing last name' }]}\r\n                        >\r\n                          <Input placeholder=\"Horario\" />\r\n                        </Form.Item>\r\n                        <MinusCircleOutlined onClick={() => remove(name)} />\r\n                      </Space>\r\n                    ))}\r\n                    <Form.Item>\r\n                      <Button type=\"dashed\" onClick={() => add()} block icon={<PlusOutlined />}>\r\n                        Agregar Horario\r\n                      </Button>\r\n                    </Form.Item>\r\n                  </>\r\n                )}\r\n              </Form.List>\r\n            </Form.Item>\r\n\r\n            <Form.Item name=\"id_medicoasignado\" label=\"Id Medico Asignado\" rules={[{ required: true, message: 'Ingresa el ID del medico ', },]}>\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item name=\"name\" label=\"Nombre\" rules={[{ required: true, message: 'Ingresa Nombre y apellidos' }]}>\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item name=\"cedula\" label=\"Cedula\" rules={[{ required: false, message: 'Ingresa cedula' }]}>\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item name=\"calle\" label=\"Calle\" rules={[{ required: true, message: 'Ingresa calle', whitespace: true }]}>\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item name=\"numexterior\" label=\"Num Exterior\" rules={[{ required: true, message: 'Ingresa numero exterior' }]}>\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item name=\"numinterior\" label=\"Num Interior\" rules={[{ required: true, message: 'Ingresa numinterior' }]}>\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item label=\"Colonia\" name=\"colonia\" rules={[{ required: true, message: 'Please input your colobnia!' }]}            >\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item name=\"estado\" label=\"Estado\" rules={[{ required: true, message: 'Apellido materno', },]}>\r\n              <Select placeholder=\"Elije tu estado\">\r\n                {estados.map(e => <Option value={e}>{e}</Option>)}\r\n              </Select>\r\n            </Form.Item>\r\n\r\n            <Form.Item name=\"municipio\" label=\"Municipio\" rules={[{ required: true, message: 'Ingresa tu municipio' }]} >\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item name=\"codigopostal\" label=\"Codigo Postal\" rules={[{ required: true, message: 'Ingresa codigopostal', },]}>\r\n              <InputNumber addonAfter={suffixSelector} style={{ width: '100%', }} />\r\n            </Form.Item>\r\n\r\n            <Form.Item name=\"certificacion\" label=\"Certificacion\" rules={[{ required: false, message: 'Ingresa tu certificacion' }]}>\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item name=\"universidad\" label=\"Universidad\" rules={[{ required: false, message: 'Ingresa tu universidad' }]} >\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n              name=\"agreement\"\r\n              valuePropName=\"checked\"\r\n              rules={[\r\n                {\r\n                  validator: (_, value) =>\r\n                    value ? Promise.resolve() : Promise.reject(new Error('Should accept agreement')),\r\n                },\r\n              ]}\r\n              {...tailFormItemLayout}\r\n            >\r\n              <Checkbox>\r\n                He leído y acepto los <a href=\"https://recreamed.com\">terminos y condiciones</a>\r\n              </Checkbox>\r\n            </Form.Item>\r\n\r\n            <Form.Item {...tailFormItemLayout}>\r\n              <Button type=\"primary\" htmlType=\"submit\">\r\n                Register\r\n              </Button>\r\n            </Form.Item>\r\n          </Form>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n  );\r\n}; ","import React from 'react'\r\nimport { Form, Input, Button, message } from 'antd'\r\nimport { InputNumber, Select } from 'antd';\r\nimport { S_API } from '../../resources'\r\nimport { usuario } from '../../resources'\r\n\r\nconst { Option } = Select;\r\nconst estados = [\"Michoacan\", \"Morelos\", \"Guerrero\"];\r\n\r\nexport default function Register() {\r\n\r\n  const [form] = Form.useForm();\r\n\r\n  const onFinish = (values) => {\r\n    values.avatar = 'https://';\r\n    values.estatus = '1';\r\n    values.rol = 'Paciente';\r\n    values.password = values.telefono;\r\n    values.universidad = '';\r\n    values.certificacion = '';\r\n    values.cedula = '';\r\n    values.horarios = [];\r\n    values.medicos_asignados = [usuario._id];\r\n\r\n    delete values.prefix;\r\n\r\n    console.log(values)\r\n    fetch(S_API + 'register', {\r\n      method: 'POST',\r\n      body: JSON.stringify(values),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).then(res => res.json())\r\n      .then(response => { console.log('Success:', response); message.success(response.message || response.error); })\r\n      .catch(error => console.error('Error:', error))\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log('Failed:', errorInfo);\r\n  };\r\n\r\n  const prefixSelector = (\r\n    <Form.Item name=\"prefix\" noStyle>\r\n      <Select\r\n        style={{\r\n          width: 70,\r\n        }}\r\n      >\r\n        <Option value=\"+52\">+52</Option>\r\n      </Select>\r\n    </Form.Item>\r\n  );\r\n  const suffixSelector = (\r\n    <Form.Item name=\"suffix\" noStyle>\r\n      <Select\r\n        style={{\r\n          width: 70,\r\n        }}\r\n      >\r\n        <Option value=\"USD\">$</Option>\r\n        <Option value=\"CNY\">¥</Option>\r\n      </Select>\r\n    </Form.Item>\r\n  );\r\n  return (\r\n    <div>\r\n      <h4>Registrar Paciente</h4>\r\n      <br />\r\n      <Form\r\n        // {...formItemLayout}\r\n        labelCol={{ span: 6 }} wrapperCol={{ span: 16 }}\r\n        form={form}\r\n        name=\"register\"\r\n        onFinish={onFinish}\r\n        initialValues={{\r\n          residence: ['zhejiang', 'hangzhou', 'xihu'],\r\n          prefix: '52',\r\n        }}\r\n        scrollToFirstError\r\n      >\r\n        <Form.Item\r\n          name=\"email\"\r\n          label=\"Correo\"\r\n          rules={[\r\n            {\r\n              type: 'email',\r\n              message: 'The input is not valid E-mail!',\r\n            },\r\n            {\r\n              required: true,\r\n              message: 'Please input your E-mail!',\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        {/* <Form.Item name=\"password\" label=\"Contraseña\" rules={[{ required: true, message: 'Por favor ingrese su contraseña!', },]} hasFeedback >\r\n          <Input.Password />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"confirm\"\r\n          label=\"Confirmar contraseña\"\r\n          dependencies={['password']}\r\n          hasFeedback\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Please confirm your password!',\r\n            },\r\n            ({ getFieldValue }) => ({\r\n              validator(_, value) {\r\n                if (!value || getFieldValue('password') === value) {\r\n                  return Promise.resolve();\r\n                }\r\n                return Promise.reject(new Error('Las contraseñas deben coincidir!'));\r\n              },\r\n            }),\r\n          ]}\r\n        >\r\n          <Input.Password />\r\n        </Form.Item> */}\r\n\r\n        <Form.Item\r\n          name=\"telefono\"\r\n          label=\"Telefono\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Please input your phone number!',\r\n            },\r\n          ]}\r\n        >\r\n          <Input\r\n            addonBefore={prefixSelector}\r\n            style={{\r\n              width: '100%',\r\n            }}\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"name\"\r\n          label=\"Nombre\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Ingresa Nombre y apellidos',\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n\r\n\r\n        <Form.Item\r\n          name=\"calle\"\r\n          label=\"Calle\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Ingresa calle',\r\n              whitespace: true,\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"numexterior\"\r\n          label=\"Num Exterior\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Ingresa numero exterior',\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"numinterior\"\r\n          label=\"Num Interior\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Ingresa numinterior',\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"Colonia\"\r\n          name=\"colonia\"\r\n          rules={[{ required: true, message: 'Please input your colobnia!' }]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item name=\"estado\" label=\"Estado\" rules={[{ required: true, message: 'Apellido materno', },]}>\r\n          <Select placeholder=\"Elije tu estado\">\r\n            {estados.map(e => <Option value={e}>{e}</Option>)}\r\n          </Select>\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"municipio\"\r\n          label=\"Municipio\"\r\n          rules={[{ required: true, message: 'Ingresa tu municipio' }]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item name=\"codigopostal\" label=\"Codigo Postal\" rules={[{ required: true, message: 'Ingresa codigopostal', },]}>\r\n          <InputNumber addonAfter={suffixSelector} style={{ width: '100%', }} />\r\n        </Form.Item>\r\n        {/* <Form.Item\r\n          name=\"certificacion\"\r\n          label=\"Certificacion\"\r\n          rules={[{ required: true, message: 'Ingresa tu certificacion' }]}\r\n        >\r\n          <Input />\r\n        </Form.Item> */}\r\n        {/* <Form.Item\r\n          name=\"universidad\"\r\n          label=\"Universidad\" rules={[{ required: true, message: 'Ingresa tu universidad' }]} >\r\n          <Input />\r\n        </Form.Item> */}\r\n\r\n        <Form.Item >\r\n          <Button type=\"primary\" htmlType=\"submit\">\r\n            Registrar\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Spin } from 'antd';\r\n\r\nexport default function Loading() {\r\n    return (\r\n        <div style={{\r\n            margin: '20px 0',\r\n            marginBottom: '20px',\r\n            padding: '30px 50px',\r\n            textAlign: 'center',\r\n            background: 'rgba(0, 0, 0, 0.05)',\r\n            borderRadius: '4px',\r\n        }}>\r\n            <Spin />\r\n        </div >\r\n    )\r\n}\r\n","import React, { Component, useState, useEffect } from 'react'\r\nimport { Table } from 'antd'\r\nimport { API } from '../../resources'\r\nimport Loading from '../../loading'\r\nimport { usuario } from '../../resources'\r\n\r\n\r\nexport default function Dash() {\r\n\r\n  const [pacientesData, setPacientesData] = useState([])\r\n  const [isLoading, setIsLoading] = useState(true)\r\n  const [view, setview] = useState('tabla')\r\n  const views = {\r\n    'tabla': 'tabla'\r\n  }\r\n\r\n  useEffect(() => {\r\n    getPacientesData()\r\n  }, [])\r\n\r\n  const getPacientesData = () => {\r\n    fetch(API + `mispacientes/${usuario._id}`)\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        console.log(data); setPacientesData(data);\r\n      })\r\n      .finally(() => setIsLoading(false))\r\n  }\r\n\r\n  const columns = [\r\n    {\r\n      title: 'Nombre',\r\n      dataIndex: 'name',\r\n      key: 'name',\r\n      render: (text)=><a href=\"detalles\">{text}</a>\r\n    },\r\n    // {\r\n    //   title: 'Edad',\r\n    //   dataIndex: 'age',\r\n    //   key: 'age',\r\n    // },\r\n    {\r\n      title: 'Medico',\r\n      dataIndex: 'id_medicoasignado',\r\n      key: 'id_medicoasignado',\r\n    },\r\n    {\r\n      title: 'Municipio',\r\n      dataIndex: 'municipio',\r\n      key: 'municipio',\r\n    },\r\n    {\r\n      title: 'Calle',\r\n      dataIndex: 'calle',\r\n      key: 'calle',\r\n    },\r\n    {\r\n      title: 'N Exterior',\r\n      dataIndex: 'numexterior',\r\n      key: 'numexterior',\r\n    },\r\n    {\r\n      title: 'Telefono',\r\n      dataIndex: 'telefono',\r\n      key: 'telefono',\r\n    },\r\n\r\n  ];\r\n\r\n  const tablaPacientes = () => {\r\n\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h4>Pacientes</h4>\r\n      {\r\n        isLoading ? <Loading /> :\r\n          <Table dataSource={pacientesData} columns={columns} />\r\n      }\r\n      \r\n    </div>\r\n  )\r\n\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Button, Form, Input, Select, message } from 'antd';\r\nimport { API } from '../../resources';\r\nimport { usuario } from '../../resources';\r\nconst { Option } = Select;\r\n\r\n\r\nexport default function MovePatients() {\r\n    const [pacientesData, setPacientesData] = useState([]);\r\n    const [medicosData, setMedicosData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        getPacientesData()\r\n        getMedicosData()\r\n    }, [])\r\n\r\n    const getPacientesData = () => {\r\n        fetch(API + `mispacientes/${usuario._id}`)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log(\"Pacientes: \", data);\r\n                setPacientesData(data);\r\n                // setILoading(false);\r\n            });\r\n    }\r\n\r\n    const getMedicosData = () => {\r\n        fetch(API + `users_by_rol/Medico`)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log(data);\r\n                setMedicosData(data);\r\n                // setILoading(false);\r\n            });\r\n    }\r\n\r\n    const onFinish = (values) => {\r\n        // console.log('Valores:', values);\r\n        const userFound = pacientesData.find(p => p._id === values.id_usuario);\r\n        let userMedicos = userFound.medicos_asignados;\r\n        userMedicos.push(values.medico);\r\n        const postBody = { medicos_asignados: userMedicos }\r\n        fetch(API + `users/updateMedicos/${values.id_usuario}`, { \r\n            method: 'PUT',\r\n            body: JSON.stringify(postBody),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }).then(res => res.json())\r\n            .then(response => { console.log('Success:', response); message.success(response.message || response.error); })\r\n            .catch(error => console.error('Error:', error))\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n\r\n\r\n    //Select paciente widget\r\n    function onChange(value) {\r\n        console.log(`selected ${value}`);\r\n    }\r\n    function onSearch(val) {\r\n        console.log('search:', val);\r\n    }\r\n    //End of select paciente widget\r\n    return (\r\n        <div>\r\n            <h4> Asignar pacientes a otro médico </h4>\r\n            <br />\r\n            <Form name=\"expediente\" labelCol={{ span: 8 }} wrapperCol={{ span: 12 }} onFinish={onFinish} onFinishFailed={onFinishFailed} autoComplete=\"off\" >\r\n\r\n                <Form.Item label=\"Paciente\" name=\"id_usuario\" rules={[{ required: true, message: 'Selecciona Usuario' }]} >\r\n                    <Select\r\n                        showSearch\r\n                        placeholder=\"Select a person\"\r\n                        optionFilterProp=\"children\"\r\n                        onChange={onChange}\r\n                        onSearch={onSearch}\r\n                    >\r\n                        {\r\n                            pacientesData.map(p => <Option value={p._id}>{p.name}</Option>)\r\n                        }\r\n                    </Select>\r\n                </Form.Item>\r\n                <Form.Item label=\"Medico\" name=\"medico\" rules={[{ required: true, message: 'Ingresa RFC' }]} >\r\n                    <Select\r\n                        showSearch\r\n                        placeholder=\"Select a person\"\r\n                        optionFilterProp=\"children\"\r\n                        onChange={onChange}\r\n                        onSearch={onSearch}\r\n                    >\r\n                        {\r\n                            medicosData.map(p => <Option value={p._id}>{p.name}</Option>)\r\n                        }\r\n                    </Select>\r\n                </Form.Item>\r\n\r\n                <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\r\n                    <Button type=\"primary\" htmlType=\"submit\" form='expediente'>\r\n                        Guardar\r\n                    </Button>\r\n                </Form.Item>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function DetallesPaciente() {\r\n  return (\r\n    <div>DetallesPaciente</div>\r\n  )\r\n}\r\n","import { React, Component } from 'react';\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\nimport { Layout, Menu } from 'antd';\r\nimport { UserOutlined, UserAddOutlined, MenuOutlined, SwapOutlined } from '@ant-design/icons';\r\n\r\nimport Register from './register.patient';\r\nimport Dash from './dash.patients';\r\nimport MovePatients from './move.patients';\r\nimport DetallesPaciente from './detalles.paciente';\r\n\r\nconst { Header, Content, Footer, Sider } = Layout;\r\n\r\nclass SideMenu extends Component {\r\n  handleClick = e => {\r\n    console.log('click ', e);\r\n  };\r\n\r\n  state = {\r\n    collapsed: false,\r\n  };\r\n\r\n  onCollapse = (collapsed) => {\r\n    this.setState({ collapsed });\r\n  }\r\n  toggle = () => {\r\n    this.setState({\r\n      collapsed: !this.state.collapsed,\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <Layout style={{ minHeight: '100vh' }}>\r\n          <Sider\r\n            theme=\"light\"\r\n            collapsible\r\n            collapsed={this.state.collapsed}\r\n            onCollapse={this.onCollapse}>\r\n            <div className=\"logo\" />\r\n            <Menu defaultSelectedKeys={['1']} mode=\"inline\">\r\n              <Menu.Item icon={ <UserOutlined /> } key=\"1\">\r\n                <span>Pacientes</span>\r\n                <Link to=\"/pacientes\" />\r\n              </Menu.Item>\r\n              <Menu.Item icon={ <UserAddOutlined /> } key=\"2\">\r\n                <span>Registrar Paciente</span>\r\n                <Link to=\"/registrar\" />\r\n              </Menu.Item>\r\n              <Menu.Item icon={ <SwapOutlined />} key=\"3\">\r\n                <span>Re-asignar Paciente</span>\r\n                <Link to=\"/mover\" />\r\n              </Menu.Item>\r\n              <Menu.Item icon={ <SwapOutlined />} key=\"4\">\r\n                <span>Detalles</span>\r\n                <Link to=\"/detalles\" />\r\n              </Menu.Item>\r\n            </Menu>\r\n          </Sider>\r\n          <Layout>\r\n\r\n            <Header style={{ background: '#fff', padding: 0, paddingLeft: 16 }}>\r\n              <MenuOutlined className=\"trigger\" style={{ cursor: 'pointer' }} onClick={this.toggle} />\r\n            </Header>\r\n\r\n            <Content style={{ margin: '24px 16px', padding: 24, background: '#fff', minHeight: 280 }}>\r\n              <Route exact path=\"/registrar\" component={Register} />\r\n              <Route path=\"/pacientes\" component={Dash} />\r\n              <Route path=\"/detalles\" component={DetallesPaciente} />\r\n              <Route path=\"/mover\" component={MovePatients} />\r\n            </Content>\r\n\r\n            <Footer style={{ textAlign: 'center' }}>\r\n              RECREAMED ©2021 Created by Realidad Creativa\r\n            </Footer>\r\n          </Layout>\r\n\r\n        </Layout>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SideMenu\r\n\r\n\r\n","import React, { Component } from 'react'\r\n// import {Card } from 'antd'\r\nimport SideMenu from './side.patients';\r\n\r\nexport class Patients extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div>\r\n                            <SideMenu />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Patients\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Table, Space, Row, Col, Button, Modal, Form, Input, message, DatePicker } from 'antd';\r\nimport { Calendar, Badge } from 'antd';\r\nimport { API, getData } from '../resources';\r\nimport { usuario } from '../resources';\r\nimport Loading from '../loading'\r\n// import { API } from '../resources'\r\n\r\nexport function Citas() {\r\n    const [isModalVisible, setIsModalVisible] = useState(false);\r\n    const [citasData, setCitasData] = useState([])\r\n    const [isLoading, setIsLoading] = useState(true)\r\n\r\n    useEffect(() => {\r\n        getCitasData()\r\n        // getData(`receta/${props.receta}`).then(rs => { setRecetaData(rs); setRecetaLoading(false) })\r\n\r\n    }, [])\r\n\r\n    const getCitasData = () => {\r\n        fetch(API + `citas/medico/${usuario._id}`)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log(data); setCitasData(data);\r\n            })\r\n            .finally(() => setIsLoading(false))\r\n    }\r\n\r\n    const showModal = () => {\r\n        setIsModalVisible(true);\r\n    };\r\n\r\n    const handleOk = () => {\r\n        setIsModalVisible(false);\r\n    };\r\n\r\n    const handleCancel = () => {\r\n        setIsModalVisible(false);\r\n    };\r\n    const columns = [\r\n        {\r\n            title: 'Fecha y Hora',\r\n            dataIndex: 'fecha_hora',\r\n            key: 'fecha_hora',\r\n            render: text => <a>{text}</a>,\r\n        },\r\n        {\r\n            title: 'Paciente',\r\n            dataIndex: 'id_usuario',\r\n            key: 'id_usuario',\r\n        },\r\n        {\r\n            title: 'Sucursal',\r\n            dataIndex: 'id_sucursal',\r\n            key: 'v',\r\n        },\r\n        {\r\n            title: 'Comentarios',\r\n            dataIndex: 'comentarios',\r\n            key: 'comentarios',\r\n        },\r\n        {\r\n            title: 'Detalles',\r\n            key: 'detalles',\r\n            render: (text, record) => (\r\n                <Space size=\"middle\">\r\n                    {/* <a href>Enlace</a> */}\r\n                    <Button>Enlace</Button>\r\n                </Space>\r\n            ),\r\n        },\r\n    ];\r\n\r\n    const onFinish = (values) => {\r\n        values.medico = usuario._id;\r\n        console.log('Valores:', values);\r\n        fetch(API + 'citas/add', {\r\n            method: 'POST',\r\n            body: JSON.stringify(values),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }).then(res => res.json())\r\n            .then(response => { console.log('Success:', response); message.success(response.message || response.error); })\r\n            .catch(error => console.error('Error:', error))\r\n            .finally(() => { getCitasData(); setIsModalVisible(false) })\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    // DatePicker\r\n    function onChange(value, dateString) {\r\n        console.log('Selected Time: ', value);\r\n        console.log('Formatted Selected Time: ', dateString);\r\n    }\r\n    function onOk(value) {\r\n        console.log('onOk: ', value);\r\n    }\r\n\r\n    //Calendar Functions\r\n    const getMonthData = (value) => {\r\n        if (value.month() === 8) {\r\n            return 1394;\r\n        }\r\n    };\r\n    const monthCellRender = (value) => {\r\n        const num = getMonthData(value);\r\n        return num ? (\r\n            <div className=\"notes-month\">\r\n                <section>{num}</section>\r\n                <span>Backlog number</span>\r\n            </div>\r\n        ) : null;\r\n    };\r\n\r\n    const dateCellRender = (value) => {\r\n        // const hoy = value.format('L');\r\n        let hoy = value.format();\r\n        hoy = hoy.substring(0, 10)\r\n        return (\r\n            <ul className=\"events\">\r\n                {citasData.map((cita) => {\r\n\r\n                    cita.fecha_hora = cita.fecha_hora.substring(0, 10);\r\n                    return cita.fecha_hora === hoy ?\r\n                        <li style={{ listStyleType: 'none' }} key={cita._id}>\r\n                            <Badge status='success' text={cita.usuario.name} />\r\n                        </li>\r\n                        : <></>\r\n\r\n                })\r\n                }\r\n            </ul >\r\n        );\r\n    };\r\n\r\n    return (\r\n        <div className='mainContainer'>\r\n            <Row>\r\n                <Col span={8}><h4>CALENDARIO DE CITAS</h4></Col>\r\n                <Col>\r\n                    <Button type=\"primary\" onClick={showModal}>\r\n                        Nueva Cita\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n\r\n            {/* {isLoading ? <Loading /> : <Table columns={columns} dataSource={citasData} />} */}\r\n\r\n            <Calendar dateCellRender={dateCellRender} monthCellRender={monthCellRender} />\r\n\r\n\r\n\r\n            <Modal title=\"Nuevo expediente\" visible={isModalVisible} onOk={handleOk} onCancel={handleCancel}>\r\n                <Form name=\"expediente\" labelCol={{ span: 8 }} wrapperCol={{ span: 12 }} onFinish={onFinish} onFinishFailed={onFinishFailed} autoComplete=\"off\" >\r\n\r\n                    <Form.Item label=\"Paciente\" name=\"usuario\" rules={[{ required: true, message: 'Ingresa RFC' }]} >\r\n                        <Input />\r\n                    </Form.Item>\r\n                    <Form.Item label=\"Sucursal\" name=\"sucursal\" rules={[{ required: true, message: 'Ingresa RFC' }]} >\r\n                        <Input />\r\n                    </Form.Item>\r\n                    <Form.Item label=\"Fecha y Hora\" name=\"fecha_hora\" rules={[{ required: true, message: 'Selecciona Fecha y Hora' }]} >\r\n                        <DatePicker showTime onChange={onChange} onOk={onOk} placeholder='Selecciona Fecha y Hora' />\r\n                    </Form.Item>\r\n                    <Form.Item label=\"Enlace a la reunion\" name=\"id_reunion\" rules={[{ required: true, message: 'Ingresa RFC' }]} >\r\n                        <Input />\r\n                    </Form.Item>\r\n                    <Form.Item label=\"Contraseña\" name=\"password_reunion\" rules={[{ required: true, message: 'Ingresa RFC' }]} >\r\n                        <Input placeholder='Opcional' />\r\n                    </Form.Item>\r\n                    <Form.Item label=\"Comentarios\" name=\"comentarios\" rules={[{ required: true, message: 'Ingresa RFC' }]} >\r\n                        <Input />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\r\n                        <Button type=\"primary\" htmlType=\"submit\" form='expediente'>\r\n                            Guardar\r\n                        </Button>\r\n                    </Form.Item>\r\n                </Form>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { API, getDataWithTrigger } from '../../resources';\r\nimport { getData } from '../../resources';\r\nimport { Button, Modal, Form, Input, Select, message } from 'antd';\r\nconst { Option } = Select;\r\n\r\nexport default function CreateExpedient(props) {\r\n    //PacientesData ya viene en props\r\n    const [historiasData, sethistoriasData] = useState([])\r\n    const [historiasLoading, sethistoriasLoading] = useState(true)\r\n    const [notasData, setNotasData] = useState([])\r\n    const [notasLoading, setNotasLoading] = useState(true)\r\n    const [recetasData, setRecetasData] = useState([])\r\n    const [recetasLoading, setRecetasLoading] = useState(true)\r\n\r\n    useEffect(() => {\r\n        getData('historias').then(rs => {sethistoriasData(rs); sethistoriasLoading(false)});\r\n        getData('notas').then(rs => {setNotasData(rs); setNotasLoading(false)});\r\n        getData('recetas').then(rs => {setRecetasData(rs); setRecetasLoading(false)});\r\n    }, [])\r\n\r\n\r\n    //Save expedient\r\n    const onFinish = (values) => {\r\n        console.log('Valores:', values);\r\n        fetch(API + 'expedientes/add', {\r\n            method: 'POST',\r\n            body: JSON.stringify(values),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }).then(res => res.json())\r\n            .then(response => { console.log('Success:', response); message.success(response.message || response.error); })\r\n            .catch(error => console.error('Error:', error))\r\n        // getExpedientesData() \r\n    };\r\n    const handleOk = () => {\r\n\r\n    };\r\n\r\n    const handleCancel = () => {\r\n        props.setIsModalVisible(false);\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n    return (\r\n        <Modal title=\"Nuevo expediente\" visible={props.isModalVisible} onCancel={handleCancel}>\r\n            <Form name=\"expediente\" labelCol={{ span: 6 }} wrapperCol={{ span: 12 }} onFinish={onFinish} onFinishFailed={onFinishFailed} autoComplete=\"off\" >\r\n                <Form.Item label=\"Paciente\" name=\"usuario\" rules={[{ required: true, message: 'Ingresa RFC' }]} >\r\n                    <Select\r\n                        defaultValue={props.pacientesData[0] && props.pacientesData[0]._id}\r\n                        placeholder='Selecciona un paciente'\r\n                        style={{ width: 200 }}\r\n                    // onChange={handleChange}\r\n                    >\r\n                        {\r\n                            props.pacientesData.map(p => <Option value={p._id}>{p.name}</Option>)\r\n                        }\r\n\r\n                    </Select>\r\n                </Form.Item>\r\n                <Form.Item label=\"Historia Clinica\" name=\"historia\" rules={[{ required: true, message: 'Ingresa RFC' }]} >\r\n                    {\r\n                        historiasLoading ? <Input /> :\r\n                            <Select\r\n                                placeholder='Selecciona una Historia'\r\n                                style={{ width: 200 }}\r\n                            // onChange={handleChange}\r\n                            >\r\n                                {\r\n                                   historiasData.map(h => <Option key={h._id} value={h._id}>{h.historial}</Option>)\r\n                                }\r\n\r\n                            </Select>\r\n                    }\r\n\r\n                </Form.Item>\r\n                <Form.Item label=\"Notas Medicas\" name=\"nota\" rules={[{ required: true, message: 'Ingresa RFC' }]} >\r\n                {\r\n                        notasLoading ? <Input /> :\r\n                            <Select\r\n                                placeholder='Selecciona una Nota'\r\n                                style={{ width: 200 }}\r\n                            // onChange={handleChange}\r\n                            >\r\n                                {\r\n                                   notasData.map(n => <Option key={n._id} value={n._id}>{n.createdAt}</Option>)\r\n                                }\r\n\r\n                            </Select>\r\n                    }\r\n                </Form.Item>\r\n                <Form.Item label=\"Receta\" name=\"receta\" rules={[{ required: true, message: 'Ingresa RFC' }]} >\r\n                {\r\n                        recetasLoading ? <Input /> :\r\n                            <Select\r\n                                placeholder='Selecciona una Receta'\r\n                                style={{ width: 200 }}\r\n                            // onChange={handleChange}\r\n                            >\r\n                                {\r\n                                   recetasData.map(r => <Option key={r._id} value={r._id}>{r.prescripcion}</Option>)\r\n                                }\r\n\r\n                            </Select>\r\n                    }\r\n                </Form.Item>\r\n\r\n                <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\r\n                    <Button type=\"primary\" htmlType=\"submit\" form='expediente'>\r\n                        Guardar\r\n                    </Button>\r\n                </Form.Item>\r\n            </Form>\r\n        </Modal>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Form, Input, Button, Select, message } from 'antd';\r\nimport { API, usuario } from '../../resources';\r\nimport { MinusCircleOutlined, PlusOutlined } from '@ant-design/icons';\r\nconst { Option } = Select;\r\n\r\nconst onFinish = (values) => {\r\n    console.log('Form values:', values);\r\n    values.id_medico = usuario._id;\r\n\r\n    console.log(values)\r\n    fetch(API + 'notas/add', {\r\n        method: 'POST',\r\n        body: JSON.stringify(values),\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    }).then(res => res.json())\r\n        .then(response => {\r\n            console.log('Success:', response);\r\n            message.success(response.message || response.error);\r\n        })\r\n        .catch(error => console.error('Error:', error))\r\n};\r\n\r\nconst onFinishFailed = (errorInfo) => {\r\n    console.log('Failed:', errorInfo);\r\n};\r\n\r\n//Select paciente widget\r\nfunction onChange(value) {\r\n    console.log(`selected ${value}`);\r\n}\r\nfunction onSearch(val) {\r\n    console.log('search:', val);\r\n}\r\n//End of select paciente widget\r\n\r\n//List of Estudios styles\r\nconst formItemLayout = {\r\n    labelCol: {\r\n        xs: {\r\n            span: 24,\r\n        },\r\n        sm: {\r\n            span: 4,\r\n        },\r\n    },\r\n    wrapperCol: {\r\n        xs: {\r\n            span: 24,\r\n        },\r\n        sm: {\r\n            span: 20,\r\n        },\r\n    },\r\n};\r\nconst formItemLayoutWithOutLabel = {\r\n    wrapperCol: {\r\n        xs: {\r\n            span: 24,\r\n            offset: 0,\r\n        },\r\n        sm: {\r\n            span: 20,\r\n            offset: 4,\r\n        },\r\n    },\r\n};\r\n\r\nexport function NuevaNota() {\r\n    const [pacientesData, setPacientesData] = useState([]);\r\n\r\n    useEffect(() => { getPacientes() }, [])\r\n\r\n    function getPacientes() {\r\n        fetch(API + 'mispacientes/' + usuario._id)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log(data);\r\n                setPacientesData(data);\r\n            });\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h4 style={{ marginLeft: 20 }}>Detalles de la nota</h4>\r\n            *La nota lleva el id del medico, obtenido de la sesion\r\n            <br />\r\n            <Form name=\"basic\" labelCol={{ span: 8 }} wrapperCol={{ span: 10 }} initialValues={{ remember: true, estudios: [] }} onFinish={onFinish} onFinishFailed={onFinishFailed} autoComplete=\"off\" >\r\n                {/* <Form.Item label=\"Paciente\" name=\"id_paciente\" rules={[{ required: true, message: 'Ingresa RFC' }]} >\r\n                    <Input />\r\n                </Form.Item> */}\r\n                <Form.Item label=\"Paciente\" name=\"id_usuario\" rules={[{ required: true, message: 'Ingresa RFC' }]} >\r\n                    <Select\r\n                        showSearch\r\n                        placeholder=\"Select a person\"\r\n                        optionFilterProp=\"children\"\r\n                        onChange={onChange}\r\n                        onSearch={onSearch}\r\n                    // filterOption={(input, option) =>\r\n                    //     option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n                    // }\r\n                    >\r\n                        {\r\n                            pacientesData.map(p => <Option value={p._id}>{p.name}</Option>)\r\n                        }\r\n                    </Select>\r\n                </Form.Item>\r\n                <Form.Item label=\"Edad\" name=\"edad\" rules={[{ required: true, message: 'Ingresa RFC' }]} >\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item label=\"Talla\" name=\"talla\" rules={[{ required: true, message: 'Ingresa RFC' }]} >\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item label=\"Peso\" name=\"peso\" rules={[{ required: true, message: 'Ingresa RFC' }]} >\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item label=\"IMC\" name=\"imc\" rules={[{ required: true, message: 'Ingresa RFC' }]} >\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item label=\"Temperatura\" name=\"temperatura\" rules={[{ required: true, message: 'Ingresa RFC' }]} >\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item label=\"Presion Arterial\" name=\"presion_arterial\" rules={[{ required: true, message: 'Ingresa RFC' }]} >\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item label=\"Frecuencia Cariaca\" name=\"frecuencia_cardiaca\" rules={[{ required: true, message: 'Ingresa RFC' }]} >\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item label=\"Frecuencia respiratoria\" name=\"frecuencia_respiratoria\" rules={[{ required: true, message: 'Ingresa RFC' }]} >\r\n                    <Input />\r\n                </Form.Item>\r\n\r\n                {/* <Form.Item label=\"Estudios\" name=\"estudios\" rules={[{ required: true, message: 'Ingresa RFC' }]} >\r\n                    <Input />\r\n                </Form.Item> */}\r\n                <Form.List\r\n                    name=\"estudios\"\r\n                    rules={[\r\n                        {\r\n                            validator: async (_, names) => {\r\n                                if (!names || names.length < 1) {\r\n                                    return Promise.reject(new Error('Ingresa al menos un estudio'));\r\n                                }\r\n                            },\r\n                        },\r\n                    ]}\r\n                >\r\n                    {(fields, { add, remove }, { errors }) => (\r\n                        <>\r\n                            {fields.map((field, index) => (\r\n                                <Form.Item\r\n                                    {...(index === 0 ? formItemLayout : formItemLayoutWithOutLabel)}\r\n                                    label={index === 0 ? 'Estudio' : ''}\r\n                                    required={false}\r\n                                    key={field.key}\r\n                                >\r\n                                    <Form.Item\r\n                                        {...field}\r\n                                        validateTrigger={['onChange', 'onBlur']}\r\n                                        rules={[\r\n                                            {\r\n                                                required: true,\r\n                                                whitespace: true,\r\n                                                message: \"Ingresa estudios\",\r\n                                            },\r\n                                        ]}\r\n                                        noStyle\r\n                                    >\r\n                                        <Input\r\n                                            placeholder=\"Detalles del estudio\"\r\n                                            style={{ width: '60%' }}\r\n                                        />\r\n                                    </Form.Item>\r\n                                    {fields.length > 1 ? (\r\n                                        <MinusCircleOutlined\r\n                                            className=\"dynamic-delete-button\"\r\n                                            onClick={() => remove(field.name)}\r\n                                        />\r\n                                    ) : null}\r\n                                </Form.Item>\r\n                            ))}\r\n                            <Form.Item>\r\n                                <Button\r\n                                    type=\"dashed\"\r\n                                    onClick={() => add()}\r\n                                    style={{\r\n                                        width: '60%',\r\n                                        position: 'relative',\r\n                                        alignItems: 'center',\r\n                                        justifyContent: 'center'\r\n                                    }}\r\n                                    icon={<PlusOutlined />}\r\n                                >\r\n                                    Add field\r\n                                </Button>\r\n                                <Form.ErrorList errors={errors} />\r\n                            </Form.Item>\r\n                        </>\r\n                    )}\r\n                </Form.List>\r\n\r\n                <Form.Item label=\"Observaciones\" name=\"Observaciones\" rules={[{ required: true, message: 'Ingresa RFC' }]} >\r\n                    <Input />\r\n                </Form.Item>\r\n\r\n                <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\r\n                    <Button type=\"primary\" htmlType=\"submit\">\r\n                        Guardar\r\n                    </Button>\r\n                </Form.Item>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Card, Space, Button } from 'antd';\r\nimport { getData } from '../../resources';\r\nimport { PlusOutlined, FormOutlined } from '@ant-design/icons';\r\nimport { NuevaNota } from './nuevaNota';\r\n\r\nexport default function DetalleNota(props) {\r\n\r\n    const [notaData, setNotaData] = useState(\"\")\r\n    const [notaLoading, setnotaLoading] = useState(true)\r\n    const [editing, setEditing] = useState(false)\r\n    const [view, setView] = useState('detalles')\r\n\r\n\r\n    useEffect(() => {\r\n        console.log(\"Props IDNota: \", props.nota)\r\n        props.nota ?\r\n            getData(`nota/${props.nota}`).then(rs => { setNotaData(rs); setnotaLoading(false) })\r\n            :\r\n            finifhGet()\r\n    }, [props.nota])\r\n\r\n    const finifhGet = () => { setNotaData([]); setnotaLoading(false); }\r\n\r\n\r\n    const gridStyle = {\r\n        width: '50%',\r\n        height: '40',\r\n        textAlign: 'center',\r\n        display: 'inline-flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center'\r\n    };\r\n\r\n    const NotaView = () => {\r\n        switch (view) {\r\n            case 'detalles':\r\n                return <>{\r\n                    notaData.length > 0 ?\r\n                        Object.keys(notaData[0]).map(k => {\r\n                            return <><Card.Grid key={k} style={gridStyle}>{k}</Card.Grid><Card.Grid style={gridStyle} size='small'>{notaData[0][k]}</Card.Grid></>\r\n                        })\r\n                        :\r\n                        <h6>No hay una nota asignada</h6>\r\n                }</>\r\n            case 'adding':\r\n                return <>Adding\r\n                <NuevaNota/>\r\n                    <Button onClick={() => setView('detalles')} >Cancelar</Button>\r\n                </>\r\n            case 'editing':\r\n                return <>Editing\r\n                    <Button onClick={() => setView('detalles')} >Cancelar</Button>\r\n                </>\r\n            default:\r\n                <>Notas del paciente</>\r\n        }\r\n    }\r\n\r\n    return <div>\r\n        <Card bordered={false}>\r\n            <Space>\r\n                <h5>Nota </h5>\r\n                <Button onClick={() => setView('adding')} size='small' type=\"primary\" shape=\"circle\" icon={<PlusOutlined />} />\r\n                <Button onClick={() => setView('editing')} size='small' type=\"primary\" shape=\"circle\" icon={<FormOutlined />} />\r\n            </Space>\r\n            {\r\n                notaLoading ? <h5>Cargando Nota...</h5> :\r\n                    <NotaView />\r\n            }\r\n        </Card>\r\n    </div>\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Card, Button, Row, Space } from 'antd';\r\nimport { getData } from '../../resources';\r\nimport { PlusOutlined, FormOutlined } from '@ant-design/icons';\r\n\r\nexport default function DetalleReceta(props) {\r\n\r\n    const [recetaData, setRecetaData] = useState(\"\")\r\n    const [recetaLoading, setRecetaLoading] = useState(true)\r\n    const [editing, setEditing] = useState(false)\r\n\r\n    useEffect(() => {\r\n        console.log(\"Props IDReceta: \", props.receta)\r\n        props.receta ?\r\n            getData(`receta/${props.receta}`).then(rs => { setRecetaData(rs); setRecetaLoading(false) })\r\n            :\r\n            finifhGet()\r\n\r\n    }, [props.receta])\r\n\r\n    const finifhGet = () => { setRecetaData([]); setRecetaLoading(false); }\r\n\r\n    const gridStyle = {\r\n        width: '50%',\r\n        height: '40',\r\n        textAlign: 'center',\r\n        display: 'inline-flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center'\r\n    };\r\n\r\n    return <div>\r\n        <Card bordered={false}>\r\n            <Space>\r\n                <h5>Receta </h5> \r\n                <Button onClick={() => setEditing(true)} size='small' type=\"primary\" shape=\"circle\" icon={<FormOutlined />} />\r\n            </Space>\r\n            {\r\n                recetaLoading ? <h5>Cargando Receta...</h5> :\r\n                    recetaData.length > 0 ?\r\n                        Object.keys(recetaData[0]).map(k => {\r\n                            return <><Card.Grid key={k} style={gridStyle}>{k}</Card.Grid><Card.Grid style={gridStyle} size='small'>{recetaData[0][k]}</Card.Grid></>\r\n                        })\r\n                        :\r\n                        <h6>No hay una nota asignada</h6>\r\n            }\r\n        </Card>\r\n    </div>\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Card, Space, Button, Input, Form} from 'antd';\r\nimport { getData } from '../../resources';\r\nimport {  FormOutlined } from '@ant-design/icons';\r\n\r\nexport default function DetalleHistoria(props) {\r\n\r\n    const [historiaData, setHistoriaData] = useState(\"\")\r\n    const [notaLoading, setHistoriaLoading] = useState(true)\r\n    const [editing, setEditing] = useState(false)\r\n\r\n    useEffect(() => {\r\n        console.log(\"Props IDHistoria: \", props.historia)\r\n        props.historia ?\r\n            getData(`historia/${props.historia}`).then(rs => { console.log(\"Historia response: \", rs); setHistoriaData(rs); setHistoriaLoading(false) })\r\n            :\r\n            finifhGet()\r\n    }, [props.historia])\r\n\r\n    const finifhGet = () => { setHistoriaData([]); setHistoriaLoading(false); }\r\n\r\n    const gridStyle = {\r\n        // width: '50%',\r\n        // height: '40',\r\n        textAlign: 'center',\r\n        // display: 'inline-flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        marginTop: 15\r\n    };\r\n\r\n    const HistoriaDetails = () => {\r\n        return editing ?  <><Input value={historiaData[0].historial}/><br/><Button onClick={() => setEditing(false)}>Guardar</Button></> : <Card style={gridStyle} size='small'>{historiaData[0].historial}</Card>  \r\n    }\r\n\r\n\r\n    return <div>\r\n        <Card bordered={false}>\r\n            <Space>\r\n                <h5>Historia </h5>\r\n                <Button onClick={() => setEditing(true)} size='small' disabled={!props.historia} type=\"primary\" shape=\"circle\" icon={<FormOutlined />} />\r\n            </Space>\r\n            {\r\n                notaLoading ? <h5>Cargando Historia...</h5> :\r\n                    historiaData.length > 0 ?\r\n\r\n                        // Object.keys(historiaData[0]).map(k => {\r\n                        //     return <><Card.Grid key={k} style={gridStyle}>{k}</Card.Grid><Card.Grid style={gridStyle} size='small'>{historiaData[0][k]}</Card.Grid></>\r\n                        // })\r\n                            <HistoriaDetails/>                   \r\n                        :\r\n                        <h6>No hay una historia asignada</h6>\r\n            }\r\n        </Card>\r\n    </div>\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Table, Row, Col, Button, message, Select } from 'antd';\r\nimport { API } from '../../resources';\r\nimport { usuario } from '../../resources';\r\nimport Loading from '../../loading';\r\nimport CreateExpedient from './createExpedient';\r\nimport DetalleNota from './detalleNota'\r\nimport DetalleReceta from './detalleReceta';\r\nimport DetalleHistoria from './detalleHistoria';\r\n\r\nconst { Option } = Select;\r\n\r\nexport default function Expedientes(props) {\r\n    const [isModalVisible, setIsModalVisible] = useState(false);\r\n    const [detailModalVisible, setDetailModalVisible] = useState(false);\r\n    const [expedientesData, setExpedientesData] = useState([]);\r\n    const [expedientesLoading, setExpedientesLoading] = useState(true);\r\n    const [pacientesData, setPacientesData] = useState([]);\r\n    const [pacientesLoading, setPacientesLoading] = useState(true);\r\n    const [pacienteSelected, setPacienteSelected] = useState(\"Ninguno\");\r\n    const [historia, setHistoria] = useState(\"\");\r\n    const [nota, setNota] = useState(\"\");\r\n    const [receta, setReceta] = useState(\"\");\r\n\r\n\r\n    function handleChange(value) {\r\n        setPacienteSelected(value);\r\n        getExpedientesData(value)\r\n    }\r\n    // useEffect(() => {\r\n    //     console.log('Patient received: ', props.paciente)\r\n    //     getPacientesData()\r\n    // }, [])\r\n\r\n    useEffect(() => {\r\n        setPacienteSelected(props.paciente);\r\n        getExpedientesData(props.paciente)\r\n    }, [props.paciente])\r\n\r\n\r\n    const getExpedientesData = (id_paciente) => {\r\n        fetch(API + `expedientes/${id_paciente}`)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log(\"GetExpData: \", data);\r\n                setExpedientesData(data);\r\n                if (typeof data != \"undefined\") {\r\n                    setNota(data.nota); setReceta(data.receta); setHistoria(data.historia);\r\n                } else { setNota(null); setReceta(null); setHistoria(null) }\r\n            })\r\n            .finally(() => setExpedientesLoading(false))\r\n    }\r\n\r\n    // const getPacientesData = () => {\r\n    //     fetch(API + `mispacientes/${usuario._id}`)\r\n    //         .then(response => response.json())\r\n    //         .then(data => {\r\n    //             console.log(\"Pacientes: \", data); setPacientesData(data);\r\n    //         })\r\n    //         .finally(() => setPacientesLoading(false))\r\n    // }\r\n\r\n    const showModal = () => { setIsModalVisible(true); };\r\n    const showDetailModal = () => { setDetailModalVisible(true); };\r\n\r\n\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Paciente',\r\n            dataIndex: 'usuario',\r\n            key: 'Paciente',\r\n        },\r\n        {\r\n            title: 'Historia Clinica',\r\n            dataIndex: 'historia',\r\n            key: 'historiaClinica',\r\n            render: (text, rec) => <Button onClick={setHistoria(rec)}>Detalle Historia</Button>,\r\n        },\r\n        {\r\n            title: 'Notas Medicas',\r\n            dataIndex: 'nota',\r\n            key: 'notasMedicas',\r\n            render: (text, rec) => <Button onClick={() => { setNota(rec._id); showDetailModal() }}>Detalle Nota</Button>,\r\n\r\n        },\r\n        {\r\n            title: 'Receta',\r\n            dataIndex: 'receta',\r\n            key: 'receta',\r\n        }\r\n    ];\r\n\r\n\r\n\r\n    return <div className=\"mainContainer\">\r\n        <Row>\r\n            {/* <Col span={16} > */}\r\n            <h4>Expediente {props.paciente}</h4>\r\n            {/* </Col> */}\r\n            {/* <Col>\r\n                <Button type=\"primary\" onClick={showModal}>\r\n                    Nuevo expediente\r\n                </Button>\r\n            </Col> */}\r\n        </Row>\r\n        {/* {\r\n            pacientesLoading ? <Loading /> :\r\n                <Select\r\n                    defaultValue={pacientesData && pacientesData[0]._id}\r\n                    placeholder='Selecciona un paciente'\r\n                    style={{ width: 200 }}\r\n                    onChange={handleChange}>\r\n                    {\r\n                        pacientesData.map(p => <Option nota={p.nota} value={p._id}>{p.name}</Option>)\r\n                    }\r\n                </Select>\r\n        } */}\r\n\r\n        {/* <h5>Paciente: {expedientesData[0] && expedientesData[0].usuario.name}</h5> */}\r\n\r\n\r\n        <Row>\r\n            <Col span={12} >\r\n                <DetalleHistoria historia={historia} />\r\n                <DetalleReceta receta={receta} />\r\n            </Col>\r\n            <Col span={12}>\r\n                <DetalleNota nota={nota} />\r\n            </Col>\r\n        </Row>\r\n\r\n\r\n        <CreateExpedient isModalVisible={isModalVisible} setIsModalVisible={setIsModalVisible} pacientesData={pacientesData} />\r\n\r\n    </div>;\r\n}\r\n","import React, { useState } from 'react'\r\nimport { Table, Tag, Space, Button, Modal } from 'antd';\r\n\r\n\r\nexport default function Recetas() {\r\n\r\n    const [isModalVisible, setIsModalVisible] = useState(false);\r\n    const showModal = () => {\r\n        setIsModalVisible(true);\r\n    };\r\n\r\n    const handleOk = () => {\r\n        setIsModalVisible(false);\r\n    };\r\n\r\n    const handleCancel = () => {\r\n        setIsModalVisible(false);\r\n    };\r\n    const columns = [\r\n        {\r\n            title: 'ID Receta',\r\n            dataIndex: 'key',\r\n            key: '_id',\r\n            render: text => <a>{text}</a>,\r\n        },\r\n        {\r\n            title: 'ID Nota',\r\n            dataIndex: 'id_nota',\r\n            key: 'id_nota',\r\n        },\r\n        {\r\n            title: 'Prescripcion',\r\n            dataIndex: 'prescripcion',\r\n            key: 'prescripcion',\r\n        },\r\n        {\r\n            title: 'Detalles',\r\n            key: 'action',\r\n            render: (text, record) => (\r\n                <Space size=\"middle\">\r\n                    <Button onClick={showModal}>Detalles</Button>\r\n                </Space>\r\n            ),\r\n        },\r\n    ];\r\n\r\n    const data = [\r\n        {\r\n            key: \"62570ab89a6437369f835be7\",\r\n            id_nota: \"62570a9a9a6437369f835be5\",\r\n            prescripcion: \"Paracetamol cada 8 horas\",\r\n            createdAt: \"2022-04-13T17:39:04.541Z\",\r\n            updatedAt: \"2022-04-13T17:39:04.541Z\",\r\n            __v: 0\r\n        },\r\n        {\r\n            key: \"62570ab89a6437369f835be8\",\r\n            id_nota: \"62570a9a9a6437369f835be5\",\r\n            prescripcion: \"Paracetamol cada 8 horas\",\r\n            createdAt: \"2022-04-13T17:39:04.541Z\",\r\n            updatedAt: \"2022-04-13T17:39:04.541Z\",\r\n            __v: 0\r\n        }\r\n    ];\r\n    return (\r\n        <div className='mainContainer'>\r\n            <h4>Recetas</h4>\r\n            <br/>\r\n            <br/>\r\n            <Button>Nueva Receta</Button>\r\n            \r\n            <Table columns={columns} dataSource={data} />\r\n\r\n            <Modal title=\"Basic Modal\" visible={isModalVisible} onOk={handleOk} onCancel={handleCancel}>\r\n\r\n                <p> _id\": \"62570ab89a6437369f835be7\",</p>\r\n                <p> id_nota\": \"62570a9a9a6437369f835be5\",</p>\r\n                <p> prescripcion\": \"Paracetamol cada 8 horas\",</p>\r\n                <p> createdAt\": \"2022-04-13T17:39:04.541Z\",</p>\r\n                <p> updatedAt\": \"2022-04-13T17:39:04.541Z\",</p>\r\n                <p> __v\": 0</p>\r\n\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Row, Col, Space, Button } from 'antd';\r\nimport { Avatar, Card } from 'antd';\r\nimport { UserOutlined } from '@ant-design/icons';\r\nimport { API } from '.././resources';\r\nimport Loading from '.././loading';\r\nimport { PlusOutlined, FormOutlined } from '@ant-design/icons';\r\n\r\n\r\nexport default function Perfil() {\r\n\r\n    const [profileData, setProfileData] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        getProfileData()\r\n    }, [])\r\n\r\n    const getProfileData = () => {\r\n        fetch(API + 'userByMail/medico@realidadcreativa.com')\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log(data);\r\n                setProfileData(data[0]);\r\n                setIsLoading(false);\r\n            });\r\n    }\r\n\r\n    const detailsProfile = () => {\r\n        return <>\r\n        </>\r\n    }\r\n\r\n    return (\r\n        <div className='mainContainer'>\r\n\r\n            <Space>\r\n                <h3>PERFIL</h3>\r\n                <Button type=\"primary\" shape=\"circle\" icon={<FormOutlined />} />\r\n            </Space>\r\n            {isLoading ? <Loading /> :\r\n                <Row>\r\n                    <Col span={8}>\r\n                        <Card>\r\n                            <Avatar size={128} icon={<UserOutlined />} />\r\n                            <br />\r\n                            <p>Nombre: {profileData.name} </p>\r\n                            <p>Correo: {profileData.email} </p>\r\n                            <p>Telefono: {profileData.telefono} </p>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col span={8}>\r\n                        <Card>\r\n                            <p>Universidad: {profileData.universidad} </p>\r\n                            <p>Certificacion: {profileData.certificacion} </p>\r\n                            <p>Cedula: {profileData.cedula} </p>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col span={8}>\r\n                        <Card>\r\n                            <p>Estado: {profileData.estado}</p>\r\n                            <p>Municipio: {profileData.municipio}</p>\r\n                            <p>Colonia: {profileData.colonia}</p>\r\n                            <p>Calle: {profileData.calle}</p>\r\n                            <p>Codigo Postal:{profileData.codigopostal} </p>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Card, Button, Modal, Row, Col, Space, Table, Tag } from 'antd';\r\nimport { API } from '../resources';\r\nimport Loading from '../loading';\r\n\r\n\r\nexport function DoctorNotas() {\r\n\r\n    const [nota, setNota] = useState({});\r\n    const [isModalVisible, setIsModalVisible] = useState(false);\r\n    const [notasData, setNotasData] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const showModal = () => { setIsModalVisible(true); };\r\n    const handleOk = () => { setIsModalVisible(false); getNotasData();};\r\n    const handleCancel = () => { setIsModalVisible(false); };\r\n\r\n    const [isModalDetailVisible, setIsModalDetailVisible] = useState(false);\r\n    const showDetailModal = () => { setIsModalDetailVisible(true); };\r\n    const handleDetailOk = () => { setIsModalDetailVisible(false); };\r\n    const handleDetailCancel = () => { setIsModalDetailVisible(false); };\r\n\r\n    useEffect(() => {\r\n      getNotasData()\r\n    }, [])\r\n\r\n    const getNotasData = () => {\r\n        fetch( API + 'notas')\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log(data); setNotasData(data);\r\n                setIsLoading(false)\r\n            })\r\n            .finally(() => setIsLoading(false))\r\n    }\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Paciente',\r\n            dataIndex: 'id_usuario',\r\n            key: 'Paciente',\r\n            render: text => <a>{text}</a>,\r\n        }, {\r\n            title: 'Edad',\r\n            dataIndex: 'edad',\r\n            key: 'Edad',\r\n        },\r\n        {\r\n            title: 'Talla',\r\n            dataIndex: 'talla',\r\n            key: 'Talla',\r\n        },\r\n        {\r\n            title: 'IMC',\r\n            dataIndex: 'imc',\r\n            key: 'imc',\r\n        },\r\n\r\n        {\r\n            title: 'Observaciones',\r\n            key: 'Observaciones',\r\n            dataIndex: 'observaciones',\r\n            // render: observaciones => (\r\n            //     <>\r\n            //         {observaciones.map(tag => {\r\n            //             let color = tag.length > 5 ? 'geekblue' : 'green';\r\n            //             if (tag === 'diabetes') {\r\n            //                 color = 'volcano';\r\n            //             }\r\n            //             return (\r\n            //                 <Tag color={color} key={tag}>\r\n            //                     {tag.toUpperCase()}\r\n            //                 </Tag>\r\n            //             );\r\n            //         })}\r\n            //     </>\r\n            // ),\r\n        },\r\n        {\r\n            title: 'Detalles',\r\n            key: 'action',\r\n            render: (text, record) => (\r\n                <Space size=\"middle\">\r\n                    <Button onClick={() => { showDetailModal(); setNota(record) }}>Detalles</Button>\r\n                </Space>\r\n            ),\r\n        },\r\n    ];\r\n\r\n    const gridStyle = {\r\n        width: '50%',\r\n        height: '50px',\r\n        textAlign: 'center',\r\n        display: 'inline-flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center'\r\n    };\r\n\r\n\r\n    function DetalleNota() {\r\n        return <div>\r\n            <Card bordered={false}>\r\n                {\r\n                    Object.keys(nota).map(k => {\r\n                        return <><Card.Grid style={gridStyle}>{k}</Card.Grid><Card.Grid style={gridStyle} size='small'>{nota[k]}</Card.Grid></>\r\n                    })\r\n                }\r\n            </Card>\r\n        </div>\r\n    }\r\n\r\n\r\n    return (\r\n        <div className='mainContainer'>\r\n            <Row>\r\n                <Col span={8}><h4>Notas de los pacientes del medico</h4></Col>\r\n                <Col>\r\n                    <Button type=\"primary\" onClick={showModal}>\r\n                        Nueva Nota\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n\r\n            { isLoading ? <Loading/> :  <Table columns={columns} dataSource={notasData} /> }\r\n\r\n\r\n\r\n\r\n            <Modal width={800} title={<h4>Crear Nota</h4>} visible={isModalVisible} onOk={handleOk} onCancel={handleCancel}>\r\n                {/* <NuevaNota /> */}\r\n            </Modal>\r\n            <Modal width={800} title={<h4>Detalles de la nota </h4>} visible={isModalDetailVisible} onOk={handleDetailOk} onCancel={handleDetailCancel}>\r\n                <DetalleNota />\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Row, Col, Statistic, Card } from 'antd'\r\nimport { Pie, Line } from '@ant-design/charts';\r\nimport './home.css'\r\n\r\nexport class Home extends Component {\r\n    \r\n    dataPie = [\r\n        {\r\n            type: 'Covid',\r\n            value: 130737,\r\n        },\r\n        {\r\n            type: 'Colesterol',\r\n            value: 21468,\r\n        },\r\n        {\r\n            type: 'Diabetes',\r\n            value: 18098,\r\n        },\r\n        {\r\n            type: 'Presion',\r\n            value: 17912,\r\n        },\r\n        {\r\n            type: 'Oseo',\r\n            value: 15282,\r\n        },\r\n        {\r\n            type: 'Migraña',\r\n            value: 11650,\r\n        },\r\n    ];\r\n\r\n    configPie = {\r\n        appendPadding: 10,\r\n        data: this.dataPie,\r\n        angleField: 'value',\r\n        colorField: 'type',\r\n        height: 450,\r\n        radius: 0.8,\r\n        label: {\r\n            type: 'inner',\r\n            offset: '-0.5',\r\n            content: '{name} {percentage}',\r\n            style: {\r\n                fill: '#fff',\r\n                fontSize: 14,\r\n                textAlign: 'center',\r\n            },\r\n        },\r\n    };\r\n\r\n    dataLine = [\r\n        { mes: 'Junio', consultas: 17945 },\r\n        { mes: 'Julio', consultas: 24011 },\r\n        { mes: 'Agosto', consultas: 46493 },\r\n        { mes: 'Septiembre', consultas: 105293 },\r\n        { mes: 'Octubre', consultas: 77190 }\r\n    ];\r\n\r\n    configLine = {\r\n        data: this.dataLine,\r\n        height: 410,\r\n        xField: 'mes',\r\n        yField: 'consultas',\r\n        color: '#01B075',\r\n        point: {\r\n            size: 5,\r\n            shape: 'diamond',\r\n            color: '#01B075'\r\n        },\r\n        label: {\r\n            style: {\r\n                fill: '#aaa',\r\n                fontSize: 16,\r\n                stroke: '#01B075'\r\n            },\r\n        },\r\n    };\r\n    render() {\r\n        return (\r\n            <>\r\n\r\n                <br />\r\n                <div className=\"contenedor\">\r\n                    <Row gutter={30}>\r\n                        <Col xs={24} sm={12} lg={6}>\r\n                            {/* <div className=\"cardsContenedor\" > */}\r\n                            <Card className=\"cardsContenedor\" hoverable bordered={false}>\r\n\r\n                                <Statistic title=\"Total Hospitales\" value=\"4\" valueStyle={{ color: 'white' }} style={{ backgroundColor: '#4BA6FE' }} className=\"cardsContenido\" />\r\n                            </Card>\r\n                        </Col>\r\n                        <Col xs={24} sm={12} lg={6}>\r\n                            <Card className=\"cardsContenedor\" hoverable bordered={false}>\r\n                                <Statistic title=\"Total Medicos\" value=\"14\" valueStyle={{ color: 'white' }} style={{ backgroundColor: '#FF838A' }} className=\"cardsContenido\" />\r\n                            </Card>\r\n                        </Col>\r\n\r\n                        <Col xs={24} sm={12} lg={6}>\r\n                            <Card className=\"cardsContenedor\" hoverable bordered={false}>\r\n\r\n                                <Statistic title=\"Total Pacientes\" value=\"241\" valueStyle={{ color: 'white' }} style={{ backgroundColor: '#18D0C2' }} className=\"cardsContenido\" />\r\n                            </Card>\r\n                        </Col>\r\n                        <Col xs={24} sm={12} lg={6}>\r\n                            <Card className=\"cardsContenedor\" hoverable bordered={false}>\r\n\r\n                                <Statistic title=\"Citas Hoy\" value={47} valueStyle={{ color: 'white' }} style={{ backgroundColor: '#847DFC' }} className=\"cardsContenido\" />\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n                    <br />\r\n                    <Row gutter={20}>\r\n                        <Col xs={24} md={12} className=\"graficaCircular\">\r\n                            <Pie {...this.configPie} style={{ backgroundColor: '#1F263C' }} />\r\n                        </Col>\r\n\r\n                        <Col xs={24} md={12}>\r\n                            <Line {...this.configLine} style={{ backgroundColor: '#1F263C', padding: '20px' }} />\r\n                        </Col>\r\n                    </Row>\r\n\r\n                </div>\r\n\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home\r\n","export default __webpack_public_path__ + \"static/media/Icon.e05b6872.png\";","import React from 'react'\r\nimport { Form, Input, Button } from 'antd';\r\nconst { TextArea } = Input;\r\n\r\n\r\nconst onFinish = (values) => {\r\n    console.log('Success:', values);\r\n};\r\n\r\nconst onFinishFailed = (errorInfo) => {\r\n    console.log('Failed:', errorInfo);\r\n};\r\n\r\nexport function Historial() {\r\n    return (\r\n        <div className='mainContainer'>\r\n            <h4>Historial de los pacientes del medico</h4>\r\n            <h4>Historial Clinico</h4>\r\n            <Form name=\"basic\" labelCol={{ span: 6 }} wrapperCol={{ span: 12 }} initialValues={{ remember: true }} onFinish={onFinish} onFinishFailed={onFinishFailed} autoComplete=\"off\" >\r\n\r\n                <Form.Item label=\"Paciente\" name=\"username\" rules={[{ required: true, message: 'Please input your username!' }]} >\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item label=\"comentarios\" name=\"id_paciente\" rules={[{ required: true, message: 'Ingresa RFC' }]} >\r\n                    <TextArea rows={4} />\r\n                </Form.Item>\r\n\r\n                <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\r\n                    <Button type=\"primary\" htmlType=\"submit\">\r\n                        Guardar\r\n                    </Button>\r\n                </Form.Item>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { Form, Input, Button, message } from 'antd'\r\nimport { InputNumber, Select } from 'antd';\r\nimport { S_API, API } from '../../resources'\r\nimport { usuario } from '../../resources'\r\n\r\nconst { Option } = Select;\r\nconst estados = [\"Michoacan\", \"Morelos\", \"Guerrero\"];\r\n\r\n\r\nexport default function Register(props) {\r\n\r\n  const [form] = Form.useForm();\r\n\r\n  async function addHistoria() {\r\n    return await fetch(API + 'historias/add', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        historial: \"Historia clinica al \" + new Date()\r\n      })\r\n    }).then(res => res.json())\r\n      .then(response => {\r\n        console.log('Story Created: ', response);\r\n        return response\r\n      })\r\n      .catch(error => console.error('Error:', error))\r\n  }\r\n\r\n  const createPAtientData = async (usr) => {\r\n    const historia = await addHistoria();\r\n    console.log('historia on Register: ', historia);\r\n    const postBody = {\r\n      usuario: usr,\r\n      historia: historia.id_historia,\r\n      notas: [],\r\n      recetas: []\r\n    }\r\n    console.log('postBodyForExpedient: ', postBody);\r\n    await fetch(API + 'expedientes/add', {\r\n      method: 'POST',\r\n      body: JSON.stringify(postBody),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).then(res => res.json())\r\n      .then(response => { console.log('Success:', response); message.success(response.message || response.error); })\r\n      .catch(error => console.error('Error:', error))\r\n      .finally(() => { props.setAdding(false) })\r\n  }\r\n\r\n  const onFinish = async (values) => {\r\n\r\n    // Register patient\r\n    values.avatar = 'https://';\r\n    values.estatus = '1';\r\n    values.rol = 'Paciente';\r\n    values.password = '' + values.telefono;\r\n    values.universidad = '';\r\n    values.certificacion = '';\r\n    values.cedula = '';\r\n    values.horarios = [];\r\n    values.medicos_asignados = props.paciente ? props.paciente.medicos_asignados : [usuario._id];\r\n\r\n    delete values.prefix;\r\n\r\n    const url = props.paciente ? API + 'users/updateUser/' + props.paciente._id : S_API + 'register';\r\n\r\n    console.log(values)\r\n    console.log('url: ', url);\r\n    await fetch(url, {\r\n      method: props.paciente ? 'PUT' : 'POST',\r\n      body: JSON.stringify(values),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).then(res => res.json())\r\n      .then(response => {\r\n        console.log('Create User Response:', response);\r\n        message.success(response.message || response.error);\r\n        props.paciente ? console.log('Editing, not creating patient') : createPAtientData(response.user_id);\r\n      })\r\n      .catch(error => console.error('Error:', error))\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log('Failed:', errorInfo);\r\n  };\r\n\r\n  const prefixSelector = (\r\n    <Form.Item name=\"prefix\" noStyle>\r\n      <Select\r\n        style={{\r\n          width: 70,\r\n        }}\r\n      >\r\n        <Option value=\"+52\">+52</Option>\r\n      </Select>\r\n    </Form.Item>\r\n  );\r\n  const suffixSelector = (\r\n    <Form.Item name=\"suffix\" noStyle>\r\n      <Select\r\n        style={{\r\n          width: 70,\r\n        }}\r\n      >\r\n        <Option value=\"USD\">$</Option>\r\n        <Option value=\"CNY\">¥</Option>\r\n      </Select>\r\n    </Form.Item>\r\n  );\r\n  return (\r\n    <div style={{ width: '100%' }}>\r\n      {\r\n        props.paciente ? <h4>Editar paciente</h4> : <h4>Registrar Paciente</h4>\r\n      }\r\n\r\n      <br />\r\n      <Form\r\n        // {...formItemLayout}\r\n        labelCol={{ span: 6 }} wrapperCol={{ span: 16 }}\r\n        form={form}\r\n        name=\"register\"\r\n        onFinish={onFinish}\r\n        initialValues={props.paciente}\r\n        scrollToFirstError\r\n      >\r\n        <Form.Item\r\n          name=\"email\"\r\n          label=\"Correo\"\r\n          rules={[\r\n            {\r\n              type: 'email',\r\n              message: 'The input is not valid E-mail!',\r\n            },\r\n            {\r\n              required: true,\r\n              message: 'Please input your E-mail!',\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        {/* <Form.Item name=\"password\" label=\"Contraseña\" rules={[{ required: true, message: 'Por favor ingrese su contraseña!', },]} hasFeedback >\r\n          <Input.Password />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"confirm\"\r\n          label=\"Confirmar contraseña\"\r\n          dependencies={['password']}\r\n          hasFeedback\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Please confirm your password!',\r\n            },\r\n            ({ getFieldValue }) => ({\r\n              validator(_, value) {\r\n                if (!value || getFieldValue('password') === value) {\r\n                  return Promise.resolve();\r\n                }\r\n                return Promise.reject(new Error('Las contraseñas deben coincidir!'));\r\n              },\r\n            }),\r\n          ]}\r\n        >\r\n          <Input.Password />\r\n        </Form.Item> */}\r\n\r\n        <Form.Item\r\n          name=\"telefono\"\r\n          label=\"Telefono\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Please input your phone number!',\r\n            },\r\n          ]}\r\n        >\r\n          <Input\r\n            addonBefore={prefixSelector}\r\n            style={{\r\n              width: '100%',\r\n            }}\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"name\"\r\n          label=\"Nombre\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Ingresa Nombre y apellidos',\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n\r\n\r\n        <Form.Item\r\n          name=\"calle\"\r\n          label=\"Calle\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Ingresa calle',\r\n              whitespace: true,\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"numexterior\"\r\n          label=\"Num Exterior\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Ingresa numero exterior',\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"numinterior\"\r\n          label=\"Num Interior\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Ingresa numinterior',\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"Colonia\"\r\n          name=\"colonia\"\r\n          rules={[{ required: true, message: 'Please input your colobnia!' }]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item name=\"estado\" label=\"Estado\" rules={[{ required: true, message: 'Apellido materno', },]}>\r\n          <Select placeholder=\"Elije tu estado\">\r\n            {estados.map(e => <Option value={e}>{e}</Option>)}\r\n          </Select>\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"municipio\"\r\n          label=\"Municipio\"\r\n          rules={[{ required: true, message: 'Ingresa tu municipio' }]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item name=\"codigopostal\" label=\"Codigo Postal\" rules={[{ required: true, message: 'Ingresa codigopostal', },]}>\r\n          <InputNumber addonAfter={suffixSelector} style={{ width: '100%', }} />\r\n        </Form.Item>\r\n        {/* <Form.Item\r\n          name=\"certificacion\"\r\n          label=\"Certificacion\"\r\n          rules={[{ required: true, message: 'Ingresa tu certificacion' }]}\r\n        >\r\n          <Input />\r\n        </Form.Item> */}\r\n        {/* <Form.Item\r\n          name=\"universidad\"\r\n          label=\"Universidad\" rules={[{ required: true, message: 'Ingresa tu universidad' }]} >\r\n          <Input />\r\n        </Form.Item> */}\r\n\r\n        <Form.Item >\r\n          <Button type=\"primary\" htmlType=\"submit\">\r\n            Registrar\r\n          </Button>\r\n          <Button onClick={() => props.setAdding(false)}>Cancelar</Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { getData } from '../../resources';\r\nimport { Row, Col } from 'antd';\r\nimport { Avatar, Card, Space, Button } from 'antd';\r\nimport { UserOutlined } from '@ant-design/icons';\r\nimport Loading from '../../loading';\r\nimport { FormOutlined } from '@ant-design/icons';\r\nimport Register from './register.patient';\r\n\r\n\r\nexport default function DetallesPaciente(props) {\r\n    const [pacienteData, setPacienteData] = useState([]);\r\n    const [pacienteLoading, setPacienteLoading] = useState(true);\r\n    const [editing, setEditing] = useState(false)\r\n\r\n    useEffect(() => {\r\n        getData(`getuser/${props.paciente}`).then(rs => { console.log(\"DetallePac: \", rs); setPacienteData(rs); setPacienteLoading(false) });\r\n    }, [props.paciente])\r\n\r\n    const ProfileDetails = () => {\r\n        return editing ?\r\n            <>\r\n                <Register setAdding={setEditing} paciente={pacienteData} />\r\n                {/* Editando\r\n                <Button onClick={() => setEditing(false)}>Guardar</Button> */}\r\n            </> :\r\n            <>\r\n                <Col span={8}>\r\n                    <Card>\r\n                        <Avatar size={128} icon={<UserOutlined />} />\r\n                        <br />\r\n                        <p>Nombre: {pacienteData.name} </p>\r\n                        <p>Correo: {pacienteData.email} </p>\r\n                        <p>Telefono: {pacienteData.telefono} </p>\r\n                    </Card>\r\n                </Col>\r\n\r\n                <Col span={8}>\r\n                    <Card>\r\n                        <p>Estado: {pacienteData.estado}</p>\r\n                        <p>Municipio: {pacienteData.municipio}</p>\r\n                        <p>Colonia: {pacienteData.colonia}</p>\r\n                        <p>Calle: {pacienteData.calle}</p>\r\n                        <p>Codigo Postal:{pacienteData.codigopostal} </p>\r\n                    </Card>\r\n                </Col></>\r\n    }\r\n\r\n    return (\r\n        // <div className='mainContainer'>\r\n        <div>\r\n            <Space>\r\n                <h4>Datos del Paciente</h4>\r\n                <Button onClick={() => setEditing(true)} size='small' disabled={!props.paciente} type=\"primary\" shape=\"circle\" icon={<FormOutlined />} />\r\n            </Space>\r\n            {pacienteLoading ? <Loading /> :\r\n                <Row>\r\n                    <ProfileDetails />\r\n                </Row>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component, useState, useEffect } from 'react'\r\nimport { Table, Space, Button, List, Row, Col, Tabs } from 'antd'\r\nimport { API } from '../../resources'\r\nimport Loading from '../../loading'\r\nimport { usuario } from '../../resources'\r\nimport Expedientes from '../expedientes/expedientes'\r\nimport DetallesPaciente from './detalles.paciente'\r\nimport Register from './register.patient'\r\nimport { PlusOutlined, FormOutlined } from '@ant-design/icons';\r\nconst { TabPane } = Tabs;\r\n\r\nexport default function MainPacientes() {\r\n\r\n  const [pacientesData, setPacientesData] = useState([])\r\n  const [isLoading, setIsLoading] = useState(true)\r\n  const [paciente, setPaciente] = useState(null)\r\n  const [adding, setAdding] = useState(false)\r\n\r\n  useEffect(() => {\r\n    getPacientesData()\r\n  }, [])\r\n\r\n  const getPacientesData = () => {\r\n    fetch(API + `mispacientes/${usuario._id}`)\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        console.log(data); setPacientesData(data);\r\n      })\r\n      .finally(() => setIsLoading(false))\r\n  }\r\n\r\n  const columns = [\r\n    {\r\n      title: 'Nombre',\r\n      dataIndex: 'name',\r\n      key: 'name',\r\n      render: (text, record) => <Button type=\"link\" onClick={() => { console.log(record); setPaciente(record._id) }}>{text}</Button>\r\n    },\r\n\r\n    {\r\n      title: 'Action',\r\n      key: 'action',\r\n      render: (_, record) => (\r\n        <Space size=\"middle\">\r\n          <Button onClick={() => setPaciente(record._id)}>Expediente</Button>\r\n          <Button>Ver datos</Button>\r\n          <Button>Editar</Button>\r\n        </Space>\r\n      ),\r\n    },\r\n\r\n  ];\r\n\r\n  const TablaPacientes = () => {\r\n    return adding ? <Register /> :\r\n      <Tabs tabPosition='left' onTabClick={(k, e) => { console.log('OnTABClick', k); setPaciente(k) }}>\r\n        {\r\n          pacientesData.map((pt) => {\r\n            return <TabPane tab={pt.name} key={pt._id} onClick={() => { setPaciente(pt._id) }}>\r\n              <DetallesPaciente paciente={pt._id} />\r\n            </TabPane>\r\n          })\r\n        }\r\n      </Tabs>\r\n  }\r\n\r\n  return (\r\n    <div className='mainContainer'>\r\n\r\n      {/* {\r\n        isLoading ? <Loading /> :\r\n          <TablaPacientes />\r\n      } */}\r\n      <Space>\r\n        <h4>Pacientes </h4>\r\n        <Button onClick={() => setAdding(!adding)} size='small' type=\"primary\" shape=\"circle\" icon={<PlusOutlined />} />\r\n      </Space>\r\n      {\r\n        isLoading ? <Loading /> :\r\n          adding ? <Register setAdding={setAdding}/> :\r\n            <Tabs tabPosition='left' onTabClick={(k, e) => { console.log('OnTABClick', k); setPaciente(k) }}>\r\n              {\r\n                pacientesData.map((pt) => {\r\n                  return <TabPane tab={pt.name} key={pt._id} onClick={() => { setPaciente(pt._id) }}>\r\n                    <DetallesPaciente paciente={pt._id} />\r\n                  </TabPane>\r\n                })\r\n              }\r\n            </Tabs>\r\n      }\r\n\r\n      <br />\r\n      <br />\r\n      {/* <Row gutter={16}>\r\n        <Col span={4}>\r\n          <><Space>\r\n            <h4>Pacientes </h4>\r\n            <Button onClick={() => setAdding(!adding)} size='small' type=\"primary\" shape=\"circle\" icon={<PlusOutlined />} />\r\n          </Space>\r\n\r\n            { isLoading ? <Loading /> :<TablaPacientes /> }\r\n\r\n          </>\r\n        </Col>\r\n        <Col span={20}>\r\n          <DetallesPaciente paciente={paciente} />\r\n        </Col>\r\n      </Row> */}\r\n\r\n      <Expedientes paciente={paciente} />\r\n\r\n\r\n    </div >\r\n  )\r\n\r\n}\r\n","import React from 'react'\r\nimport { Button } from 'antd'\r\nimport { Container, Nav, Navbar } from \"react-bootstrap\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport Patients from './pacientesDash/main.patients'\r\nimport { Citas } from './citas'\r\nimport Expedientes from './expedientes/expedientes'\r\nimport Recetas from './recetas'\r\nimport Perfil from './perfil'\r\nimport {DoctorNotas} from './doctorNotas'\r\nimport Home from './home/home'\r\nimport icon from '../assets/Icon.png';\r\nimport { logout } from '../resources'\r\nimport { usuario } from '../resources'\r\nimport { Historial } from './historial';\r\nimport MainPacientes from './pacientes/main.pacientes';\r\n\r\nfunction Navigator() {\r\n  console.log(\"DoctorApp\", usuario.name)\r\n  return <Navbar bg=\"light\" expand=\"lg\">\r\n    <Container>\r\n      <Navbar.Brand href=\"#home\">\r\n        <img\r\n          src={icon}\r\n          width=\"40\"\r\n          height=\"35\"\r\n          className=\"d-inline-block align-top\"\r\n          alt=\"Recreamed logo\"\r\n        />\r\n        Bienvenido {usuario.name}\r\n      </Navbar.Brand>\r\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n      <Navbar.Collapse id=\"basic-navbar-nav\">\r\n        <Nav className=\"me-auto\">\r\n          <Nav.Link href=\"/\">Inicio</Nav.Link>\r\n          {/* <Nav.Link href=\"/pacientesdash\">PacientesDash</Nav.Link> */}\r\n          <Nav.Link href=\"/pacientes\">Pacientes</Nav.Link>\r\n          <Nav.Link href=\"/citas\">Citas</Nav.Link>\r\n          {/* <Nav.Link href=\"/expedientes\">Expedientes</Nav.Link> */}\r\n          {/* <Nav.Link href=\"/recetas\">Recetas</Nav.Link> */}\r\n          {/* <Nav.Link href=\"/notas\">Notas</Nav.Link> */}\r\n          {/* <Nav.Link href=\"/historial\">Historiales</Nav.Link> */}\r\n          <Nav.Link href=\"/perfil\">Mi Perfil</Nav.Link>\r\n        </Nav>\r\n      </Navbar.Collapse>\r\n      <Navbar.Collapse className=\"justify-content-end\">\r\n        <Button onClick={logout} >Cerrar Sesion</Button>\r\n      </Navbar.Collapse>\r\n    </Container>\r\n  </Navbar>\r\n\r\n}\r\n\r\nexport default function DoctorApp() {\r\n\r\n  return (\r\n    <Router>\r\n\r\n      <Navigator />\r\n\r\n      <Switch>\r\n\r\n        <Route path=\"/pacientesdash\">\r\n          <Patients />\r\n        </Route>\r\n\r\n        <Route path=\"/pacientes\">\r\n          <MainPacientes/>\r\n        </Route>\r\n\r\n        <Route path=\"/citas\">\r\n          <Citas />\r\n        </Route>\r\n\r\n        <Route path=\"/expedientes\">\r\n          <Expedientes />\r\n        </Route>\r\n\r\n        <Route path=\"/Recetas\">\r\n          <Recetas />\r\n        </Route>\r\n\r\n        <Route path=\"/perfil\">\r\n          <Perfil />\r\n        </Route>\r\n       \r\n        <Route path=\"/notas\">\r\n          <DoctorNotas/>\r\n        </Route>\r\n        \r\n        <Route path=\"/historial\">\r\n          <Historial/>\r\n        </Route>\r\n\r\n        <Route path=\"/\">\r\n          <Home />\r\n        </Route>\r\n\r\n      </Switch>\r\n    </Router>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Form, Input, Button, message } from 'antd'\r\nimport { InputNumber, Select } from 'antd';\r\nimport { S_API } from '../../resources'\r\n\r\nconst { Option } = Select;\r\nconst estados = [\"Michoacan\", \"Morelos\", \"Guerrero\"];\r\n\r\nexport default function Register() {\r\n  \r\n  const [form] = Form.useForm(); \r\n\r\n  const onFinish = (values) => {\r\n    values.avatar = 'https://';\r\n    values.estatus = '1';\r\n    values.rol = 'Paciente';\r\n    delete values.confirm;\r\n    delete values.prefix;\r\n    delete values.agreement;\r\n\r\n    console.log(values)\r\n    fetch(S_API + 'register', {\r\n      method: 'POST',\r\n      body: JSON.stringify(values),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).then(res => res.json())\r\n      .then(response => { console.log('Success:', response); message.success(response.message || response.error); })\r\n      .catch(error => console.error('Error:', error))\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log('Failed:', errorInfo);\r\n  };\r\n\r\n  const prefixSelector = (\r\n    <Form.Item name=\"prefix\" noStyle>\r\n      <Select\r\n        style={{\r\n          width: 70,\r\n        }}\r\n      >\r\n        <Option value=\"+52\">+52</Option>\r\n      </Select>\r\n    </Form.Item>\r\n  );\r\n  const suffixSelector = (\r\n    <Form.Item name=\"suffix\" noStyle>\r\n      <Select\r\n        style={{\r\n          width: 70,\r\n        }}\r\n      >\r\n        <Option value=\"USD\">$</Option>\r\n        <Option value=\"CNY\">¥</Option>\r\n      </Select>\r\n    </Form.Item>\r\n  );\r\n  return (\r\n    <div>\r\n      <h4>Registrar Usuario</h4>\r\n      <br />\r\n      <Form\r\n        // {...formItemLayout}\r\n        labelCol={{ span: 6 }} wrapperCol={{ span: 16 }}\r\n        form={form}\r\n        name=\"register\"\r\n        onFinish={onFinish}\r\n        initialValues={{\r\n          residence: ['zhejiang', 'hangzhou', 'xihu'],\r\n          prefix: '52',\r\n        }}\r\n        scrollToFirstError\r\n      >\r\n        <Form.Item\r\n          name=\"email\"\r\n          label=\"Correo\"\r\n          rules={[\r\n            {\r\n              type: 'email',\r\n              message: 'The input is not valid E-mail!',\r\n            },\r\n            {\r\n              required: true,\r\n              message: 'Please input your E-mail!',\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item name=\"password\" label=\"Contraseña\" rules={[{ required: true, message: 'Por favor ingrese su contraseña!', },]} hasFeedback >\r\n          <Input.Password />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"confirm\"\r\n          label=\"Confirmar contraseña\"\r\n          dependencies={['password']}\r\n          hasFeedback\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Please confirm your password!',\r\n            },\r\n            ({ getFieldValue }) => ({\r\n              validator(_, value) {\r\n                if (!value || getFieldValue('password') === value) {\r\n                  return Promise.resolve();\r\n                }\r\n                return Promise.reject(new Error('Las contraseñas deben coincidir!'));\r\n              },\r\n            }),\r\n          ]}\r\n        >\r\n          <Input.Password />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"telefono\"\r\n          label=\"Telefono\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Please input your phone number!',\r\n            },\r\n          ]}\r\n        >\r\n          <Input\r\n            addonBefore={prefixSelector}\r\n            style={{\r\n              width: '100%',\r\n            }}\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"id_sucursal\"\r\n          label=\"Id Sucursal\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Ingresa el ID de la sucursal',\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"id_medicoasignado\"\r\n          label=\"Id Medico Asignado\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Ingresa el ID del medico ',\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"name\"\r\n          label=\"Nombre\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Ingresa Nombre y apellidos',\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"cedula\"\r\n          label=\"Cedula\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Ingresa cedula',\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"calle\"\r\n          label=\"Calle\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Ingresa calle',\r\n              whitespace: true,\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"numexterior\"\r\n          label=\"Num Exterior\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Ingresa numero exterior',\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"numinterior\"\r\n          label=\"Num Interior\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Ingresa numinterior',\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"Colonia\"\r\n          name=\"colonia\"\r\n          rules={[{ required: true, message: 'Please input your colobnia!' }]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item name=\"estado\" label=\"Estado\" rules={[{ required: true, message: 'Apellido materno', },]}>\r\n          <Select placeholder=\"Elije tu estado\">\r\n            {estados.map(e => <Option value={e}>{e}</Option>)}\r\n          </Select>\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"municipio\"\r\n          label=\"Municipio\"\r\n          rules={[{ required: true, message: 'Ingresa tu municipio' }]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item name=\"codigopostal\" label=\"Codigo Postal\" rules={[{ required: true, message: 'Ingresa codigopostal', },]}>\r\n          <InputNumber addonAfter={suffixSelector} style={{ width: '100%', }} />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"certificacion\"\r\n          label=\"Certificacion\"\r\n          rules={[{ required: true, message: 'Ingresa tu certificacion' }]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"universidad\"\r\n          label=\"Universidad\" rules={[{ required: true, message: 'Ingresa tu universidad' }]} >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item >\r\n          <Button type=\"primary\" htmlType=\"submit\">\r\n            Registrar\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </div>\r\n  )\r\n}\r\n","import React, { Component, useState, useEffect } from 'react'\r\nimport { Table, Space } from 'antd'\r\nimport { API } from '../../resources'\r\nimport Loading from '../../loading'\r\n\r\n\r\nexport default function Dash() {\r\n\r\n  const [pacientesData, setPacientesData] = useState([])\r\n  const [isLoading, setIsLoading] = useState(true)\r\n\r\n  useEffect(() => {\r\n    getPacientesData()\r\n  }, [])\r\n\r\n  const getPacientesData = () => {\r\n    fetch(API + 'users_by_rol/Paciente')\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        console.log(data); setPacientesData(data);\r\n      })\r\n      .finally(() => setIsLoading(false))\r\n  }\r\n\r\n  const columns = [\r\n    {\r\n      title: 'Nombre',\r\n      dataIndex: 'name',\r\n      key: 'name',\r\n    },\r\n    // {\r\n    //   title: 'Edad',\r\n    //   dataIndex: 'age',\r\n    //   key: 'age',\r\n    // },\r\n    {\r\n      title: 'Medico',\r\n      dataIndex: 'id_medicoasignado',\r\n      key: 'id_medicoasignado',\r\n    },\r\n    {\r\n      title: 'Municipio',\r\n      dataIndex: 'municipio',\r\n      key: 'municipio',\r\n    },\r\n    {\r\n      title: 'Calle',\r\n      dataIndex: 'calle',\r\n      key: 'calle',\r\n    },\r\n    {\r\n      title: 'N Exterior',\r\n      dataIndex: 'numexterior',\r\n      key: 'numexterior',\r\n    },\r\n    {\r\n      title: 'Telefono',\r\n      dataIndex: 'telefono',\r\n      key: 'telefono',\r\n    },\r\n    {\r\n      title: 'Action',\r\n      key: 'action',\r\n      render: (text, record) => (\r\n        <Space size=\"middle\">\r\n          <a href='#'>Modificar</a>\r\n          <a href='#'>Borrar</a>\r\n        </Space>\r\n      ),\r\n    }\r\n\r\n  ];\r\n\r\n  return (\r\n    <div>\r\n      <h1>Pacientes</h1>\r\n      {\r\n        isLoading ? <Loading /> :\r\n          <Table dataSource={pacientesData} columns={columns} />\r\n      }\r\n    </div>\r\n  )\r\n\r\n}\r\n","import { React, Component } from 'react';\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\nimport { Layout, Menu } from 'antd';\r\nimport { UserOutlined, UserAddOutlined, MenuOutlined } from '@ant-design/icons';\r\n\r\nimport Register from './register.patient';\r\nimport Dash from './dash.patients';\r\n\r\nconst { Header, Content, Footer, Sider } = Layout;\r\n\r\nclass SideMenu extends Component {\r\n  handleClick = e => {\r\n    console.log('click ', e);\r\n  };\r\n\r\n  state = {\r\n    collapsed: false,\r\n  };\r\n\r\n  onCollapse = (collapsed) => {\r\n    this.setState({ collapsed });\r\n  }\r\n  toggle = () => {\r\n    this.setState({\r\n      collapsed: !this.state.collapsed,\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <Layout style={{ minHeight: '100vh' }}>\r\n          <Sider\r\n            theme=\"light\"\r\n            collapsible\r\n            collapsed={this.state.collapsed}\r\n            onCollapse={this.onCollapse}>\r\n            <div className=\"logo\" />\r\n            <Menu defaultSelectedKeys={['1']} mode=\"inline\">\r\n              <Menu.Item icon={ <UserOutlined /> } key=\"1\">\r\n                <span>Pacientes</span>\r\n                <Link to=\"/pacientes\" />\r\n              </Menu.Item>\r\n              <Menu.Item icon={ <UserAddOutlined /> } key=\"2\">\r\n                <span>Registrar Paciente</span>\r\n                <Link to=\"/registrar\" />\r\n              </Menu.Item>\r\n            </Menu>\r\n          </Sider>\r\n          <Layout>\r\n\r\n            <Header style={{ background: '#fff', padding: 0, paddingLeft: 16 }}>\r\n              <MenuOutlined className=\"trigger\" style={{ cursor: 'pointer' }} onClick={this.toggle} />\r\n            </Header>\r\n\r\n            <Content style={{ margin: '24px 16px', padding: 24, background: '#fff', minHeight: 280 }}>\r\n              <Route exact path=\"/registrar\" component={Register} />\r\n              <Route path=\"/pacientes\" component={Dash} />\r\n            </Content>\r\n\r\n            <Footer style={{ textAlign: 'center' }}>\r\n              RECREAMED ©2021 Created by Realidad Creativa\r\n            </Footer>\r\n          </Layout>\r\n\r\n        </Layout>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SideMenu\r\n\r\n\r\n","import React, { Component } from 'react'\r\n// import {Card } from 'antd'\r\nimport SideMenu from './side.patients';\r\n\r\nexport class Patients extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div>\r\n                            <SideMenu />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Patients\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Table, Space, Row, Col, Button, Modal, Form, Input, message } from 'antd';\r\nimport { API } from '../resources';\r\nimport Loading from '../loading'\r\n// import { API } from '../resources'\r\n\r\nexport function Citas() {\r\n    const [isModalVisible, setIsModalVisible] = useState(false);\r\n    const [citasData, setCitasData] = useState([])\r\n    const [isLoading, setIsLoading] = useState(true)\r\n\r\n    useEffect(() => {\r\n        getCitasData()\r\n    }, [])\r\n\r\n    const getCitasData = () => {\r\n        fetch(API + 'citas')\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log(data); setCitasData(data);\r\n            })\r\n            .finally(() => setIsLoading(false))\r\n    }\r\n\r\n    const showModal = () => {\r\n        setIsModalVisible(true);\r\n    };\r\n\r\n    const handleOk = () => {\r\n        setIsModalVisible(false);\r\n    };\r\n\r\n    const handleCancel = () => {\r\n        setIsModalVisible(false);\r\n    };\r\n    const columns = [\r\n        {\r\n            title: 'Fecha y Hora',\r\n            dataIndex: 'fecha_hora',\r\n            key: 'fecha_hora',\r\n            render: text => <a>{text}</a>,\r\n        },\r\n        {\r\n            title: 'Paciente',\r\n            dataIndex: 'id_usuario',\r\n            key: 'id_usuario',\r\n        },\r\n        {\r\n            title: 'Sucursal',\r\n            dataIndex: 'id_sucursal',\r\n            key: 'v',\r\n        },\r\n        {\r\n            title: 'Comentarios',\r\n            dataIndex: 'comentarios',\r\n            key: 'comentarios',\r\n        },\r\n        {\r\n            title: 'Detalles',\r\n            key: 'detalles',\r\n            render: (text, record) => (\r\n                <Space size=\"middle\">\r\n                    {/* <a href>Enlace</a> */}\r\n                    <Button>Enlace</Button>\r\n                </Space>\r\n            ),\r\n        },\r\n    ];\r\n\r\n    const onFinish = (values) => {\r\n        console.log('Valores:', values);\r\n        fetch(API + 'expedientes/add', {\r\n            method: 'POST',\r\n            body: JSON.stringify(values),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }).then(res => res.json())\r\n            .then(response => { console.log('Success:', response); message.success(response.message || response.error); })\r\n            .catch(error => console.error('Error:', error))\r\n            .finally(() => { getCitasData(); setIsModalVisible(false) })\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n\r\n    return (\r\n        <div className='mainContainer'>\r\n            <h4>Citas de los pacientes</h4>\r\n            <h4>ID Medico: 0012M</h4>\r\n\r\n            { isLoading ? <Loading/> :  <Table columns={columns} dataSource={citasData} /> }\r\n\r\n           \r\n\r\n            <Modal title=\"Nuevo expediente\" visible={isModalVisible} onOk={handleOk} onCancel={handleCancel}>\r\n                <Form name=\"expediente\" labelCol={{ span: 6 }} wrapperCol={{ span: 12 }} onFinish={onFinish} onFinishFailed={onFinishFailed} autoComplete=\"off\" >\r\n                    <Form.Item label=\"Paciente\" name=\"id_usuario\" rules={[{ required: true, message: 'Ingresa RFC' }]} >\r\n                        <Input />\r\n                    </Form.Item>\r\n                    <Form.Item label=\"Historia Clinica\" name=\"id_historia\" rules={[{ required: true, message: 'Ingresa RFC' }]} >\r\n                        <Input />\r\n                    </Form.Item>\r\n                    <Form.Item label=\"Notas Medicas\" name=\"id_nota\" rules={[{ required: true, message: 'Ingresa RFC' }]} >\r\n                        <Input />\r\n                    </Form.Item>\r\n                    <Form.Item label=\"Receta\" name=\"id_receta\" rules={[{ required: true, message: 'Ingresa RFC' }]} >\r\n                        <Input />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\r\n                        <Button type=\"primary\" htmlType=\"submit\" form='expediente'>\r\n                            Guardar\r\n                        </Button>\r\n                    </Form.Item>\r\n                </Form>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Row, Col, Statistic, Card } from 'antd'\r\nimport { Pie, Line } from '@ant-design/charts';\r\nimport './home.css'\r\n\r\nexport class Home extends Component {\r\n\r\n    dataPie = [\r\n        {\r\n            type: 'Covid',\r\n            value: 130737,\r\n        },\r\n        {\r\n            type: 'Colesterol',\r\n            value: 21468,\r\n        },\r\n        {\r\n            type: 'Diabetes',\r\n            value: 18098,\r\n        },\r\n        {\r\n            type: 'Presion',\r\n            value: 17912,\r\n        },\r\n        {\r\n            type: 'Oseo',\r\n            value: 15282,\r\n        },\r\n        {\r\n            type: 'Migraña',\r\n            value: 11650,\r\n        },\r\n    ];\r\n\r\n    configPie = {\r\n        appendPadding: 10,\r\n        data: this.dataPie,\r\n        angleField: 'value',\r\n        colorField: 'type',\r\n        height: 450,\r\n        radius: 0.8,\r\n        label: {\r\n            type: 'inner',\r\n            offset: '-0.5',\r\n            content: '{name} {percentage}',\r\n            style: {\r\n                fill: '#fff',\r\n                fontSize: 14,\r\n                textAlign: 'center',\r\n            },\r\n        },\r\n    };\r\n\r\n    dataLine = [\r\n        { mes: 'Junio', consultas: 17945 },\r\n        { mes: 'Julio', consultas: 24011 },\r\n        { mes: 'Agosto', consultas: 46493 },\r\n        { mes: 'Septiembre', consultas: 105293 },\r\n        { mes: 'Octubre', consultas: 77190 }\r\n    ];\r\n\r\n    configLine = {\r\n        data: this.dataLine,\r\n        height: 410,\r\n        xField: 'mes',\r\n        yField: 'consultas',\r\n        color: '#01B075',\r\n        point: {\r\n            size: 5,\r\n            shape: 'diamond',\r\n            color: '#01B075'\r\n        },\r\n        label: {\r\n            style: {\r\n                fill: '#aaa',\r\n                fontSize: 16,\r\n                stroke: '#01B075'\r\n            },\r\n        },\r\n    };\r\n    render() {\r\n        return (\r\n            <>\r\n\r\n                <br />\r\n                <div className=\"contenedor\">\r\n                    <Row gutter={30}>\r\n                        <Col xs={24} sm={12} lg={6}>\r\n                            {/* <div className=\"cardsContenedor\" > */}\r\n                            <Card className=\"cardsContenedor\" hoverable bordered={false}>\r\n\r\n                                <Statistic title=\"Total Hospitales\" value=\"4\" valueStyle={{ color: 'white' }} style={{ backgroundColor: '#4BA6FE' }} className=\"cardsContenido\" />\r\n                            </Card>\r\n                        </Col>\r\n                        <Col xs={24} sm={12} lg={6}>\r\n                            <Card className=\"cardsContenedor\" hoverable bordered={false}>\r\n                                <Statistic title=\"Total Medicos\" value=\"14\" valueStyle={{ color: 'white' }} style={{ backgroundColor: '#FF838A' }} className=\"cardsContenido\" />\r\n                            </Card>\r\n                        </Col>\r\n\r\n                        <Col xs={24} sm={12} lg={6}>\r\n                            <Card className=\"cardsContenedor\" hoverable bordered={false}>\r\n\r\n                                <Statistic title=\"Total Pacientes\" value=\"241\" valueStyle={{ color: 'white' }} style={{ backgroundColor: '#18D0C2' }} className=\"cardsContenido\" />\r\n                            </Card>\r\n                        </Col>\r\n                        <Col xs={24} sm={12} lg={6}>\r\n                            <Card className=\"cardsContenedor\" hoverable bordered={false}>\r\n\r\n                                <Statistic title=\"Citas Hoy\" value={47} valueStyle={{ color: 'white' }} style={{ backgroundColor: '#847DFC' }} className=\"cardsContenido\" />\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n                    <br />\r\n                    <Row gutter={20}>\r\n                        <Col xs={24} md={12} className=\"graficaCircular\">\r\n                            <Pie {...this.configPie} style={{ backgroundColor: '#1F263C' }} />\r\n                        </Col>\r\n\r\n                        <Col xs={24} md={12}>\r\n                            <Line {...this.configLine} style={{ backgroundColor: '#1F263C', padding: '20px' }} />\r\n                        </Col>\r\n                    </Row>\r\n\r\n                </div>\r\n\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home\r\n","import React from 'react'\r\nimport { Container, Nav, Navbar } from \"react-bootstrap\";\r\nimport icon from '../assets/Icon.png';\r\nimport { Button } from 'antd'\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport Patients from './pacientes/main.patients'\r\nimport { Citas } from './citas'\r\nimport Home from './home/home'\r\n\r\nconst logout = () => { localStorage.removeItem('sessionToken'); localStorage.removeItem('userType'); window.location.href = '/'; }\r\n\r\nfunction Navigator() {\r\n  return <Navbar bg=\"light\" expand=\"lg\">\r\n    <Container>\r\n      <Navbar.Brand href=\"#home\">\r\n        <img\r\n          src={icon}\r\n          width=\"40\"\r\n          height=\"35\"\r\n          className=\"d-inline-block align-top\"\r\n          alt=\"Recreamed logo\"\r\n        />\r\n        Bienvenido Recepcionista\r\n      </Navbar.Brand>\r\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n      <Navbar.Collapse id=\"basic-navbar-nav\">\r\n        <Nav className=\"me-auto\">\r\n          <Nav.Link href=\"/\">Inicio</Nav.Link>\r\n          <Nav.Link href=\"/\">Farmacia</Nav.Link>\r\n          <Nav.Link href=\"/pacientes\">Pacientes</Nav.Link>\r\n          <Nav.Link href=\"/citas\">Citas</Nav.Link>\r\n        </Nav>\r\n      </Navbar.Collapse>\r\n      <Navbar.Collapse className=\"justify-content-end\">\r\n        <Button onClick={logout} >Cerrar Sesion</Button>\r\n      </Navbar.Collapse>\r\n    </Container>\r\n  </Navbar>\r\n\r\n}\r\n\r\nexport default function RecepcionApp() {\r\n  return (\r\n    <Router>\r\n      <Navigator />\r\n      <Switch>\r\n\r\n        <Route path=\"/pacientes\">\r\n          <Patients />\r\n        </Route>\r\n\r\n        <Route path=\"/citas\">\r\n          <Citas />\r\n        </Route>\r\n\r\n        <Route path=\"/citas\">\r\n          <Citas />\r\n        </Route>\r\n\r\n        <Route path=\"/\">\r\n          <Home />\r\n        </Route>\r\n\r\n      </Switch>\r\n    </Router>\r\n  )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Table, Space, Row, Col, Button, Modal, Form, Input, message, DatePicker } from 'antd';\r\nimport { API } from '../resources';\r\nimport Loading from '../loading'\r\n// import { API } from '../resources'\r\n\r\nexport default function Citas() {\r\n    const [isModalVisible, setIsModalVisible] = useState(false);\r\n    const [citasData, setCitasData] = useState([])\r\n    const [isLoading, setIsLoading] = useState(true)\r\n\r\n    useEffect(() => {\r\n        getCitasData()\r\n    }, [])\r\n\r\n    const getCitasData = () => {\r\n        fetch(API + 'citas')\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log(data); setCitasData(data);\r\n            })\r\n            .finally(() => setIsLoading(false))\r\n    }\r\n\r\n    const showModal = () => {\r\n        setIsModalVisible(true);\r\n    };\r\n\r\n    const handleOk = () => {\r\n        setIsModalVisible(false);\r\n    };\r\n\r\n    const handleCancel = () => {\r\n        setIsModalVisible(false);\r\n    };\r\n    const columns = [\r\n        {\r\n            title: 'Fecha y Hora',\r\n            dataIndex: 'fecha_hora',\r\n            key: 'fecha_hora',\r\n            render: text => <a>{text}</a>,\r\n        },\r\n        {\r\n            title: 'Medico',\r\n            dataIndex: 'id_medico',\r\n            key: 'id_medico',\r\n        },\r\n        {\r\n            title: 'Sucursal',\r\n            dataIndex: 'id_sucursal',\r\n            key: 'v',\r\n        },\r\n        {\r\n            title: 'Comentarios',\r\n            dataIndex: 'comentarios',\r\n            key: 'comentarios',\r\n        },\r\n        {\r\n            title: 'Detalles',\r\n            key: 'detalles',\r\n            render: (text, record) => (\r\n                <Space size=\"middle\">\r\n                    {/* <a href>Enlace</a> */}\r\n                    <Button>Enlace</Button>\r\n                </Space>\r\n            ),\r\n        },\r\n    ];\r\n\r\n    const onFinish = (values) => {\r\n        console.log('Valores:', values);\r\n        fetch(API + 'expedientes/add', {\r\n            method: 'POST',\r\n            body: JSON.stringify(values),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }).then(res => res.json())\r\n            .then(response => { console.log('Success:', response); message.success(response.message || response.error); })\r\n            .catch(error => console.error('Error:', error))\r\n            .finally(() => { getCitasData(); setIsModalVisible(false) })\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    // DatePicker\r\n    function onChange(value, dateString) {\r\n        console.log('Selected Time: ', value);\r\n        console.log('Formatted Selected Time: ', dateString);\r\n    }\r\n    function onOk(value) {\r\n        console.log('onOk: ', value);\r\n    }\r\n\r\n    return (\r\n        <div className='mainContainer'>\r\n            <Row>\r\n                <Col span={8}><h4>Citas con mis pacientes</h4></Col>\r\n                <Col>\r\n                    <Button type=\"primary\" onClick={showModal}>\r\n                        Nueva Cita\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n\r\n            {isLoading ? <Loading /> : <Table columns={columns} dataSource={citasData} />}\r\n\r\n\r\n\r\n            <Modal title=\"Nuevo expediente\" visible={isModalVisible} onOk={handleOk} onCancel={handleCancel}>\r\n                <Form name=\"expediente\" labelCol={{ span: 8 }} wrapperCol={{ span: 12 }} onFinish={onFinish} onFinishFailed={onFinishFailed} autoComplete=\"off\" >\r\n\r\n                    <Form.Item label=\"Paciente\" name=\"id_usuario\" rules={[{ required: true, message: 'Ingresa RFC' }]} >\r\n                        <Input />\r\n                    </Form.Item>\r\n                    <Form.Item label=\"Sucursal\" name=\"id_sucursal\" rules={[{ required: true, message: 'Ingresa RFC' }]} >\r\n                        <Input />\r\n                    </Form.Item>\r\n                    <Form.Item label=\"Fecha y Hora\" name=\"id_nota\" rules={[{ required: true, message: 'Selecciona Fecha y Hora' }]} >\r\n                        <DatePicker showTime onChange={onChange} onOk={onOk} placeholder='Selecciona Fecha y Hora' />\r\n                    </Form.Item>\r\n                    <Form.Item label=\"Enlace a la reunion\" name=\"id_reunion\" rules={[{ required: true, message: 'Ingresa RFC' }]} >\r\n                        <Input />\r\n                    </Form.Item>\r\n                    <Form.Item label=\"Contraseña\" name=\"password_reunion\" rules={[{ required: true, message: 'Ingresa RFC' }]} >\r\n                        <Input placeholder='Opcional' />\r\n                    </Form.Item>\r\n                    <Form.Item label=\"Comentarios\" name=\"comentarios\" rules={[{ required: true, message: 'Ingresa RFC' }]} >\r\n                        <Input />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\r\n                        <Button type=\"primary\" htmlType=\"submit\" form='expediente'>\r\n                            Guardar\r\n                        </Button>\r\n                    </Form.Item>\r\n                </Form>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { Table, Tag, Space, Button, Modal } from 'antd';\r\n\r\n\r\nexport default function Recetas() {\r\n\r\n    const [isModalVisible, setIsModalVisible] = useState(false);\r\n    const showModal = () => {\r\n        setIsModalVisible(true);\r\n    };\r\n\r\n    const handleOk = () => {\r\n        setIsModalVisible(false);\r\n    };\r\n\r\n    const handleCancel = () => {\r\n        setIsModalVisible(false);\r\n    };\r\n    const columns = [\r\n        {\r\n            title: 'ID Receta',\r\n            dataIndex: 'key',\r\n            key: '_id',\r\n            render: text => <a>{text}</a>,\r\n        },\r\n        {\r\n            title: 'ID Nota',\r\n            dataIndex: 'id_nota',\r\n            key: 'id_nota',\r\n        },\r\n        {\r\n            title: 'Prescripcion',\r\n            dataIndex: 'prescripcion',\r\n            key: 'prescripcion',\r\n        },\r\n        {\r\n            title: 'Detalles',\r\n            key: 'action',\r\n            render: (text, record) => (\r\n                <Space size=\"middle\">\r\n                    <Button onClick={showModal}>Detalles</Button>\r\n                </Space>\r\n            ),\r\n        },\r\n    ];\r\n\r\n    const data = [\r\n        {\r\n            key: \"62570ab89a6437369f835be7\",\r\n            id_nota: \"62570a9a9a6437369f835be5\",\r\n            prescripcion: \"Paracetamol cada 8 horas\",\r\n            createdAt: \"2022-04-13T17:39:04.541Z\",\r\n            updatedAt: \"2022-04-13T17:39:04.541Z\",\r\n            __v: 0\r\n        },\r\n        {\r\n            key: \"62570ab89a6437369f835be8\",\r\n            id_nota: \"62570a9a9a6437369f835be5\",\r\n            prescripcion: \"Paracetamol cada 8 horas\",\r\n            createdAt: \"2022-04-13T17:39:04.541Z\",\r\n            updatedAt: \"2022-04-13T17:39:04.541Z\",\r\n            __v: 0\r\n        }\r\n    ];\r\n    return (\r\n        <div className='mainContainer'>\r\n            <h4>Mis Recetas</h4>\r\n            \r\n            <Table columns={columns} dataSource={data} />\r\n\r\n            <Modal title=\"Basic Modal\" visible={isModalVisible} onOk={handleOk} onCancel={handleCancel}>\r\n\r\n                <p> _id\": \"62570ab89a6437369f835be7\",</p>\r\n                <p> id_nota\": \"62570a9a9a6437369f835be5\",</p>\r\n                <p> prescripcion\": \"Paracetamol cada 8 horas\",</p>\r\n                <p> createdAt\": \"2022-04-13T17:39:04.541Z\",</p>\r\n                <p> updatedAt\": \"2022-04-13T17:39:04.541Z\",</p>\r\n                <p> __v\": 0</p>\r\n\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Perfil() {\r\n  return (\r\n    <div>Mi Perfil</div>\r\n  )\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Row, Col, Statistic, Card } from 'antd'\r\nimport { Pie, Line } from '@ant-design/charts';\r\nimport './home.css'\r\n\r\nexport class Home extends Component {\r\n    \r\n    dataPie = [\r\n        {\r\n            type: 'Covid',\r\n            value: 130737,\r\n        },\r\n        {\r\n            type: 'Colesterol',\r\n            value: 21468,\r\n        },\r\n        {\r\n            type: 'Diabetes',\r\n            value: 18098,\r\n        },\r\n        {\r\n            type: 'Presion',\r\n            value: 17912,\r\n        },\r\n        {\r\n            type: 'Oseo',\r\n            value: 15282,\r\n        },\r\n        {\r\n            type: 'Migraña',\r\n            value: 11650,\r\n        },\r\n    ];\r\n\r\n    configPie = {\r\n        appendPadding: 10,\r\n        data: this.dataPie,\r\n        angleField: 'value',\r\n        colorField: 'type',\r\n        height: 450,\r\n        radius: 0.8,\r\n        label: {\r\n            type: 'inner',\r\n            offset: '-0.5',\r\n            content: '{name} {percentage}',\r\n            style: {\r\n                fill: '#fff',\r\n                fontSize: 14,\r\n                textAlign: 'center',\r\n            },\r\n        },\r\n    };\r\n\r\n    dataLine = [\r\n        { mes: 'Junio', consultas: 17945 },\r\n        { mes: 'Julio', consultas: 24011 },\r\n        { mes: 'Agosto', consultas: 46493 },\r\n        { mes: 'Septiembre', consultas: 105293 },\r\n        { mes: 'Octubre', consultas: 77190 }\r\n    ];\r\n\r\n    configLine = {\r\n        data: this.dataLine,\r\n        height: 410,\r\n        xField: 'mes',\r\n        yField: 'consultas',\r\n        color: '#01B075',\r\n        point: {\r\n            size: 5,\r\n            shape: 'diamond',\r\n            color: '#01B075'\r\n        },\r\n        label: {\r\n            style: {\r\n                fill: '#aaa',\r\n                fontSize: 16,\r\n                stroke: '#01B075'\r\n            },\r\n        },\r\n    };\r\n    render() {\r\n        return (\r\n            <>\r\n\r\n                <br />\r\n                <div className=\"contenedor\">\r\n                    <Row gutter={30}>\r\n                        <Col xs={24} sm={12} lg={6}>\r\n                            {/* <div className=\"cardsContenedor\" > */}\r\n                            <Card className=\"cardsContenedor\" hoverable bordered={false}>\r\n\r\n                                <Statistic title=\"Total Hospitales\" value=\"4\" valueStyle={{ color: 'white' }} style={{ backgroundColor: '#4BA6FE' }} className=\"cardsContenido\" />\r\n                            </Card>\r\n                        </Col>\r\n                        <Col xs={24} sm={12} lg={6}>\r\n                            <Card className=\"cardsContenedor\" hoverable bordered={false}>\r\n                                <Statistic title=\"Total Medicos\" value=\"14\" valueStyle={{ color: 'white' }} style={{ backgroundColor: '#FF838A' }} className=\"cardsContenido\" />\r\n                            </Card>\r\n                        </Col>\r\n\r\n                        <Col xs={24} sm={12} lg={6}>\r\n                            <Card className=\"cardsContenedor\" hoverable bordered={false}>\r\n\r\n                                <Statistic title=\"Total Pacientes\" value=\"241\" valueStyle={{ color: 'white' }} style={{ backgroundColor: '#18D0C2' }} className=\"cardsContenido\" />\r\n                            </Card>\r\n                        </Col>\r\n                        <Col xs={24} sm={12} lg={6}>\r\n                            <Card className=\"cardsContenedor\" hoverable bordered={false}>\r\n\r\n                                <Statistic title=\"Citas Hoy\" value={47} valueStyle={{ color: 'white' }} style={{ backgroundColor: '#847DFC' }} className=\"cardsContenido\" />\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n                    <br />\r\n                    <Row gutter={20}>\r\n                        <Col xs={24} md={12} className=\"graficaCircular\">\r\n                            <Pie {...this.configPie} style={{ backgroundColor: '#1F263C' }} />\r\n                        </Col>\r\n\r\n                        <Col xs={24} md={12}>\r\n                            <Line {...this.configLine} style={{ backgroundColor: '#1F263C', padding: '20px' }} />\r\n                        </Col>\r\n                    </Row>\r\n\r\n                </div>\r\n\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home\r\n","import React from 'react'\r\nimport { Container, Nav, Navbar } from \"react-bootstrap\";\r\nimport icon from '../assets/Icon.png';\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport { Button } from 'antd'\r\nimport MisCitas from './misCitas'\r\nimport Recetas from './recetas'\r\nimport Perfil from './perfil';\r\nimport Home from './home/home';\r\n\r\nconst logout = () => { localStorage.removeItem('sessionToken'); localStorage.removeItem('userType'); window.location.href = '/'; }\r\n\r\nfunction Navigator() {\r\n\r\n  return <Navbar bg=\"light\" expand=\"lg\">\r\n    <Container>\r\n      <Navbar.Brand href=\"#home\">\r\n        <img\r\n          src={icon}\r\n          width=\"40\"\r\n          height=\"35\"\r\n          className=\"d-inline-block align-top\"\r\n          alt=\"Recreamed logo\"\r\n        />\r\n        Bienvenido Paciente\r\n      </Navbar.Brand>\r\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n      <Navbar.Collapse id=\"basic-navbar-nav\">\r\n        <Nav className=\"me-auto\">\r\n          {/* <Nav.Link href=\"/\">Landing</Nav.Link> */}\r\n          <Nav.Link href=\"/citas\">Mis Citas</Nav.Link>\r\n          <Nav.Link href=\"/recetas\">Mis Recetas</Nav.Link>\r\n          <Nav.Link href=\"/perfil\">Mi Perfil</Nav.Link>\r\n        </Nav>\r\n      </Navbar.Collapse>\r\n      <Navbar.Collapse className=\"justify-content-end\">\r\n        <Button onClick={logout} >Cerrar Sesion</Button>\r\n      </Navbar.Collapse>\r\n    </Container>\r\n  </Navbar>;\r\n\r\n}\r\n\r\nexport default function PatientApp() {\r\n  return (\r\n    <Router>\r\n      <Navigator />\r\n      <Switch>\r\n        <Route path=\"/citas\">\r\n          <MisCitas />\r\n        </Route>\r\n        <Route path=\"/recetas\">\r\n          <Recetas />\r\n        </Route>\r\n        <Route path=\"/perfil\">\r\n          <Perfil/>\r\n        </Route>\r\n        <Route path=\"/\">\r\n          <Home/>\r\n        </Route>\r\n      </Switch>\r\n    </Router>\r\n  )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Table, Space, Row, Col, Button, Modal, Form, Input, message, DatePicker } from 'antd';\r\nimport { API } from '../../resources';\r\nimport Loading from '../../loading'\r\n// import { API } from '../resources'\r\n\r\nexport function Citas() {\r\n    const [isModalVisible, setIsModalVisible] = useState(false);\r\n    const [citasData, setCitasData] = useState([])\r\n    const [isLoading, setIsLoading] = useState(true)\r\n\r\n    useEffect(() => {\r\n        getCitasData()\r\n    }, [])\r\n\r\n    const getCitasData = () => {\r\n        fetch(API + 'citas')\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log(data); setCitasData(data);\r\n            })\r\n            .finally(() => setIsLoading(false))\r\n    }\r\n\r\n    const showModal = () => {\r\n        setIsModalVisible(true);\r\n    };\r\n\r\n    const handleOk = () => {\r\n        setIsModalVisible(false);\r\n    };\r\n\r\n    const handleCancel = () => {\r\n        setIsModalVisible(false);\r\n    };\r\n    const columns = [\r\n        {\r\n            title: 'Fecha y Hora',\r\n            dataIndex: 'fecha_hora',\r\n            key: 'fecha_hora',\r\n            render: text => <a>{text}</a>,\r\n        },\r\n        {\r\n            title: 'Paciente',\r\n            dataIndex: 'id_usuario',\r\n            key: 'id_usuario',\r\n        },\r\n        {\r\n            title: 'Sucursal',\r\n            dataIndex: 'id_sucursal',\r\n            key: 'v',\r\n        },\r\n        {\r\n            title: 'Comentarios',\r\n            dataIndex: 'comentarios',\r\n            key: 'comentarios',\r\n        },\r\n        {\r\n            title: 'Detalles',\r\n            key: 'detalles',\r\n            render: (text, record) => (\r\n                <Space size=\"middle\">\r\n                    {/* <a href>Enlace</a> */}\r\n                    <Button>Enlace</Button>\r\n                </Space>\r\n            ),\r\n        },\r\n    ];\r\n\r\n    const onFinish = (values) => {\r\n        console.log('Valores:', values);\r\n        fetch(API + 'expedientes/add', {\r\n            method: 'POST',\r\n            body: JSON.stringify(values),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }).then(res => res.json())\r\n            .then(response => { console.log('Success:', response); message.success(response.message || response.error); })\r\n            .catch(error => console.error('Error:', error))\r\n            .finally(() => { getCitasData(); setIsModalVisible(false) })\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    // DatePicker\r\n    function onChange(value, dateString) {\r\n        console.log('Selected Time: ', value);\r\n        console.log('Formatted Selected Time: ', dateString);\r\n    }\r\n    function onOk(value) {\r\n        console.log('onOk: ', value);\r\n    }\r\n\r\n    return (\r\n        <div className='mainContainer'>\r\n            <Row>\r\n                <Col span={8}><h4>Citas de todos los pacientes</h4></Col>\r\n                <Col>\r\n                    <Button type=\"primary\" onClick={showModal}>\r\n                        Nueva Cita\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n\r\n            {isLoading ? <Loading /> : <Table columns={columns} dataSource={citasData} />}\r\n\r\n\r\n\r\n            <Modal title=\"Nuevo expediente\" visible={isModalVisible} onOk={handleOk} onCancel={handleCancel}>\r\n                <Form name=\"expediente\" labelCol={{ span: 8 }} wrapperCol={{ span: 12 }} onFinish={onFinish} onFinishFailed={onFinishFailed} autoComplete=\"off\" >\r\n\r\n                    <Form.Item label=\"Paciente\" name=\"id_usuario\" rules={[{ required: true, message: 'Ingresa RFC' }]} >\r\n                        <Input />\r\n                    </Form.Item>\r\n                    <Form.Item label=\"Sucursal\" name=\"id_sucursal\" rules={[{ required: true, message: 'Ingresa RFC' }]} >\r\n                        <Input />\r\n                    </Form.Item>\r\n                    <Form.Item label=\"Fecha y Hora\" name=\"id_nota\" rules={[{ required: true, message: 'Selecciona Fecha y Hora' }]} >\r\n                        <DatePicker showTime onChange={onChange} onOk={onOk} placeholder='Selecciona Fecha y Hora' />\r\n                    </Form.Item>\r\n                    <Form.Item label=\"Enlace a la reunion\" name=\"id_reunion\" rules={[{ required: true, message: 'Ingresa RFC' }]} >\r\n                        <Input />\r\n                    </Form.Item>\r\n                    <Form.Item label=\"Contraseña\" name=\"password_reunion\" rules={[{ required: true, message: 'Ingresa RFC' }]} >\r\n                        <Input placeholder='Opcional' />\r\n                    </Form.Item>\r\n                    <Form.Item label=\"Comentarios\" name=\"comentarios\" rules={[{ required: true, message: 'Ingresa RFC' }]} >\r\n                        <Input />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\r\n                        <Button type=\"primary\" htmlType=\"submit\" form='expediente'>\r\n                            Guardar\r\n                        </Button>\r\n                    </Form.Item>\r\n                </Form>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Form, Input, Button, message } from 'antd'\r\nimport { InputNumber, Select } from 'antd';\r\nimport { S_API } from '../../resources'\r\n\r\nconst { Option } = Select;\r\nconst estados = [\"Michoacan\", \"Morelos\", \"Guerrero\"];\r\n\r\nexport default function Register() {\r\n  \r\n  const [form] = Form.useForm(); \r\n\r\n  const onFinish = (values) => {\r\n    values.avatar = 'https://';\r\n    values.estatus = '1';\r\n    values.rol = 'Paciente';\r\n    delete values.confirm;\r\n    delete values.prefix;\r\n    delete values.agreement;\r\n\r\n    console.log(values)\r\n    fetch(S_API + 'register', {\r\n      method: 'POST',\r\n      body: JSON.stringify(values),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).then(res => res.json())\r\n      .then(response => { console.log('Success:', response); message.success(response.message || response.error); })\r\n      .catch(error => console.error('Error:', error))\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log('Failed:', errorInfo);\r\n  };\r\n\r\n  const prefixSelector = (\r\n    <Form.Item name=\"prefix\" noStyle>\r\n      <Select\r\n        style={{\r\n          width: 70,\r\n        }}\r\n      >\r\n        <Option value=\"+52\">+52</Option>\r\n      </Select>\r\n    </Form.Item>\r\n  );\r\n  const suffixSelector = (\r\n    <Form.Item name=\"suffix\" noStyle>\r\n      <Select\r\n        style={{\r\n          width: 70,\r\n        }}\r\n      >\r\n        <Option value=\"USD\">$</Option>\r\n        <Option value=\"CNY\">¥</Option>\r\n      </Select>\r\n    </Form.Item>\r\n  );\r\n  return (\r\n    <div>\r\n      <h4>Registrar Usuario</h4>\r\n      <br />\r\n      <Form\r\n        // {...formItemLayout}\r\n        labelCol={{ span: 6 }} wrapperCol={{ span: 16 }}\r\n        form={form}\r\n        name=\"register\"\r\n        onFinish={onFinish}\r\n        initialValues={{\r\n          residence: ['zhejiang', 'hangzhou', 'xihu'],\r\n          prefix: '52',\r\n        }}\r\n        scrollToFirstError\r\n      >\r\n        <Form.Item\r\n          name=\"email\"\r\n          label=\"Correo\"\r\n          rules={[\r\n            {\r\n              type: 'email',\r\n              message: 'The input is not valid E-mail!',\r\n            },\r\n            {\r\n              required: true,\r\n              message: 'Please input your E-mail!',\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item name=\"password\" label=\"Contraseña\" rules={[{ required: true, message: 'Por favor ingrese su contraseña!', },]} hasFeedback >\r\n          <Input.Password />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"confirm\"\r\n          label=\"Confirmar contraseña\"\r\n          dependencies={['password']}\r\n          hasFeedback\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Please confirm your password!',\r\n            },\r\n            ({ getFieldValue }) => ({\r\n              validator(_, value) {\r\n                if (!value || getFieldValue('password') === value) {\r\n                  return Promise.resolve();\r\n                }\r\n                return Promise.reject(new Error('Las contraseñas deben coincidir!'));\r\n              },\r\n            }),\r\n          ]}\r\n        >\r\n          <Input.Password />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"telefono\"\r\n          label=\"Telefono\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Please input your phone number!',\r\n            },\r\n          ]}\r\n        >\r\n          <Input\r\n            addonBefore={prefixSelector}\r\n            style={{\r\n              width: '100%',\r\n            }}\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"id_sucursal\"\r\n          label=\"Id Sucursal\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Ingresa el ID de la sucursal',\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"id_medicoasignado\"\r\n          label=\"Id Medico Asignado\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Ingresa el ID del medico ',\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"name\"\r\n          label=\"Nombre\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Ingresa Nombre y apellidos',\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"cedula\"\r\n          label=\"Cedula\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Ingresa cedula',\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"calle\"\r\n          label=\"Calle\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Ingresa calle',\r\n              whitespace: true,\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"numexterior\"\r\n          label=\"Num Exterior\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Ingresa numero exterior',\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"numinterior\"\r\n          label=\"Num Interior\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Ingresa numinterior',\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"Colonia\"\r\n          name=\"colonia\"\r\n          rules={[{ required: true, message: 'Please input your colobnia!' }]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item name=\"estado\" label=\"Estado\" rules={[{ required: true, message: 'Apellido materno', },]}>\r\n          <Select placeholder=\"Elije tu estado\">\r\n            {estados.map(e => <Option value={e}>{e}</Option>)}\r\n          </Select>\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"municipio\"\r\n          label=\"Municipio\"\r\n          rules={[{ required: true, message: 'Ingresa tu municipio' }]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item name=\"codigopostal\" label=\"Codigo Postal\" rules={[{ required: true, message: 'Ingresa codigopostal', },]}>\r\n          <InputNumber addonAfter={suffixSelector} style={{ width: '100%', }} />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"certificacion\"\r\n          label=\"Certificacion\"\r\n          rules={[{ required: true, message: 'Ingresa tu certificacion' }]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"universidad\"\r\n          label=\"Universidad\" rules={[{ required: true, message: 'Ingresa tu universidad' }]} >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item >\r\n          <Button type=\"primary\" htmlType=\"submit\">\r\n            Registrar\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Table, Space, Button, Card, Modal } from 'antd'\r\nimport { API } from '../../resources';\r\nimport Loading from '../../loading';\r\n\r\n\r\nexport default function Dash() {\r\n\r\n  const [usuario, setUsuario] = useState({});\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const showModal = () => { setIsModalVisible(true); };\r\n  const handleOk = () => { setIsModalVisible(false); };\r\n  const handleCancel = () => { setIsModalVisible(false); };\r\n  const [isLoading, setILoading] = useState(true);\r\n  const [pacientesData, setPacientesData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getPacientesData()\r\n  }, [])\r\n\r\n  const getPacientesData = () => {\r\n    fetch(API + 'users_by_rol/Paciente')\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        console.log(data); setPacientesData(data);\r\n      })\r\n      .finally(() => setILoading(false))\r\n  }\r\n\r\n  const columns = [\r\n    {\r\n      title: 'Nombre',\r\n      dataIndex: 'name',\r\n      key: 'name',\r\n    },\r\n    {\r\n      title: 'Rol',\r\n      dataIndex: 'rol',\r\n      key: 'rol',\r\n    },\r\n    {\r\n      title: 'Sucursal',\r\n      dataIndex: 'id_sucursal',\r\n      key: 'address',\r\n    },\r\n    {\r\n      title: 'Telefono',\r\n      dataIndex: 'telefono',\r\n      key: 'tel',\r\n    },\r\n    {\r\n      title: 'Detalles',\r\n      key: 'detalles',\r\n      render: (text, record) => (\r\n        <Space size=\"middle\">\r\n          <Button onClick={() => { setUsuario(record); showModal(); }}>Detalles</Button>\r\n        </Space>\r\n      )\r\n    }\r\n  ];\r\n\r\n  const gridStyle = {\r\n    width: '50%',\r\n    height: '50px',\r\n    textAlign: 'center',\r\n    display: 'inline-flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center'\r\n  };\r\n\r\n  function DetalleUsuario() {\r\n    return <div>\r\n      <Card bordered={false}>\r\n        {\r\n          Object.keys(usuario).map(k => {\r\n            return <><Card.Grid style={gridStyle}>{k}</Card.Grid><Card.Grid style={gridStyle} size='small'>{usuario[k]}</Card.Grid></>\r\n          })\r\n        }\r\n      </Card>\r\n    </div>\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h4>Usuarios</h4>\r\n      {isLoading ? <Loading /> :\r\n\r\n        <Table dataSource={pacientesData} columns={columns} />\r\n      }\r\n      <Modal width={800} title={<h4>Detalles de la nota </h4>} visible={isModalVisible} onOk={handleOk} onCancel={handleCancel}>\r\n        <DetalleUsuario />\r\n      </Modal>\r\n    </div>\r\n  )\r\n\r\n}\r\n","import { React, Component } from 'react';\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\nimport { Layout, Menu } from 'antd';\r\nimport { UserOutlined, UserAddOutlined, MenuOutlined } from '@ant-design/icons';\r\n\r\nimport Register from './register.user';\r\nimport Dash from './dash.users';\r\n\r\nconst { Header, Content, Footer, Sider } = Layout;\r\n\r\nclass SideMenu extends Component {\r\n  handleClick = e => {\r\n    console.log('click ', e);\r\n  };\r\n\r\n  state = {\r\n    collapsed: false,\r\n  };\r\n\r\n  onCollapse = (collapsed) => {\r\n    this.setState({ collapsed });\r\n  }\r\n  toggle = () => {\r\n    this.setState({\r\n      collapsed: !this.state.collapsed,\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <Layout style={{ minHeight: '100vh' }}>\r\n          <Sider\r\n            theme=\"light\"\r\n            collapsible\r\n            collapsed={this.state.collapsed}\r\n            onCollapse={this.onCollapse}>\r\n            <div className=\"logo\" />\r\n            <Menu defaultSelectedKeys={['1']} mode=\"inline\">\r\n              <Menu.Item icon={ <UserOutlined /> } key=\"1\">\r\n                <span>Usuarios</span>\r\n                <Link to=\"/usuarios\" />\r\n              </Menu.Item>\r\n              <Menu.Item icon={ <UserAddOutlined /> } key=\"2\">\r\n                <span>Registrar Usuario</span>\r\n                <Link to=\"/registrar_usuario\" />\r\n              </Menu.Item>\r\n            </Menu>\r\n          </Sider>\r\n          <Layout>\r\n\r\n            <Header style={{ background: '#fff', padding: 0, paddingLeft: 16 }}>\r\n              <MenuOutlined className=\"trigger\" style={{ cursor: 'pointer' }} onClick={this.toggle} />\r\n            </Header>\r\n\r\n            <Content style={{ margin: '24px 16px', padding: 24, background: '#fff', minHeight: 280 }}>\r\n              <Route exact path=\"/registrar_usuario\" component={Register} />\r\n              <Route path=\"/usuarios\" component={Dash} />\r\n            </Content>\r\n\r\n            <Footer style={{ textAlign: 'center' }}>\r\n              RECREAMED ©2021 Created by Realidad Creativa\r\n            </Footer>\r\n          </Layout>\r\n\r\n        </Layout>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SideMenu\r\n\r\n\r\n","import React, { Component } from 'react'\r\n// import {Card } from 'antd'\r\nimport SideMenu from './side.users';\r\n\r\nexport class Users extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div>\r\n                            <SideMenu />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Users\r\n","import { Form, Input, Button, message } from 'antd'\r\nimport React, { useState } from 'react';\r\nimport {\r\n  InputNumber,\r\n  Select,\r\n  Checkbox,\r\n} from 'antd';\r\nimport { S_API } from '../../resources'\r\nconst { Option } = Select;\r\nconst estados = [\"Michoacan\", \"Morelos\", \"Guerrero\"];\r\n\r\nexport default function Register() {\r\n\r\n  const [form] = Form.useForm();\r\n\r\n  const onFinish = (values) => {\r\n    values.avatar = 'https://';\r\n    values.estatus = '1';\r\n    values.rol = 'Medico';\r\n    delete values.confirm;\r\n    delete values.prefix;\r\n    delete values.agreement;\r\n\r\n    console.log(values)\r\n    fetch(S_API + 'register', {\r\n      method: 'POST',\r\n      body: JSON.stringify(values),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).then(res => res.json())\r\n      .then(response => { console.log('Success:', response); message.success(response.message || response.error); })\r\n      .catch(error => console.error('Error:', error))\r\n  };\r\n\r\n  const prefixSelector = (\r\n    <Form.Item name=\"prefix\" noStyle>\r\n      <Select\r\n        style={{\r\n          width: 70,\r\n        }}\r\n      >\r\n        <Option value=\"+52\">+52</Option>\r\n      </Select>\r\n    </Form.Item>\r\n  );\r\n  const suffixSelector = (\r\n    <Form.Item name=\"suffix\" noStyle>\r\n      <Select\r\n        style={{\r\n          width: 70,\r\n        }}\r\n      >\r\n        <Option value=\"USD\">$</Option>\r\n        <Option value=\"CNY\">¥</Option>\r\n      </Select>\r\n    </Form.Item>\r\n  );\r\n\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log('Failed:', errorInfo);\r\n  };\r\n  return (\r\n    <div>\r\n      <h1>Registrar doctor</h1>\r\n      <br />\r\n      {/* <Form name=\"basic\" labelCol={{ span: 6 }} wrapperCol={{ span: 16 }} initialValues={{ remember: true }} onFinish={onFinish} onFinishFailed={onFinishFailed} autoComplete=\"off\" >\r\n        <Form.Item label=\"Hospital\" name=\"Hospital\" rules={[{ required: true, message: 'Please input your username!' }]} >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item label=\"Nombre\" name=\"username\" rules={[{ required: true, message: 'Please input your username!' }]} >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item label=\"Apellido Paterno\" name=\"rfc\" rules={[{ required: true, message: 'Ingresa RFC' }]} >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item label=\"Apellido Materno\" name=\"calle\" rules={[{ required: true, message: 'Avenida Madero esquina con Santiago Tapia' }]} >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item label=\"Cedula\" name=\"nint\" rules={[{ required: true, message: '74B' }]} >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item label=\"Calle\" name=\"next\" rules={[{ required: true, message: '12' }]} >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item label=\"Numero\" name=\"colonia\" rules={[{ required: true, message: 'Centro' }]} >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item label=\"Colonia\" name=\"cp\" rules={[{ required: true, message: '58000' }]} >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item label=\"Telefono\" name=\"ciudad_municipio\" rules={[{ required: true, message: 'Ingresa ciudad/municipio' }]} >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item label=\"Correo\" name=\"estado\" rules={[{ required: true, message: 'Ingresa estado' }]} >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\r\n          <Button type=\"primary\" htmlType=\"submit\">\r\n            Guardar\r\n          </Button>\r\n        </Form.Item>\r\n      </Form> */}\r\n      <Form\r\n        // {...formItemLayout}\r\n        labelCol={{ span: 6 }} wrapperCol={{ span: 16 }}\r\n        form={form}\r\n        name=\"register\"\r\n        onFinish={onFinish}\r\n        initialValues={{\r\n          residence: ['zhejiang', 'hangzhou', 'xihu'],\r\n          prefix: '52',\r\n        }}\r\n        scrollToFirstError\r\n      >\r\n        <Form.Item\r\n          name=\"email\"\r\n          label=\"Correo\"\r\n          rules={[\r\n            {\r\n              type: 'email',\r\n              message: 'The input is not valid E-mail!',\r\n            },\r\n            {\r\n              required: true,\r\n              message: 'Please input your E-mail!',\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item name=\"password\" label=\"Contraseña\" rules={[{ required: true, message: 'Por favor ingrese su contraseña!', },]} hasFeedback >\r\n          <Input.Password />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"confirm\"\r\n          label=\"Confirmar contraseña\"\r\n          dependencies={['password']}\r\n          hasFeedback\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Please confirm your password!',\r\n            },\r\n            ({ getFieldValue }) => ({\r\n              validator(_, value) {\r\n                if (!value || getFieldValue('password') === value) {\r\n                  return Promise.resolve();\r\n                }\r\n                return Promise.reject(new Error('Las contraseñas deben coincidir!'));\r\n              },\r\n            }),\r\n          ]}\r\n        >\r\n          <Input.Password />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"telefono\"\r\n          label=\"Telefono\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Please input your phone number!',\r\n            },\r\n          ]}\r\n        >\r\n          <Input\r\n            addonBefore={prefixSelector}\r\n            style={{\r\n              width: '100%',\r\n            }}\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"id_sucursal\"\r\n          label=\"Id Sucursal\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Ingresa el ID de la sucursal',\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"id_medicoasignado\"\r\n          label=\"Id Medico Asignado\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Ingresa el ID del medico ',\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"name\"\r\n          label=\"Nombre\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Ingresa Nombre y apellidos',\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"cedula\"\r\n          label=\"Cedula\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Ingresa cedula',\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"calle\"\r\n          label=\"Calle\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Ingresa calle',\r\n              whitespace: true,\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"numexterior\"\r\n          label=\"Num Exterior\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Ingresa numero exterior',\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"numinterior\"\r\n          label=\"Num Interior\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Ingresa numinterior',\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"Colonia\"\r\n          name=\"colonia\"\r\n          rules={[{ required: true, message: 'Please input your colobnia!' }]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item name=\"estado\" label=\"Estado\" rules={[{ required: true, message: 'Apellido materno', },]}>\r\n          <Select placeholder=\"Elije tu estado\">\r\n            {estados.map(e => <Option value={e}>{e}</Option>)}\r\n          </Select>\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"municipio\"\r\n          label=\"Municipio\"\r\n          rules={[{ required: true, message: 'Ingresa tu municipio' }]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item name=\"codigopostal\" label=\"Codigo Postal\" rules={[{ required: true, message: 'Ingresa codigopostal', },]}>\r\n          <InputNumber addonAfter={suffixSelector} style={{ width: '100%', }} />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"certificacion\"\r\n          label=\"Certificacion\"\r\n          rules={[{ required: true, message: 'Ingresa tu certificacion' }]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"universidad\"\r\n          label=\"Universidad\" rules={[{ required: true, message: 'Ingresa tu universidad' }]} >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item >\r\n          <Button type=\"primary\" htmlType=\"submit\">\r\n            Registrar\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </div>\r\n  )\r\n}\r\n","import React, { Component, useState, useEffect } from 'react'\r\nimport { Table } from 'antd';\r\nimport { API } from '../../resources'\r\nimport Loading from '../../loading';\r\n\r\nexport default function Dash() {\r\n\r\n  const [isLoading, setILoading] = useState(true);\r\n  const [doctoresData, setDoctoresData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getDoctoresData()\r\n  }, [])\r\n\r\n  const getDoctoresData = () => {\r\n    fetch(API + 'users_by_rol/Medico')\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        console.log(data); setDoctoresData(data);\r\n      })\r\n      .finally(() => setILoading(false))\r\n  }\r\n\r\n  const columns = [\r\n    {\r\n      title: 'Rol',\r\n      dataIndex: 'rol',\r\n      key: 'rol',\r\n      onFilter: (value, record) => record.rol === \"Medico\",\r\n    },\r\n    {\r\n      title: 'Nombre',\r\n      dataIndex: 'name',\r\n      key: 'name',\r\n    },\r\n    {\r\n      title: 'Correo',\r\n      dataIndex: 'email',\r\n      key: 'email',\r\n    },\r\n    {\r\n      title: 'Telefono',\r\n      dataIndex: 'telefono',\r\n      key: 'telefono',\r\n    },\r\n  ];\r\n  return (\r\n    <div>\r\n      <h1>Doctores</h1>\r\n      {isLoading ? <Loading /> :\r\n        <Table dataSource={doctoresData} columns={columns} />\r\n      }\r\n    </div>\r\n  )\r\n}\r\n","import { React, Component } from 'react';\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\nimport { Layout, Menu } from 'antd';\r\nimport { TeamOutlined, UserAddOutlined, MenuOutlined } from '@ant-design/icons';\r\n\r\nimport Register from './register.doctor';\r\nimport Dash from './dash.doctors';\r\n\r\nconst { Header, Content, Footer, Sider } = Layout;\r\n\r\nclass SideMenu extends Component {\r\n  handleClick = e => {\r\n    console.log('click ', e);\r\n  };\r\n\r\n  state = {\r\n    collapsed: false,\r\n  };\r\n\r\n  onCollapse = (collapsed) => {\r\n    this.setState({ collapsed });\r\n  }\r\n  toggle = () => {\r\n    this.setState({\r\n      collapsed: !this.state.collapsed,\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <Layout style={{ minHeight: '100vh' }}>\r\n          <Sider\r\n            theme=\"light\"\r\n            collapsible\r\n            collapsed={this.state.collapsed}\r\n            onCollapse={this.onCollapse}>\r\n            <div className=\"logo\" />\r\n            <Menu defaultSelectedKeys={['1']} mode=\"inline\">\r\n              <Menu.Item icon={<TeamOutlined />} key=\"1\">\r\n                <span>Médicos</span>\r\n                <Link to=\"/doctores\" />\r\n              </Menu.Item>\r\n              <Menu.Item icon={<UserAddOutlined />} key=\"2\">\r\n                <span>Registrar Médico</span>\r\n                <Link to=\"/registrar\" />\r\n              </Menu.Item>\r\n            </Menu>\r\n            {/* <Menu\r\n        onClick={this.handleClick}\r\n        style={{ width: 256 }}\r\n        defaultSelectedKeys={['1']}\r\n        defaultOpenKeys={['sub1']}\r\n        mode=\"inline\"\r\n      >\r\n        <SubMenu key=\"sub1\" icon={<MailOutlined />} title=\"Navigation One\">\r\n          <Menu.ItemGroup key=\"g1\" title=\"Item 1\">\r\n            <Menu.Item key=\"1\" href=\"/dash\">Option 1 <Link to=\"/meseros\" /> </Menu.Item>\r\n            <Menu.Item key=\"2\">Option 2</Menu.Item>\r\n          </Menu.ItemGroup>\r\n          <Menu.ItemGroup key=\"g2\" title=\"Item 2\">\r\n            <Menu.Item key=\"3\">Option 3</Menu.Item>\r\n            <Menu.Item key=\"4\">Option 4</Menu.Item>\r\n          </Menu.ItemGroup>\r\n        </SubMenu>\r\n        <SubMenu key=\"sub2\" icon={<AppstoreOutlined />} title=\"Navigation Two\">\r\n          <Menu.Item key=\"5\">Option 5</Menu.Item>\r\n          <Menu.Item key=\"6\">Option 6</Menu.Item>\r\n          <SubMenu key=\"sub3\" title=\"Submenu\">\r\n            <Menu.Item key=\"7\">Option 7</Menu.Item>\r\n            <Menu.Item key=\"8\">Option 8</Menu.Item>\r\n          </SubMenu>\r\n        </SubMenu>\r\n        <SubMenu key=\"sub4\" icon={<SettingOutlined />} title=\"Navigation Three\">\r\n          <Menu.Item key=\"9\">Option 9</Menu.Item>\r\n          <Menu.Item key=\"10\">Option 10</Menu.Item>\r\n          <Menu.Item key=\"11\">Option 11</Menu.Item>\r\n          <Menu.Item key=\"12\">Option 12</Menu.Item>\r\n        </SubMenu>\r\n      </Menu> */}\r\n          </Sider>\r\n          <Layout>\r\n\r\n            <Header style={{ background: '#fff', padding: 0, paddingLeft: 16 }}>\r\n              <MenuOutlined className=\"trigger\" style={{ cursor: 'pointer' }} onClick={this.toggle} />\r\n            </Header>\r\n\r\n            <Content style={{ margin: '24px 16px', padding: 24, background: '#fff', minHeight: 280 }}>\r\n              <Route exact path=\"/registrar\" component={Register} />\r\n              <Route path=\"/doctores\" component={Dash} />\r\n            </Content>\r\n\r\n            <Footer style={{ textAlign: 'center' }}>\r\n              RECREAMED ©2021 Created by Realidad Creativa\r\n            </Footer>\r\n          </Layout>\r\n\r\n        </Layout>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SideMenu\r\n\r\n\r\n","import React, { Component } from 'react'\r\n// import {Card } from 'antd'\r\nimport SideMenu from './side.doctors';\r\n\r\nexport class Doctors extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div>\r\n                            <SideMenu />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Doctors\r\n","import React from 'react'\r\n\r\nexport default function Sucursal() {\r\n  return (\r\n    <div>Perfil de la sucursal</div>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function PerfilAdministrador() {\r\n  return (\r\n    <div>Perfil del Administrador</div>\r\n  )\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Row, Col, Statistic, Card } from 'antd'\r\nimport { Pie, Line } from '@ant-design/charts';\r\nimport './home.css'\r\n\r\nexport class Home extends Component {\r\n    \r\n    dataPie = [\r\n        {\r\n            type: 'Covid',\r\n            value: 130737,\r\n        },\r\n        {\r\n            type: 'Colesterol',\r\n            value: 21468,\r\n        },\r\n        {\r\n            type: 'Diabetes',\r\n            value: 18098,\r\n        },\r\n        {\r\n            type: 'Presion',\r\n            value: 17912,\r\n        },\r\n        {\r\n            type: 'Oseo',\r\n            value: 15282,\r\n        },\r\n        {\r\n            type: 'Migraña',\r\n            value: 11650,\r\n        },\r\n    ];\r\n\r\n    configPie = {\r\n        appendPadding: 10,\r\n        data: this.dataPie,\r\n        angleField: 'value',\r\n        colorField: 'type',\r\n        height: 450,\r\n        radius: 0.8,\r\n        label: {\r\n            type: 'inner',\r\n            offset: '-0.5',\r\n            content: '{name} {percentage}',\r\n            style: {\r\n                fill: '#fff',\r\n                fontSize: 14,\r\n                textAlign: 'center',\r\n            },\r\n        },\r\n    };\r\n\r\n    dataLine = [\r\n        { mes: 'Junio', consultas: 17945 },\r\n        { mes: 'Julio', consultas: 24011 },\r\n        { mes: 'Agosto', consultas: 46493 },\r\n        { mes: 'Septiembre', consultas: 105293 },\r\n        { mes: 'Octubre', consultas: 77190 }\r\n    ];\r\n\r\n    configLine = {\r\n        data: this.dataLine,\r\n        height: 410,\r\n        xField: 'mes',\r\n        yField: 'consultas',\r\n        color: '#01B075',\r\n        point: {\r\n            size: 5,\r\n            shape: 'diamond',\r\n            color: '#01B075'\r\n        },\r\n        label: {\r\n            style: {\r\n                fill: '#aaa',\r\n                fontSize: 16,\r\n                stroke: '#01B075'\r\n            },\r\n        },\r\n    };\r\n    render() {\r\n        return (\r\n            <>\r\n\r\n                <br />\r\n                <div className=\"contenedor\">\r\n                    <Row gutter={30}>\r\n                        <Col xs={24} sm={12} lg={6}>\r\n                            {/* <div className=\"cardsContenedor\" > */}\r\n                            <Card className=\"cardsContenedor\" hoverable bordered={false}>\r\n\r\n                                <Statistic title=\"Total Hospitales\" value=\"4\" valueStyle={{ color: 'white' }} style={{ backgroundColor: '#4BA6FE' }} className=\"cardsContenido\" />\r\n                            </Card>\r\n                        </Col>\r\n                        <Col xs={24} sm={12} lg={6}>\r\n                            <Card className=\"cardsContenedor\" hoverable bordered={false}>\r\n                                <Statistic title=\"Total Medicos\" value=\"14\" valueStyle={{ color: 'white' }} style={{ backgroundColor: '#FF838A' }} className=\"cardsContenido\" />\r\n                            </Card>\r\n                        </Col>\r\n\r\n                        <Col xs={24} sm={12} lg={6}>\r\n                            <Card className=\"cardsContenedor\" hoverable bordered={false}>\r\n\r\n                                <Statistic title=\"Total Pacientes\" value=\"241\" valueStyle={{ color: 'white' }} style={{ backgroundColor: '#18D0C2' }} className=\"cardsContenido\" />\r\n                            </Card>\r\n                        </Col>\r\n                        <Col xs={24} sm={12} lg={6}>\r\n                            <Card className=\"cardsContenedor\" hoverable bordered={false}>\r\n\r\n                                <Statistic title=\"Citas Hoy\" value={47} valueStyle={{ color: 'white' }} style={{ backgroundColor: '#847DFC' }} className=\"cardsContenido\" />\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n                    <br />\r\n                    <Row gutter={20}>\r\n                        <Col xs={24} md={12} className=\"graficaCircular\">\r\n                            <Pie {...this.configPie} style={{ backgroundColor: '#1F263C' }} />\r\n                        </Col>\r\n\r\n                        <Col xs={24} md={12}>\r\n                            <Line {...this.configLine} style={{ backgroundColor: '#1F263C', padding: '20px' }} />\r\n                        </Col>\r\n                    </Row>\r\n\r\n                </div>\r\n\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home\r\n","import React from 'react'\r\nimport { Container, Nav, Navbar } from \"react-bootstrap\";\r\nimport { Button } from 'antd'\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport {Citas} from './citas/citas'\r\nimport Users from './users/main.users';\r\nimport Doctors from './doctors/main.doctors'\r\nimport Sucursal from './sucursal'\r\nimport PerfilAdministrador from './perfilAdministrador'\r\nimport Home from './home/home'\r\nimport icon from '../assets/Icon.png';\r\n\r\nconst logout = () => { localStorage.removeItem('sessionToken'); localStorage.removeItem('userType'); window.location.href = '/'; }\r\n\r\nfunction Navigator() {\r\n  return <Navbar bg=\"light\" expand=\"lg\">\r\n    <Container>\r\n      <Navbar.Brand href=\"#home\">\r\n        <img\r\n          src={icon}\r\n          width=\"40\"\r\n          height=\"35\"\r\n          className=\"d-inline-block align-top\"\r\n          alt=\"Recreamed logo\"\r\n        />\r\n        Bienvenido Administrador\r\n      </Navbar.Brand>\r\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n      <Navbar.Collapse id=\"basic-navbar-nav\">\r\n        <Nav className=\"me-auto\">\r\n\r\n          <Nav.Link href=\"/\">Inicio</Nav.Link>\r\n          {/* <Nav.Link href=\"/\">Landing</Nav.Link> */}\r\n          <Nav.Link href=\"farmacia\">Farmacia</Nav.Link>\r\n          <Nav.Link href=\"#\">|</Nav.Link>\r\n          <Nav.Link href=\"doctores\">Medicos</Nav.Link>\r\n          <Nav.Link href=\"administrador\">perfil del administrador</Nav.Link>\r\n          <Nav.Link href=\"pacientes\">Pacientes</Nav.Link>\r\n          <Nav.Link href=\"citas\">Citas</Nav.Link>\r\n          <Nav.Link href=\"sucursal\">Sucursal</Nav.Link>\r\n          <Nav.Link href=\"#\">|</Nav.Link>\r\n\r\n        </Nav>\r\n      </Navbar.Collapse>\r\n      <Navbar.Collapse className=\"justify-content-end\">\r\n        <Button onClick={logout} >Cerrar Sesion</Button>\r\n      </Navbar.Collapse>\r\n    </Container>\r\n  </Navbar>;\r\n}\r\n\r\nexport default function AdminHospitalApp() {\r\n  return (\r\n    <Router>\r\n      <Navigator />\r\n      <Switch>\r\n        <Route path=\"/sucursal\">\r\n          <Sucursal/>\r\n        </Route>\r\n        <Route path=\"/doctores\">\r\n          <Doctors />\r\n        </Route>\r\n        <Route path=\"/administrador\">\r\n          <PerfilAdministrador />\r\n        </Route>\r\n        <Route path=\"/citas\">\r\n          <Citas />\r\n        </Route>\r\n        <Route path=\"/pacientes\">\r\n          <Users />\r\n        </Route>\r\n        <Route path=\"/\">\r\n          <Home />\r\n        </Route>\r\n\r\n      </Switch>\r\n    </Router>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Form, Input, Button, message } from 'antd'\r\nimport { InputNumber, Select } from 'antd';\r\nimport { S_API } from '../../resources'\r\n\r\nconst { Option } = Select;\r\nconst estados = [\"Michoacan\", \"Morelos\", \"Guerrero\"];\r\n\r\nexport default function Register() {\r\n  \r\n  const [form] = Form.useForm(); \r\n\r\n  const onFinish = (values) => {\r\n    values.avatar = 'https://';\r\n    values.estatus = '1';\r\n    values.rol = 'Paciente';\r\n    delete values.confirm;\r\n    delete values.prefix;\r\n    delete values.agreement;\r\n\r\n    console.log(values)\r\n    fetch(S_API + 'register', {\r\n      method: 'POST',\r\n      body: JSON.stringify(values),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).then(res => res.json())\r\n      .then(response => { console.log('Success:', response); message.success(response.message || response.error); })\r\n      .catch(error => console.error('Error:', error))\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log('Failed:', errorInfo);\r\n  };\r\n\r\n  const prefixSelector = (\r\n    <Form.Item name=\"prefix\" noStyle>\r\n      <Select\r\n        style={{\r\n          width: 70,\r\n        }}\r\n      >\r\n        <Option value=\"+52\">+52</Option>\r\n      </Select>\r\n    </Form.Item>\r\n  );\r\n  const suffixSelector = (\r\n    <Form.Item name=\"suffix\" noStyle>\r\n      <Select\r\n        style={{\r\n          width: 70,\r\n        }}\r\n      >\r\n        <Option value=\"USD\">$</Option>\r\n        <Option value=\"CNY\">¥</Option>\r\n      </Select>\r\n    </Form.Item>\r\n  );\r\n  return (\r\n    <div>\r\n      <h4>Registrar Usuario</h4>\r\n      <br />\r\n      <Form\r\n        // {...formItemLayout}\r\n        labelCol={{ span: 6 }} wrapperCol={{ span: 16 }}\r\n        form={form}\r\n        name=\"register\"\r\n        onFinish={onFinish}\r\n        initialValues={{\r\n          residence: ['zhejiang', 'hangzhou', 'xihu'],\r\n          prefix: '52',\r\n        }}\r\n        scrollToFirstError\r\n      >\r\n        <Form.Item\r\n          name=\"email\"\r\n          label=\"Correo\"\r\n          rules={[\r\n            {\r\n              type: 'email',\r\n              message: 'The input is not valid E-mail!',\r\n            },\r\n            {\r\n              required: true,\r\n              message: 'Please input your E-mail!',\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item name=\"password\" label=\"Contraseña\" rules={[{ required: true, message: 'Por favor ingrese su contraseña!', },]} hasFeedback >\r\n          <Input.Password />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"confirm\"\r\n          label=\"Confirmar contraseña\"\r\n          dependencies={['password']}\r\n          hasFeedback\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Please confirm your password!',\r\n            },\r\n            ({ getFieldValue }) => ({\r\n              validator(_, value) {\r\n                if (!value || getFieldValue('password') === value) {\r\n                  return Promise.resolve();\r\n                }\r\n                return Promise.reject(new Error('Las contraseñas deben coincidir!'));\r\n              },\r\n            }),\r\n          ]}\r\n        >\r\n          <Input.Password />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"telefono\"\r\n          label=\"Telefono\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Please input your phone number!',\r\n            },\r\n          ]}\r\n        >\r\n          <Input\r\n            addonBefore={prefixSelector}\r\n            style={{\r\n              width: '100%',\r\n            }}\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"id_sucursal\"\r\n          label=\"Id Sucursal\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Ingresa el ID de la sucursal',\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"id_medicoasignado\"\r\n          label=\"Id Medico Asignado\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Ingresa el ID del medico ',\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"name\"\r\n          label=\"Nombre\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Ingresa Nombre y apellidos',\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"cedula\"\r\n          label=\"Cedula\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Ingresa cedula',\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"calle\"\r\n          label=\"Calle\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Ingresa calle',\r\n              whitespace: true,\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"numexterior\"\r\n          label=\"Num Exterior\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Ingresa numero exterior',\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"numinterior\"\r\n          label=\"Num Interior\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Ingresa numinterior',\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"Colonia\"\r\n          name=\"colonia\"\r\n          rules={[{ required: true, message: 'Please input your colobnia!' }]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item name=\"estado\" label=\"Estado\" rules={[{ required: true, message: 'Apellido materno', },]}>\r\n          <Select placeholder=\"Elije tu estado\">\r\n            {estados.map(e => <Option value={e}>{e}</Option>)}\r\n          </Select>\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"municipio\"\r\n          label=\"Municipio\"\r\n          rules={[{ required: true, message: 'Ingresa tu municipio' }]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item name=\"codigopostal\" label=\"Codigo Postal\" rules={[{ required: true, message: 'Ingresa codigopostal', },]}>\r\n          <InputNumber addonAfter={suffixSelector} style={{ width: '100%', }} />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"certificacion\"\r\n          label=\"Certificacion\"\r\n          rules={[{ required: true, message: 'Ingresa tu certificacion' }]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"universidad\"\r\n          label=\"Universidad\" rules={[{ required: true, message: 'Ingresa tu universidad' }]} >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item >\r\n          <Button type=\"primary\" htmlType=\"submit\">\r\n            Registrar\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Table, Space, Button, Card, Modal } from 'antd'\r\nimport { API } from '../../resources';\r\nimport Loading from '../../loading';\r\n\r\n\r\nexport default function Dash() {\r\n\r\n  const [usuario, setUsuario] = useState({});\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const showModal = () => { setIsModalVisible(true); };\r\n  const handleOk = () => { setIsModalVisible(false); };\r\n  const handleCancel = () => { setIsModalVisible(false); };\r\n  const [isLoading, setILoading] = useState(true);\r\n  const [pacientesData, setPacientesData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getPacientesData()\r\n  }, [])\r\n\r\n  const getPacientesData = () => {\r\n    fetch(API + 'users_by_rol/Paciente')\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        console.log(data); setPacientesData(data);\r\n      })\r\n      .finally(() => setILoading(false))\r\n  }\r\n\r\n  const columns = [\r\n    {\r\n      title: 'Nombre',\r\n      dataIndex: 'name',\r\n      key: 'name',\r\n    },\r\n    {\r\n      title: 'Rol',\r\n      dataIndex: 'rol',\r\n      key: 'rol',\r\n    },\r\n    {\r\n      title: 'Sucursal',\r\n      dataIndex: 'id_sucursal',\r\n      key: 'address',\r\n    },\r\n    {\r\n      title: 'Telefono',\r\n      dataIndex: 'telefono',\r\n      key: 'tel',\r\n    },\r\n    {\r\n      title: 'Detalles',\r\n      key: 'detalles',\r\n      render: (text, record) => (\r\n        <Space size=\"middle\">\r\n          <Button onClick={() => { setUsuario(record); showModal(); }}>Detalles</Button>\r\n        </Space>\r\n      )\r\n    }\r\n  ];\r\n\r\n  const gridStyle = {\r\n    width: '50%',\r\n    height: '50px',\r\n    textAlign: 'center',\r\n    display: 'inline-flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center'\r\n  };\r\n\r\n  function DetalleUsuario() {\r\n    return <div>\r\n      <Card bordered={false}>\r\n        {\r\n          Object.keys(usuario).map(k => {\r\n            return <><Card.Grid style={gridStyle}>{k}</Card.Grid><Card.Grid style={gridStyle} size='small'>{usuario[k]}</Card.Grid></>\r\n          })\r\n        }\r\n      </Card>\r\n    </div>\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h4>Usuarios</h4>\r\n      {isLoading ? <Loading /> :\r\n\r\n        <Table dataSource={pacientesData} columns={columns} />\r\n      }\r\n      <Modal width={800} title={<h4>Detalles de la nota </h4>} visible={isModalVisible} onOk={handleOk} onCancel={handleCancel}>\r\n        <DetalleUsuario />\r\n      </Modal>\r\n    </div>\r\n  )\r\n\r\n}\r\n","import { React, Component } from 'react';\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\nimport { Layout, Menu } from 'antd';\r\nimport { UserOutlined, UserAddOutlined, MenuOutlined } from '@ant-design/icons';\r\n\r\nimport Register from './register.user';\r\nimport Dash from './dash.users';\r\n\r\nconst { Header, Content, Footer, Sider } = Layout;\r\n\r\nclass SideMenu extends Component {\r\n  handleClick = e => {\r\n    console.log('click ', e);\r\n  };\r\n\r\n  state = {\r\n    collapsed: false,\r\n  };\r\n\r\n  onCollapse = (collapsed) => {\r\n    this.setState({ collapsed });\r\n  }\r\n  toggle = () => {\r\n    this.setState({\r\n      collapsed: !this.state.collapsed,\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <Layout style={{ minHeight: '100vh' }}>\r\n          <Sider\r\n            theme=\"light\"\r\n            collapsible\r\n            collapsed={this.state.collapsed}\r\n            onCollapse={this.onCollapse}>\r\n            <div className=\"logo\" />\r\n            <Menu defaultSelectedKeys={['1']} mode=\"inline\">\r\n              <Menu.Item icon={ <UserOutlined /> } key=\"1\">\r\n                <span>Usuarios</span>\r\n                <Link to=\"/usuarios\" />\r\n              </Menu.Item>\r\n              <Menu.Item icon={ <UserAddOutlined /> } key=\"2\">\r\n                <span>Registrar Usuario</span>\r\n                <Link to=\"/registrar_usuario\" />\r\n              </Menu.Item>\r\n            </Menu>\r\n          </Sider>\r\n          <Layout>\r\n\r\n            <Header style={{ background: '#fff', padding: 0, paddingLeft: 16 }}>\r\n              <MenuOutlined className=\"trigger\" style={{ cursor: 'pointer' }} onClick={this.toggle} />\r\n            </Header>\r\n\r\n            <Content style={{ margin: '24px 16px', padding: 24, background: '#fff', minHeight: 280 }}>\r\n              <Route exact path=\"/registrar_usuario\" component={Register} />\r\n              <Route path=\"/usuarios\" component={Dash} />\r\n            </Content>\r\n\r\n            <Footer style={{ textAlign: 'center' }}>\r\n              RECREAMED ©2021 Created by Realidad Creativa\r\n            </Footer>\r\n          </Layout>\r\n\r\n        </Layout>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SideMenu\r\n\r\n\r\n","import React, { Component } from 'react'\r\n// import {Card } from 'antd'\r\nimport SideMenu from './side.users';\r\n\r\nexport class Users extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div>\r\n                            <SideMenu />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Users\r\n","import { Form, Input, Button, message } from 'antd'\r\nimport React, { useState } from 'react';\r\nimport {\r\n  InputNumber,\r\n  Select,\r\n  Checkbox,\r\n} from 'antd';\r\nimport { S_API } from '../../resources'\r\nconst { Option } = Select;\r\nconst estados = [\"Michoacan\", \"Morelos\", \"Guerrero\"];\r\n\r\nexport default function Register() {\r\n\r\n  const [form] = Form.useForm();\r\n\r\n  const onFinish = (values) => {\r\n    values.avatar = 'https://';\r\n    values.estatus = '1';\r\n    values.rol = 'Medico';\r\n    delete values.confirm;\r\n    delete values.prefix;\r\n    delete values.agreement;\r\n\r\n    console.log(values)\r\n    fetch(S_API + 'register', {\r\n      method: 'POST',\r\n      body: JSON.stringify(values),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).then(res => res.json())\r\n      .then(response => { console.log('Success:', response); message.success(response.message || response.error); })\r\n      .catch(error => console.error('Error:', error))\r\n  };\r\n\r\n  const prefixSelector = (\r\n    <Form.Item name=\"prefix\" noStyle>\r\n      <Select\r\n        style={{\r\n          width: 70,\r\n        }}\r\n      >\r\n        <Option value=\"+52\">+52</Option>\r\n      </Select>\r\n    </Form.Item>\r\n  );\r\n  const suffixSelector = (\r\n    <Form.Item name=\"suffix\" noStyle>\r\n      <Select\r\n        style={{\r\n          width: 70,\r\n        }}\r\n      >\r\n        <Option value=\"USD\">$</Option>\r\n        <Option value=\"CNY\">¥</Option>\r\n      </Select>\r\n    </Form.Item>\r\n  );\r\n\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log('Failed:', errorInfo);\r\n  };\r\n  return (\r\n    <div>\r\n      <h1>Registrar doctor</h1>\r\n      <br />\r\n      {/* <Form name=\"basic\" labelCol={{ span: 6 }} wrapperCol={{ span: 16 }} initialValues={{ remember: true }} onFinish={onFinish} onFinishFailed={onFinishFailed} autoComplete=\"off\" >\r\n        <Form.Item label=\"Hospital\" name=\"Hospital\" rules={[{ required: true, message: 'Please input your username!' }]} >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item label=\"Nombre\" name=\"username\" rules={[{ required: true, message: 'Please input your username!' }]} >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item label=\"Apellido Paterno\" name=\"rfc\" rules={[{ required: true, message: 'Ingresa RFC' }]} >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item label=\"Apellido Materno\" name=\"calle\" rules={[{ required: true, message: 'Avenida Madero esquina con Santiago Tapia' }]} >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item label=\"Cedula\" name=\"nint\" rules={[{ required: true, message: '74B' }]} >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item label=\"Calle\" name=\"next\" rules={[{ required: true, message: '12' }]} >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item label=\"Numero\" name=\"colonia\" rules={[{ required: true, message: 'Centro' }]} >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item label=\"Colonia\" name=\"cp\" rules={[{ required: true, message: '58000' }]} >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item label=\"Telefono\" name=\"ciudad_municipio\" rules={[{ required: true, message: 'Ingresa ciudad/municipio' }]} >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item label=\"Correo\" name=\"estado\" rules={[{ required: true, message: 'Ingresa estado' }]} >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\r\n          <Button type=\"primary\" htmlType=\"submit\">\r\n            Guardar\r\n          </Button>\r\n        </Form.Item>\r\n      </Form> */}\r\n      <Form\r\n        // {...formItemLayout}\r\n        labelCol={{ span: 6 }} wrapperCol={{ span: 16 }}\r\n        form={form}\r\n        name=\"register\"\r\n        onFinish={onFinish}\r\n        initialValues={{\r\n          residence: ['zhejiang', 'hangzhou', 'xihu'],\r\n          prefix: '52',\r\n        }}\r\n        scrollToFirstError\r\n      >\r\n        <Form.Item\r\n          name=\"email\"\r\n          label=\"Correo\"\r\n          rules={[\r\n            {\r\n              type: 'email',\r\n              message: 'The input is not valid E-mail!',\r\n            },\r\n            {\r\n              required: true,\r\n              message: 'Please input your E-mail!',\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item name=\"password\" label=\"Contraseña\" rules={[{ required: true, message: 'Por favor ingrese su contraseña!', },]} hasFeedback >\r\n          <Input.Password />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"confirm\"\r\n          label=\"Confirmar contraseña\"\r\n          dependencies={['password']}\r\n          hasFeedback\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Please confirm your password!',\r\n            },\r\n            ({ getFieldValue }) => ({\r\n              validator(_, value) {\r\n                if (!value || getFieldValue('password') === value) {\r\n                  return Promise.resolve();\r\n                }\r\n                return Promise.reject(new Error('Las contraseñas deben coincidir!'));\r\n              },\r\n            }),\r\n          ]}\r\n        >\r\n          <Input.Password />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"telefono\"\r\n          label=\"Telefono\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Please input your phone number!',\r\n            },\r\n          ]}\r\n        >\r\n          <Input\r\n            addonBefore={prefixSelector}\r\n            style={{\r\n              width: '100%',\r\n            }}\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"id_sucursal\"\r\n          label=\"Id Sucursal\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Ingresa el ID de la sucursal',\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"id_medicoasignado\"\r\n          label=\"Id Medico Asignado\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Ingresa el ID del medico ',\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"name\"\r\n          label=\"Nombre\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Ingresa Nombre y apellidos',\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"cedula\"\r\n          label=\"Cedula\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Ingresa cedula',\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"calle\"\r\n          label=\"Calle\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Ingresa calle',\r\n              whitespace: true,\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"numexterior\"\r\n          label=\"Num Exterior\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Ingresa numero exterior',\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"numinterior\"\r\n          label=\"Num Interior\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Ingresa numinterior',\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"Colonia\"\r\n          name=\"colonia\"\r\n          rules={[{ required: true, message: 'Please input your colobnia!' }]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item name=\"estado\" label=\"Estado\" rules={[{ required: true, message: 'Apellido materno', },]}>\r\n          <Select placeholder=\"Elije tu estado\">\r\n            {estados.map(e => <Option value={e}>{e}</Option>)}\r\n          </Select>\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"municipio\"\r\n          label=\"Municipio\"\r\n          rules={[{ required: true, message: 'Ingresa tu municipio' }]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item name=\"codigopostal\" label=\"Codigo Postal\" rules={[{ required: true, message: 'Ingresa codigopostal', },]}>\r\n          <InputNumber addonAfter={suffixSelector} style={{ width: '100%', }} />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"certificacion\"\r\n          label=\"Certificacion\"\r\n          rules={[{ required: true, message: 'Ingresa tu certificacion' }]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"universidad\"\r\n          label=\"Universidad\" rules={[{ required: true, message: 'Ingresa tu universidad' }]} >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item >\r\n          <Button type=\"primary\" htmlType=\"submit\">\r\n            Registrar\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </div>\r\n  )\r\n}\r\n","import React, { Component, useState, useEffect } from 'react'\r\nimport { Table } from 'antd';\r\nimport { API } from '../../resources'\r\nimport Loading from '../../loading';\r\n\r\nexport default function Dash() {\r\n\r\n  const [isLoading, setILoading] = useState(true);\r\n  const [doctoresData, setDoctoresData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getDoctoresData()\r\n  }, [])\r\n\r\n  const getDoctoresData = () => {\r\n    fetch(API + 'users_by_rol/Medico')\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        console.log(data); setDoctoresData(data);\r\n      })\r\n      .finally(() => setILoading(false))\r\n  }\r\n\r\n  const columns = [\r\n    {\r\n      title: 'Rol',\r\n      dataIndex: 'rol',\r\n      key: 'rol',\r\n      onFilter: (value, record) => record.rol === \"Medico\",\r\n    },\r\n    {\r\n      title: 'Nombre',\r\n      dataIndex: 'name',\r\n      key: 'name',\r\n    },\r\n    {\r\n      title: 'Correo',\r\n      dataIndex: 'email',\r\n      key: 'email',\r\n    },\r\n    {\r\n      title: 'Telefono',\r\n      dataIndex: 'telefono',\r\n      key: 'telefono',\r\n    },\r\n  ];\r\n  return (\r\n    <div>\r\n      <h1>Doctores</h1>\r\n      {isLoading ? <Loading /> :\r\n        <Table dataSource={doctoresData} columns={columns} />\r\n      }\r\n    </div>\r\n  )\r\n}\r\n","import { React, Component } from 'react';\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\nimport { Layout, Menu } from 'antd';\r\nimport { TeamOutlined, UserAddOutlined, MenuOutlined } from '@ant-design/icons';\r\n\r\nimport Register from './register.doctor';\r\nimport Dash from './dash.doctors';\r\n\r\nconst { Header, Content, Footer, Sider } = Layout;\r\n\r\nclass SideMenu extends Component {\r\n  handleClick = e => {\r\n    console.log('click ', e);\r\n  };\r\n\r\n  state = {\r\n    collapsed: false,\r\n  };\r\n\r\n  onCollapse = (collapsed) => {\r\n    this.setState({ collapsed });\r\n  }\r\n  toggle = () => {\r\n    this.setState({\r\n      collapsed: !this.state.collapsed,\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <Layout style={{ minHeight: '100vh' }}>\r\n          <Sider\r\n            theme=\"light\"\r\n            collapsible\r\n            collapsed={this.state.collapsed}\r\n            onCollapse={this.onCollapse}>\r\n            <div className=\"logo\" />\r\n            <Menu defaultSelectedKeys={['1']} mode=\"inline\">\r\n              <Menu.Item icon={<TeamOutlined />} key=\"1\">\r\n                <span>Médicos</span>\r\n                <Link to=\"/doctores\" />\r\n              </Menu.Item>\r\n              <Menu.Item icon={<UserAddOutlined />} key=\"2\">\r\n                <span>Registrar Médico</span>\r\n                <Link to=\"/registrar\" />\r\n              </Menu.Item>\r\n            </Menu>\r\n            {/* <Menu\r\n        onClick={this.handleClick}\r\n        style={{ width: 256 }}\r\n        defaultSelectedKeys={['1']}\r\n        defaultOpenKeys={['sub1']}\r\n        mode=\"inline\"\r\n      >\r\n        <SubMenu key=\"sub1\" icon={<MailOutlined />} title=\"Navigation One\">\r\n          <Menu.ItemGroup key=\"g1\" title=\"Item 1\">\r\n            <Menu.Item key=\"1\" href=\"/dash\">Option 1 <Link to=\"/meseros\" /> </Menu.Item>\r\n            <Menu.Item key=\"2\">Option 2</Menu.Item>\r\n          </Menu.ItemGroup>\r\n          <Menu.ItemGroup key=\"g2\" title=\"Item 2\">\r\n            <Menu.Item key=\"3\">Option 3</Menu.Item>\r\n            <Menu.Item key=\"4\">Option 4</Menu.Item>\r\n          </Menu.ItemGroup>\r\n        </SubMenu>\r\n        <SubMenu key=\"sub2\" icon={<AppstoreOutlined />} title=\"Navigation Two\">\r\n          <Menu.Item key=\"5\">Option 5</Menu.Item>\r\n          <Menu.Item key=\"6\">Option 6</Menu.Item>\r\n          <SubMenu key=\"sub3\" title=\"Submenu\">\r\n            <Menu.Item key=\"7\">Option 7</Menu.Item>\r\n            <Menu.Item key=\"8\">Option 8</Menu.Item>\r\n          </SubMenu>\r\n        </SubMenu>\r\n        <SubMenu key=\"sub4\" icon={<SettingOutlined />} title=\"Navigation Three\">\r\n          <Menu.Item key=\"9\">Option 9</Menu.Item>\r\n          <Menu.Item key=\"10\">Option 10</Menu.Item>\r\n          <Menu.Item key=\"11\">Option 11</Menu.Item>\r\n          <Menu.Item key=\"12\">Option 12</Menu.Item>\r\n        </SubMenu>\r\n      </Menu> */}\r\n          </Sider>\r\n          <Layout>\r\n\r\n            <Header style={{ background: '#fff', padding: 0, paddingLeft: 16 }}>\r\n              <MenuOutlined className=\"trigger\" style={{ cursor: 'pointer' }} onClick={this.toggle} />\r\n            </Header>\r\n\r\n            <Content style={{ margin: '24px 16px', padding: 24, background: '#fff', minHeight: 280 }}>\r\n              <Route exact path=\"/registrar\" component={Register} />\r\n              <Route path=\"/doctores\" component={Dash} />\r\n            </Content>\r\n\r\n            <Footer style={{ textAlign: 'center' }}>\r\n              RECREAMED ©2021 Created by Realidad Creativa\r\n            </Footer>\r\n          </Layout>\r\n\r\n        </Layout>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SideMenu\r\n\r\n\r\n","import React, { Component } from 'react'\r\n// import {Card } from 'antd'\r\nimport SideMenu from './side.doctors';\r\n\r\nexport class Doctors extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div>\r\n                            <SideMenu />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Doctors\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Table, Row, Col, Button, Modal, Form, Input, message } from 'antd';\r\nimport { API } from '../resources';\r\nimport Loading from '../loading';\r\n\r\n\r\nexport function SuperAdminExpedientes() {\r\n    const [isModalVisible, setIsModalVisible] = useState(false);\r\n    const [isLoading, setILoading] = useState(true);\r\n    const [expedientesData, setExpedientesData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        getExpedientesData()\r\n    }, [])\r\n\r\n    const getExpedientesData = () => {\r\n        fetch(API + 'expedientes')\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log(data); setExpedientesData(data);\r\n            })\r\n            .finally(() => setILoading(false))\r\n    }\r\n\r\n    const showModal = () => {\r\n        setIsModalVisible(true);\r\n    };\r\n\r\n    const handleOk = () => {\r\n\r\n    };\r\n\r\n    const handleCancel = () => {\r\n        setIsModalVisible(false);\r\n    };\r\n\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Paciente',\r\n            dataIndex: 'id_usuario',\r\n            key: 'Paciente',\r\n        },\r\n        {\r\n            title: 'Historia Clinica',\r\n            dataIndex: 'id_historia',\r\n            key: 'historiaClinica',\r\n            render: text => <a href='/historial_clinico'>{text}</a>,\r\n        },\r\n        {\r\n            title: 'Notas Medicas',\r\n            dataIndex: 'id_nota',\r\n            key: 'notasMedicas',\r\n            render: text => <a href='/notas'>{text}</a>,\r\n\r\n        },\r\n        {\r\n            title: 'Receta',\r\n            dataIndex: 'id_receta',\r\n            key: 'receta',\r\n        }\r\n    ];\r\n\r\n    const onFinish = (values) => {\r\n        console.log('Valores:', values);\r\n        fetch(API + 'expedientes/add', {\r\n            method: 'POST',\r\n            body: JSON.stringify(values),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }).then(res => res.json())\r\n            .then(response => { console.log('Success:', response); message.success(response.message || response.error); })\r\n            .catch(error => console.error('Error:', error))\r\n            .finally(() => { getExpedientesData(); setIsModalVisible(false) })\r\n        // getExpedientesData() \r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n    \r\n    return <div className=\"mainContainer\">\r\n        <Row>\r\n            <Col span={16}><h4>Expedientes</h4></Col>\r\n            <Col>\r\n                <Button type=\"primary\" onClick={showModal}>\r\n                    Nuevo expediente\r\n                </Button>\r\n            </Col>\r\n        </Row>\r\n        <br />\r\n\r\n        {isLoading ? <Loading /> :\r\n            <Table dataSource={expedientesData} columns={columns} />\r\n        }\r\n        <Modal title=\"Nuevo expediente\" visible={isModalVisible} onOk={handleOk} onCancel={handleCancel}>\r\n            <Form name=\"expediente\" labelCol={{ span: 6 }} wrapperCol={{ span: 12 }} onFinish={onFinish} onFinishFailed={onFinishFailed} autoComplete=\"off\" >\r\n                <Form.Item label=\"Paciente\" name=\"id_usuario\" rules={[{ required: true, message: 'Ingresa RFC' }]} >\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item label=\"Historia Clinica\" name=\"id_historia\" rules={[{ required: true, message: 'Ingresa RFC' }]} >\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item label=\"Notas Medicas\" name=\"id_nota\" rules={[{ required: true, message: 'Ingresa RFC' }]} >\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item label=\"Receta\" name=\"id_receta\" rules={[{ required: true, message: 'Ingresa RFC' }]} >\r\n                    <Input />\r\n                </Form.Item>\r\n\r\n                <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\r\n                    <Button type=\"primary\" htmlType=\"submit\" form='expediente'>\r\n                        Guardar\r\n                    </Button>\r\n                </Form.Item>\r\n            </Form>\r\n        </Modal>\r\n    </div>;\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Form, Input, Button } from 'antd';\r\n// import { UserOutlined, LockOutlined } from '@ant-design/icons';\r\n// import { Upload } from 'antd';\r\nimport { message } from 'antd';\r\n// import { UploadOutlined } from '@ant-design/icons';\r\nimport { API } from '../../resources'\r\n\r\nexport class Register extends Component {\r\n  render() {\r\n\r\n    //Start upload props\r\n    const props = {\r\n      action: 'https://www.mocky.io/v2/5cc8019d300000980a055e76',\r\n      listType: 'picture',\r\n      beforeUpload(file) {\r\n        return new Promise(resolve => {\r\n          const reader = new FileReader();\r\n          reader.readAsDataURL(file);\r\n          reader.onload = () => {\r\n            const img = document.createElement('img');\r\n            img.src = reader.result;\r\n            img.onload = () => {\r\n              const canvas = document.createElement('canvas');\r\n              canvas.width = img.naturalWidth;\r\n              canvas.height = img.naturalHeight;\r\n              const ctx = canvas.getContext('2d');\r\n              ctx.drawImage(img, 0, 0);\r\n              ctx.fillStyle = 'red';\r\n              ctx.textBaseline = 'middle';\r\n              ctx.font = '33px Arial';\r\n              ctx.fillText('Ant Design', 20, 20);\r\n              canvas.toBlob(resolve);\r\n            };\r\n          };\r\n        });\r\n      },\r\n    };\r\n    //End of Upload props\r\n\r\n    const onFinish = (values) => {\r\n      values.logo = 'https://';\r\n      values.estatus = '1';\r\n      values.delete = '0';\r\n      console.log(\"Ready to send:\", values)\r\n      fetch(API + 'sucursales/add', {\r\n        method: 'POST',\r\n        body: JSON.stringify(values),\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      }).then(res => res.json())\r\n        .then(response => {\r\n          console.log('Success:', response);\r\n          message.success(response.message || response.error);\r\n        })\r\n        .catch(error => console.error('Error:', error))\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n      console.log('Failed:', errorInfo);\r\n    };\r\n    return (\r\n      <div>\r\n        <h1>Registro</h1>\r\n        <Form name=\"basic\" labelCol={{ span: 6 }} wrapperCol={{ span: 16 }} initialValues={{ remember: true }} onFinish={onFinish} onFinishFailed={onFinishFailed} autoComplete=\"off\" >\r\n          <Form.Item label=\"Nombre\" name=\"nombre\" rules={[{ required: true, message: 'Please input your username!' }]} >\r\n            <Input />\r\n          </Form.Item>\r\n          <Form.Item label=\"RFC\" name=\"rfc\" rules={[{ required: true, message: 'Ingresa RFC' }]} >\r\n            <Input />\r\n          </Form.Item>\r\n          {/* <Form.Item label=\"Logo\" name=\"logo\" rules={[{ message: '' }]} >\r\n            <Input />\r\n            <Upload {...props}>\r\n              <Button icon={<UploadOutlined />}>Upload</Button>\r\n            </Upload>\r\n          </Form.Item> */}\r\n          <Form.Item label=\"Calle\" name=\"calle\" rules={[{ required: true, message: 'Avenida Madero esquina con Santiago Tapia' }]} >\r\n            <Input />\r\n          </Form.Item>\r\n          <Form.Item label=\"Numero exterior\" name=\"num_exterior\" rules={[{ required: true, message: '12' }]} >\r\n            <Input />\r\n          </Form.Item>\r\n          <Form.Item label=\"Numero Interior\" name=\"num_interior\" rules={[{ required: true, message: '74B' }]} >\r\n            <Input />\r\n          </Form.Item>\r\n          <Form.Item label=\"Colonia\" name=\"colonia\" rules={[{ required: true, message: 'Centro' }]} >\r\n            <Input />\r\n          </Form.Item>\r\n          <Form.Item label=\"Codigo Postal\" name=\"codigo_postal\" rules={[{ required: true, message: '58000' }]} >\r\n            <Input />\r\n          </Form.Item>\r\n          <Form.Item label=\"Ciudad Municipio\" name=\"ciudad_municipio\" rules={[{ required: true, message: 'Ingresa ciudad/municipio' }]} >\r\n            <Input />\r\n          </Form.Item>\r\n          <Form.Item label=\"Estado\" name=\"estado\" rules={[{ required: true, message: 'Ingresa estado' }]} >\r\n            <Input />\r\n          </Form.Item>\r\n          <Form.Item label=\"Telefono\" name=\"telefono\" rules={[{ required: true, message: '1234567890' }]} >\r\n            <Input />\r\n          </Form.Item>\r\n          <Form.Item label=\"Correo Electronico\" name=\"email\" rules={[{ required: true, message: 'Correo@Hopspital.com' }]} >\r\n            <Input />\r\n          </Form.Item>\r\n          <Form.Item label=\"Sitio Web\" name=\"sitio_web\" rules={[{ required: true, message: 'www.hospital.com' }]} >\r\n            <Input />\r\n          </Form.Item>\r\n          <Form.Item label=\"Numero de Expediente\" name=\"no_expediente\" rules={[{ required: true, message: 'Ingresa numero de expediente' }]} >\r\n            <Input />\r\n          </Form.Item>\r\n\r\n          <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              Guardar\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Register\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Table } from 'antd';\r\nimport Loading  from '../../loading'\r\nimport { API } from '../../resources'\r\n\r\n\r\nexport default function Dash() {\r\n\r\n  const [isLoading, setILoading] = useState(true);\r\n  const [hospitalesData, setHospitalesData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getHospitalesData()\r\n  }, [])\r\n\r\n  const getHospitalesData = () => {\r\n    fetch(API + 'sucursales')\r\n      .then(response => response.json())\r\n      .then(data => { console.log(data); setHospitalesData(data); setILoading(false); });\r\n  }\r\n\r\n  //Start tabla data\r\n  const columns = [\r\n    {\r\n      title: 'Sucursal',\r\n      dataIndex: 'nombre',\r\n      sorter: (a, b) => a.name.length - b.name.length,\r\n      sortDirections: ['descend'],\r\n    },\r\n    {\r\n      title: 'Ciudad_municipio',\r\n      dataIndex: 'ciudad_municipio',\r\n      defaultSortOrder: 'descend',\r\n    },\r\n    {\r\n      title: 'Colonia',\r\n      dataIndex: 'colonia',\r\n    },\r\n\r\n    {\r\n      title: 'calle',\r\n      dataIndex: 'calle',\r\n    },\r\n    {\r\n      title: 'Telefono',\r\n      dataIndex: 'telefono',\r\n      defaultSortOrder: 'descend',\r\n    }\r\n  ];\r\n\r\n  const onChange = (pagination, filters, sorter, extra) => {\r\n    console.log('params', pagination, filters, sorter, extra);\r\n  }\r\n  //End tabla data\r\n\r\n  return (\r\n    isLoading ? <Loading /> :\r\n      <div>\r\n        <h1>Todos los hospitales</h1>\r\n        <Table columns={columns} dataSource={hospitalesData} onChange={onChange} />\r\n      </div>\r\n  )\r\n\r\n}\r\n\r\n","import { React, Component } from 'react';\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\nimport { Layout, Menu } from 'antd';\r\nimport {  BankOutlined, AppstoreAddOutlined, MenuOutlined } from '@ant-design/icons';\r\n\r\nimport Register from './register.hospital';\r\nimport Dash from './dash.hospitals';\r\n\r\nconst { Header, Content, Footer, Sider } = Layout;\r\n\r\nclass SideMenu extends Component {\r\n  handleClick = e => {\r\n    console.log('click ', e);\r\n  };\r\n\r\n  state = {\r\n    collapsed: false,\r\n  };\r\n\r\n  onCollapse = (collapsed) => {\r\n    this.setState({ collapsed });\r\n  }\r\n  toggle = () => {\r\n    this.setState({\r\n      collapsed: !this.state.collapsed,\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <Layout style={{ minHeight: '100vh' }}>\r\n          <Sider\r\n            theme=\"light\"\r\n            collapsible\r\n            collapsed={this.state.collapsed}\r\n            onCollapse={this.onCollapse}>\r\n            <div className=\"logo\" />\r\n            <Menu defaultSelectedKeys={['1']} mode=\"inline\">\r\n              <Menu.Item icon={<BankOutlined />} key=\"1\">\r\n                {/* <Icon type=\"pie-chart\" /> */}\r\n                <span>Hospitales</span>\r\n                <Link to=\"/hospitales\" />\r\n              </Menu.Item>\r\n              <Menu.Item icon={<AppstoreAddOutlined />} key=\"2\">\r\n                {/* <Icon type=\"desktop\" /> */}\r\n                <span>Registrar Hospital</span>\r\n                <Link to=\"/registrar\" />\r\n              </Menu.Item>\r\n            </Menu>\r\n            {/* <Menu\r\n        onClick={this.handleClick}\r\n        style={{ width: 256 }}\r\n        defaultSelectedKeys={['1']}\r\n        defaultOpenKeys={['sub1']}\r\n        mode=\"inline\"\r\n      >\r\n        <SubMenu key=\"sub1\" icon={<MailOutlined />} title=\"Navigation One\">\r\n          <Menu.ItemGroup key=\"g1\" title=\"Item 1\">\r\n            <Menu.Item key=\"1\" href=\"/dash\">Option 1 <Link to=\"/meseros\" /> </Menu.Item>\r\n            <Menu.Item key=\"2\">Option 2</Menu.Item>\r\n          </Menu.ItemGroup>\r\n          <Menu.ItemGroup key=\"g2\" title=\"Item 2\">\r\n            <Menu.Item key=\"3\">Option 3</Menu.Item>\r\n            <Menu.Item key=\"4\">Option 4</Menu.Item>\r\n          </Menu.ItemGroup>\r\n        </SubMenu>\r\n        <SubMenu key=\"sub2\" icon={<AppstoreOutlined />} title=\"Navigation Two\">\r\n          <Menu.Item key=\"5\">Option 5</Menu.Item>\r\n          <Menu.Item key=\"6\">Option 6</Menu.Item>\r\n          <SubMenu key=\"sub3\" title=\"Submenu\">\r\n            <Menu.Item key=\"7\">Option 7</Menu.Item>\r\n            <Menu.Item key=\"8\">Option 8</Menu.Item>\r\n          </SubMenu>\r\n        </SubMenu>\r\n        <SubMenu key=\"sub4\" icon={<SettingOutlined />} title=\"Navigation Three\">\r\n          <Menu.Item key=\"9\">Option 9</Menu.Item>\r\n          <Menu.Item key=\"10\">Option 10</Menu.Item>\r\n          <Menu.Item key=\"11\">Option 11</Menu.Item>\r\n          <Menu.Item key=\"12\">Option 12</Menu.Item>\r\n        </SubMenu>\r\n      </Menu> */}\r\n          </Sider>\r\n          <Layout>\r\n            <Header style={{ background: '#fff', padding: 0, paddingLeft: 16 }}>\r\n              <MenuOutlined className=\"trigger\"\r\n                style={{ cursor: 'pointer' }}\r\n                onClick={this.toggle} />\r\n              {/* { this.state.collapsed ? (<MenuUnfoldOutlined onClick={this.toggle} style={{ cursor: 'pointer' }}/>) : (<MenuFoldOutlined onClick={this.toggle} style={{ cursor: 'pointer' }}/>) } */}\r\n              {/* <Header > */}\r\n              {/* <Icon\r\n                        className=\"trigger\"\r\n                        type={this.state.collapsed ? 'menu-unfold' : 'menu-fold'}\r\n                        style={{ cursor: 'pointer' }}\r\n                        onClick={this.toggle}\r\n                    /> */}\r\n            </Header>\r\n            <Content style={{ margin: '24px 16px', padding: 24, background: '#fff', minHeight: 280 }}>\r\n              <Route exact path=\"/registrar\" component={Register} />\r\n              <Route path=\"/hospitales\" component={Dash} />\r\n            </Content>\r\n            <Footer style={{ textAlign: 'center' }}>\r\n              Ant Design ©2016 Created by Ant UED\r\n            </Footer>\r\n          </Layout>\r\n\r\n        </Layout>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SideMenu\r\n\r\n\r\n","import React, { Component } from \"react\";\r\nimport SideMenu from \"./side.hospitals\";\r\n\r\nexport class Hospitales extends Component {\r\n    \r\n  render() {\r\n    return (\r\n      <div>\r\n        <SideMenu />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Hospitales;\r\n","import React, { Component } from 'react'\r\nimport { Row, Col, Statistic, Card } from 'antd'\r\nimport { Pie, Line } from '@ant-design/charts';\r\nimport './home.css'\r\n\r\nexport class Home extends Component {\r\n    \r\n    dataPie = [\r\n        {\r\n            type: 'Covid',\r\n            value: 130737,\r\n        },\r\n        {\r\n            type: 'Colesterol',\r\n            value: 21468,\r\n        },\r\n        {\r\n            type: 'Diabetes',\r\n            value: 18098,\r\n        },\r\n        {\r\n            type: 'Presion',\r\n            value: 17912,\r\n        },\r\n        {\r\n            type: 'Oseo',\r\n            value: 15282,\r\n        },\r\n        {\r\n            type: 'Migraña',\r\n            value: 11650,\r\n        },\r\n    ];\r\n\r\n    configPie = {\r\n        appendPadding: 10,\r\n        data: this.dataPie,\r\n        angleField: 'value',\r\n        colorField: 'type',\r\n        height: 450,\r\n        radius: 0.8,\r\n        label: {\r\n            type: 'inner',\r\n            offset: '-0.5',\r\n            content: '{name} {percentage}',\r\n            style: {\r\n                fill: '#fff',\r\n                fontSize: 14,\r\n                textAlign: 'center',\r\n            },\r\n        },\r\n    };\r\n\r\n    dataLine = [\r\n        { mes: 'Junio', consultas: 17945 },\r\n        { mes: 'Julio', consultas: 24011 },\r\n        { mes: 'Agosto', consultas: 46493 },\r\n        { mes: 'Septiembre', consultas: 105293 },\r\n        { mes: 'Octubre', consultas: 77190 }\r\n    ];\r\n\r\n    configLine = {\r\n        data: this.dataLine,\r\n        height: 410,\r\n        xField: 'mes',\r\n        yField: 'consultas',\r\n        color: '#01B075',\r\n        point: {\r\n            size: 5,\r\n            shape: 'diamond',\r\n            color: '#01B075'\r\n        },\r\n        label: {\r\n            style: {\r\n                fill: '#aaa',\r\n                fontSize: 16,\r\n                stroke: '#01B075'\r\n            },\r\n        },\r\n    };\r\n    render() {\r\n        return (\r\n            <>\r\n\r\n                <br />\r\n                <div className=\"contenedor\">\r\n                    <Row gutter={30}>\r\n                        <Col xs={24} sm={12} lg={6}>\r\n                            {/* <div className=\"cardsContenedor\" > */}\r\n                            <Card className=\"cardsContenedor\" hoverable bordered={false}>\r\n\r\n                                <Statistic title=\"Total Hospitales\" value=\"4\" valueStyle={{ color: 'white' }} style={{ backgroundColor: '#4BA6FE' }} className=\"cardsContenido\" />\r\n                            </Card>\r\n                        </Col>\r\n                        <Col xs={24} sm={12} lg={6}>\r\n                            <Card className=\"cardsContenedor\" hoverable bordered={false}>\r\n                                <Statistic title=\"Total Medicos\" value=\"14\" valueStyle={{ color: 'white' }} style={{ backgroundColor: '#FF838A' }} className=\"cardsContenido\" />\r\n                            </Card>\r\n                        </Col>\r\n\r\n                        <Col xs={24} sm={12} lg={6}>\r\n                            <Card className=\"cardsContenedor\" hoverable bordered={false}>\r\n\r\n                                <Statistic title=\"Total Pacientes\" value=\"241\" valueStyle={{ color: 'white' }} style={{ backgroundColor: '#18D0C2' }} className=\"cardsContenido\" />\r\n                            </Card>\r\n                        </Col>\r\n                        <Col xs={24} sm={12} lg={6}>\r\n                            <Card className=\"cardsContenedor\" hoverable bordered={false}>\r\n\r\n                                <Statistic title=\"Citas Hoy\" value={47} valueStyle={{ color: 'white' }} style={{ backgroundColor: '#847DFC' }} className=\"cardsContenido\" />\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n                    <br />\r\n                    <Row gutter={20}>\r\n                        <Col xs={24} md={12} className=\"graficaCircular\">\r\n                            <Pie {...this.configPie} style={{ backgroundColor: '#1F263C' }} />\r\n                        </Col>\r\n\r\n                        <Col xs={24} md={12}>\r\n                            <Line {...this.configLine} style={{ backgroundColor: '#1F263C', padding: '20px' }} />\r\n                        </Col>\r\n                    </Row>\r\n\r\n                </div>\r\n\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home\r\n","import React from 'react'\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport { Container, Nav, Navbar } from \"react-bootstrap\";\r\nimport { Button } from 'antd'\r\nimport icon from '../assets/Icon.png';\r\nimport Users from \"./users/main.users\";\r\nimport Doctors from \"./doctors/main.doctors\";\r\nimport { SuperAdminExpedientes } from \"./expedientes\";\r\nimport { Hospitales } from \"./hospitals/main.hospitals\";\r\nimport Home from './home/home'\r\n\r\nconst logout = () => { localStorage.removeItem('sessionToken'); localStorage.removeItem('userType'); window.location.href = '/'; }\r\n\r\nfunction Navigator() {\r\n      return <Navbar bg=\"light\" expand=\"lg\">\r\n        <Container>\r\n          <Navbar.Brand href=\"#home\">\r\n            <img\r\n              src={icon}\r\n              width=\"40\"\r\n              height=\"35\"\r\n              className=\"d-inline-block align-top\"\r\n              alt=\"Recreamed logo\"\r\n            />\r\n            Bienvenido Administrador\r\n          </Navbar.Brand>\r\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n          <Navbar.Collapse id=\"basic-navbar-nav\">\r\n            <Nav className=\"me-auto\">\r\n\r\n              <Nav.Link href=\"/\">Inicio</Nav.Link>\r\n              {/* <Nav.Link href=\"/\">Landing</Nav.Link> */}\r\n              <Nav.Link href=\"/\">Farmacia</Nav.Link>\r\n              <Nav.Link href=\"#\">|</Nav.Link>\r\n              <Nav.Link href=\"/hospitales\">Hospitales</Nav.Link>\r\n              <Nav.Link href=\"/doctores\">Medicos</Nav.Link>\r\n              <Nav.Link href=\"usuarios\">Usuarios</Nav.Link>\r\n              <Nav.Link href=\"expedientes\">Expedientes</Nav.Link>\r\n              <Nav.Link href=\"#\">|</Nav.Link>\r\n\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n          <Navbar.Collapse className=\"justify-content-end\">\r\n            <Button onClick={logout} >Cerrar Sesion</Button>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>;\r\n\r\n\r\n}\r\n\r\nexport default function SuperAdminApp() {\r\n  return (\r\n    <Router>\r\n       <Navigator />\r\n       <Switch>\r\n         \r\n         <Route path=\"/hospitales\">\r\n           <Hospitales />\r\n         </Route>\r\n         <Route path=\"/doctores\">\r\n           <Doctors />\r\n         </Route>\r\n         <Route path=\"/expedientes\">\r\n           <SuperAdminExpedientes />\r\n         </Route>\r\n         <Route path=\"/usuarios\">\r\n           <Users />\r\n         </Route>\r\n         <Route path=\"/\">\r\n           <Home/>\r\n         </Route>\r\n\r\n       </Switch>\r\n     </Router>\r\n  )\r\n}\r\n","import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'antd/dist/antd.css';\nimport { Login } from \"./session/login\";\nimport { Register } from \"./session/register\";\nimport \"./App.css\"\nimport DoctorApp from \"./doctorViews/doctorApp\";\nimport RecepcionApp from \"./recepcionViews/recepcionApp\";\nimport PatientApp from \"./patientViews/patientApp\";\nimport AdminHospitalApp from \"./admHospitalViews/adminHospitalApp\";\nimport SuperAdminApp from \"./superAdminViews/superAdminApp\";\n\nconst userType = localStorage.getItem('userType');\n\n\nexport function App() {\n\n  const token = localStorage.getItem('sessionToken');\n\n  if (!token) {\n    console.log(\"tok:\", localStorage.getItem('sessionToken'));\n    return <Router>\n      <Switch>\n        <Route path=\"/register\">\n          <Register />\n        </Route>\n        <Router path=\"/\">\n          <Login />\n        </Router>\n\n      </Switch>\n    </Router>\n  }\n\n  switch (userType) {\n    case 'SuperAdministrador':\n      return <SuperAdminApp/>\n    case 'Administrador':\n      return <AdminHospitalApp/>\n    case 'Recepcion':\n      return <RecepcionApp/>\n    case 'Paciente':\n      return <PatientApp/>\n    case 'Medico':\n      return <DoctorApp />\n    default:\n      return 'foo';\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n//Main\n\n"],"sourceRoot":""}