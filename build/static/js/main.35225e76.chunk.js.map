{"version":3,"sources":["resources.jsx","assets/Logo.png","session/login.jsx","session/register.jsx","doctorViews/pacientesDash/register.patient.jsx","loading.jsx","doctorViews/pacientesDash/dash.patients.jsx","doctorViews/pacientesDash/move.patients.jsx","doctorViews/pacientesDash/detalles.paciente.jsx","doctorViews/pacientesDash/side.patients.jsx","doctorViews/pacientesDash/main.patients.jsx","doctorViews/citas.jsx","doctorViews/expedientes/createExpedient.jsx","assets/diagnosticos2.js","doctorViews/expedientes/nuevaNota.jsx","assets/logos/william_h.jpg","doctorViews/expedientes/detalleRecetaForPrint.jsx","doctorViews/expedientes/detalleReceta.jsx","doctorViews/expedientes/detalleNota.jsx","doctorViews/expedientes/detalleHistoria.jsx","doctorViews/expedientes/expedientes.jsx","doctorViews/perfilEdit.jsx","doctorViews/perfil.jsx","doctorViews/doctorNotas.jsx","doctorViews/home/home.jsx","assets/Icon.png","doctorViews/historial.jsx","doctorViews/pacientes/register.patient.jsx","doctorViews/pacientes/detalles.paciente.jsx","doctorViews/pacientes/main.pacientes.jsx","escalas/depresion/depresionCreateLink.jsx","escalas/depresion/depresionResults.jsx","escalas/ketamina/efectosResults.jsx","escalas/ketamina/efectosCreateLink.jsx","escalas/dolor/dolor_catalog.jsx","escalas/dolor/dolorEncuesta.jsx","escalas/dolor/dolorCreateLink.jsx","escalas/dolor/dolorResults.jsx","escalas/escalasMenu.jsx","doctorViews/balances.jsx","doctorViews/doctorApp.js","recepcionViews/pacientesDash/register.patient.jsx","recepcionViews/pacientesDash/dash.patients.jsx","recepcionViews/pacientesDash/move.patients.jsx","recepcionViews/pacientesDash/detalles.paciente.jsx","recepcionViews/pacientesDash/side.patients.jsx","recepcionViews/pacientesDash/main.patients.jsx","recepcionViews/citas.jsx","recepcionViews/expedientes/createExpedient.jsx","recepcionViews/expedientes/nuevaNota.jsx","recepcionViews/expedientes/detalleRecetaForPrint.jsx","recepcionViews/expedientes/detalleReceta.jsx","recepcionViews/expedientes/detalleNota.jsx","recepcionViews/expedientes/detalleHistoria.jsx","recepcionViews/expedientes/expedientes.jsx","recepcionViews/perfilEdit.jsx","recepcionViews/perfil.jsx","recepcionViews/doctorNotas.jsx","recepcionViews/home/home.jsx","recepcionViews/historial.jsx","recepcionViews/pacientes/register.patient.jsx","recepcionViews/pacientes/detalles.paciente.jsx","recepcionViews/pacientes/main.pacientes.jsx","recepcionViews/balances.jsx","recepcionViews/recepcionApp.js","patientViews/misCitas.jsx","patientViews/recetas.jsx","patientViews/perfilEdit.jsx","patientViews/perfil.jsx","patientViews/home/home.jsx","patientViews/patientApp.js","admHospitalViews/citas/citas.jsx","admHospitalViews/users/register.user.jsx","admHospitalViews/users/dash.users.jsx","admHospitalViews/users/side.users.jsx","admHospitalViews/users/main.users.jsx","admHospitalViews/doctors/register.doctor.jsx","admHospitalViews/doctors/dash.doctors.jsx","admHospitalViews/doctors/side.doctors.jsx","admHospitalViews/doctors/main.doctors.jsx","admHospitalViews/sucursal.jsx","admHospitalViews/perfilEdit.jsx","admHospitalViews/perfilAdministrador.jsx","admHospitalViews/home/home.jsx","admHospitalViews/adminHospitalApp.js","superAdminViews/patients/register.patient.jsx","superAdminViews/patients/dash.patients.jsx","superAdminViews/patients/side.patients.jsx","superAdminViews/patients/main.patients.jsx","superAdminViews/doctors/register.doctor.jsx","superAdminViews/doctors/dash.doctors.jsx","superAdminViews/doctors/side.doctors.jsx","superAdminViews/doctors/main.doctors.jsx","superAdminViews/expedientes.jsx","superAdminViews/hospitals/register.hospital.jsx","superAdminViews/hospitals/dash.hospitals.jsx","superAdminViews/hospitals/side.hospitals.jsx","superAdminViews/hospitals/main.hospitals.jsx","superAdminViews/home/home.jsx","superAdminViews/superAdminApp.js","escalas/ketamina/efects_catalog.jsx","escalas/ketamina/efectosEncuesta.jsx","session/ketaminaPublic.jsx","escalas/depresion/depresion_catalog.jsx","escalas/depresion/depresionEncuesta.jsx","session/depresionPublic.jsx","session/dolorPublic.jsx","App.js","index.js"],"names":["API","S_API","IMAGE_API","logout","localStorage","removeItem","window","location","href","usuario","JSON","parse","getItem","getData","endpoint","a","fetch","mode","then","response","json","data","deleteData","method","headers","res","console","log","message","info","catch","error","updateData","values","body","stringify","success","sendDataBody","Footer","style","display","alignItems","justifyContent","height","backgroundColor","color","marginLeft","Login","span","offset","hoverable","justify","src","logo","alt","width","name","className","initialValues","remember","onFinish","setItem","user","rol","token","err","alert","Item","rules","required","prefix","UserOutlined","placeholder","LockOutlined","type","valuePropName","noStyle","block","htmlType","Option","Select","formItemLayout","labelCol","xs","sm","wrapperCol","tailFormItemLayout","Register","Form","useForm","form","useState","sucursales","setSucursales","sucursalesLoading","setSucursalesLoading","useEffect","getHospitalesData","prefixSelector","value","avatar","estatus","confirm","agreement","horarios","sucursal","horario","scrollToFirstError","label","hasFeedback","Password","dependencies","getFieldValue","validator","_","Promise","reject","Error","resolve","addonBefore","List","fields","add","remove","map","key","restField","marginBottom","align","s","_id","nombre","MinusCircleOutlined","onClick","icon","PlusOutlined","estados","suffixSelector","password","telefono","universidad","certificacion","cedula","medicos_asignados","residence","whitespace","e","addonAfter","Loading","margin","padding","textAlign","background","borderRadius","Dash","pacientesData","setPacientesData","isLoading","setIsLoading","getPacientesData","finally","columns","title","dataIndex","render","text","dataSource","MovePatients","medicosData","setMedicosData","getMedicosData","onChange","onSearch","val","userMedicos","find","p","id_usuario","push","medico","postBody","onFinishFailed","errorInfo","autoComplete","showSearch","optionFilterProp","DetallesPaciente","Header","Layout","Content","Sider","SideMenu","handleClick","state","collapsed","onCollapse","setState","toggle","minHeight","theme","collapsible","this","defaultSelectedKeys","to","UserAddOutlined","SwapOutlined","paddingLeft","MenuOutlined","cursor","exact","path","component","Component","Patients","Citas","isModalVisible","setIsModalVisible","citasData","setCitasData","setCitasLoading","cita","setCita","isDetailVisible","setIsDetailVisible","misPacientes","setMisPacientes","setIsOnline","rs","getCitasData","handleCancel","handleDetailOk","marginRight","dateCellRender","hoy","format","substring","fecha_cita","fecha_hora","hora_cita","listStyleType","status","monthCellRender","num","month","getMonthData","visible","onOk","onCancel","destroyOnClose","footer","isOnline","dateString","showTime","defaultValue","moment","checked","onConfirm","okText","cancelText","danger","direction","CalendarOutlined","ClockCircleOutlined","BankOutlined","NotificationOutlined","comentarios","id_reunion","VideoCameraOutlined","password_reunion","target","rel","CreateExpedient","props","historiasData","sethistoriasData","historiasLoading","sethistoriasLoading","notasData","setNotasData","notasLoading","setNotasLoading","recetasData","setRecetasData","recetasLoading","setRecetasLoading","h","historial","n","createdAt","r","prescripcion","diagnosticos","F00","F01","F02","F03","F04","F05","F06","F07","F09","F40","F41","F42","F43","F45","F48","F50","F51","F52","F53","F54","F55","F59","F60","F70","F71","F72","F73","F78","F79","F80","F81","F82","F83","F84","F88","F89","F90","F91","F92","F93","F94","F95","F98","F99","X60","X61","X62","X63","X64","X65","X66","X67","X68","X69","X70","X71","X72","X73","X74","X75","X76","X77","X78","X79","X80","X81","X82","X83","X84","Y46","Y47","Y49","Y50","Y51","Y57","OptGroup","Dragger","Upload","TextArea","Input","handleChange","NuevaNota","estudiosFiles","setEstudiosFiles","nota","id_medico","paciente","recetas","estudios","newNota","prevExpNotas","id_nota","id_expediente","dragDropProps","multiple","action","file","fileList","onDrop","dataTransfer","files","InboxOutlined","marginTop","rows","Object","keys","k","sk","RecetaDocument","styles","StyleSheet","create","page","flexDirection","section","flexGrow","image","footText","fontSize","Receta","size","logoHospital","lineHeight","receta","borderBottomColor","borderBottomWidth","marginHorizontal","Logo","DetalleReceta","recetaData","setRecetaData","recetaLoading","setRecetaLoading","recetaForEdit","setRecetaForEdit","isEditingModalVisible","setIsEditingModalVisible","isPrintingModalVisible","setIsPrintingModalVisible","handleEditCancel","setLogoHospital","isLogoSelected","setIsLogoSelected","getRecetasData","finifhGet","newReceta","id_receta","editReceta","printReceta","gridStyle","bordered","shape","length","Grid","whiteSpace","FormOutlined","PrinterOutlined","TabPane","Tabs","Panel","Collapse","DetalleNota","notaData","setNotaData","notaLoading","setnotaLoading","notaForEdit","setNotaForEdit","isEditModalVisible","setIsEditModalVisible","editarNota","finishGet","NotaGridStyle","border","EstudioGridStyle","tabPosition","onTabClick","i","index","tab","header","edad","talla","peso","imc","temperatura","presion_arterial","frecuencia_cardiaca","frecuencia_respiratoria","Observaciones","diagnostico","ExperimentOutlined","DownloadOutlined","float","EditOutlined","DetalleHistoria","historiaData","setHistoriaData","setHistoriaLoading","editing","setEditing","historia","getHistoriaData","updateHistoria","HistoriaDetails","disabled","Expedientes","expedientesData","setExpedientesData","setExpedientesLoading","setHistoria","notas","setNotas","getExpedientesData","id_paciente","id","input","document","getElementById","html2canvas","canvas","imgData","toDataURL","pdf","jsPDF","addImage","save","PerfilEdit","perfil","setAvatar","Perfil","profileData","setProfileData","setProfileForEdit","getProfileData","email","editPerfil","forEach","DetailsProfile","DoctorNotas","setNota","isModalDetailVisible","setIsModalDetailVisible","getNotasData","record","Home","dataPie","configPie","appendPadding","angleField","colorField","radius","content","fill","dataLine","mes","consultas","configLine","xField","yField","point","stroke","gutter","lg","valueStyle","md","Historial","addHistoria","Date","createPAtientData","usr","id_historia","setAdding","responsable","res_name","res_phone","url","user_id","UploadOutlined","min","max","defaultChecked","errors","field","validateTrigger","ErrorList","pacienteData","setPacienteData","pacienteLoading","setPacienteLoading","ProfileDetails","estado","municipio","colonia","calle","codigopostal","sexo","ocupacion","estado_civil","escolaridad","ciudad","lugar_de_nacimiento","fuma","alcohol","drogas","cuales_drogas","enfermedades_familiares","enfermedades_medicas","tratamiento_actual","t","toString","MainPacientes","setPaciente","adding","activePatient","setActivePatient","dropdownStyle","filterOption","option","children","toLowerCase","includes","activeKey","pt","PhoneOutlined","DepresionCreateLink","selectedPatient","setSelectedPatient","link","setLink","setMedico","imageRef","useRef","getPacientesOfDoctor","ids","handleDownload","toPng","current","dataUrl","createElement","download","click","handleCopy","toBlob","blob","navigator","clipboard","write","ClipboardItem","paddingTop","l","now","writeText","ref","DepresionResults","encuestasData","setEncuestasData","getDoctorsData","getEncuestasData","EfectosResults","efectosData","setEfectosData","respuestas_ketamina","desrealizacion_0","desrealizacion_1","despersonalizacion_0","despersonalizacion_1","amnesia_0","amnesia_1","percent","ketamina","ketaminaiv","ketaminaivb","Aumento_de_la_Presión_Arterial","Debilidad_o_Mareos_ligeros","Dolor_de_cabeza","Mareos","Nauseas","Sentimientos_de_Ansiedad","scroll","x","EfectosCreateLink","dolor_catalog","DolorEncuesta","encuestaNotExists","setEncuestaNotExists","checking","setChecking","medicoData","setMedicoData","checkEncuesta","idpaciente","idmedico","checkedValues","respuestas_dolor","tipo","uuid","errorFields","Group","options","respuestas","pregunta","DolorCreateLink","DolorResults","Escalas","defaultActiveKey","FormaDePago","tag","toUpperCase","Estado","Paciente","Pago","Balances","Navigator","Navbar","bg","expand","Container","Brand","fontFamily","Toggle","Nav","Link","DoctorApp","RecepcionApp","MisCitas","Recetas","showModal","updatedAt","__v","PatientApp","setUsuario","setILoading","DetalleUsuario","Users","doctoresData","setDoctoresData","getDoctoresData","arr","dl","d","findMyDoctors","onFilter","TeamOutlined","Doctors","Sucursal","PerfilAdministrador","AdminHospitalApp","formItemLayoutWithOutLabel","medicosDataLoading","setMedicosDataLoading","m","patientForEdit","setPatientForEdit","editPatient","patient","doctorForEdit","setDoctorForEdit","editDoctor","rd","HomeOutlined","doctor","SuperAdminExpedientes","profilePic","setProfilePic","beforeUpload","isPNGorJPG","LIST_IGNORE","hospital","setModalVisible","delete","hospitalesData","setHospitalesData","hospitalForEdit","setHospitalForEdit","editHospital","cancel","defaultSortOrder","pagination","filters","sorter","extra","AppstoreAddOutlined","Hospitales","SuperAdminApp","catalogo_efectos","desrealizacion","despersonalizacion","amnesia","EfectosEncuesta","marks","nk","replace","efk","checkedChildren","unCheckedChildren","pr","dots","KetaminaPublic","useParams","depresion_catalog","disminucion_apetito","aumento_apetito","perdida_peso","aumento_peso","depresion_catalog2","DepresionEncuesta","pesoEnabled","setPesoEnabled","apetitoEnabled","setApetitoEnabled","_score","high1_4","high6_9","score","Card","DepresionPublic","HeadachePublic","userType","App","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.35225e76.chunk.js","sourcesContent":["import { message } from 'antd'\r\nexport const API = \"https://api.recreamed.com/api/\"\r\nexport const S_API = \"https://api.recreamed.com/session/\"\r\nexport const IMAGE_API = \"https://api.recreamed.com/images/\"\r\n\r\nexport const logout = () => { localStorage.removeItem('sessionToken'); localStorage.removeItem('userType'); localStorage.removeItem('userData'); window.location.href = '/'; }\r\n\r\nexport const usuario = JSON.parse(localStorage.getItem('userData'));\r\n\r\nexport async function getData(endpoint) {\r\n    return await fetch(API + endpoint, { mode: 'cors' })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            return data;\r\n        });\r\n}\r\n\r\nexport async function sendData(endpoint) {\r\n\r\n    return await fetch(API + endpoint, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' }\r\n    }).then(res => res.json())\r\n        .then(response => {\r\n            console.log('Success:', response);\r\n        })\r\n        .catch(error => console.error('Error:', error))\r\n};\r\n\r\nexport async function deleteData(endpoint) {\r\n\r\n    return await fetch(API + endpoint, {\r\n        method: 'DELETE',\r\n        headers: { 'Content-Type': 'application/json' }\r\n    }).then(res => res.json())\r\n        .then(response => {\r\n            console.log('Success:', response);\r\n            message.info(response.message)\r\n        })\r\n        .catch(error => console.error('Error:', error))\r\n};\r\n\r\nexport async function updateData(endpoint, values) {\r\n\r\n    return await fetch(API + endpoint, {\r\n        method: 'PUT',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(values)\r\n    }).then(res => res.json())\r\n        .then(response => {\r\n            console.log('Success:', response);\r\n            message.success(response.message || response.error);\r\n        })\r\n        .catch(error => console.error('Error:', error))\r\n};\r\nexport async function sendDataBody(endpoint, values) {\r\n\r\n    return await fetch(API + endpoint, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(values)\r\n    }).then(res => res.json())\r\n        .then(response => {\r\n            return response\r\n        })\r\n        .catch(error => console.error('Error:', error))\r\n};\r\n\r\nexport const Footer = () =>\r\n    <div style={{\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        height: 88,\r\n        backgroundColor: '#3c75ef',\r\n    }}>\r\n\r\n        <p style={{ color: 'white' }}>\r\n            Desarrollado por <strong> <a href=\"https://www.realidadcreativa.com\" style={{ marginLeft: 6, color: 'white' }}>realidadcreativa.com</a></strong> | © Realidad Creativa - 2022\r\n        </p>\r\n\r\n    </div>\r\n\r\nexport const estados = [\"Michoacan\", \"Morelos\", \"Guerrero\"];\r\n","export default __webpack_public_path__ + \"static/media/Logo.bcbe104c.png\";","import { Form, Input, Button, Checkbox, Row, Col, Card, message } from 'antd';\r\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\r\nimport { S_API } from '../resources'\r\nimport logo from '../assets/Logo.png';\r\n\r\nexport function Login() {\r\n\r\n  const onFinish = (values) => {\r\n    delete values.remember;\r\n    console.log('Received values of form: ', values);\r\n\r\n    // Inicio de sesion\r\n    fetch(S_API + 'login', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(values)\r\n    })\r\n      .then((data) => { console.log(\"data\", data); return data.json() })\r\n      .then(res => {\r\n        console.log(\"resp\", res);\r\n        if (res.message === \"Bienvenido\") {\r\n          localStorage.setItem(\"userType\", res.user.rol);\r\n          localStorage.setItem('sessionToken', res.data.token);\r\n          localStorage.setItem('userData', JSON.stringify(res.user) );\r\n          window.location.href = '/';\r\n        } else (message.info(res.error || res.message))\r\n      })\r\n      .catch(err => window.alert(\"Error: \", err))\r\n\r\n  };\r\n\r\n  return (\r\n    <Row>\r\n      <Col span={8} offset={8}>\r\n        <br />\r\n        <br />\r\n        <Card hoverable>\r\n          <br />\r\n          <Row justify=\"center\"> <img src={logo} alt=\"Logo\" width={160} /></Row>\r\n          <br />\r\n          <Row justify=\"center\">\r\n            <h3>Inicio de Sesion</h3>\r\n          </Row>\r\n          <br />\r\n          <br />\r\n          <Form\r\n            name=\"normal_login\"\r\n            className=\"login-form\"\r\n            initialValues={{\r\n              remember: true,\r\n            }}\r\n            onFinish={onFinish}\r\n          >\r\n            <Form.Item\r\n              name=\"email\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: 'Por favor ingresa el correo de tu cuenta!',\r\n                },\r\n              ]}\r\n            >\r\n              <Input prefix={<UserOutlined className=\"site-form-item-icon\" />} placeholder=\"Usuario\" />\r\n            </Form.Item>\r\n            <Form.Item\r\n              name=\"password\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: 'Por favor ingresa tu contraseña!',\r\n                },\r\n              ]}\r\n            >\r\n              <Input\r\n                prefix={<LockOutlined className=\"site-form-item-icon\" />} type=\"password\" placeholder=\"Contraseña\" />\r\n            </Form.Item>\r\n            <Form.Item>\r\n              <Form.Item name=\"remember\" valuePropName=\"checked\" noStyle>\r\n                <Checkbox>Mantener la sesion</Checkbox>\r\n              </Form.Item>\r\n\r\n              <a className=\"login-form-forgot\" href=\"\">\r\n                Recuperar contraseña\r\n              </a>\r\n            </Form.Item>\r\n\r\n            <Form.Item>\r\n              <Button block type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n                Iniciar Sesion\r\n              </Button>\r\n            </Form.Item>\r\n            <Form.Item>\r\n              <Row justify=\"center\"> O <a href=\"register\" style={{marginLeft: 4}}>Registrarse</a></Row>\r\n\r\n            </Form.Item>\r\n          </Form>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n\r\n  );\r\n};","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Card,\r\n  Form,\r\n  Input,\r\n  Select,\r\n  Row,\r\n  Col,\r\n  Checkbox,\r\n  Button,\r\n  message,\r\n  Space\r\n} from 'antd';\r\nimport { MinusCircleOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport { S_API, API } from '../resources'\r\nimport logo from '../assets/Logo.png';\r\nimport './login.css';\r\n\r\nconst { Option } = Select;\r\n\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    xs: {\r\n      span: 24,\r\n    },\r\n    sm: {\r\n      span: 8,\r\n    },\r\n  },\r\n  wrapperCol: {\r\n    xs: {\r\n      span: 24,\r\n    },\r\n    sm: {\r\n      span: 16,\r\n    },\r\n  },\r\n};\r\nconst tailFormItemLayout = {\r\n  wrapperCol: {\r\n    xs: {\r\n      span: 24,\r\n      offset: 0,\r\n    },\r\n    sm: {\r\n      span: 16,\r\n      offset: 8,\r\n    },\r\n  },\r\n};\r\n\r\nexport function Register() {\r\n  const [form] = Form.useForm();\r\n  const [sucursales, setSucursales] = useState([]);\r\n  const [sucursalesLoading, setSucursalesLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    getHospitalesData()\r\n\r\n  }, [])\r\n\r\n\r\n  const getHospitalesData = () => {\r\n    fetch(API + 'sucursales')\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        console.log(data);\r\n        setSucursales(data);\r\n        setSucursalesLoading(false);\r\n      });\r\n  }\r\n\r\n  const onFinish = (values) => {\r\n    values.rol = 'Medico';\r\n    values.avatar = 'https://';\r\n    values.estatus = '1';\r\n    delete values.confirm;\r\n    delete values.prefix;\r\n    delete values.agreement;\r\n\r\n    console.log(values)\r\n    fetch(S_API + 'register', {\r\n      method: 'POST',\r\n      body: JSON.stringify(values),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).then(res => res.json())\r\n      .then(response => {\r\n        console.log('Success:', response);\r\n        response.message ? message.success(response.message) : message.error(response.error);\r\n        if (response.message && response.message === 'Usuario creado correctamente') window.location.href = '/'\r\n      })\r\n      .catch(error => console.error('Error:', error))\r\n  };\r\n\r\n  const prefixSelector = (\r\n    <Form.Item name=\"prefix\" noStyle>\r\n      <Select\r\n        style={{\r\n          width: 70,\r\n        }}\r\n      >\r\n        <Option value=\"+52\">+52</Option>\r\n      </Select>\r\n    </Form.Item>\r\n  );\r\n\r\n  return (\r\n    <Row>\r\n      <Col span={12} offset={6}>\r\n        <br />\r\n        <br />\r\n        <Card hoverable>\r\n          <Row justify=\"center\"> <img src={logo} alt=\"Logo\" width={160} /></Row>\r\n          <br />\r\n          <br />\r\n          <Row justify=\"center\">\r\n            <h3>Registro de Medico</h3>\r\n          </Row>\r\n          <br />\r\n          <br />\r\n          <Form\r\n            {...formItemLayout}\r\n            form={form}\r\n            name=\"register\"\r\n            onFinish={onFinish}\r\n            initialValues={{\r\n              horarios: [{ sucursal: '', horario: '' }],\r\n              prefix: '+52',\r\n            }}\r\n            scrollToFirstError\r\n          >\r\n\r\n            <Form.Item name=\"name\" label=\"Nombre\" rules={[{ required: true, message: 'Ingresa Nombre y apellidos' }]}>\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            {/* <Form.Item name=\"rol\" label=\"Rol\" rules={[{ required: true, message: 'Elije el rol', },]}>\r\n              <Select placeholder=\"Elije el tipo de rol\">\r\n                <Option value=\"Administrador\">Administrador de Hospital</Option>\r\n                <Option value=\"Recepcion\">Recepcion</Option>\r\n                <Option value=\"Medico\">Medico</Option>\r\n                <Option value=\"Paciente\" disabled>Paciente</Option>\r\n              </Select>\r\n            </Form.Item> */}\r\n\r\n            <Form.Item name=\"email\" label=\"Correo\" rules={[{ type: 'email', message: 'The input is not valid E-mail!' }, { required: true, message: 'Please input your E-mail!' }]}>\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item name=\"password\" label=\"Contraseña\" rules={[{ required: true, message: 'Por favor ingrese su contraseña!', },]} hasFeedback >\r\n              <Input.Password />\r\n            </Form.Item>\r\n\r\n            <Form.Item name=\"confirm\" label=\"Confirmar contraseña\" dependencies={['password']} hasFeedback\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: 'Please confirm your password!',\r\n                },\r\n                ({ getFieldValue }) => ({\r\n                  validator(_, value) {\r\n                    if (!value || getFieldValue('password') === value) {\r\n                      return Promise.resolve();\r\n                    }\r\n                    return Promise.reject(new Error('Las contraseñas deben coincidir!'));\r\n                  },\r\n                }),\r\n              ]}\r\n            >\r\n              <Input.Password />\r\n            </Form.Item>\r\n\r\n            <Form.Item name=\"telefono\" label=\"Telefono\" rules={[{ required: true, message: 'Please input your phone number!', },]}>\r\n              <Input addonBefore={prefixSelector} style={{ width: '100%', }} />\r\n            </Form.Item>\r\n\r\n            <Form.Item label=\"horarios\" rules={[{ required: false, message: 'Ingresa al menos un horario', },]}>\r\n              <Form.List name=\"horarios\" label=\"horarios list\"\r\n              // rules={[\r\n              //   {\r\n              //     validator: async (_, horarios) => {\r\n              //       if (!horarios || horarios.length < 1) {\r\n              //         message.error('Debes Ingresar al menos un horario')\r\n              //         return Promise.reject(new Error('Debe haber al menos un horario'));\r\n              //       }\r\n              //     },\r\n              //   },\r\n              // ]}\r\n              >\r\n                {(fields, { add, remove }) => (\r\n                  <>\r\n                    {fields.map(({ key, name, ...restField }) => (\r\n                      <Space key={key} style={{ display: 'flex', marginBottom: 8 }} align=\"baseline\">\r\n                        <Form.Item\r\n                          {...restField}\r\n                          name={[name, 'sucursal']}\r\n                          rules={[{ required: true, message: 'Elije Sucursal' }]}\r\n                        >\r\n                          <Select placeholder=\"Elije Sucursal\" style={{ width: '180px' }} >\r\n                            {sucursalesLoading ? \"Cargando\" :\r\n                              sucursales.map(s => <Option value={s._id}>{s.nombre}</Option>)\r\n                            }\r\n                          </Select>\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                          {...restField}\r\n                          name={[name, 'horario']}\r\n                          rules={[{ required: false, message: 'Missing last name' }]}\r\n                        >\r\n                          <Input placeholder=\"Horario\" />\r\n                        </Form.Item>\r\n                        <MinusCircleOutlined onClick={() => remove(name)} />\r\n                      </Space>\r\n                    ))}\r\n                    <Form.Item>\r\n                      <Button type=\"dashed\" onClick={() => add()} block icon={<PlusOutlined />}>\r\n                        Agregar Horario\r\n                      </Button>\r\n                    </Form.Item>\r\n                  </>\r\n                )}\r\n              </Form.List>\r\n            </Form.Item>\r\n\r\n\r\n\r\n            <Form.Item name=\"cedula\" label=\"Cedula\" rules={[{ required: false, message: 'Ingresa cedula' }]}>\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            {/* <Form.Item name=\"calle\" label=\"Calle\" rules={[{ required: true, message: 'Ingresa calle', whitespace: true }]}>\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item name=\"numexterior\" label=\"Num Exterior\" rules={[{ required: true, message: 'Ingresa numero exterior' }]}>\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item name=\"numinterior\" label=\"Num Interior\" rules={[{ required: true, message: 'Ingresa numinterior' }]}>\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item label=\"Colonia\" name=\"colonia\" rules={[{ required: true, message: 'Please input your colobnia!' }]}            >\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item name=\"estado\" label=\"Estado\" rules={[{ required: true, message: 'Apellido materno', },]}>\r\n              <Select placeholder=\"Elije tu estado\">\r\n                {estados.map(e => <Option value={e}>{e}</Option>)}\r\n              </Select>\r\n            </Form.Item>\r\n\r\n            <Form.Item name=\"municipio\" label=\"Municipio\" rules={[{ required: true, message: 'Ingresa tu municipio' }]} >\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item name=\"codigopostal\" label=\"Codigo Postal\" rules={[{ required: true, message: 'Ingresa codigopostal', },]}>\r\n              <InputNumber addonAfter={suffixSelector} style={{ width: '100%', }} />\r\n            </Form.Item> */}\r\n\r\n            <Form.Item name=\"certificacion\" label=\"Certificacion\" rules={[{ required: false, message: 'Ingresa tu certificacion' }]}>\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item name=\"universidad\" label=\"Universidad\" rules={[{ required: false, message: 'Ingresa tu universidad' }]} >\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n              name=\"agreement\"\r\n              valuePropName=\"checked\"\r\n              rules={[\r\n                {\r\n                  validator: (_, value) =>\r\n                    value ? Promise.resolve() : Promise.reject(new Error('Tienes que aceptar los terminos y condiciones para registrarte')),\r\n                },\r\n              ]}\r\n              {...tailFormItemLayout}\r\n            >\r\n              <Checkbox>\r\n                He leído y acepto los <a href=\"https://recreamed.com\">terminos y condiciones</a>\r\n              </Checkbox>\r\n            </Form.Item>\r\n\r\n            <Form.Item {...tailFormItemLayout}>\r\n              <Button type=\"primary\" htmlType=\"submit\">\r\n                Registrar\r\n              </Button>\r\n            </Form.Item>\r\n          </Form>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n  );\r\n}; ","import React from 'react'\r\nimport { Form, Input, Button, message } from 'antd'\r\nimport { InputNumber, Select } from 'antd';\r\nimport { S_API } from '../../resources'\r\nimport { usuario } from '../../resources'\r\n\r\nconst { Option } = Select;\r\nconst estados = [\"Michoacan\", \"Morelos\", \"Guerrero\"];\r\n\r\nexport default function Register() {\r\n\r\n  const [form] = Form.useForm();\r\n\r\n  const onFinish = (values) => {\r\n    values.avatar = 'https://';\r\n    values.estatus = '1';\r\n    values.rol = 'Paciente';\r\n    values.password = values.telefono;\r\n    values.universidad = '';\r\n    values.certificacion = '';\r\n    values.cedula = '';\r\n    values.horarios = [];\r\n    values.medicos_asignados = [usuario._id];\r\n\r\n    delete values.prefix;\r\n\r\n    console.log(values)\r\n    fetch(S_API + 'register', {\r\n      method: 'POST',\r\n      body: JSON.stringify(values),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).then(res => res.json())\r\n      .then(response => { console.log('Success:', response); message.success(response.message || response.error); })\r\n      .catch(error => console.error('Error:', error))\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log('Failed:', errorInfo);\r\n  };\r\n\r\n  const prefixSelector = (\r\n    <Form.Item name=\"prefix\" noStyle>\r\n      <Select\r\n        style={{\r\n          width: 70,\r\n        }}\r\n      >\r\n        <Option value=\"+52\">+52</Option>\r\n      </Select>\r\n    </Form.Item>\r\n  );\r\n  const suffixSelector = (\r\n    <Form.Item name=\"suffix\" noStyle>\r\n      <Select\r\n        style={{\r\n          width: 70,\r\n        }}\r\n      >\r\n        <Option value=\"USD\">$</Option>\r\n        <Option value=\"CNY\">¥</Option>\r\n      </Select>\r\n    </Form.Item>\r\n  );\r\n  return (\r\n    <div>\r\n      <h4>Registrar Paciente</h4>\r\n      <br />\r\n      <Form\r\n        // {...formItemLayout}\r\n        labelCol={{ span: 6 }} wrapperCol={{ span: 16 }}\r\n        form={form}\r\n        name=\"register\"\r\n        onFinish={onFinish}\r\n        initialValues={{\r\n          residence: ['zhejiang', 'hangzhou', 'xihu'],\r\n          prefix: '52',\r\n        }}\r\n        scrollToFirstError\r\n      >\r\n        <Form.Item\r\n          name=\"email\"\r\n          label=\"Correo\"\r\n          rules={[\r\n            {\r\n              type: 'email',\r\n              message: 'The input is not valid E-mail!',\r\n            },\r\n            {\r\n              required: true,\r\n              message: 'Please input your E-mail!',\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        {/* <Form.Item name=\"password\" label=\"Contraseña\" rules={[{ required: true, message: 'Por favor ingrese su contraseña!', },]} hasFeedback >\r\n          <Input.Password />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"confirm\"\r\n          label=\"Confirmar contraseña\"\r\n          dependencies={['password']}\r\n          hasFeedback\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Please confirm your password!',\r\n            },\r\n            ({ getFieldValue }) => ({\r\n              validator(_, value) {\r\n                if (!value || getFieldValue('password') === value) {\r\n                  return Promise.resolve();\r\n                }\r\n                return Promise.reject(new Error('Las contraseñas deben coincidir!'));\r\n              },\r\n            }),\r\n          ]}\r\n        >\r\n          <Input.Password />\r\n        </Form.Item> */}\r\n\r\n        <Form.Item\r\n          name=\"telefono\"\r\n          label=\"Telefono\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Please input your phone number!',\r\n            },\r\n          ]}\r\n        >\r\n          <Input\r\n            addonBefore={prefixSelector}\r\n            style={{\r\n              width: '100%',\r\n            }}\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"name\"\r\n          label=\"Nombre\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Ingresa Nombre y apellidos',\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n\r\n\r\n        <Form.Item\r\n          name=\"calle\"\r\n          label=\"Calle\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Ingresa calle',\r\n              whitespace: true,\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"numexterior\"\r\n          label=\"Num Exterior\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Ingresa numero exterior',\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"numinterior\"\r\n          label=\"Num Interior\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Ingresa numinterior',\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"Colonia\"\r\n          name=\"colonia\"\r\n          rules={[{ required: true, message: 'Please input your colobnia!' }]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item name=\"estado\" label=\"Estado\" rules={[{ required: true, message: 'Apellido materno', },]}>\r\n          <Select placeholder=\"Elije tu estado\">\r\n            {estados.map(e => <Option value={e}>{e}</Option>)}\r\n          </Select>\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"municipio\"\r\n          label=\"Municipio\"\r\n          rules={[{ required: true, message: 'Ingresa tu municipio' }]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item name=\"codigopostal\" label=\"Codigo Postal\" rules={[{ required: true, message: 'Ingresa codigopostal', },]}>\r\n          <InputNumber addonAfter={suffixSelector} style={{ width: '100%', }} />\r\n        </Form.Item>\r\n        {/* <Form.Item\r\n          name=\"certificacion\"\r\n          label=\"Certificacion\"\r\n          rules={[{ required: true, message: 'Ingresa tu certificacion' }]}\r\n        >\r\n          <Input />\r\n        </Form.Item> */}\r\n        {/* <Form.Item\r\n          name=\"universidad\"\r\n          label=\"Universidad\" rules={[{ required: true, message: 'Ingresa tu universidad' }]} >\r\n          <Input />\r\n        </Form.Item> */}\r\n\r\n        <Form.Item >\r\n          <Button type=\"primary\" htmlType=\"submit\">\r\n            Registrar\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Spin } from 'antd';\r\n\r\nexport default function Loading() {\r\n    return (\r\n        <div style={{\r\n            margin: '20px 0',\r\n            marginBottom: '20px',\r\n            padding: '30px 50px',\r\n            textAlign: 'center',\r\n            background: 'rgba(0, 0, 0, 0.05)',\r\n            borderRadius: '4px',\r\n        }}>\r\n            <Spin />\r\n        </div >\r\n    )\r\n}\r\n","import React, { Component, useState, useEffect } from 'react'\r\nimport { Table } from 'antd'\r\nimport { API } from '../../resources'\r\nimport Loading from '../../loading'\r\nimport { usuario } from '../../resources'\r\n\r\n\r\nexport default function Dash() {\r\n\r\n  const [pacientesData, setPacientesData] = useState([])\r\n  const [isLoading, setIsLoading] = useState(true)\r\n  const [view, setview] = useState('tabla')\r\n  const views = {\r\n    'tabla': 'tabla'\r\n  }\r\n\r\n  useEffect(() => {\r\n    getPacientesData()\r\n  }, [])\r\n\r\n  const getPacientesData = () => {\r\n    fetch(API + `mispacientes/${usuario._id}`)\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        console.log(data); setPacientesData(data);\r\n      })\r\n      .finally(() => setIsLoading(false))\r\n  }\r\n\r\n  const columns = [\r\n    {\r\n      title: 'Nombre',\r\n      dataIndex: 'name',\r\n      key: 'name',\r\n      render: (text)=><a href=\"detalles\">{text}</a>\r\n    },\r\n    // {\r\n    //   title: 'Edad',\r\n    //   dataIndex: 'age',\r\n    //   key: 'age',\r\n    // },\r\n    {\r\n      title: 'Medico',\r\n      dataIndex: 'id_medicoasignado',\r\n      key: 'id_medicoasignado',\r\n    },\r\n    {\r\n      title: 'Municipio',\r\n      dataIndex: 'municipio',\r\n      key: 'municipio',\r\n    },\r\n    {\r\n      title: 'Calle',\r\n      dataIndex: 'calle',\r\n      key: 'calle',\r\n    },\r\n    {\r\n      title: 'N Exterior',\r\n      dataIndex: 'numexterior',\r\n      key: 'numexterior',\r\n    },\r\n    {\r\n      title: 'Telefono',\r\n      dataIndex: 'telefono',\r\n      key: 'telefono',\r\n    },\r\n\r\n  ];\r\n\r\n  const tablaPacientes = () => {\r\n\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h4>Pacientes</h4>\r\n      {\r\n        isLoading ? <Loading /> :\r\n          <Table dataSource={pacientesData} columns={columns} />\r\n      }\r\n      \r\n    </div>\r\n  )\r\n\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Button, Form, Input, Select, message } from 'antd';\r\nimport { API } from '../../resources';\r\nimport { usuario } from '../../resources';\r\nconst { Option } = Select;\r\n\r\n\r\nexport default function MovePatients() {\r\n    const [pacientesData, setPacientesData] = useState([]);\r\n    const [medicosData, setMedicosData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        getPacientesData()\r\n        getMedicosData()\r\n    }, [])\r\n\r\n    const getPacientesData = () => {\r\n        fetch(API + `mispacientes/${usuario._id}`)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log(\"Pacientes: \", data);\r\n                setPacientesData(data);\r\n                // setILoading(false);\r\n            });\r\n    }\r\n\r\n    const getMedicosData = () => {\r\n        fetch(API + `users_by_rol/Medico`)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log(data);\r\n                setMedicosData(data);\r\n                // setILoading(false);\r\n            });\r\n    }\r\n\r\n    const onFinish = (values) => {\r\n        // console.log('Valores:', values);\r\n        const userFound = pacientesData.find(p => p._id === values.id_usuario);\r\n        let userMedicos = userFound.medicos_asignados;\r\n        userMedicos.push(values.medico);\r\n        const postBody = { medicos_asignados: userMedicos }\r\n        fetch(API + `users/updateMedicos/${values.id_usuario}`, { \r\n            method: 'PUT',\r\n            body: JSON.stringify(postBody),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }).then(res => res.json())\r\n            .then(response => { console.log('Success:', response); message.success(response.message || response.error); })\r\n            .catch(error => console.error('Error:', error))\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n\r\n\r\n    //Select paciente widget\r\n    function onChange(value) {\r\n        console.log(`selected ${value}`);\r\n    }\r\n    function onSearch(val) {\r\n        console.log('search:', val);\r\n    }\r\n    //End of select paciente widget\r\n    return (\r\n        <div>\r\n            <h4> Asignar pacientes a otro médico </h4>\r\n            <br />\r\n            <Form name=\"expediente\" labelCol={{ span: 8 }} wrapperCol={{ span: 12 }} onFinish={onFinish} onFinishFailed={onFinishFailed} autoComplete=\"off\" >\r\n\r\n                <Form.Item label=\"Paciente\" name=\"id_usuario\" rules={[{ required: true, message: 'Selecciona Usuario' }]} >\r\n                    <Select\r\n                        showSearch\r\n                        placeholder=\"Select a person\"\r\n                        optionFilterProp=\"children\"\r\n                        onChange={onChange}\r\n                        onSearch={onSearch}\r\n                    >\r\n                        {\r\n                            pacientesData.map(p => <Option value={p._id}>{p.name}</Option>)\r\n                        }\r\n                    </Select>\r\n                </Form.Item>\r\n                <Form.Item label=\"Medico\" name=\"medico\" rules={[{ required: true, message: 'Ingresa RFC' }]} >\r\n                    <Select\r\n                        showSearch\r\n                        placeholder=\"Select a person\"\r\n                        optionFilterProp=\"children\"\r\n                        onChange={onChange}\r\n                        onSearch={onSearch}\r\n                    >\r\n                        {\r\n                            medicosData.map(p => <Option value={p._id}>{p.name}</Option>)\r\n                        }\r\n                    </Select>\r\n                </Form.Item>\r\n\r\n                <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\r\n                    <Button type=\"primary\" htmlType=\"submit\" form='expediente'>\r\n                        Guardar\r\n                    </Button>\r\n                </Form.Item>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function DetallesPaciente() {\r\n  return (\r\n    <div>DetallesPaciente</div>\r\n  )\r\n}\r\n","import { React, Component } from 'react';\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\nimport { Layout, Menu } from 'antd';\r\nimport { UserOutlined, UserAddOutlined, MenuOutlined, SwapOutlined } from '@ant-design/icons';\r\n\r\nimport Register from './register.patient';\r\nimport Dash from './dash.patients';\r\nimport MovePatients from './move.patients';\r\nimport DetallesPaciente from './detalles.paciente';\r\n\r\nconst { Header, Content, Footer, Sider } = Layout;\r\n\r\nclass SideMenu extends Component {\r\n  handleClick = e => {\r\n    console.log('click ', e);\r\n  };\r\n\r\n  state = {\r\n    collapsed: false,\r\n  };\r\n\r\n  onCollapse = (collapsed) => {\r\n    this.setState({ collapsed });\r\n  }\r\n  toggle = () => {\r\n    this.setState({\r\n      collapsed: !this.state.collapsed,\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <Layout style={{ minHeight: '100vh' }}>\r\n          <Sider\r\n            theme=\"light\"\r\n            collapsible\r\n            collapsed={this.state.collapsed}\r\n            onCollapse={this.onCollapse}>\r\n            <div className=\"logo\" />\r\n            <Menu defaultSelectedKeys={['1']} mode=\"inline\">\r\n              <Menu.Item icon={ <UserOutlined /> } key=\"1\">\r\n                <span>Pacientes</span>\r\n                <Link to=\"/pacientes\" />\r\n              </Menu.Item>\r\n              <Menu.Item icon={ <UserAddOutlined /> } key=\"2\">\r\n                <span>Registrar Paciente</span>\r\n                <Link to=\"/registrar\" />\r\n              </Menu.Item>\r\n              <Menu.Item icon={ <SwapOutlined />} key=\"3\">\r\n                <span>Re-asignar Paciente</span>\r\n                <Link to=\"/mover\" />\r\n              </Menu.Item>\r\n              <Menu.Item icon={ <SwapOutlined />} key=\"4\">\r\n                <span>Detalles</span>\r\n                <Link to=\"/detalles\" />\r\n              </Menu.Item>\r\n            </Menu>\r\n          </Sider>\r\n          <Layout>\r\n\r\n            <Header style={{ background: '#fff', padding: 0, paddingLeft: 16 }}>\r\n              <MenuOutlined className=\"trigger\" style={{ cursor: 'pointer' }} onClick={this.toggle} />\r\n            </Header>\r\n\r\n            <Content style={{ margin: '24px 16px', padding: 24, background: '#fff', minHeight: 280 }}>\r\n              <Route exact path=\"/registrar\" component={Register} />\r\n              <Route path=\"/pacientes\" component={Dash} />\r\n              <Route path=\"/detalles\" component={DetallesPaciente} />\r\n              <Route path=\"/mover\" component={MovePatients} />\r\n            </Content>\r\n\r\n            <Footer style={{ textAlign: 'center' }}>\r\n              RECREAMED ©2021 Created by Realidad Creativa\r\n            </Footer>\r\n          </Layout>\r\n\r\n        </Layout>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SideMenu\r\n\r\n\r\n","import React, { Component } from 'react'\r\n// import {Card } from 'antd'\r\nimport SideMenu from './side.patients';\r\n\r\nexport class Patients extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div>\r\n                            <SideMenu />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Patients\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Row, Col, Button, Modal, Form, Input, DatePicker, message, Popconfirm } from 'antd';\r\nimport { Calendar, Badge, Switch, Space } from 'antd';\r\nimport { deleteData, getData, sendDataBody } from '../resources';\r\nimport { usuario } from '../resources';\r\nimport { Select } from 'antd';\r\nimport { VideoCameraOutlined, NotificationOutlined, CalendarOutlined, UserOutlined, BankOutlined, ClockCircleOutlined } from '@ant-design/icons';\r\nimport moment from \"moment\";\r\n\r\nconst { Option } = Select;\r\n\r\nconst format = 'HH:mm';\r\n\r\nexport function Citas() {\r\n    const [isModalVisible, setIsModalVisible] = useState(false);\r\n    const [citasData, setCitasData] = useState([])\r\n    const [citasLoading, setCitasLoading] = useState(true)\r\n    const [cita, setCita] = useState({})\r\n    const [isDetailVisible, setIsDetailVisible] = useState(false);\r\n    const [misPacientes, setMisPacientes] = useState([])\r\n    const [isOnline, setIsOnline] = useState(false)\r\n\r\n    useEffect(() => {\r\n        console.log('Yo : ', usuario);\r\n        getData(`mispacientes/${usuario._id}`).then(rs => { setMisPacientes(rs) })\r\n        getCitasData()\r\n    }, [])\r\n\r\n    const getCitasData = () => {\r\n        getData(`citas/medico/${usuario._id}`).then(rs => { console.log('GetCitas: ', rs); setCitasData(rs); setCitasLoading(false) })\r\n    }\r\n\r\n\r\n    // Add Modal\r\n    const showModal = () => { setIsModalVisible(true) };\r\n    const handleOk = () => { setIsModalVisible(false); };\r\n    const handleCancel = () => { setIsModalVisible(false); };\r\n    // Details Modal\r\n    const handleDetailOk = () => { setIsDetailVisible(false); };\r\n    const handleDetailCancel = () => { setIsDetailVisible(false); };\r\n\r\n    const onFinish = (values) => {\r\n        values.medico = usuario._id;\r\n        values.sucursal = usuario.horarios[0].sucursal;\r\n\r\n        console.log('ready to send: ', values);\r\n        sendDataBody('citas/add', values).then((response) => {\r\n            console.log('Success:', response); message.success(response.message || response.error);\r\n            getCitasData(); setIsModalVisible(false)\r\n        })\r\n\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    // DatePicker\r\n    function onChange(value, dateString) {\r\n        console.log('Selected Time: ', value);\r\n        console.log('Formatted Selected Time: ', dateString);\r\n\r\n    }\r\n    function onOk(value) {\r\n        console.log('onOk: ', value);\r\n    }\r\n\r\n    //Calendar Functions\r\n    const getMonthData = (value) => {\r\n        if (value.month() === 8) {\r\n            return 1394;\r\n        }\r\n    };\r\n    const monthCellRender = (value) => {\r\n        const num = getMonthData(value);\r\n        return num ? (\r\n            <div className=\"notes-month\">\r\n                <section>{num}</section>\r\n                <span>Backlog number</span>\r\n            </div>\r\n        ) : null;\r\n    };\r\n\r\n    const dateCellRender = (value) => {\r\n        // const hoy = value.format('L');\r\n        let hoy = value.format();\r\n        hoy = hoy.substring(0, 10)\r\n        return (\r\n            <ul className=\"events\">\r\n                {citasData.map((cita) => {\r\n                    cita.fecha_cita = cita.fecha_hora.substring(0, 10);\r\n                    cita.hora_cita = cita.fecha_hora.substring(11, 16);\r\n                    return cita.fecha_cita === hoy ?\r\n                        <li style={{ listStyleType: 'none' }} key={cita._id}>\r\n                            <Badge status='success' text={cita.usuario.name} onClick={() => { setCita(cita); setIsDetailVisible(true); }} />\r\n                        </li>\r\n                        : <></>\r\n\r\n                })\r\n                }\r\n            </ul >\r\n        );\r\n    };\r\n    // Select \r\n    const handleChange = (value) => {\r\n        // console.log(`selected ${value}`);\r\n    };\r\n    // Switch For online or Presencial\r\n    const onSwitch = (checked) => {\r\n        console.log(`switch to ${checked}`);\r\n        setIsOnline(checked)\r\n    };\r\n    // Confirmar Borrar\r\n    const confirm = (e) => { deleteData('citas/remove/' + cita._id).then((rs) => { setIsDetailVisible(false); getCitasData() }) }\r\n    const cancel = (e) => { console.log(e); };\r\n    // End of Confirmar Borrar\r\n\r\n    return (\r\n        <div className='mainContainer'>\r\n            <Row>\r\n                <h4 style={{ marginRight: 20 }}>CALENDARIO DE CITAS</h4>\r\n                <Button type=\"primary\" onClick={showModal}>\r\n                    Nueva Cita\r\n                </Button>\r\n            </Row>\r\n\r\n            {/* {isLoading ? <Loading /> : <Table columns={columns} dataSource={citasData} />} */}\r\n\r\n            <Calendar dateCellRender={dateCellRender} monthCellRender={monthCellRender} />\r\n\r\n            <Modal title=\"Nueva Cita\" visible={isModalVisible} onOk={handleOk} onCancel={handleCancel} destroyOnClose\r\n                footer={[\r\n                    <Button onClick={handleCancel}>Cancelar</Button>,\r\n                    <Button type=\"primary\" htmlType=\"submit\" form='nueva_cita_medic'>\r\n                        Guardar\r\n                    </Button>\r\n                ]}\r\n            >\r\n                <Form name=\"nueva_cita_medic\" labelCol={{ span: 8 }} wrapperCol={{ span: 12 }} onFinish={onFinish} onFinishFailed={onFinishFailed} autoComplete=\"off\"\r\n                    initialValues={{ isOnline: false }}>\r\n\r\n                    <Form.Item label=\"Paciente\" name=\"usuario\" rules={[{ required: true, message: 'Selecciona Usuario' }]} >\r\n                        <Select\r\n                            onChange={handleChange}\r\n                        >\r\n                            {\r\n                                misPacientes.map((p) => {\r\n                                    return <Option value={p._id}>{p.name}</Option>\r\n                                })\r\n                            }\r\n                        </Select>\r\n                    </Form.Item>\r\n\r\n\r\n                    <Form.Item label=\"Fecha y Hora\" name=\"fecha_hora\" rules={[{ required: true, message: 'Selecciona Fecha y Hora' }]} >\r\n                        <DatePicker onChange={onChange} onOk={onOk} placeholder='Selecciona Fecha y Hora'\r\n                            format=\"YYYY-MM-DD HH:mm:ss\"\r\n                            showTime={{\r\n                                defaultValue: moment(\"00:00:00\", \"HH:mm:ss\"),\r\n                                format: \"HH:mm\"\r\n                            }} />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item label=\"VideoLlada\" name=\"isOnline\" >\r\n                        <Switch onChange={onSwitch} />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item label=\"Comentarios\" name=\"comentarios\" rules={[{ required: false, message: 'Ingresa RFC' }]} >\r\n                        <Input />\r\n                    </Form.Item>\r\n\r\n\r\n                </Form>\r\n            </Modal>\r\n\r\n            <Modal title=\"Detalles de la cita\" visible={isDetailVisible} onOk={handleDetailOk} onCancel={handleDetailCancel} destroyOnClose\r\n                footer={[\r\n                    <Popconfirm\r\n                        title=\"Esta seguro de que quiere borrar esta cita?\"\r\n                        onConfirm={confirm}\r\n                        onCancel={cancel}\r\n                        okText=\"Si\"\r\n                        cancelText=\"No\"\r\n                    >\r\n                        <Button danger>Borrar Cita</Button>\r\n                    </Popconfirm>,\r\n                    <Button type='primary' onClick={handleDetailOk}>Aceptar</Button>\r\n                ]}\r\n            >\r\n                {\r\n                    cita ?\r\n                        <Space direction='vertical'>\r\n\r\n                            <Space align='center'> <UserOutlined /> {cita.usuario?.name}</Space>\r\n                            <Space align='center'> <CalendarOutlined /> {cita.fecha_cita} <ClockCircleOutlined style={{ marginBottom: 6 }}/> {cita.hora_cita}</Space>\r\n                            <Space align='baseline'> <BankOutlined /> {cita.sucursal?.nombre}</Space>\r\n                            <Space align='baseline'> <NotificationOutlined /> {cita.comentarios}</Space>\r\n                            {cita.id_reunion && <Space align='center'> <VideoCameraOutlined style={{ marginBottom: 6 }} /> ID reunion: {cita.id_reunion.substring(26, 37)} </Space>}\r\n                            {cita.id_reunion && <Space align='center'> <VideoCameraOutlined style={{ marginBottom: 6 }} /> Contraseña : {cita.password_reunion} </Space>}\r\n                            {cita.id_reunion && <Space align='center'> <VideoCameraOutlined style={{ marginBottom: 6, color: '#1890ff' }} /> <a href={cita.id_reunion} target='_blank' rel='noreferrer'> Ir a la cita </a> </Space>}\r\n\r\n                        </Space>\r\n                        :\r\n                        <p>Sin cita seleccionada</p>\r\n                }\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { API, getDataWithTrigger } from '../../resources';\r\nimport { getData } from '../../resources';\r\nimport { Button, Modal, Form, Input, Select, message } from 'antd';\r\nconst { Option } = Select;\r\n\r\nexport default function CreateExpedient(props) {\r\n    //PacientesData ya viene en props\r\n    const [historiasData, sethistoriasData] = useState([])\r\n    const [historiasLoading, sethistoriasLoading] = useState(true)\r\n    const [notasData, setNotasData] = useState([])\r\n    const [notasLoading, setNotasLoading] = useState(true)\r\n    const [recetasData, setRecetasData] = useState([])\r\n    const [recetasLoading, setRecetasLoading] = useState(true)\r\n\r\n    useEffect(() => {\r\n        getData('historias').then(rs => {sethistoriasData(rs); sethistoriasLoading(false)});\r\n        getData('notas').then(rs => {setNotasData(rs); setNotasLoading(false)});\r\n        getData('recetas').then(rs => {setRecetasData(rs); setRecetasLoading(false)});\r\n    }, [])\r\n\r\n\r\n    //Save expedient\r\n    const onFinish = (values) => {\r\n        console.log('Valores:', values);\r\n        fetch(API + 'expedientes/add', {\r\n            method: 'POST',\r\n            body: JSON.stringify(values),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }).then(res => res.json())\r\n            .then(response => { console.log('Success:', response); message.success(response.message || response.error); })\r\n            .catch(error => console.error('Error:', error))\r\n        // getExpedientesData() \r\n    };\r\n    const handleOk = () => {\r\n\r\n    };\r\n\r\n    const handleCancel = () => {\r\n        props.setIsModalVisible(false);\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n    return (\r\n        <Modal title=\"Nuevo expediente\" visible={props.isModalVisible} onCancel={handleCancel}\r\n        footer={[\r\n            \r\n        ]}\r\n        >\r\n            <Form name=\"expediente\" labelCol={{ span: 6 }} wrapperCol={{ span: 12 }} onFinish={onFinish} onFinishFailed={onFinishFailed} autoComplete=\"off\" >\r\n                <Form.Item label=\"Paciente\" name=\"usuario\" rules={[{ required: true, message: 'Ingresa RFC' }]} >\r\n                    <Select\r\n                        defaultValue={props.pacientesData[0] && props.pacientesData[0]._id}\r\n                        placeholder='Selecciona un paciente'\r\n                        style={{ width: 200 }}\r\n                    // onChange={handleChange}\r\n                    >\r\n                        {\r\n                            props.pacientesData.map(p => <Option value={p._id}>{p.name}</Option>)\r\n                        }\r\n\r\n                    </Select>\r\n                </Form.Item>\r\n                <Form.Item label=\"Historia Clinica\" name=\"historia\" rules={[{ required: true, message: 'Ingresa RFC' }]} >\r\n                    {\r\n                        historiasLoading ? <Input /> :\r\n                            <Select\r\n                                placeholder='Selecciona una Historia'\r\n                                style={{ width: 200 }}\r\n                            // onChange={handleChange}\r\n                            >\r\n                                {\r\n                                   historiasData.map(h => <Option key={h._id} value={h._id}>{h.historial}</Option>)\r\n                                }\r\n\r\n                            </Select>\r\n                    }\r\n\r\n                </Form.Item>\r\n                <Form.Item label=\"Notas Medicas\" name=\"nota\" rules={[{ required: true, message: 'Ingresa RFC' }]} >\r\n                {\r\n                        notasLoading ? <Input /> :\r\n                            <Select\r\n                                placeholder='Selecciona una Nota'\r\n                                style={{ width: 200 }}\r\n                            // onChange={handleChange}\r\n                            >\r\n                                {\r\n                                   notasData.map(n => <Option key={n._id} value={n._id}>{n.createdAt}</Option>)\r\n                                }\r\n\r\n                            </Select>\r\n                    }\r\n                </Form.Item>\r\n                <Form.Item label=\"Receta\" name=\"receta\" rules={[{ required: true, message: 'Ingresa RFC' }]} >\r\n                {\r\n                        recetasLoading ? <Input /> :\r\n                            <Select\r\n                                placeholder='Selecciona una Receta'\r\n                                style={{ width: 200 }}\r\n                            // onChange={handleChange}\r\n                            >\r\n                                {\r\n                                   recetasData.map(r => <Option key={r._id} value={r._id}>{r.prescripcion}</Option>)\r\n                                }\r\n\r\n                            </Select>\r\n                    }\r\n                </Form.Item>\r\n\r\n                <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\r\n                    <Button type=\"primary\" htmlType=\"submit\" form='expediente'>\r\n                        Guardar\r\n                    </Button>\r\n                </Form.Item>\r\n               \r\n                <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\r\n                    <Button type=\"primary\" htmlType=\"submit\" form='expediente'>\r\n                        Cancelar\r\n                    </Button>\r\n                </Form.Item>\r\n            </Form>\r\n        </Modal>\r\n    )\r\n}\r\n","export const diagnosticos = {\r\n\r\n    \"Trastornos mentales orgánicos, incluyendo los sintomáticos\": {\r\n        F00: \"Demencia en la enfermedad de Alzheimer\",\r\n        F01: \"Demencia vascular\",\r\n        F02: \"Demencia en enfermedades clasificadas en otro lugar\",\r\n        F03: \"Demencia sin especificación\",\r\n        F04: \"Síndrome amnésico orgánico no inducido por alcohol u otras sustancias psicótropas\",\r\n        F05: \"Delirium no inducido por alcohol u otras sustancias psicótropas\",\r\n        F06: \"Otros trastornos mentales debidos a lesión o disfunción cerebral o enfermedad somática\",\r\n        F07: \"Trastornos de la personalidad y del comportamiento debidos a enfermedad, lesión o disfunción cerebral\",\r\n        F09: \"Trastorno mental orgánico o sintomático sin especificación\"\r\n    },\r\n\r\n    \"Trastornos mentales y del comportamiento debidos al consumo de sustancias psicótropas\": {\r\n        \"F10\": \"Trastornos mentales y del comportamiento debidos al consumo de alcohol\",\r\n        \"F11\": \"Trastornos mentales y del comportamiento debidos al consumo de opioides \",\r\n        \"F12\": \"Trastornos mentales y del comportamiento debidos al consumo de cannabinoides \",\r\n        \"F13\": \"Trastornos mentales y del comportamiento debidos al consumo de sedantes o hipnóticos\",\r\n        \"F14\": \"Trastornos mentales y del comportamiento debidos al consumo de cocaína\",\r\n        \"F15\": \"Trastornos mentales y del comportamiento debidos al consumo de otros estimulantes (incluida cafeína)\",\r\n        \"F16\": \"Trastornos mentales y del comportamiento debidos al consumo de alucinógenos\",\r\n        \"F17\": \"Trastornos mentales y del comportamiento debidos al consumo de tabaco\",\r\n        \"F18\": \"Trastornos mentales y del comportamiento debidos al consumo de disolventes volátiles\",\r\n        \"F19\": \"Trastornos mentales y del comportamiento debidos al consumo de múltiples drogas o de otras sustancias psicotrópicas\"\r\n    },\r\n    \"Esquizofrenia, trastorno esquizotípico y trastorno de ideas delirantes\": {\r\n        \"F20\": \"Esquizofrenia\",\r\n        \"F21\": \"Trastorno esquizotípico\",\r\n        \"F22\": \"Trastorno de ideas delirantes persistentes\",\r\n        \"F23\": \"Trastornos psicóticos agudos y transitorios\",\r\n        \"F24\": \"Trastorno de ideas delirantes inducidas\",\r\n        \"F25\": \"Trastornos esquizoafectivos\",\r\n        \"F28\": \"Otros trastornos psicóticos no orgánicos \",\r\n        \"F29\": \"Psicosis no orgánica sin especificación\"\r\n    },\r\n    \"F40-F48 Trastornos neuróticos, secundarios a situaciones estresantes y somatomorfos\": {\r\n        F40: \"Trastorno de ansiedad fóbica\",\r\n        \"F40.0\": \"Agorafobia\",\r\n        \"F40.1\": \"Fobias sociales\",\r\n        \"F40.2\": \"Fobias específicas\",\r\n        F41: \"Otros trastornos de ansiedad\",\r\n        \"F41.0\": \"Trastorno de pánico\",\r\n        \"F41.1\": \"Trastorno de ansiedad generalizada\",\r\n        \"F41.2\": \"Trastorno mixto ansioso-depresivo\",\r\n        F42: \"Trastorno obsesivo-compulsivo\",\r\n        F43: \"Reacción a estrés agudo\",\r\n        \"F43.1\": \"Trastornos estrés postraumático\",\r\n        \"F43.2\": \"Trastornos de adaptación\",\r\n        \"F43.8\": \"Otras reacciones a estrés grave\",\r\n        \"F43.9\": \"Reacción a estrés grave sin especificación\",\r\n        \"F44\": \"Trastornos disociativos (de conversión\",\r\n        F45: \"Trastornos somatomorfos\",\r\n        F48: \"Otros trastornos neuróticos\"\r\n    },\r\n    \"F50-F59 Trastornos del comportamiento asociados a disfunciones fisiológicas y a factores somáticos\": {\r\n        F50: \"Trastornos de la conducta alimentaria \",\r\n        \"F50.0\": \"Anorexia nerviosa\",\r\n        \"F50.1\": \"Anorexia nerviosa atípica\",\r\n        \"F50.2\": \"Bulimia nerviosa\",\r\n        \"F50.3\": \"Bulimia nerviosa atípica\",\r\n        F51: \"Trastornos no orgánicos del sueño\",\r\n        \"F51.0\": \"Insomnio no orgánico\",\r\n        \"F51.1\": \"Hipersomnia no orgánica\",\r\n        \"F51.2\": \"Trastorno no orgánico del ciclo sueño-vigilia\",\r\n        \"F51.3\": \"Sonambulismo\",\r\n        \"F51.4\": \"Terrores nocturnos\",\r\n        \"F51.5\": \"Pesadillas \",\r\n        F52: \"Disfunción sexual no orgánica\",\r\n        F53: \"Trastornos mentales y del comportamiento en el puerperio no clasificadas en otro lugar\",\r\n        F54: \" Factores psicológicos y del comportamiento en trastornos o enfermedades clasificadas en otro lugar\",\r\n        F55: \"Abuso de sustancias que no producen dependencia\",\r\n        F59: \"Trastornos del comportamiento asociados a disfunciones fisiológicas y a factores somáticos sin especificación\"\r\n    },\r\n    \"F60-F69 Trastornos de la personalidad y del comportamiento del adulto\": {\r\n        F60: \"Trastornos específicos de la personalidad\",\r\n        \"F60.0\": \"Trastorno paranoide de la personalidad\",\r\n        \"F60.1\": \"Trastorno esquizoide de la personalidad\",\r\n        \"F60.2\": \"Trastorno disocial de la personalidad\",\r\n        \"F60.3\": \"Trastorno de inestabilidad emocional de la personalidad\",\r\n        \"F60.4\": \"Trastorno histriónico de la personalidad\",\r\n        \"F60.5\": \"Trastorno anancástico de la personalidad\",\r\n        \"F60.6\": \"Trastorno ansioso de la personalidad\",\r\n        \"F60.7\": \"Trastorno dependiente de la personalidad\",\r\n        \"F60.8\": \"Otros trastornos específicos de la personalidad\",\r\n        \"F60.9\": \"Trastornos de la personalidad sin especificación \"\r\n    },\r\n    \"F61 Trastornos mixtos y otros trastornos de la personalidad\": {\r\n        \"F61.0\": \"Trastornos mixtos de la personalidad\"\r\n    },\r\n\r\n    \"F62 Transformación persistente de la personalidad no atribuible a lesión o enfermedad cerebral \": {\r\n        \"F62.0\": \"Transformación persistente de la personalidad no atribuible a lesión o enfermedad cerebral \"\r\n    },\r\n\r\n    \"F63 Trastorno de los hábitos y del control de los impulsos\": {\r\n        \"F63.0\": \"Trastorno de los hábitos y del control de los impulsos\"\r\n    },\r\n\r\n    \"F64 Trastorno de identidad sexual\": {\r\n        \"F64.0\": \"Trastorno de identidad sexual\"\r\n    },\r\n\r\n    \"F65 Trastornos de inclinación sexual\": {\r\n        \"F65.0\": \"Trastornos de inclinación sexual\"\r\n    },\r\n    \"F66 Trastornos psicológicos y del comportamiento del desarrollo y orientación sexuales\": {\r\n        \"F66.0\": \"Trastornos psicológicos y del comportamiento del desarrollo y orientación sexuales\"\r\n    },\r\n\r\n    \"F68 Otros trastornos de la personalidad y del comportamiento del adulto \": {\r\n        \"F68.0\": \"Otros trastornos de la personalidad y del comportamiento del adulto \"\r\n    },\r\n\r\n    \"F69 Trastorno de la personalidad y del comportamiento del adulto sin especificación\": {\r\n        \"F69.0\": \"Trastorno de la personalidad y del comportamiento del adulto sin especificación\"\r\n    },\r\n    \"F70-F79 Retraso mental\": {\r\n        F70: \"Retraso mental leve\",\r\n        F71: \"Retraso mental moderado \",\r\n        F72: \"Retraso mental grave \",\r\n        F73: \"Retraso mental profundo \",\r\n        F78: \"Otro retraso mental \",\r\n        F79: \"Retraso mental sin especificación \"\r\n    },\r\n    \"F80-F89 trastornos del desarrollo psicológico\": {\r\n        F80: \"Trastornos específicos del desarrollo del habla y de lenguaje\",\r\n        F81: \"Trastornos específicos del desarrollo del aprendizaje escolar\",\r\n        F82: \"Trastorno específico del desarrollo psicomotor\",\r\n        F83: \"Trastorno específico del desarrollo mixto\",\r\n        F84: \"Trastornos generalizados del desarrollo\",\r\n        F88: \"Otros trastornos del desarrollo psicológico\",\r\n        F89: \"Trastorno del desarrollo psicológico sin especificación\"\r\n    },\r\n\r\n    \"F90-F98 Trastornos del comportamiento y de las emociones de comienzo habitual en la infancia y adolescencia \": {\r\n        F90: \"Trastornos hipercinéticos \",\r\n        F91: \"Trastornos disociales \",\r\n        F92: \"Trastornos disociales y de las emociones mixtos \",\r\n        F93: \"Trastornos de las emociones de comienzo habitual en la infancia \",\r\n        F94: \"Trastornos del comportamiento social de comienzo habitual en la infancia y adolescencia \",\r\n        F95: \" Trastornos de tics\",\r\n        F98: \"Otros trastornos de las emociones y del comportamiento de comienzo habitual en la infancia y adolescencia \",\r\n        F99: \"Trastorno mental sin especificación\"\r\n    },\r\n    \"X60-X84 Autolesiones intencionales\": {\r\n        X60: \"Envenenamiento intencionalmente autoinfligido por analgésicos no opiáceos, antipiréticos o antirreumáticos \",\r\n        X61: \"Envenenamiento intencionalmente autoinfligido por fármacos antiepilépticos, sedantes, hipnóticos, antiparkinsonianos y psicotrópicos no clasificados en otro lugar\",\r\n        X62: \"Envenenamiento Intencional autoinfligido por narcóticosy psicodisléptlcos (alucinógenos) no clasificados en otro lugar\",\r\n        X63: \"\tEnvenenamiento Intencionalmente autoinfligido por otrosfármacos que actúan sobre el sistema nervioso autónomo\",\r\n        X64: \"Envenenamiento Intencionalmente autoinfligido por otras drogas, fármacos o productos biológicos\",\r\n        X65: \"Envenenamiento Intencionalmente autoinfligido por alcohol\",\r\n        X66: \"Envenenamiento Intencionalmente autoinfligido por solventes orgánicos, hidrocarburos halogenados o a sus vapores\",\r\n        X67: \"Envenenamiento Intencionalmente autoinfligido por exposición a otros gases y vapores\",\r\n        X68: \"Envenenamiento Intencionalmente autoinfligido por pesticidas\",\r\n        X69: \"\tEnvenenamiento Intencionalmente autoinfligido por otras sustancias químicas o nocivas no especificadas\",\r\n        X70: \"Daño intencionalmente autoinfligido por ahorcamiento, estrangulación o sofocación\",\r\n        X71: \"Daño intencionalmente autoinfligido por ahogamiento e inmersión\",\r\n        X72: \"Daño intencionalmente autoinfligido por disparo de arma corta\",\r\n        X73: \"Daño intencionalmente autoinfligido por disparo de rifles, escopetas o arma larga\",\r\n        X74: \"Daño intencionalmente autoinfligido por otras armas de fuego\",\r\n        X75: \"Daño intencionalmente autoinfligido por material explosivo\",\r\n        X76: \"Daño intencionalmente autoinfligido por fuego y llamas\",\r\n        X77: \"Daño intencionalmente autoinfligido por vapor de agua, vapores u objetos calientes\",\r\n        X78: \"Daño intencionalmente autoinfligido por un objeto cortante\",\r\n        X79: \"Daño intencionalmente autoinfligido por objetos romos\",\r\n        X80: \"Daño intencionalmente autoinfligido porsalto desde un lugar elevado\",\r\n        X81: \"Daño intencionalmente autoinfligido por arrojarse o tenderse ante un objeto en movimiento\",\r\n        X82: \"Daño intencionalmente autoinfligido por choque con vehículo de motor  \",\r\n        X83: \"Daño intencionalmente autoinfligido por otros medios específicos\",\r\n        X84: \"Daño intencionalmente autoinfligido por medios inespecíficos\"\r\n    },\r\n    \"Y06 Negligencia y abandono\": { \"Y06.0\": \"Negligencia y abandono\" },\r\n    \"Y07 Otros síndromes de malos tratos\": { \"Y07.0\": \"Otros síndromes de malos tratos\" },\r\n    \"Y40-Y59 Drogas, medicamentos y sustancias biológicas que causan efectos adversos en uso terapéutico\": {\r\n        Y46: \"Antiepilépticos y antiparkinsonianos\",\r\n        Y47: \"Sedantes, hipnóticos y ansiolíticos\",\r\n        Y49: \"Psicótropos no clasificados en otro lugar \",\r\n        Y50: \"Estimulantes del sistema nervioso central no clasificados en otro lugar\",\r\n        Y51: \"Fármacos que afectan primariamente al sistema nervioso autónomo \",\r\n        Y57: \"Otros fármacos y drogas sin especificar\"\r\n    },\r\n    \"Z00-Z99 Factores que influyen en el estado de salud y en el contacto con los servicios de salud\": {\r\n        \"Z55\": \"Problemas relacionados con la educación y la alfabetización\",\r\n        \"Z56\": \"Problemas relacionados con el empleo y desempleo\",\r\n        \"Z59\": \"Problemas relacionados con la vivienda y las condiciones económicas\",\r\n        \"Z60\": \"\tProblemas relacionados con el ambiente social\",\r\n        \"Z60.0\": \"Problemas de ajuste a las transiciones de los ciclos vitales\",\r\n        \"Z60.1\": \"Situaciones familiares atípicas\",\r\n        \"Z60.2\": \"Vivir solo\",\r\n        \"Z60.3\": \"Dificultades en la adaptación cultural\",\r\n        \"Z60.4\": \"Exclusión y rechazo social\",\r\n        \"Z60.5\": \"Ser blanco de discriminación adversa y persecución \",\r\n        \"Z61.0\": \"Pérdida de relaciones afectivas en la infancia\",\r\n        \"Z61.1\": \"Cambio de domicilio en la niñez\",\r\n        \"Z61.2\": \"Patrones de relaciones familiares alterados en la infancia\",\r\n        \"Z61.3\": \"Hechos contundentes a la pérdida de la autoestima en la niñez\",\r\n        \"Z61.4\": \"Problemas relacionados con presunto abuso sexual del niño por una persona dentro del grupo de apoyo primario\",\r\n        \"Z61.5\": \"Problemas relacionados con presunto abuso sexual del niño por una persona no perteneciente al grupo de apoyo primario\",\r\n        \"Z61.6\": \" Problemas relacionados con presunto abuso físico del niño\",\r\n        \"Z61.7\": \"Experiencias personales atemorizantes en la niñez\",\r\n        \"Z62.0\": \"\tSupervisión y control inadecuados por parte de los padres\",\r\n        \"Z62.1\": \"Sobreprotección parental\",\r\n        \"Z62.2\": \"Crianza en una institución\",\r\n        \"Z62.3\": \"Hostigamiento y acusación de culpabilidad al niño\",\r\n        \"Z62.4\": \"Abandono emocional del niño\",\r\n        \"Z62.5\": \"\tOtros problemas relacionados con la negligencia en la crianza del niño\",\r\n        \"Z62.6\": \"Presiones inapropiadas de los padres y otras anormalidades en la crianza\",\r\n        \"Z63.0\": \"Problemas en la relación entre esposos o pareja\",\r\n        \"Z63.1\": \"Problemas en la relación con los padres y los familiares políticos\",\r\n        \"Z63.2\": \"Problemas relacionados con el apoyo familiar inadecuado\",\r\n        \"Z63.3\": \"Problemas relacionados con la ausencia de un miembro de la familia\",\r\n        \"Z63.4\": \"Problemas relacionados con la desaparición o muerte de un miembro de la familia\",\r\n        \"Z63.5\": \"Problemas relacionados con la ruptura familiar por separación o divorcio\",\r\n        \"Z63.6\": \"Problemas relacionados con familiar dependiente, necesitado de cuidado en la casa\",\r\n        \"Z63.7\": \"Problemas relacionados con otros hechos estresantes que afectan a la familia y al hogar\",\r\n        \"Z64.0\": \"Problemas relacionados con embarazo no deseado\",\r\n        \"Z64.1\": \"Problemas relacionados con la multiparidad\",\r\n        \"Z64.2\": \"Problemas relacionados con la solicitud o aceptación de intervenciones físicas, nutricionales y químicas, conociendo su riesgo y peligro\",\r\n        \"Z64.3\": \"Problemas relacionados con la solicitud o aceptación de intervenciones psicológicas o de la conducta, conociendo su riesgo y peligro\",\r\n        \"Z64.4\": \"Problemas relacionados con el desacuerdo con consejeros\",\r\n        \"Z65.0\": \"Problemas relacionados con culpabilidad en procedimientos civiles o criminales sin prisión\",\r\n        \"Z65.1\": \"Problemas relacionados con prisión y otro encarcelamiento\",\r\n        \"Z65.2\": \"Problemas relacionados con la liberación de la prisión\",\r\n        \"Z65.3\": \"Problemas relacionados con otras circunstancias legales\",\r\n        \"Z65.4\": \"Problemas relacionados con víctima de crimen o terrorismo\",\r\n        \"Z65.5\": \"Problemas relacionados con la exposición a desastre, guerra u otras hostilidades\",\r\n        \"Z86.4\": \"Historia personal de abuso de sustancias psicoactivas\",\r\n        \"Z86.5\": \"Historia personal de otros trastornos mentales o del comportamiento\",\r\n        \"Z91.1\": \"Historia personal de incumplimiento del régimen o tratamiento médico\",\r\n        \"Z91.3\": \"Historia personal de ciclo sueño-vigilia no saludable\",\r\n        \"Z91.4\": \"Historia personal de trauma psicológico, no clasificado en otra parte\",\r\n        \"Z91.5\": \"HISTORIA PERSONAL DE LESIÓN AUTOINFLIGIDA INTENCIONALMENTE\",\r\n    }\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { Form, Input, Button, message, Select, Upload, Space } from 'antd';\r\nimport { API, usuario } from '../../resources';\r\nimport { MinusCircleOutlined, PlusOutlined, UploadOutlined, InboxOutlined } from '@ant-design/icons';\r\nimport { diagnosticos } from '../../assets/diagnosticos2';\r\nconst { Option, OptGroup } = Select;\r\nconst { Dragger } = Upload;\r\nconst { TextArea } = Input;\r\n\r\nconst handleChange = (value) => {\r\n    // Select diagnostic\r\n    console.log(`selected ${value}`);\r\n};\r\n\r\nconst onFinishFailed = (errorInfo) => {\r\n    console.log('Failed:', errorInfo);\r\n};\r\n\r\n\r\n//List of Estudios styles\r\nconst formItemLayout = {\r\n    labelCol: {\r\n        xs: {\r\n            span: 24,\r\n        },\r\n        sm: {\r\n            span: 4,\r\n        },\r\n    },\r\n    wrapperCol: {\r\n        xs: {\r\n            span: 24,\r\n        },\r\n        sm: {\r\n            span: 20,\r\n        },\r\n    },\r\n};\r\nconst formItemLayoutWithOutLabel = {\r\n    wrapperCol: {\r\n        xs: {\r\n            span: 24,\r\n            offset: 0,\r\n        },\r\n        sm: {\r\n            span: 20,\r\n            offset: 4,\r\n        },\r\n    },\r\n};\r\n\r\n\r\n\r\nexport function NuevaNota(props) {\r\n    const [estudiosFiles, setEstudiosFiles] = useState([])\r\n\r\n    useEffect(() => {\r\n        console.log('Received nota on props: ', props.nota)\r\n    }, [])\r\n\r\n    // const [pacientesData, setPacientesData] = useState([]);\r\n    const onFinishTest = (values) => {\r\n        // Create Nota\r\n        values.id_medico = usuario._id;\r\n        values.id_usuario = props.paciente;\r\n        values.recetas = [];\r\n        values.estudios = estudiosFiles;\r\n\r\n        console.log('Estudios ready to send: ', values.estudios)\r\n        console.log('ready to send: ', values)\r\n    }\r\n    const onFinish = async (values) => {\r\n        // Create Nota\r\n        values.id_medico = usuario._id;\r\n        values.id_usuario = props.paciente;\r\n        values.recetas = [];\r\n        values.estudios = estudiosFiles;\r\n        console.log('ready To send: ', values)\r\n        const newNota = await fetch(API + 'notas/add', {\r\n            method: 'POST',\r\n            body: JSON.stringify(values),\r\n            headers: { 'Content-Type': 'application/json' }\r\n        }).then(res => res.json())\r\n            .then(response => {\r\n                message.success(response.message || response.error);\r\n                // response.message && response.message === ''\r\n                return response;\r\n            })\r\n            .catch(error => console.error('Error:', error))\r\n\r\n        // Add new nota to received notas\r\n        props.prevExpNotas.push(newNota.id_nota)\r\n        //Update nota at expedient\r\n        fetch(API + 'expedientes/updateNotas/' + props.id_expediente, {\r\n            method: 'PUT',\r\n            body: JSON.stringify({ \"notas\": props.prevExpNotas }),\r\n            headers: { 'Content-Type': 'application/json' }\r\n        }).then(res => res.json())\r\n            .then(response => {\r\n                console.log('Update Exp:', response);\r\n                message.success(response.message || response.error);\r\n            })\r\n            .catch(error => console.error('Error:', error))\r\n    };\r\n\r\n    const onFinishEdit = (values) => {\r\n        // Create Nota\r\n        console.log('ready To send: ', values)\r\n        fetch(API + 'notas/update/' + props.nota._id, {\r\n            method: 'PUT',\r\n            body: JSON.stringify(values),\r\n            headers: { 'Content-Type': 'application/json' }\r\n        }).then(res => res.json())\r\n            .then(response => {\r\n                message.success(response.message || response.error);\r\n                if (response.message && response.message === 'Nota Updated') props.setIsModalVisible(false)\r\n                console.log(response);\r\n            })\r\n            .catch(error => console.error('Error:', error))\r\n    };\r\n\r\n    // Upload File\r\n    const dragDropProps = {\r\n        name: 'file',\r\n        multiple: true,\r\n        action: API + 'notas/estudios/upload', // Production\r\n\r\n        onChange(info) {\r\n            const { status } = info.file;\r\n\r\n            if (status !== 'uploading') {\r\n                console.log(info.file, info.fileList);\r\n            }\r\n\r\n            if (status === 'done') {\r\n                message.success(`${info.file.name} file uploaded successfully.`);\r\n                console.log('New Files: ', info.file.response.file)\r\n                setEstudiosFiles([...estudiosFiles, info.file.response.file])\r\n            } else if (status === 'error') {\r\n                message.error(`${info.file.name} file upload failed.`);\r\n            }\r\n        },\r\n\r\n        onDrop(e) {\r\n            console.log('Dropped files', e.dataTransfer.files);\r\n        },\r\n    };\r\n\r\n\r\n    // Get value Of upload\r\n    const getFile = (e) => {\r\n        console.log('Upload event:', e);\r\n\r\n        if (Array.isArray(e)) {\r\n            return e;\r\n        }\r\n        return e && e.file.response.file;\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h4 style={{ marginLeft: 20 }}>Detalles de la nota</h4>\r\n            {/* <p>Expediente received: {props.id_expediente}</p>\r\n            <p>Paciente received: {props.paciente}</p>\r\n            <p>Medico received: {usuario._id}</p>\r\n            <p>prevExpNotas received: {props.prevExpNotas}</p>\r\n            *La nota lleva el id del medico, obtenido de la sesion */}\r\n            {/* <p>Diag [0].clasificacion {diagnosticos[0]['clasificacion']}</p> */}\r\n\r\n            <br />\r\n            <Dragger {...dragDropProps}>\r\n                <p className=\"ant-upload-drag-icon\">\r\n                    <InboxOutlined />\r\n                </p>\r\n                <p className=\"ant-upload-text\">Arrastra los archivos de estudio aquí, o da click para buscar</p>\r\n                <p className=\"ant-upload-hint\">\r\n                    Selecciona archivos en pdf o imagen que sean menores a 2 MB para poder subirlos\r\n                </p>\r\n            </Dragger>\r\n            <Form name=\"basic\" labelCol={{ span: 8 }} wrapperCol={{ span: 14 }} initialValues={props.nota ? props.nota : { remember: true, estudios: [] }} onFinish={props.nota ? onFinishEdit : onFinish} onFinishFailed={onFinishFailed} autoComplete=\"off\" style={{ marginTop: 12 }} >\r\n\r\n                <Form.Item label=\"Edad\" name=\"edad\" rules={[{ required: true, message: 'Ingresa RFC' }]} >\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item label=\"Talla\" name=\"talla\" rules={[{ required: false, message: 'Ingresa RFC' }]} >\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item label=\"Peso\" name=\"peso\" rules={[{ required: false, message: 'Ingresa RFC' }]} >\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item label=\"IMC\" name=\"imc\" rules={[{ required: false, message: 'Ingresa RFC' }]} >\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item label=\"Temperatura\" name=\"temperatura\" rules={[{ required: false, message: 'Ingresa RFC' }]} >\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item label=\"Presion Arterial\" name=\"presion_arterial\" rules={[{ required: false, message: 'Ingresa RFC' }]} >\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item label=\"Frecuencia Cariaca\" name=\"frecuencia_cardiaca\" rules={[{ required: false, message: 'Ingresa RFC' }]} >\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item label=\"Frecuencia respiratoria\" name=\"frecuencia_respiratoria\" rules={[{ required: false, message: 'Ingresa RFC' }]} >\r\n                    <Input />\r\n                </Form.Item>\r\n\r\n                {/* <Form.Item label=\"Estudios\" name=\"estudios\" rules={[{ required: true, message: 'Ingresa RFC' }]} >\r\n                    <Input />\r\n                </Form.Item> */}\r\n\r\n                {/* \r\n                <Form.List\r\n                    name=\"estudios\"\r\n                    rules={[\r\n                        {\r\n                            validator: async (_, names) => {\r\n                                if (!names || names.length < 1) {\r\n                                    return Promise.reject(new Error('Ingresa al menos un estudio'));\r\n                                }\r\n                            },\r\n                        },\r\n                    ]}\r\n                >\r\n                    {(fields, { add, remove }, { errors }) => (\r\n                        <>\r\n                            {fields.map((field, index) => (\r\n                                <Form.Item\r\n                                    {...(index === 0 ? formItemLayout : formItemLayoutWithOutLabel)}\r\n                                    label={index === 0 ? 'Estudio' : ''}\r\n                                    required={false}\r\n                                    key={field.key}\r\n                                    getValueFromEvent={getFile}\r\n                                >\r\n                                    <Form.Item\r\n                                        {...field}\r\n                                        validateTrigger={['onChange', 'onBlur']}\r\n                                        rules={[\r\n                                            {\r\n                                                required: true,\r\n                                                whitespace: true,\r\n                                                message: \"Ingresa estudios\",\r\n                                            },\r\n                                        ]}\r\n                                        noStyle\r\n                                    >\r\n                                        <Upload {...UploadProps}>\r\n                                            <Button icon={<UploadOutlined />}>Click to Upload</Button>\r\n                                        </Upload>\r\n                                    </Form.Item>\r\n                                    {fields.length > 1 ? (\r\n                                        <MinusCircleOutlined\r\n                                            className=\"dynamic-delete-button\"\r\n                                            onClick={() => remove(field.name)}\r\n                                        />\r\n                                    ) : null}\r\n                                </Form.Item>\r\n                            ))}\r\n                            <Form.Item>\r\n                                <Button\r\n                                    type=\"dashed\"\r\n                                    onClick={() => add()}\r\n                                    style={{\r\n                                        // width: '100%',\r\n                                        position: 'relative',\r\n                                        alignItems: 'center',\r\n                                        justifyContent: 'flex-end'\r\n                                    }}\r\n                                    icon={<PlusOutlined />}\r\n                                >\r\n                                    Agregar Estudios\r\n                                </Button>\r\n                                <Form.ErrorList errors={errors} />\r\n                            </Form.Item>\r\n                        </>\r\n                    )}\r\n                </Form.List>\r\n */}\r\n\r\n                <Form.Item label=\"Observaciones\" name=\"Observaciones\" rules={[{ required: true, message: 'Ingresa Observaciones' }]} >\r\n                    <TextArea rows={4} />\r\n                </Form.Item>\r\n\r\n                <Form.Item label=\"Diagnostico\" name=\"diagnostico\" rules={[{ required: true, message: 'Selecciona Diagnostico' }]} >\r\n                    <Select\r\n                        showSearch\r\n                        style={{ width: 400 }}\r\n                        onChange={handleChange}\r\n                    >\r\n                        {\r\n                            Object.keys(diagnosticos).map((k) => {\r\n                                return <OptGroup label={k}>\r\n                                    {Object.keys(diagnosticos[k]).map((sk) => {\r\n                                        return <Option value={sk}>{diagnosticos[k][sk]}</Option>\r\n                                    })}\r\n                                </OptGroup>\r\n\r\n                            })\r\n                        }\r\n                    </Select>\r\n                </Form.Item>\r\n\r\n                <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\r\n                    <Space>\r\n                        <Button onClick={() => props.setIsModalVisible(false)}>\r\n                            Cancelar\r\n                        </Button>\r\n                        <Button type=\"primary\" htmlType=\"submit\">\r\n                            Guardar\r\n                        </Button>\r\n                    </Space>\r\n\r\n                </Form.Item>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/william_h.ad9b5c4d.jpg\";","import React from 'react';\r\nimport { Page, Text, View, Document, StyleSheet, Image } from '@react-pdf/renderer';\r\nimport { PDFViewer } from '@react-pdf/renderer';\r\nimport William from '../../assets/logos/william_h.jpg'\r\nimport Logo from '../../assets/Logo.png'\r\nimport { usuario, IMAGE_API } from '../../resources';\r\n\r\nexport default function RecetaDocument(props) {\r\n    // Create styles\r\n    const styles = StyleSheet.create({\r\n        page: {\r\n            flexDirection: 'column',\r\n            backgroundColor: 'white'\r\n        },\r\n        block: {\r\n            flexDirection: 'row'\r\n        },\r\n        section: {\r\n            margin: 10,\r\n            padding: 10,\r\n            flexGrow: 1\r\n        },\r\n        image: {\r\n            // marginVertical: 15,\r\n            // marginHorizontal: 10,\r\n            width: 132\r\n        },\r\n        footText: {\r\n            fontSize: 14\r\n        }\r\n    });\r\n    // Create Document Component\r\n    function Receta() {\r\n        return <Document>\r\n            <Page size=\"A4\" style={styles.page}>\r\n\r\n                <View style={styles.block}>\r\n                    <View style={styles.section}>\r\n                        <Image style={styles.image} src={IMAGE_API + props.logoHospital} />\r\n                    </View>\r\n                    <View style={[styles.section, { alignItems: 'center' }]}>\r\n                        <Text style={styles.footText}>{usuario.name}</Text>\r\n                        <Text style={styles.footText}>Cédula Profesional: {usuario.cedula}</Text>\r\n                        <Text style={styles.footText}>Certificación: {usuario.certificacion}</Text>\r\n                        <Text style={styles.footText}>{usuario.universidad}</Text>\r\n                    </View>\r\n                </View>\r\n\r\n                <View style={{ margin: 35, flexGrow: 1 }}>\r\n                    <View style={styles.section}>\r\n                        <Text style={{ lineHeight: 2 }}>{props.receta.prescripcion}</Text>\r\n                        {/* <Text>Lorem ipsum dolor, sit amet consectetur adipisicing elit. Hic veniam totam praesentium sapiente, provident, quidem deleniti magni ea fuga laborum dignissimos saepe sed voluptatibus voluptates? Iste consequuntur qui ab facere.</Text> */}\r\n                    </View>\r\n                </View>\r\n\r\n                <View style={{ color: 'black', width: '90%', backgroundColor: 'black', borderBottomColor: '#9bb4df', borderBottomWidth: 1, marginHorizontal: 20 }}></View>\r\n                <View style={styles.block}>\r\n                    <View style={styles.section}>\r\n                        {/* <Text style={styles.footText}>José Rubén Romero #103, Bosque Camelinas</Text>\r\n                        <Text style={styles.footText}>Morelia, Mich. CP 58290</Text>\r\n                        <Text style={styles.footText}>Tel. (443) 3235088, Cel (443) 356 7822</Text> */}\r\n                        <Text style={styles.footText}>Pagina de la clinica, Correo@clinica.com</Text>\r\n                    </View>\r\n                    <View style={styles.section}>\r\n                        <Image style={styles.image} src={Logo} />F\r\n                        <Text style={{ fontSize: 10, marginLeft: 20 }}>www.recreamed.com</Text>\r\n                    </View>\r\n                </View>\r\n            </Page>\r\n\r\n\r\n        </Document>\r\n    }\r\n    return <div>\r\n        <PDFViewer height={500} width={550}>\r\n            <Receta />\r\n        </PDFViewer>\r\n    </div>\r\n\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { Card, Button, Row, Col, Modal, Form, Input, message } from 'antd';\r\nimport { API, sendDataBody, updateData, usuario } from '../../resources';\r\nimport { PlusOutlined, FormOutlined, PrinterOutlined } from '@ant-design/icons';\r\nimport RecetaDocument from './detalleRecetaForPrint';\r\nconst { TextArea } = Input;\r\n//Los IDS de las recetas son tomados y enviados desde el expediente\r\n// Estan siendo agregadas y actualizadas directamente al expediente desde el form de detallenota->Agregar Receta\r\nexport default function DetalleReceta(props) {\r\n\r\n    const [recetaData, setRecetaData] = useState([]);\r\n    const [recetaLoading, setRecetaLoading] = useState(true);\r\n    const [recetaForEdit, setRecetaForEdit] = useState({});\r\n    const [isModalVisible, setIsModalVisible] = useState(false); // Modal For Add REcipe\r\n    const [isEditingModalVisible, setIsEditingModalVisible] = useState(false); // Modal For Edit Recipe\r\n    const [isPrintingModalVisible, setIsPrintingModalVisible] = useState(false)\r\n\r\n    // Add Recipe Modal\r\n    const showModal = () => { setIsModalVisible(true); };\r\n    const handleOk = () => { setIsModalVisible(false); };\r\n    const handleCancel = () => { setIsModalVisible(false); };\r\n    // Edit Recipe Modal\r\n    const showEditModal = () => { console.log('BeforeEdit'); setIsEditingModalVisible(true); };\r\n    const handleEditOk = () => { setIsEditingModalVisible(false); };\r\n    const handleEditCancel = () => { setIsEditingModalVisible(false); };\r\n    // Print Receta Modal\r\n    const showPrintModal = () => { setIsPrintingModalVisible(true); };\r\n    const handlePrintOk = () => { setIsPrintingModalVisible(false); setIsLogoSelected(false)};\r\n    const handlePrintCancel = () => { setIsPrintingModalVisible(false);setIsLogoSelected(false)};\r\n    // Select logo for print in receta. Switches the modal view into select logo hospital/pdf recipe for print\r\n    const [logoHospital, setLogoHospital] = useState(null)\r\n    const [isLogoSelected, setIsLogoSelected] = useState(false)\r\n\r\n    useEffect(() => {\r\n        props.recetas ?\r\n            getRecetasData()\r\n            :\r\n            finifhGet()\r\n    }, [props.recetas])\r\n\r\n    const getRecetasData = () => {\r\n        sendDataBody('recetas/getMany', { 'ids': props.recetas }).then((response) => {\r\n            setRecetaData(response);\r\n            setRecetaLoading(false)\r\n        })\r\n        // fetch(API + 'recetas/getMany', {\r\n        //     method: 'POST',\r\n        //     headers: { 'Content-Type': 'application/json' },\r\n        //     body: JSON.stringify({ 'ids': props.recetas })\r\n        // }).then(res => res.json())\r\n        //     .then(response => {\r\n        //         // console.log('Recetas Received:', response);\r\n        //         setRecetaData(response);\r\n        //         setRecetaLoading(false)\r\n        //     })\r\n        //     .catch(error => console.error('Error:', error))\r\n    }\r\n\r\n    const finifhGet = () => { setRecetaData([]); setRecetaLoading(false); }\r\n\r\n    // New Receta\r\n    const onFinish = async (values) => {\r\n        values.id_nota = props.id_nota;\r\n        console.log('new Receta:', values);\r\n        console.log('new Recetas:', values);\r\n\r\n        const newReceta = await fetch(API + 'recetas/add', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(values)\r\n        }).then(res => res.json())\r\n            .then(response => {\r\n                console.log('Success:', response);\r\n                message.info(response.message || response.error)\r\n                response.message === 'Receta creada correctamente' ? setIsModalVisible(false) : console.log(response.error);\r\n                return response;\r\n            })\r\n            .catch(error => console.error('Error:', error))\r\n\r\n        props.recetas.push(newReceta.id_receta)\r\n        console.log('New Recetas: ', props.recetas);\r\n\r\n        // Update nota.recetas\r\n        fetch(API + 'notas/updateRecetas/' + props.id_nota, {\r\n            method: 'PUT',\r\n            body: JSON.stringify({ \"recetas\": props.recetas }),\r\n            headers: { 'Content-Type': 'application/json' }\r\n        }).then(res => res.json())\r\n            .then(response => {\r\n                console.log('Update Exp:', response);\r\n                message.success(response.message || response.error);\r\n            })\r\n            .catch(error => console.error('Error:', error))\r\n\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n    // End of Form\r\n\r\n    // Set Edit Receta and open modal\r\n    const editReceta = (r) => {\r\n        setRecetaForEdit(r)\r\n        console.log(r);\r\n        showEditModal();\r\n    }\r\n    // Send data for update Receta\r\n    const updateReceta = (values) => {\r\n        console.log('update', values);\r\n        updateData(`recetas/update/${recetaForEdit._id}`, values).then((rs) => {\r\n            // message.success(rs);\r\n            setIsEditingModalVisible(false)\r\n            getRecetasData()\r\n        })\r\n    }\r\n    // Print Receta\r\n    const printReceta = async (r) => {\r\n        await setRecetaForEdit(r)\r\n        setIsPrintingModalVisible(true)\r\n        console.log(r);\r\n    }\r\n\r\n\r\n    const gridStyle = {\r\n        width: '100%',\r\n        height: '32',\r\n        textAlign: 'center',\r\n        display: 'inline-flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    };\r\n\r\n\r\n\r\n    return <div>\r\n        <Card bordered={false} title={<>Recetas <Button onClick={() => setIsModalVisible(true)} size='small' type=\"primary\" shape=\"circle\" icon={<PlusOutlined />} /></>} >\r\n            \r\n            {\r\n                recetaLoading ? <h5>Cargando Receta...</h5> :\r\n                    recetaData.length > 0 ?\r\n\r\n                        recetaData.map((r) => {\r\n                            return <><Card.Grid key={r._id} style={gridStyle}>\r\n                                <p style={{ whiteSpace: 'pre' }}> Prescripcion : {r.prescripcion} </p>\r\n                                <Button style={{ marginLeft: 8 }} onClick={() => editReceta(r)} size='small' type=\"primary\" shape=\"circle\" icon={<FormOutlined />} />\r\n                                <Button style={{ marginLeft: 8 }} onClick={() => printReceta(r)} size='small' type=\"primary\" shape=\"circle\" icon={<PrinterOutlined />} />\r\n                            </Card.Grid></>\r\n                        })\r\n                        :\r\n                        <h6>No hay una receta asignada</h6>\r\n            }\r\n        </Card>\r\n\r\n        <Modal title=\"Nueva Receta\" visible={isModalVisible} onOk={handleOk} onCancel={handleCancel}\r\n            footer={[\r\n                <Button type=\"primary\" htmlType=\"submit\" form='create_receta_medic'>\r\n                    Guardar\r\n                </Button>,\r\n                <Button onClick={handleCancel}>Cancelar</Button>\r\n            ]}>\r\n            <Form\r\n                name=\"create_receta_medic\"\r\n                labelCol={{ span: 8 }}\r\n                wrapperCol={{ span: 16 }}\r\n                initialValues={{ remember: true }}\r\n                onFinish={onFinish}\r\n                onFinishFailed={onFinishFailed}\r\n                autoComplete=\"off\"\r\n            >\r\n                <Form.Item\r\n                    label=\"Prescripcion\"\r\n                    name=\"prescripcion\"\r\n                    rules={[{ required: true, message: 'Ingresa la prescripcion' }]}\r\n                >\r\n                    <TextArea rows={4} />\r\n                </Form.Item>\r\n\r\n            </Form>\r\n        </Modal>\r\n\r\n        <Modal title=\"Editar Receta\" visible={isEditingModalVisible} onOk={handleEditOk} onCancel={handleEditCancel} destroyOnClose\r\n            footer={[\r\n                <Button type=\"primary\" htmlType=\"submit\" form='update_receta_medic'>\r\n                    Actualizar\r\n                </Button>,\r\n                <Button onClick={handleEditCancel}>Cancelar</Button>\r\n            ]}>\r\n            {\r\n                Object.keys(recetaForEdit).map((k) => {\r\n                    return <p>{k} : {recetaForEdit[k]}</p>\r\n                })\r\n            }\r\n            <Form\r\n                name=\"update_receta_medic\"\r\n                labelCol={{ span: 8 }}\r\n                wrapperCol={{ span: 16 }}\r\n                initialValues={{ prescripcion: recetaForEdit.prescripcion }}\r\n                onFinish={updateReceta}\r\n                onFinishFailed={onFinishFailed}\r\n                autoComplete=\"off\"\r\n            >\r\n                <Form.Item\r\n                    label=\"Prescripcion\"\r\n                    name=\"prescripcion\"\r\n                    rules={[{ required: true, message: 'Ingresa la prescripcion' }]}\r\n                >\r\n                    <TextArea rows={4} />\r\n                </Form.Item>\r\n\r\n            </Form>\r\n        </Modal>\r\n\r\n        <Modal title=\"Imprimir Receta\" visible={isPrintingModalVisible} onOk={handlePrintOk} onCancel={handlePrintCancel} width={600}>\r\n            {\r\n                isLogoSelected ? // Si ya hay logo seleccionado, se pasa a la receta y se muestra en pdf\r\n                    <RecetaDocument receta={recetaForEdit} logoHospital={logoHospital} />\r\n                    :\r\n                    <div>\r\n                        <Card title='Selecciona un hospital' bordered={false}>\r\n                            {\r\n                                usuario.horarios.map((h) => {\r\n                                    return <Card.Grid style={{ width: '100%' }} onClick={() => {setLogoHospital(h.sucursal.logo); setIsLogoSelected(true)}}>\r\n                                        <Row align=\"middle\">\r\n                                            <Col span={6} offset={4}><img width={64} src={'https://api.recreamed.com/images/' + h.sucursal.logo} alt=\"Logo\" /></Col>\r\n                                            <Col span={10}>{h.sucursal.nombre} <br /> {h.horario}</Col>\r\n                                        </Row>\r\n                                    </Card.Grid>\r\n                                })\r\n                            }\r\n                        </Card>\r\n                    </div>\r\n            }\r\n        </Modal>\r\n    </div>\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Card, Collapse, Button, Tabs, Row, Col, Modal, Space } from 'antd';\r\nimport { getData, API } from '../../resources';\r\nimport { PlusOutlined, ExperimentOutlined, DownloadOutlined, EditOutlined } from '@ant-design/icons';\r\nimport { NuevaNota } from './nuevaNota';\r\nimport DetalleReceta from './detalleReceta';\r\nconst { TabPane } = Tabs;\r\nconst { Panel } = Collapse;\r\n\r\nexport default function DetalleNota(props) {\r\n\r\n    const [notaData, setNotaData] = useState(\"\");\r\n    const [notaLoading, setnotaLoading] = useState(true);\r\n    const [view, setView] = useState('detalles');\r\n    const [notaForEdit, setNotaForEdit] = useState(\"\")\r\n    // Add Nota Modal\r\n    const [isModalVisible, setIsModalVisible] = useState(false);\r\n    const showModal = () => { setIsModalVisible(true) };\r\n    const handleOk = () => { setIsModalVisible(false) };\r\n    const handleCancel = () => { setIsModalVisible(false) };\r\n    // End of Add Nota Modal\r\n    // Edit Nota Modal\r\n    const [isEditModalVisible, setIsEditModalVisible] = useState(false);\r\n    const showEditModal = () => { setIsEditModalVisible(true) };\r\n    const handleEditOk = () => { setIsEditModalVisible(false) };\r\n    const handleEditCancel = () => { setIsEditModalVisible(false) };\r\n    const editarNota = async (n) => { await setNotaForEdit(n); setIsEditModalVisible(true) }\r\n    // End of Edit Nota Modal\r\n\r\n\r\n    useEffect(() => {\r\n        // console.log('Paciente received to detailNota: ', props.paciente)\r\n        props.paciente ?\r\n            getData(`notas/${props.paciente}`).then(rs => { console.log('NotasData: ', rs); setNotaData(rs); setnotaLoading(false) })\r\n            :\r\n            finishGet()\r\n    }, [props.paciente])\r\n\r\n    const finishGet = () => { setNotaData([]); setnotaLoading(false); }\r\n\r\n    const gridStyle = {\r\n        // width: '50%',\r\n        width: '100%',\r\n        height: '32',\r\n        textAlign: 'center',\r\n        display: 'inline-flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center'\r\n    };\r\n\r\n    const NotaGridStyle = {\r\n        width: '25%',\r\n        textAlign: 'center',\r\n        border: '1px solid rgba(255, 255, 255, 255)'\r\n    };\r\n    const EstudioGridStyle = {\r\n        width: '50%',\r\n        // height: '32',\r\n        textAlign: 'center',\r\n        display: 'inline-flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center'\r\n    };\r\n\r\n\r\n    const NotaView = () => {\r\n        switch (view) {\r\n            case 'detalles':\r\n                return <>{\r\n                    notaData.length > 0 ?\r\n                        Object.keys(notaData[0]).map(k => {\r\n                            return <><Card.Grid key={k} style={gridStyle}>{k}</Card.Grid><Card.Grid style={gridStyle} size='small'>{notaData[0][k]}</Card.Grid></>\r\n                        })\r\n                        :\r\n                        <h6>No hay una nota asignada</h6>\r\n                }</>\r\n            case 'adding':\r\n                return <>Adding\r\n                    <NuevaNota id_expediente={props.id_expediente} paciente={props.paciente} prevExpNotas={props.prevExpNotas} />\r\n                    <Button onClick={() => setView('detalles')} >Cancelar</Button>\r\n                </>\r\n            case 'editing':\r\n                return <>Editing\r\n                    <Button onClick={() => setView('detalles')} >Cancelar</Button>\r\n                </>\r\n            default:\r\n                <>Notas del paciente</>\r\n        }\r\n    }\r\n\r\n\r\n\r\n    return <div>\r\n\r\n        <Space>\r\n            <h5>Notas </h5>\r\n            <Button onClick={showModal} size='small' type=\"primary\" shape=\"circle\" icon={<PlusOutlined />} />\r\n        </Space>\r\n\r\n        <Tabs tabPosition='top' onTabClick={(k, e) => { console.log('OnTABClickNota', k); }}>\r\n\r\n            {notaLoading ? <h5>Cargando Nota...</h5> :\r\n\r\n                notaData.map((nota, i) => {\r\n                    let index = i + 1;\r\n                    return <TabPane tab={`Nota ${index}`} key={nota._id} style={{ width: '100%' }}>\r\n                        <Row>\r\n                            {/* Mitad de la pantalla para NOTA*/}\r\n                            <Col span={12}>\r\n                                <Collapse bordered={false}>\r\n                                    <Panel header=\"Detalles de la nota\" key=\"1\">\r\n                                        <Card >\r\n                                            <Card.Grid style={NotaGridStyle}>Edad: {nota.edad}</Card.Grid>\r\n                                            <Card.Grid style={NotaGridStyle}>Talla: {nota.talla}</Card.Grid>\r\n                                            <Card.Grid style={NotaGridStyle}>Peso: {nota.peso}</Card.Grid>\r\n                                            <Card.Grid style={NotaGridStyle}>IMC: {nota.imc}</Card.Grid>\r\n                                            <Card.Grid style={NotaGridStyle}>Temperatura: {nota.temperatura}</Card.Grid>\r\n                                            <Card.Grid style={NotaGridStyle}>Presion Arterial : {nota.presion_arterial}</Card.Grid>\r\n                                            <Card.Grid style={NotaGridStyle}>Frecuencia Cardiaca : {nota.frecuencia_cardiaca}</Card.Grid>\r\n                                            <Card.Grid style={NotaGridStyle}>Frecuencia Respiratoria : {nota.frecuencia_respiratoria}</Card.Grid>\r\n                                        </Card>\r\n                                    </Panel>\r\n                                </Collapse>\r\n\r\n                                <Card title='Observaciones'>\r\n                                    {nota.Observaciones}\r\n                                </Card>\r\n\r\n                                <Card title='Diagnostico'>\r\n                                    {nota.diagnostico}\r\n                                </Card>\r\n\r\n                                <Card title='Estudios'>\r\n                                    {nota.estudios.map((e) => {\r\n                                        return <Card.Grid style={EstudioGridStyle}>\r\n                                            <a href={`${API}notas/estudios/download/${e}`}><ExperimentOutlined />{e}<DownloadOutlined /> </a>\r\n                                        </Card.Grid>\r\n                                    })}\r\n                                </Card>\r\n                                <Button style={{ float: 'right' }} onClick={() => { editarNota(nota) }} size='small' type=\"primary\" icon={<EditOutlined />} >Editar Nota</Button>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <DetalleReceta recetas={nota.recetas} id_nota={nota._id} />\r\n                            </Col>\r\n                        </Row>\r\n                    </TabPane>\r\n                })\r\n            }\r\n\r\n        </Tabs>\r\n\r\n\r\n        <Modal title=\"Nueva Nota\" visible={isModalVisible} onOk={handleOk} onCancel={handleCancel} width={680} footer={[]} destroyOnClose>\r\n            <NuevaNota id_expediente={props.id_expediente} paciente={props.paciente} prevExpNotas={props.prevExpNotas} setIsModalVisible={setIsModalVisible} />\r\n        </Modal>\r\n\r\n        <Modal title=\"Editar Nota\" visible={isEditModalVisible} onOk={handleEditOk} onCancel={handleEditCancel} width={680} footer={[]} destroyOnClose>\r\n            <NuevaNota nota={notaForEdit} setIsModalVisible={setIsEditModalVisible} />\r\n        </Modal>\r\n\r\n    </div>\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Card, Space, Button, Input, Form, message } from 'antd';\r\nimport { getData, API } from '../../resources';\r\nimport { FormOutlined } from '@ant-design/icons';\r\n\r\nexport default function DetalleHistoria(props) {\r\n    const { TextArea } = Input;\r\n    const [historiaData, setHistoriaData] = useState(\"\")\r\n    const [notaLoading, setHistoriaLoading] = useState(true)\r\n    const [editing, setEditing] = useState(false)\r\n\r\n    useEffect(() => {\r\n        //     console.log(\"Props IDHistoria: \", props.historia)\r\n        props.historia ?\r\n            getHistoriaData()\r\n            :\r\n            finifhGet()\r\n    }, [props.historia])\r\n\r\n    const finifhGet = () => { setHistoriaData([]); setHistoriaLoading(false); }\r\n\r\n    const getHistoriaData = () => {\r\n        getData(`historia/${props.historia}`).then(rs => { console.log('DetalleHistoria: ', rs); setHistoriaData(rs); setHistoriaLoading(false) })\r\n    }\r\n\r\n    const gridStyle = {\r\n        width: '100%',\r\n        // height: '40',\r\n        textAlign: 'center',\r\n        // display: 'inline-flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        marginTop: 15\r\n    };\r\n\r\n    const updateHistoria = (values) => {\r\n        setEditing(false)\r\n        fetch(API + 'historias/update/' + historiaData[0]._id, {\r\n            method: 'PUT',\r\n            body: JSON.stringify(values),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }).then(res => res.json())\r\n            .then(response => {\r\n                console.log('Success:', response);\r\n                message.success(response.message || response.error);\r\n            })\r\n            .finally(() => {\r\n                getHistoriaData()\r\n                setEditing(false)\r\n            })\r\n        console.log('New Historia', values);\r\n    }\r\n\r\n\r\n    const HistoriaDetails = () => {\r\n        return <Card.Grid style={gridStyle} >{\r\n            editing ?\r\n                <>\r\n                    <Form name='historiaForm' initialValues={{ historial: historiaData[0].historial }} onFinish={updateHistoria}>\r\n                        <Form.Item name='historial'>\r\n                            <TextArea rows={4} />\r\n                        </Form.Item>\r\n                        <Space>\r\n                            <Form.Item>\r\n                                <Button type=\"primary\" htmlType=\"submit\">Guardar</Button>\r\n                            </Form.Item>\r\n                            <Form.Item>\r\n                                <Button onClick={() => setEditing(false)}>Cancelar</Button>\r\n                            </Form.Item>\r\n                        </Space>\r\n\r\n\r\n                    </Form>\r\n                </>\r\n                :\r\n                <p style={{ whiteSpace: 'pre', textAlign: 'left' }}>{historiaData[0].historial}</p>\r\n        }</Card.Grid>\r\n    }\r\n\r\n\r\n    return <div>\r\n        <Card bordered={false}>\r\n            <Space>\r\n                <h5>Historia Clinica</h5>\r\n                <Button onClick={() => setEditing(true)} size='small' disabled={!props.historia} type=\"primary\" shape=\"circle\" icon={<FormOutlined />} />\r\n            </Space>\r\n            {\r\n                notaLoading ? <h5>Cargando Historia...</h5> :\r\n                    historiaData.length > 0 ?\r\n                        <HistoriaDetails />\r\n                        :\r\n                        <h6>No hay una historia asignada</h6>\r\n            }\r\n        </Card>\r\n    </div>\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Button, Select, Space } from 'antd';\r\nimport { API } from '../../resources';\r\nimport CreateExpedient from './createExpedient';\r\nimport DetalleNota from './detalleNota'\r\nimport DetalleHistoria from './detalleHistoria';\r\nimport html2canvas from 'html2canvas';\r\nimport { jsPDF } from \"jspdf\";\r\n\r\n\r\nexport default function Expedientes(props) {\r\n    const [isModalVisible, setIsModalVisible] = useState(false);\r\n    const [expedientesData, setExpedientesData] = useState([]);\r\n    const [expedientesLoading, setExpedientesLoading] = useState(true);\r\n    const [historia, setHistoria] = useState(\"\");\r\n    const [notas, setNotas] = useState(\"\");\r\n\r\n\r\n    useEffect(() => {\r\n        getExpedientesData(props.paciente)\r\n    }, [props.paciente])\r\n\r\n\r\n    const getExpedientesData = (id_paciente) => {\r\n        fetch(API + `expedientes/${id_paciente}`)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                // console.log(\"GetExpData: \", data);\r\n                setExpedientesData(data);\r\n                if (typeof data != \"undefined\") {\r\n                    setNotas(data.notas); setHistoria(data.historia);\r\n                } else { setNotas(null); setHistoria(null) }\r\n            })\r\n            .finally(() => setExpedientesLoading(false))\r\n    }\r\n\r\n    const printDocument = () => {\r\n        const input = document.getElementById('expedient-export');\r\n        html2canvas(input)\r\n            .then((canvas) => {\r\n                const imgData = canvas.toDataURL('image/png');\r\n                const pdf = new jsPDF();\r\n                pdf.addImage(imgData, 'JPEG', 0, 0);\r\n                // pdf.output('dataurlnewwindow');\r\n                pdf.save(\"expediente.pdf\");\r\n            })\r\n            ;\r\n    }\r\n\r\n\r\n    return <div id='expedient-export' >\r\n\r\n        <Space size='middle'><h4>Expediente </h4><h3> </h3></Space>\r\n\r\n        <DetalleHistoria historia={historia} />\r\n\r\n        <DetalleNota notas={notas} id_expediente={expedientesData._id} prevExpNotas={expedientesData.notas} paciente={props.paciente} />\r\n\r\n        <CreateExpedient isModalVisible={isModalVisible} setIsModalVisible={setIsModalVisible} pacientesData={[]} />\r\n\r\n        <Button onClick={printDocument}>Exportar a pdf</Button>\r\n\r\n    </div>;\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Form, Input, Button, message, Space, Row, Col, Upload } from 'antd'\r\nimport { MinusCircleOutlined, PlusOutlined, InboxOutlined } from '@ant-design/icons';\r\nimport { InputNumber, Select } from 'antd';\r\nimport { S_API, getData, API } from '../resources'\r\nconst { Option } = Select;\r\nconst estados = [\"Michoacan\", \"Morelos\", \"Guerrero\"];\r\nconst { Dragger } = Upload;\r\n\r\n\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    xs: {\r\n      span: 24,\r\n    },\r\n    sm: {\r\n      span: 8,\r\n    },\r\n  },\r\n  wrapperCol: {\r\n    xs: {\r\n      span: 24,\r\n    },\r\n    sm: {\r\n      span: 14,\r\n    },\r\n  },\r\n};\r\nconst tailFormItemLayout = {\r\n  wrapperCol: {\r\n    xs: {\r\n      span: 24,\r\n      offset: 0,\r\n    },\r\n    sm: {\r\n      span: 16,\r\n      offset: 8,\r\n    },\r\n  },\r\n};\r\nexport default function PerfilEdit(props) {\r\n\r\n  const [form] = Form.useForm();\r\n\r\n  const [sucursales, setSucursales] = useState([]);\r\n  const [sucursalesLoading, setSucursalesLoading] = useState(true);\r\n  const [avatar, setAvatar] = useState(props.perfil.avatar)\r\n\r\n  //Start upload props Upload File\r\n  const dragDropProps = {\r\n    name: 'file',\r\n    multiple: false,\r\n    action: API + 'imagenes/upload',\r\n\r\n    onChange(info) {\r\n      const { status } = info.file;\r\n\r\n      if (status !== 'uploading') {\r\n        console.log(info.file, info.fileList);\r\n      }\r\n\r\n      if (status === 'done') {\r\n        message.success(`${info.file.name} file uploaded successfully.`);\r\n        console.log('New Files: ', info.file.response.file)\r\n        setAvatar(info.file.response.file)\r\n      } else if (status === 'error') {\r\n        message.error(`${info.file.name} file upload failed.`);\r\n      }\r\n    },\r\n\r\n    onDrop(e) {\r\n      console.log('Dropped files', e.dataTransfer.files);\r\n    },\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log('received Medic: ', props.perfil);\r\n    getData('sucursales').then((rs) => { setSucursales(rs); setSucursalesLoading(false) })\r\n  }, [])\r\n\r\n\r\n\r\n  const onFinish = (values) => {\r\n    values.avatar = avatar;\r\n    values.estatus = '1';\r\n    values.rol = 'Medico';\r\n    delete values.confirm;\r\n    delete values.prefix;\r\n\r\n    console.log('ready to send', values)\r\n    fetch(S_API + 'register', {\r\n      method: 'POST',\r\n      body: JSON.stringify(values),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).then(res => res.json())\r\n      .then(response => {\r\n        console.log('Success:', response);\r\n        response.message && response.message === 'Usuario creado correctamente' ?\r\n          window.location.href = 'doctores' : message.error(response.error);\r\n      })\r\n      .catch(error => console.error('Error:', error))\r\n  };\r\n\r\n  const onFinishEdit = (values) => {\r\n    values.avatar = avatar;\r\n    // values.estatus = '1';\r\n    // values.rol = 'Medico';\r\n    // delete values.confirm;\r\n    // delete values.prefix;\r\n\r\n    console.log('ready to send', values)\r\n    fetch(API + 'users/updateUser/' + props.perfil._id, {\r\n      method: 'PUt',\r\n      body: JSON.stringify(values),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).then(res => res.json())\r\n      .then(response => {\r\n        console.log('Success:', response);\r\n        response.message && response.message === 'Usuario actualizado correctamente' ?\r\n          props.setEditing(false) : message.error(response.error);\r\n      })\r\n      .catch(error => console.error('Error:', error))\r\n  };\r\n\r\n  const prefixSelector = (\r\n    <Form.Item name=\"prefix\" noStyle>\r\n      <Select\r\n        style={{\r\n          width: 70,\r\n        }}\r\n      >\r\n        <Option value=\"+52\">+52</Option>\r\n      </Select>\r\n    </Form.Item>\r\n  );\r\n  const suffixSelector = (\r\n    <Form.Item name=\"suffix\" noStyle>\r\n      <Select\r\n        style={{\r\n          width: 70,\r\n        }}\r\n      >\r\n        <Option value=\"USD\">$</Option>\r\n        <Option value=\"CNY\">¥</Option>\r\n      </Select>\r\n    </Form.Item>\r\n  );\r\n\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log('Failed:', errorInfo);\r\n  };\r\n  return (\r\n    <div>\r\n      <h4>Editar perfil</h4>\r\n      <br />\r\n      <Dragger {...dragDropProps}>\r\n        <p className=\"ant-upload-drag-icon\">\r\n          <InboxOutlined />\r\n        </p>\r\n        <p className=\"ant-upload-text\">Arrastra la imagen de perfil o click ara buscar</p>\r\n        <p className=\"ant-upload-hint\">\r\n          Selecciona archivos en formato png, jpeg o webp\r\n        </p>\r\n      </Dragger>\r\n      <br />\r\n      <Form\r\n        {...formItemLayout}\r\n        form={form}\r\n        name=\"register\"\r\n        onFinish={onFinishEdit}\r\n        // initialValues={{ horarios: [{ sucursal: '', horario: '' }], prefix: '+52' }}\r\n        initialValues={props.perfil}\r\n        scrollToFirstError\r\n      >\r\n\r\n        <Row>\r\n\r\n          <Col span={11}>\r\n            <Form.Item name=\"name\" label=\"Nombre\" rules={[{ required: true, message: 'Ingresa Nombre y apellidos' }]}>\r\n              <Input />\r\n            </Form.Item>\r\n            <Form.Item name=\"email\" label=\"Correo\" rules={[{ type: 'email', message: 'Ingresa un corrreo electronico valido' }, { required: true, message: 'Please input your E-mail!' }]}>\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            {/* <Form.Item name=\"password\" label=\"Contraseña\" rules={[{ required: true, message: 'Por favor ingrese su contraseña!', },]} hasFeedback >\r\n              <Input.Password />\r\n            </Form.Item>\r\n\r\n            <Form.Item name=\"confirm\" label=\"Confirmar contraseña\" dependencies={['password']} hasFeedback\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: 'Please confirm your password!',\r\n                },\r\n                ({ getFieldValue }) => ({\r\n                  validator(_, value) {\r\n                    if (!value || getFieldValue('password') === value) {\r\n                      return Promise.resolve();\r\n                    }\r\n                    return Promise.reject(new Error('Las contraseñas deben coincidir!'));\r\n                  },\r\n                }),\r\n              ]}\r\n            >\r\n              <Input.Password />\r\n            </Form.Item> */}\r\n\r\n            <Form.Item name=\"telefono\" label=\"Telefono\" rules={[{ required: true, message: 'Ingresa el numero de telefono correcto' },]}>\r\n              <Input addonBefore={prefixSelector} style={{ width: '100%', }} />\r\n            </Form.Item>\r\n\r\n\r\n            <Form.Item label=\"horarios\" rules={[{ required: true, message: 'Ingresa al menos un horario', },]}>\r\n              <Form.List name=\"horarios\" label=\"horarios list\"\r\n              >\r\n                {(fields, { add, remove }) => (\r\n                  <>\r\n                    {fields.map(({ key, name, ...restField }) => (\r\n                      <Space key={key} style={{ display: 'flex', marginBottom: 8 }} align=\"baseline\">\r\n                        <Form.Item\r\n                          {...restField}\r\n                          name={[name, 'sucursal']}\r\n                          rules={[{ required: true, message: 'Elije Sucursal' }]}\r\n                        >\r\n                          <Select placeholder=\"Elije Sucursal\" style={{ width: '120px' }} >\r\n                            {sucursalesLoading ? \"Cargando\" :\r\n                              sucursales.map(s => <Option value={s._id}>{s.nombre}</Option>)\r\n                            }\r\n                          </Select>\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                          {...restField}\r\n                          name={[name, 'horario']}\r\n                          rules={[{ required: true, message: 'Missing last name' }]}\r\n                        >\r\n                          <Input placeholder=\"Horario\" />\r\n                        </Form.Item>\r\n                        <MinusCircleOutlined onClick={() => remove(name)} />\r\n                      </Space>\r\n                    ))}\r\n                    <Form.Item>\r\n                      <Button type=\"dashed\" onClick={() => add()} block icon={<PlusOutlined />}>\r\n                        Agregar Horario\r\n                      </Button>\r\n                    </Form.Item>\r\n                  </>\r\n                )}\r\n              </Form.List>\r\n            </Form.Item>\r\n\r\n\r\n\r\n          </Col>\r\n          <Col span={12}>\r\n            <Form.Item name=\"cedula\" label=\"Cedula\" rules={[{ required: false, message: 'Ingresa cedula' }]}>\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            {/* Not Necesary For Medic. He'll be in hospital direction */}\r\n            {/* <Form.Item name=\"calle\" label=\"Calle\" rules={[{ required: true, message: 'Ingresa calle', whitespace: true }]}>\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item name=\"numexterior\" label=\"Num Exterior\" rules={[{ required: true, message: 'Ingresa numero exterior' }]}>\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item name=\"numinterior\" label=\"Num Interior\" rules={[{ required: true, message: 'Ingresa numinterior' }]}>\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item label=\"Colonia\" name=\"colonia\" rules={[{ required: true, message: 'Please input your colobnia!' }]}            >\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item name=\"estado\" label=\"Estado\" rules={[{ required: true, message: 'Apellido materno', },]}>\r\n              <Select placeholder=\"Elije tu estado\">\r\n                {estados.map(e => <Option value={e}>{e}</Option>)}\r\n              </Select>\r\n            </Form.Item>\r\n\r\n            <Form.Item name=\"municipio\" label=\"Municipio\" rules={[{ required: true, message: 'Ingresa tu municipio' }]} >\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item name=\"codigopostal\" label=\"Codigo Postal\" rules={[{ required: true, message: 'Ingresa codigopostal', },]}>\r\n              <InputNumber addonAfter={suffixSelector} style={{ width: '100%', }} />\r\n            </Form.Item> */}\r\n\r\n            <Form.Item name=\"certificacion\" label=\"Certificacion\" rules={[{ required: false, message: 'Ingresa tu certificacion' }]}>\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item name=\"universidad\" label=\"Universidad\" rules={[{ required: false, message: 'Ingresa tu universidad' }]} >\r\n              <Input />\r\n            </Form.Item>\r\n            <Form.Item {...tailFormItemLayout}>\r\n              <Button type=\"primary\" htmlType=\"submit\">\r\n                Guardar\r\n              </Button>\r\n            </Form.Item>\r\n          </Col>\r\n        </Row>\r\n\r\n\r\n\r\n\r\n\r\n        {/* <Form.Item\r\n          name=\"agreement\"\r\n          valuePropName=\"checked\"\r\n          rules={[\r\n            {\r\n              validator: (_, value) =>\r\n                value ? Promise.resolve() : Promise.reject(new Error('Should accept agreement')),\r\n            },\r\n          ]}\r\n          {...tailFormItemLayout}\r\n        >\r\n          <Checkbox>\r\n            He leído y acepto los <a href=\"https://recreamed.com\">terminos y condiciones</a>\r\n          </Checkbox>\r\n        </Form.Item> */}\r\n\r\n\r\n      </Form>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Row, Col, Space, Button, Divider, Image } from 'antd';\r\nimport { Avatar, Card } from 'antd';\r\nimport { UserOutlined } from '@ant-design/icons';\r\nimport { API, usuario } from '.././resources';\r\nimport Loading from '.././loading';\r\nimport { PlusOutlined, FormOutlined } from '@ant-design/icons';\r\nimport PerfilEdit from './perfilEdit';\r\n\r\nexport default function Perfil() {\r\n\r\n    const [profileData, setProfileData] = useState([]);\r\n    const [profileForEdit, setProfileForEdit] = useState([]);\r\n    const [editing, setEditing] = useState(false)\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [visible, setVisible] = useState(false)\r\n\r\n    useEffect(() => {\r\n        getProfileData()\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        getProfileData()\r\n    }, [editing])\r\n\r\n    const getProfileData = () => {\r\n        fetch(API + 'userByMail/' + usuario.email)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log(data);\r\n                setProfileData(data[0]);\r\n                setIsLoading(false);\r\n            });\r\n    }\r\n\r\n    const editPerfil = async (p) => {\r\n        p.horarios.forEach((h) => { h.sucursal = h.sucursal._id })\r\n        console.log('Horarios before edit profile: ', p.horarios);\r\n        await setProfileForEdit(p)\r\n        setEditing(true);\r\n        console.log('Editar medico: ', p)\r\n    }\r\n\r\n    const DetailsProfile = () => {\r\n        return <Row>\r\n            <Col span={8}>\r\n                {\r\n                    // Profile Pic\r\n                    profileData.avatar.length > 8 ?\r\n                        <Image style={{ borderRadius: 12 }} width={256} src={'https://api.recreamed.com/images/' + profileData.avatar} />\r\n                        :\r\n                        <Avatar size={128} icon={<UserOutlined />} />\r\n                }\r\n                <Divider />\r\n                <p>Nombre: {profileData.name} </p>\r\n                <p>Correo: {profileData.email} </p>\r\n                <p>Telefono: {profileData.telefono} </p>\r\n            </Col>\r\n            {/* <Col span={8}>\r\n                <p>Estado: {profileData.estado}</p>\r\n                <p>Municipio: {profileData.municipio}</p>\r\n                <p>Colonia: {profileData.colonia}</p>\r\n                <p>Calle: {profileData.calle}</p>\r\n                <p>Codigo Postal:{profileData.codigopostal} </p>\r\n            </Col> */}\r\n            <Col span={8}>\r\n                <Card title='Horarios' style={{ borderRadius: 12 }}>\r\n                    {\r\n                        profileData.horarios.map((h) => {\r\n                            return <Card.Grid style={{ width: '100%' }} >\r\n                                <Row align=\"middle\">\r\n                                    <Col span={6} offset={4}><img width={64} src={'https://api.recreamed.com/images/' + h.sucursal.logo} alt=\"Logo\" /></Col>\r\n                                    <Col span={10}>{h.sucursal.nombre} <br /> {h.horario}</Col>\r\n                                </Row>\r\n                            </Card.Grid>\r\n                        })\r\n                    }\r\n                </Card>\r\n                <br />\r\n                <p>Universidad: {profileData.universidad} </p>\r\n                <p>Certificacion: {profileData.certificacion} </p>\r\n                <p>Cedula: {profileData.cedula} </p>\r\n            </Col>\r\n\r\n\r\n\r\n        </Row>\r\n    }\r\n\r\n    return (\r\n        <div className='mainContainer'>\r\n\r\n            <Space>\r\n                <h3>PERFIL</h3>\r\n                <Button onClick={() => editPerfil(profileData)} type=\"primary\" shape=\"circle\" icon={<FormOutlined />} />\r\n            </Space>\r\n            {isLoading ? <Loading /> :\r\n                <Card style={{ borderRadius: 16 }}>\r\n                    {\r\n                        editing ?\r\n\r\n                            <>\r\n                                <PerfilEdit perfil={profileData} setEditing={setEditing} />\r\n                                <Button shape=\"circle\" title='Cancelar' />\r\n                                <Button onClick={() => setEditing(false)}>Cancelar</Button>\r\n                            </> :\r\n                            <DetailsProfile />\r\n                    }\r\n                </Card>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Card, Button, Modal, Row, Col, Space, Table, Tag } from 'antd';\r\nimport { API } from '../resources';\r\nimport Loading from '../loading';\r\n\r\n\r\nexport function DoctorNotas() {\r\n\r\n    const [nota, setNota] = useState({});\r\n    const [isModalVisible, setIsModalVisible] = useState(false);\r\n    const [notasData, setNotasData] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const showModal = () => { setIsModalVisible(true); };\r\n    const handleOk = () => { setIsModalVisible(false); getNotasData();};\r\n    const handleCancel = () => { setIsModalVisible(false); };\r\n\r\n    const [isModalDetailVisible, setIsModalDetailVisible] = useState(false);\r\n    const showDetailModal = () => { setIsModalDetailVisible(true); };\r\n    const handleDetailOk = () => { setIsModalDetailVisible(false); };\r\n    const handleDetailCancel = () => { setIsModalDetailVisible(false); };\r\n\r\n    useEffect(() => {\r\n      getNotasData()\r\n    }, [])\r\n\r\n    const getNotasData = () => {\r\n        fetch( API + 'notas')\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log(data); setNotasData(data);\r\n                setIsLoading(false)\r\n            })\r\n            .finally(() => setIsLoading(false))\r\n    }\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Paciente',\r\n            dataIndex: 'id_usuario',\r\n            key: 'Paciente',\r\n            render: text => <a>{text}</a>,\r\n        }, {\r\n            title: 'Edad',\r\n            dataIndex: 'edad',\r\n            key: 'Edad',\r\n        },\r\n        {\r\n            title: 'Talla',\r\n            dataIndex: 'talla',\r\n            key: 'Talla',\r\n        },\r\n        {\r\n            title: 'IMC',\r\n            dataIndex: 'imc',\r\n            key: 'imc',\r\n        },\r\n\r\n        {\r\n            title: 'Observaciones',\r\n            key: 'Observaciones',\r\n            dataIndex: 'observaciones',\r\n            // render: observaciones => (\r\n            //     <>\r\n            //         {observaciones.map(tag => {\r\n            //             let color = tag.length > 5 ? 'geekblue' : 'green';\r\n            //             if (tag === 'diabetes') {\r\n            //                 color = 'volcano';\r\n            //             }\r\n            //             return (\r\n            //                 <Tag color={color} key={tag}>\r\n            //                     {tag.toUpperCase()}\r\n            //                 </Tag>\r\n            //             );\r\n            //         })}\r\n            //     </>\r\n            // ),\r\n        },\r\n        {\r\n            title: 'Detalles',\r\n            key: 'action',\r\n            render: (text, record) => (\r\n                <Space size=\"middle\">\r\n                    <Button onClick={() => { showDetailModal(); setNota(record) }}>Detalles</Button>\r\n                </Space>\r\n            ),\r\n        },\r\n    ];\r\n\r\n    const gridStyle = {\r\n        width: '50%',\r\n        height: '50px',\r\n        textAlign: 'center',\r\n        display: 'inline-flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center'\r\n    };\r\n\r\n\r\n    function DetalleNota() {\r\n        return <div>\r\n            <Card bordered={false}>\r\n                {\r\n                    Object.keys(nota).map(k => {\r\n                        return <><Card.Grid style={gridStyle}>{k}</Card.Grid><Card.Grid style={gridStyle} size='small'>{nota[k]}</Card.Grid></>\r\n                    })\r\n                }\r\n            </Card>\r\n        </div>\r\n    }\r\n\r\n\r\n    return (\r\n        <div className='mainContainer'>\r\n            <Row>\r\n                <Col span={8}><h4>Notas de los pacientes del medico</h4></Col>\r\n                <Col>\r\n                    <Button type=\"primary\" onClick={showModal}>\r\n                        Nueva Nota\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n\r\n            { isLoading ? <Loading/> :  <Table columns={columns} dataSource={notasData} /> }\r\n\r\n\r\n\r\n\r\n            <Modal width={800} title={<h4>Crear Nota</h4>} visible={isModalVisible} onOk={handleOk} onCancel={handleCancel}>\r\n                {/* <NuevaNota /> */}\r\n            </Modal>\r\n            <Modal width={800} title={<h4>Detalles de la nota </h4>} visible={isModalDetailVisible} onOk={handleDetailOk} onCancel={handleDetailCancel}>\r\n                <DetalleNota />\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Row, Col, Statistic, Card } from 'antd'\r\nimport { Pie, Line } from '@ant-design/charts';\r\nimport './home.css'\r\n\r\nexport class Home extends Component {\r\n\r\n    dataPie = [\r\n        {\r\n            type: 'F01',\r\n            value: 9,\r\n        },\r\n        {\r\n            type: 'F05',\r\n            value: 4,\r\n        },\r\n        {\r\n            type: 'F09',\r\n            value: 7,\r\n        },\r\n        {\r\n            type: 'F13',\r\n            value: 2,\r\n        },\r\n        {\r\n            type: 'F16',\r\n            value: 12,\r\n        },\r\n        {\r\n            type: 'F22',\r\n            value: 3,\r\n        },\r\n    ];\r\n\r\n    configPie = {\r\n        appendPadding: 10,\r\n        data: this.dataPie,\r\n        angleField: 'value',\r\n        colorField: 'type',\r\n        height: 450,\r\n        radius: 0.8,\r\n        label: {\r\n            type: 'inner',\r\n            offset: '-0.5',\r\n            content: '{name} {percentage}',\r\n            style: {\r\n                fill: '#fff',\r\n                fontSize: 14,\r\n                textAlign: 'center',\r\n            },\r\n        },\r\n    };\r\n\r\n    dataLine = [\r\n        { mes: 'Junio', consultas: 24 },\r\n        { mes: 'Julio', consultas: 17 },\r\n        { mes: 'Agosto', consultas: 22 },\r\n        { mes: 'Septiembre', consultas: 15 },\r\n        { mes: 'Octubre', consultas: 18 }\r\n    ];\r\n\r\n    configLine = {\r\n        data: this.dataLine,\r\n        height: 410,\r\n        xField: 'mes',\r\n        yField: 'consultas',\r\n        color: '#01B075',\r\n        point: {\r\n            size: 5,\r\n            shape: 'diamond',\r\n            color: '#01B075'\r\n        },\r\n        label: {\r\n            style: {\r\n                fill: '#aaa',\r\n                fontSize: 16,\r\n                stroke: '#01B075'\r\n            },\r\n        },\r\n    };\r\n    render() {\r\n        return (\r\n            <>\r\n\r\n                <br />\r\n                <div className=\"contenedor\">\r\n                    <Row gutter={30}>\r\n                        <Col xs={24} sm={12} lg={6}>\r\n                            <Card className=\"cardsContenedor\" hoverable bordered={false}>\r\n                                <Statistic title=\"Total Hospitales\" value=\"4\" valueStyle={{ color: 'white' }} style={{ backgroundColor: '#4BA6FE', borderRadius: 12 }} className=\"cardsContenido\" />\r\n                            </Card>\r\n                        </Col>\r\n                        <Col xs={24} sm={12} lg={6}>\r\n                            <Card className=\"cardsContenedor\" hoverable bordered={false}>\r\n                                <Statistic title=\"Total Medicos\" value=\"14\" valueStyle={{ color: 'white' }} style={{ backgroundColor: '#FF838A', borderRadius: 12 }} className=\"cardsContenido\" />\r\n                            </Card>\r\n                        </Col>\r\n\r\n                        <Col xs={24} sm={12} lg={6}>\r\n                            <Card className=\"cardsContenedor\" hoverable bordered={false}>\r\n                                <Statistic title=\"Total Pacientes\" value=\"241\" valueStyle={{ color: 'white' }} style={{ backgroundColor: '#18D0C2', borderRadius: 12 }} className=\"cardsContenido\" />\r\n                            </Card>\r\n                        </Col>\r\n                        <Col xs={24} sm={12} lg={6}>\r\n                            <Card className=\"cardsContenedor\" hoverable bordered={false}>\r\n                                <Statistic title=\"Citas Hoy\" value={47} valueStyle={{ color: 'white' }} style={{ backgroundColor: '#847DFC', borderRadius: 12 }} className=\"cardsContenido\" />\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row gutter={20}>\r\n                        <Col xs={24} md={12} style={{textAlign:'center'}}>\r\n                            <h5 style={{color: '#1F263C'}}>Diagnosticos</h5>\r\n                        </Col>\r\n                        <Col xs={24} md={12} style={{textAlign:'center'}}>\r\n                            <h5>Citas</h5>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row gutter={20}>\r\n                        <Col xs={24} md={12} className=\"graficaCircular\">\r\n                            <Pie {...this.configPie} style={{ backgroundColor: '#1F263C', borderRadius: 12 }} />\r\n                        </Col>\r\n\r\n                        <Col xs={24} md={12}>\r\n                            <Line {...this.configLine} style={{ backgroundColor: '#1F263C', padding: '20px', borderRadius: 12 }} />\r\n                        </Col>\r\n                    </Row>\r\n\r\n                </div>\r\n\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home\r\n","export default __webpack_public_path__ + \"static/media/Icon.e05b6872.png\";","import React from 'react'\r\nimport { Form, Input, Button } from 'antd';\r\nconst { TextArea } = Input;\r\n\r\n\r\nconst onFinish = (values) => {\r\n    console.log('Success:', values);\r\n};\r\n\r\nconst onFinishFailed = (errorInfo) => {\r\n    console.log('Failed:', errorInfo);\r\n};\r\n\r\nexport function Historial() {\r\n    return (\r\n        <div className='mainContainer'>\r\n            <h4>Historial de los pacientes del medico</h4>\r\n            <h4>Historial Clinico</h4>\r\n            <Form name=\"basic\" labelCol={{ span: 6 }} wrapperCol={{ span: 12 }} initialValues={{ remember: true }} onFinish={onFinish} onFinishFailed={onFinishFailed} autoComplete=\"off\" >\r\n\r\n                <Form.Item label=\"Paciente\" name=\"username\" rules={[{ required: true, message: 'Please input your username!' }]} >\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item label=\"comentarios\" name=\"id_paciente\" rules={[{ required: true, message: 'Ingresa RFC' }]} >\r\n                    <TextArea rows={4} />\r\n                </Form.Item>\r\n\r\n                <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\r\n                    <Button type=\"primary\" htmlType=\"submit\">\r\n                        Guardar\r\n                    </Button>\r\n                </Form.Item>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { Form, Input, Button, message, Space, Divider, Upload, Switch } from 'antd'\r\nimport { InputNumber, Select } from 'antd';\r\nimport { S_API, API } from '../../resources'\r\nimport { usuario } from '../../resources'\r\nimport { InboxOutlined, UploadOutlined, PlusOutlined, MinusCircleOutlined } from '@ant-design/icons'\r\nconst { Dragger } = Upload;\r\n\r\n\r\nconst { Option } = Select;\r\nconst estados = [\"Michoacan\", \"Morelos\", \"Guerrero\"];\r\n\r\nexport default function Register(props) {\r\n\r\n  const [form] = Form.useForm();\r\n  const [avatar, setAvatar] = useState(props.paciente ? props.paciente.avatar : 'noimg.jpg')\r\n\r\n  async function addHistoria() {\r\n    return await fetch(API + 'historias/add', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        historial: \"Historia clinica al \" + new Date()\r\n      })\r\n    }).then(res => res.json())\r\n      .then(response => {\r\n        console.log('Story Created: ', response);\r\n        return response\r\n      })\r\n      .catch(error => console.error('Error:', error))\r\n  }\r\n\r\n  const createPAtientData = async (usr) => {\r\n    const historia = await addHistoria();\r\n    console.log('historia on Register: ', historia);\r\n    const postBody = {\r\n      usuario: usr,\r\n      historia: historia.id_historia,\r\n      notas: [],\r\n      recetas: []\r\n    }\r\n    console.log('postBodyForExpedient: ', postBody);\r\n    await fetch(API + 'expedientes/add', {\r\n      method: 'POST',\r\n      body: JSON.stringify(postBody),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).then(res => res.json())\r\n      .then(response => {\r\n        console.log('Success:', response);\r\n        message.success(response.message || response.error);\r\n        if (response.message && response.message === 'Expediente creado correctamente') {\r\n          props.setAdding(false)\r\n        }\r\n      })\r\n      .catch(error => console.error('Error:', error))\r\n  }\r\n\r\n  const onFinish = async (values) => {\r\n\r\n    // Register patient\r\n    values.avatar = avatar;\r\n    values.estatus = '1';\r\n    values.rol = 'Paciente';\r\n    values.password = '' + values.telefono;\r\n    values.universidad = '';\r\n    values.certificacion = '';\r\n    values.cedula = '';\r\n    values.horarios = [];\r\n    values.medicos_asignados = props.paciente ? props.paciente.medicos_asignados : [usuario._id];\r\n    values.responsable = props.paciente ? props.paciente.responsable : { nombre: values.res_name, telefono: values.res_phone }\r\n\r\n    delete values.prefix;\r\n    delete values.res_name;\r\n    delete values.res_phone;\r\n\r\n    const url = props.paciente ? API + 'users/updateUser/' + props.paciente._id : S_API + 'register';\r\n\r\n    console.log(values)\r\n    console.log('url: ', url);\r\n    await fetch(url, {\r\n      method: props.paciente ? 'PUT' : 'POST',\r\n      body: JSON.stringify(values),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).then(res => res.json())\r\n      .then(response => {\r\n        console.log('Create User Response:', response);\r\n        message.success(response.message || response.error);\r\n        props.paciente ? console.log('Editing, not creating patient') : createPAtientData(response.user_id);\r\n        response.message === 'Usuario creado correctamente' ?\r\n          props.setAdding(false) : console.log(response);\r\n        response.message === 'Usuario actualizado correctamente' ?\r\n          props.setAdding(false) : console.log(response);\r\n\r\n      })\r\n      .catch(error => console.error('Error:', error))\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log('Failed:', errorInfo);\r\n  };\r\n\r\n  const prefixSelector = (\r\n    <Form.Item name=\"prefix\" noStyle>\r\n      <Select\r\n        defaultValue='+52'\r\n        style={{\r\n          width: 70,\r\n        }}\r\n      >\r\n        <Option value=\"+52\">+52</Option>\r\n      </Select>\r\n    </Form.Item>\r\n  );\r\n  const suffixSelector = (\r\n    <Form.Item name=\"suffix\" noStyle>\r\n      <Select\r\n        style={{\r\n          width: 70,\r\n        }}\r\n      >\r\n        <Option value=\"USD\">$</Option>\r\n        <Option value=\"CNY\">¥</Option>\r\n      </Select>\r\n    </Form.Item>\r\n  );\r\n  //Start upload props Upload File\r\n  const dragDropProps = {\r\n    name: 'file',\r\n    multiple: false,\r\n    action: API + 'imagenes/upload',\r\n\r\n    onChange(info) {\r\n      const { status } = info.file;\r\n\r\n      if (status !== 'uploading') {\r\n        console.log(info.file, info.fileList);\r\n      }\r\n\r\n      if (status === 'done') {\r\n        message.success(`${info.file.name} file uploaded successfully.`);\r\n        console.log('New Files: ', info.file.response.file)\r\n        setAvatar(info.file.response.file)\r\n      } else if (status === 'error') {\r\n        message.error(`${info.file.name} file upload failed.`);\r\n      }\r\n    },\r\n\r\n    // onDrop(e) {\r\n    //   console.log('Dropped files', e.dataTransfer.files);\r\n    // },\r\n  };\r\n  return (\r\n    <div\r\n      style={{ width: '100%' }}\r\n    >\r\n      {\r\n        props.paciente ? <h4>Editar paciente</h4> : <h4>Registrar Paciente</h4>\r\n      }\r\n\r\n      <br />\r\n      {/* <Dragger {...dragDropProps} style={{ height: 70 }}>\r\n        <p className=\"ant-upload-drag-icon\">\r\n          <InboxOutlined />\r\n        </p>\r\n        <p className=\"ant-upload-text\">Arrastra la imagen de perfil o click ara buscar</p>\r\n        <p className=\"ant-upload-hint\">\r\n          Selecciona archivos en formato png, jpeg o webp\r\n        </p>\r\n      </Dragger> */}\r\n\r\n      <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\r\n        <Upload {...dragDropProps}>\r\n          <Button type=\"dashed\" icon={<UploadOutlined style={{ fontSize: 24, color: '#0d6efd' }} />} style={{ width: 400, height: 80 }} block>Selecciona la foto de perfil</Button>\r\n        </Upload>\r\n      </div>\r\n      <br />\r\n      <Form\r\n        // {...formItemLayout}\r\n        labelCol={{ span: 6 }} wrapperCol={{ span: 16 }}\r\n        form={form}\r\n        name=\"register\"\r\n        onFinish={onFinish}\r\n        onFinishFailed={onFinishFailed}\r\n        initialValues={props.paciente}\r\n        scrollToFirstError\r\n      >\r\n\r\n        <Form.Item\r\n          name=\"name\"\r\n          label=\"Nombre\"\r\n          rules={[{ required: true, message: 'Ingresa Nombre y apellidos' }]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"email\"\r\n          label=\"Correo\"\r\n          rules={[{ type: 'email', message: 'Ingresa un correo electronico vaido!' }, { required: true, message: 'Ingresa un correo electronico' }]}>\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        {/* <Form.Item name=\"password\" label=\"Contraseña\" rules={[{ required: true, message: 'Por favor ingrese su contraseña!', },]} hasFeedback >\r\n          <Input.Password />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"confirm\"\r\n          label=\"Confirmar contraseña\"\r\n          dependencies={['password']}\r\n          hasFeedback\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Please confirm your password',\r\n            },\r\n            ({ getFieldValue }) => ({\r\n              validator(_, value) {\r\n                if (!value || getFieldValue('password') === value) {\r\n                  return Promise.resolve();\r\n                }\r\n                return Promise.reject(new Error('Las contraseñas deben coincidir!'));\r\n              },\r\n            }),\r\n          ]}\r\n        >\r\n          <Input.Password />\r\n        </Form.Item> */}\r\n\r\n        <Form.Item\r\n          name=\"telefono\"\r\n          label=\"Telefono\"\r\n          rules={[{ required: true, message: 'Ingresa tu numero de telefono' }]}\r\n        >\r\n          <Input\r\n            // addonBefore={prefixSelector}\r\n            style={{ width: '100%' }}\r\n          />\r\n        </Form.Item>\r\n\r\n        <Divider>Responsable (opcional) </Divider>\r\n        <Form.Item name=\"res_name\" label=\"Nombre Responsable\" >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item name=\"res_phone\" label=\"Telefono Responsable\">\r\n          <Input />\r\n        </Form.Item>\r\n        <Divider />\r\n\r\n        <Form.Item\r\n          name=\"calle\"\r\n          label=\"Calle\"\r\n          rules={[{ required: false, message: 'Ingresa calle', whitespace: true }]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"numexterior\"\r\n          label=\"Num Exterior\"\r\n          rules={[{ required: false, message: 'Ingresa numero exterior' }]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"numinterior\"\r\n          label=\"Num Interior\"\r\n          rules={[{ required: false, message: 'Ingresa numinterior' }]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"Colonia\"\r\n          name=\"colonia\"\r\n          rules={[{ required: false, message: 'Ingresa ' }]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"estado\"\r\n          label=\"Estado\"\r\n          rules={[{ required: true, message: 'Apellido materno', },]}>\r\n          <Select placeholder=\"Elije tu estado\">\r\n            {estados.map(e => <Option value={e}>{e}</Option>)}\r\n          </Select>\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"municipio\"\r\n          label=\"Municipio\"\r\n          rules={[{ required: true, message: 'Ingresa tu municipio' }]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"codigopostal\"\r\n          label=\"Codigo Postal\"\r\n          rules={[{ required: true, message: 'Ingresa codigopostal', },]}>\r\n          <InputNumber style={{ width: '100%', }} />\r\n        </Form.Item>\r\n\r\n        <Form.Item name=\"sexo\" label=\"sexo\" rules={[{ required: true, message: 'Selecciona una opcion' }]}>\r\n          <Select placeholder=\"Elije el sexo\" >\r\n            <Option value=\"H\">H</Option>\r\n            <Option value=\"M\">M</Option>\r\n            <Option value=\"Otro\">Otro</Option>\r\n          </Select>\r\n        </Form.Item>\r\n\r\n        <Form.Item name=\"edad\" label=\"Edad\" rules={[{ required: true, message: 'Ingresa edad' }]} >\r\n          <InputNumber min={1} max={120} />\r\n        </Form.Item>\r\n\r\n        <Form.Item name=\"diagnostico\" label=\"Diagnostico\" rules={[{ required: true, message: 'Ingresa el diagnostico' }]} >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item name=\"peso\" label=\"Peso\" rules={[{ required: true, message: 'Ingresa el peso' }]} >\r\n          <InputNumber min={1} max={200} />\r\n        </Form.Item>\r\n\r\n        <Form.Item name=\"talla\" label=\"Talla\" rules={[{ required: true, message: 'Ingresa la talla' }]} >\r\n          <InputNumber min={1} max={200} />\r\n        </Form.Item>\r\n\r\n        <Form.Item name=\"ocupacion\" label=\"Ocupacion\" rules={[{ required: true, message: 'Ingresa ocupacion' }]} >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item name=\"estado_civil\" label=\"Estado Civil\" rules={[{ required: true, message: 'Ingresa estado civil' }]} >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item name=\"escolaridad\" label=\"Escolaridad\" rules={[{ required: true, message: 'Ingresa escolaridad' }]} >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item name=\"lugar_de_nacimiento\" label=\"Lugar De Nacimiento\" rules={[{ required: true, message: 'Ingresa el lugar de nacimiento' }]} >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item name=\"ciudad\" label=\"Ciudad\" rules={[{ required: true, message: 'Ingresa ciudad' }]} >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item name=\"fuma\" label=\"Fuma\" rules={[{ required: false, message: 'Ingresa tu universidad' }]} >\r\n          <Switch defaultChecked={false} />\r\n        </Form.Item>\r\n\r\n        <Form.Item name=\"alcohol\" label=\"Alcohol\" rules={[{ required: false, message: 'Ingresa tu universidad' }]} >\r\n          <Switch defaultChecked={false} />\r\n        </Form.Item>\r\n\r\n        <Form.Item name=\"drogas\" label=\"Drogas\" rules={[{ required: true, message: 'Selecciona una opcion' }]} >\r\n          <Select placeholder=\"Elije una opcion\" >\r\n            <Option value=\"Antes\">Antes</Option>\r\n            <Option value=\"Ahora\">Ahora</Option>\r\n            <Option value=\"Nunca\">Nunca</Option>\r\n          </Select>\r\n        </Form.Item>\r\n\r\n        <Form.Item name=\"cuales_drogas\" label=\"Cuales Drogas\" rules={[{ required: false, message: 'Selecciona una opcion' }]} >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item name=\"enfermedades_familiares\" label=\"Enfermedades Familiares\" rules={[{ required: false, message: 'Ingresa tu universidad' }]} >\r\n          <Form.List name=\"enfermedades_familiares\" >\r\n            {(fields, { add, remove }, { errors }) => (\r\n              <>\r\n                {fields.map((field, index) => (\r\n                  <Form.Item label='' required={false} key={field.key}>\r\n                    <Form.Item {...field} noStyle\r\n                      validateTrigger={['onChange', 'onBlur']}\r\n                      rules={[{ required: true, whitespace: true, message: \"Ingresa la enfermedad o elimina este campo\" }]}\r\n                    >\r\n                      <Input placeholder=\"Ingresa enfermedad\" style={{ width: fields.length > 1 ? '95%' : '100%' }} />\r\n                    </Form.Item>\r\n                    {fields.length > 1 ? (\r\n                      <MinusCircleOutlined\r\n                        className=\"dynamic-delete-button\"\r\n                        onClick={() => remove(field.name)}\r\n                      />\r\n                    ) : null}\r\n                  </Form.Item>\r\n                ))}\r\n                <Form.Item>\r\n                  <Button type=\"dashed\" onClick={() => add()} icon={<PlusOutlined />}>\r\n                    Add field\r\n                  </Button>\r\n\r\n                  <Form.ErrorList errors={errors} />\r\n                </Form.Item>\r\n              </>\r\n            )}\r\n          </Form.List>\r\n        </Form.Item>\r\n\r\n        <Form.Item name=\"enfermedades_medicas\" label=\"Enfermedades Medicas\" rules={[{ required: false, message: 'Ingresa tu universidad' }]} >\r\n          <Form.List name=\"enfermedades_medicas\">\r\n            {(fields, { add, remove }, { errors }) => (\r\n              <>\r\n                {fields.map((field, index) => (\r\n                  <Form.Item label='' required={false} key={field.key}>\r\n                    <Form.Item {...field} noStyle\r\n                      validateTrigger={['onChange', 'onBlur']}\r\n                      rules={[{ required: true, whitespace: true, message: \"Ingresa la enfermedad o elimina este campo\" }]}\r\n                    >\r\n                      <Input placeholder=\"Ingresa enfermedad\" style={{ width: fields.length > 1 ? '95%' : '100%' }}/>\r\n                    </Form.Item>\r\n                    {fields.length > 1 ? (\r\n                      <MinusCircleOutlined\r\n                        className=\"dynamic-delete-button\"\r\n                        onClick={() => remove(field.name)}\r\n                      />\r\n                    ) : null}\r\n                  </Form.Item>\r\n                ))}\r\n                <Form.Item>\r\n                  <Button type=\"dashed\" onClick={() => add()} icon={<PlusOutlined />}>\r\n                    Add field\r\n                  </Button>\r\n\r\n                  <Form.ErrorList errors={errors} />\r\n                </Form.Item>\r\n              </>\r\n            )}\r\n          </Form.List>\r\n        </Form.Item>\r\n\r\n        <Form.Item name=\"tratamiento_actual\" label=\"Tratamiento actual\" rules={[{ required: false, message: 'Ingresa tu universidad' }]} >\r\n          <Form.List name=\"tratamiento_actual\" >\r\n            {(fields, { add, remove }, { errors }) => (\r\n              <>\r\n                {fields.map((field, index) => (\r\n                  <Form.Item\r\n                    // label={`Tratamiento ${index + 1}`} \r\n                    label=''\r\n                    required={false} key={field.key}>\r\n                    <Form.Item {...field} noStyle\r\n                      validateTrigger={['onChange', 'onBlur']}\r\n                      rules={[{ required: true, whitespace: true, message: \"Ingresa la enfermedad o elimina este campo\" }]}\r\n                    >\r\n                      <Input placeholder=\"Ingresa enfermedad\" style={{ width: fields.length > 1 ? '95%' : '100%' }}/>\r\n                    </Form.Item>\r\n                    {fields.length > 1 ? (\r\n                      <MinusCircleOutlined\r\n                        className=\"dynamic-delete-button\"\r\n                        onClick={() => remove(field.name)}\r\n                      />\r\n                    ) : null}\r\n                  </Form.Item>\r\n                ))}\r\n                <Form.Item>\r\n                  <Button type=\"dashed\" onClick={() => add()} icon={<PlusOutlined />}>\r\n                    Add field\r\n                  </Button>\r\n\r\n                  <Form.ErrorList errors={errors} />\r\n                </Form.Item>\r\n              </>\r\n            )}\r\n          </Form.List>\r\n        </Form.Item>\r\n\r\n        <Form.Item label='*'>\r\n          <Space>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              Registrar\r\n            </Button>\r\n            <Button onClick={() => props.setAdding(false)}>Cancelar</Button>\r\n          </Space>\r\n\r\n        </Form.Item>\r\n      </Form>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { getData } from '../../resources';\r\nimport { Row, Col } from 'antd';\r\nimport { Avatar, Card, Space, Button } from 'antd';\r\nimport { UserOutlined } from '@ant-design/icons';\r\nimport Loading from '../../loading';\r\nimport { FormOutlined } from '@ant-design/icons';\r\nimport Register from './register.patient';\r\n\r\n\r\nexport default function DetallesPaciente(props) {\r\n    const [pacienteData, setPacienteData] = useState([]);\r\n    const [pacienteLoading, setPacienteLoading] = useState(true);\r\n    const [editing, setEditing] = useState(false)\r\n\r\n    useEffect(() => {\r\n        getData(`getuser/${props.paciente}`).then(rs => { console.log(\"DetallePac: \", rs); setPacienteData(rs); setPacienteLoading(false) });\r\n    }, [props.paciente])\r\n\r\n    const ProfileDetails = () => {\r\n        return editing ?\r\n            <>\r\n                <Register setAdding={setEditing} paciente={pacienteData} />\r\n            </> :\r\n            <Card style={{ width: '98%', borderRadius: 12 }} bordered={false}>\r\n                <Space><h5>Datos del Paciente</h5><Button onClick={() => setEditing(true)} size='small' disabled={!props.paciente} type=\"primary\" shape=\"circle\" icon={<FormOutlined />} /></Space>\r\n                <Row>\r\n                    <Col span={8}>\r\n                        <Row justify=\"center\"><Col span={12}>\r\n                            {\r\n                                pacienteData.avatar.length > 9 ?\r\n                                    <img width={128} src={'https://api.recreamed.com/images/' + pacienteData.avatar} alt='ProfilePic' /> :\r\n                                    <Avatar size={128} icon={<UserOutlined />} />\r\n                            }\r\n                        </Col></Row>\r\n                        <br />\r\n                        <Row><Col span={8}>Nombre:</Col><Col span={10}>{pacienteData.name}</Col></Row>\r\n                        <Row><Col span={8}>Correo:</Col><Col span={10}>{pacienteData.email}</Col></Row>\r\n                        <Row><Col span={8}>Telefono:</Col><Col span={10}>{pacienteData.telefono}</Col></Row>\r\n                        <Row><Col span={8}>Estado:</Col><Col span={10}> {pacienteData.estado}</Col></Row>\r\n                        <Row><Col span={8}>Municipio:</Col><Col span={10}> {pacienteData.municipio}</Col></Row>\r\n                        <Row><Col span={8}>Colonia:</Col><Col span={10}> {pacienteData.colonia}</Col></Row>\r\n                        <Row><Col span={8}>Calle:</Col><Col span={10}> {pacienteData.calle}</Col></Row>\r\n                    </Col>\r\n                    <Col span={8}>\r\n                        <Row><Col span={8}>C.P.:</Col><Col span={10}>{pacienteData.codigopostal}</Col> </Row>\r\n                        <Row><Col span={8}>Sexo:</Col><Col span={10}>{pacienteData.sexo}</Col> </Row>\r\n                        <Row><Col span={8}>Edad:</Col><Col span={10}>{pacienteData.edad}</Col> </Row>\r\n                        <Row><Col span={8}>Peso:</Col><Col span={10}>{pacienteData.peso}</Col> </Row>\r\n                        <Row><Col span={8}>Talla:</Col><Col span={10}>{pacienteData.talla}</Col></Row>\r\n                        <Row><Col span={8}>Ocupacion:</Col><Col span={10}> {pacienteData.ocupacion}</Col></Row>\r\n                        <Row><Col span={8}>Diagnostico:</Col><Col span={10}>{pacienteData.diagnostico}</Col> </Row>\r\n                        <Row><Col span={8}>Estado Civil:</Col><Col span={10}> {pacienteData.estado_civil}</Col></Row>\r\n                        <Row><Col span={8}>Escolaridad:</Col><Col span={10}> {pacienteData.escolaridad}</Col></Row>\r\n                        <Row><Col span={8}>Ciudad:</Col><Col span={10}> {pacienteData.ciudad}</Col></Row>\r\n                        <Row><Col span={8}>Luga de Nacimiento:</Col><Col span={10}>{pacienteData.lugar_de_nacimiento}</Col> </Row>\r\n                        <Row><Col span={8}>Fuma:</Col><Col span={10}>{pacienteData.fuma}</Col> </Row>\r\n                        <Row><Col span={8}>alcohol:</Col><Col span={10}>{pacienteData.alcohol}</Col> </Row>\r\n                    </Col>\r\n                    <Col span={8}>\r\n                        <Row><Col span={10}>drogas:</Col><Col span={10}>{pacienteData.drogas}</Col> </Row>\r\n                        <Row><Col span={10}>cuales_drogas:</Col><Col span={10}>{pacienteData.cuales_drogas}</Col> </Row>\r\n                        <Row><Col span={10}>Diagnostico:</Col><Col span={10}>{pacienteData.peso}</Col> </Row>\r\n                        <Row><Col span={10}>Enfermedades familiares:</Col><Col span={10}>{pacienteData.enfermedades_familiares.map((e) => <p>{e}</p>)}</Col> </Row>\r\n                        <Row><Col span={10}>Enfermedades Medicas:</Col><Col span={10}>{pacienteData.enfermedades_medicas.map((e) => <p>{e}</p>)}</Col> </Row>\r\n                        <Row><Col span={10}>Tratamiento Actual:</Col><Col span={10}>{pacienteData.tratamiento_actual.map((t) => <p>{toString}</p>)}</Col> </Row>\r\n                    </Col>\r\n                </Row>\r\n            </Card>\r\n    }\r\n\r\n    return (\r\n        // <div className='mainContainer'>\r\n        <div>\r\n\r\n            {pacienteLoading ? <Loading /> :\r\n                <Row>\r\n                    <ProfileDetails />\r\n                </Row>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Space, Button, Select, Tabs, Row, Col } from 'antd'\r\nimport { API } from '../../resources'\r\nimport Loading from '../../loading'\r\nimport { usuario } from '../../resources'\r\nimport Expedientes from '../expedientes/expedientes'\r\nimport DetallesPaciente from './detalles.paciente'\r\nimport Register from './register.patient'\r\nimport { PlusOutlined, PhoneOutlined, UserOutlined } from '@ant-design/icons';\r\nconst { TabPane } = Tabs;\r\nconst { Option } = Select;\r\n\r\nexport default function MainPacientes() {\r\n\r\n  const [pacientesData, setPacientesData] = useState([])\r\n  const [isLoading, setIsLoading] = useState(true)\r\n  const [paciente, setPaciente] = useState(null)\r\n  const [adding, setAdding] = useState(false)\r\n  const [activePatient, setActivePatient] = useState(pacientesData[0]?._id)\r\n\r\n  useEffect(() => {\r\n    getPacientesData()\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    getPacientesData()\r\n  }, [adding])\r\n\r\n  const getPacientesData = () => {\r\n    fetch(API + `mispacientes/${usuario._id}`)\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        data.forEach(paciente => {\r\n          paciente.value = paciente.name;\r\n        });\r\n        console.log(data); setPacientesData(data);\r\n        if (data && data.length > 0) setPaciente(data[0]._id)\r\n      })\r\n      .finally(() => setIsLoading(false))\r\n  }\r\n\r\n  const onSelect = (data) => {\r\n    console.log('onSelect', data);\r\n  };\r\n\r\n  const onChange = (data) => {\r\n    console.log('onchangeSearchInput', data)\r\n    setActivePatient(data)\r\n  };\r\n\r\n  const onSearch = (value) => {\r\n    console.log('search:', value);\r\n  };\r\n\r\n  return (\r\n    <div className='mainContainer'>\r\n      <Row justify=\"start\">\r\n        <Col ><h4 >Pacientes</h4> </Col>\r\n        <Col style={{ marginLeft: 12 }}><Button style={{ marginTop: 4}} onClick={() => setAdding(!adding)} size='small' type=\"primary\" shape=\"circle\" icon={<PlusOutlined />} /> </Col>\r\n        <Col style={{ marginLeft: 16 }}>\r\n          <div className=\"my-select-container\">\r\n            <Select\r\n              // Widget para buscar pacientes\r\n              style={{ borderRadius: 8 }}\r\n              dropdownStyle={{ borderRadius: 8 }}\r\n              showSearch\r\n              placeholder=\"Buscar paciente\"\r\n              optionFilterProp=\"children\"\r\n              onChange={onChange}\r\n              onSearch={onSearch}\r\n              filterOption={(input, option) => option.children.toLowerCase().includes(input.toLowerCase())}\r\n            >\r\n              {\r\n                pacientesData.map((p) => <Option value={p._id}>{p.name}</Option>)\r\n              }\r\n            </Select>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n      {\r\n        isLoading ? <Loading /> :\r\n          adding ? <Register setAdding={setAdding} /> :\r\n            <div style={{ border: '1px solid #D6D6D6', borderRadius: 12, padding: 12 }}>\r\n              <Tabs activeKey={activePatient} tabPosition='left' onTabClick={(k, e) => { console.log('OnTABClick', k); setPaciente(k) }} style={{ marginTop: 6 }}>\r\n                {\r\n                  pacientesData.map((pt) => {\r\n                    return <TabPane tab={<><UserOutlined />{pt.name} <PhoneOutlined style={{ marginBottom: 2 }} />{pt.telefono}</>} key={pt._id} onClick={() => { setPaciente(pt._id) }}>\r\n                      <DetallesPaciente paciente={pt._id} />\r\n                    </TabPane>\r\n                  })\r\n                }\r\n              </Tabs>\r\n            </div>\r\n      }\r\n      <br />\r\n      <Expedientes paciente={paciente} />\r\n\r\n\r\n    </div >\r\n  )\r\n\r\n}\r\n","import React, { useEffect, useState, useRef } from 'react'\r\nimport { getData, sendDataBody } from '../../resources';\r\nimport { Form, Button, Space, Select, message } from 'antd'\r\nimport { usuario } from '../../resources';\r\nimport QRCode from \"react-qr-code\";\r\nimport { toBlob, toPng } from 'html-to-image';\r\nconst { Option } = Select;\r\n\r\nexport default function DepresionCreateLink() {\r\n\r\n    const [misPacientes, setMisPacientes] = useState([])\r\n    const [selectedPatient, setSelectedPatient] = useState(null)\r\n    const [link, setLink] = useState('')\r\n    // Used to add a medico _id when the user is admin\r\n    const [medicosData, setMedicosData] = useState([])\r\n    const [medico, setMedico] = useState(null)\r\n\r\n    const imageRef = useRef(null);\r\n\r\n\r\n    const getPacientesOfDoctor = (_id) => { //Para el caso que la sesion sea de Medico\r\n        getData(`mispacientes/${_id}`).then(rs => { setSelectedPatient(null); setMisPacientes(rs); console.log(`patients of ${_id}`, rs); })\r\n    }\r\n\r\n    const getDoctorsData = () => { //Para el caso que la sesion sea de Administrador\r\n        const body = { ids: usuario.medicos_asignados }\r\n        sendDataBody(`users/getMany`, body).then(rs => { setMedicosData(rs); console.log('medicosData: ', rs); })\r\n    }\r\n\r\n    useEffect(() => {\r\n        usuario.rol === 'Medico' ? getPacientesOfDoctor(usuario._id) : getDoctorsData()\r\n    }, [])\r\n\r\n    const handleDoctorChange = (value) => { setMedico(value); getPacientesOfDoctor(value) };\r\n    const handleChange = (value) => { setLink(null); setSelectedPatient(value) };\r\n\r\n    const generateLink = () => {\r\n        let usr = usuario.rol === 'Administrador' ? medico : usuario._id;\r\n        // let l = `https://sistema.recreamed.com/depresion_public/${usr}/${selectedPatient}/${Date.now()}`\r\n        let l = `http://localhost:3000/depresion_public/${usr}/${selectedPatient}/${Date.now()}`\r\n        setLink(l)\r\n    }\r\n    const copyLink = () => {\r\n        navigator.clipboard.writeText(link)\r\n        message.success('Enlace Copiado al Portapapeles!')\r\n    }\r\n\r\n    const handleDownload = async () => {\r\n        const dataUrl = await toPng(imageRef.current, { width: 288 });\r\n\r\n        // download image\r\n        const link = document.createElement('a');\r\n        link.download = \"codigo-de-enlace.png\";\r\n        link.href = dataUrl;\r\n        link.click();\r\n    }\r\n\r\n    const handleCopy = async () => {\r\n        message.info('Espere mientras se copia el codigo...')\r\n        toBlob(imageRef.current, { width: 288 })\r\n            .then(async function (blob) {\r\n                try {\r\n                    await navigator.clipboard.write([\r\n                        // eslint-disable-next-line no-undef\r\n                        new ClipboardItem({\r\n                            [blob.type]: blob\r\n                        })\r\n                    ]);\r\n                    console.log(\"Image copied\");\r\n                    message.success('Codigo Copiado al Portapapeles')\r\n                } catch (error) {\r\n                    console.error(error);\r\n                }\r\n            });\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h5>Generar enlace para encuesta de depresion</h5>\r\n            <br />\r\n            <Space >\r\n                {\r\n                    usuario.rol === 'Administrador' &&\r\n                    <Form.Item label=\"Medico\" name=\"usuario\" rules={[{ required: true, message: 'Selecciona el paciente' }]}\r\n                        style={{ alignItems: 'center', paddingTop: 20 }}>\r\n                        <Select\r\n                            style={{ width: 260, }}\r\n                            onChange={handleDoctorChange}\r\n                            placeholder='Selecciona un medico'\r\n                        >\r\n                            {\r\n                                medicosData.map((p) => {\r\n                                    return <Option value={p._id}>{p.name}</Option>\r\n                                })\r\n                            }\r\n                        </Select>\r\n                    </Form.Item>\r\n                }\r\n                <Form.Item label=\"Paciente\" name=\"usuario\" rules={[{ required: true, message: 'Selecciona el paciente' }]}\r\n                    style={{ alignItems: 'center', paddingTop: 20 }}>\r\n                    <Select\r\n                        style={{ width: 260, }}\r\n                        onChange={handleChange}\r\n                        placeholder='Selecciona un paciente'\r\n                    >\r\n                        {\r\n                            misPacientes.map((p) => {\r\n                                return <Option value={p._id}>{p.name}</Option>\r\n                            })\r\n                        }\r\n                    </Select>\r\n                </Form.Item>\r\n                <Button onClick={generateLink} disabled={!selectedPatient} >Generar Enlace</Button>\r\n            </Space>\r\n            <br />\r\n            {\r\n                selectedPatient && link ? <div>\r\n                    <Space align='center'>\r\n                        <p style={{ paddingTop: 16, color: '#1890ff' }} >{link}</p>\r\n                        <Button onClick={copyLink}>Copiar Link</Button>\r\n                    </Space>\r\n                    <br />\r\n                    <div ref={imageRef} style={{ background: 'white', padding: '16px' }}> <QRCode value={link} /> </div>\r\n                    <Button onClick={handleDownload}>Descargar Codigo</Button>\r\n                    <Button onClick={handleCopy} style={{ marginLeft: 12 }}>Copiar Codigo</Button>\r\n                </div> : <></>\r\n            }\r\n\r\n\r\n            <div style={{ height: 350 }}></div>\r\n\r\n        </div >\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Table } from 'antd'\r\nimport { Form, Select } from 'antd';\r\nimport { getData, usuario, sendDataBody } from '../../resources';\r\nconst { Option } = Select;\r\n\r\nexport default function DepresionResults() {\r\n    const [encuestasData, setEncuestasData] = useState([])\r\n    const [medicosData, setMedicosData] = useState([])\r\n    const [medico, setMedico] = useState(null)\r\n    useEffect(() => {\r\n        usuario.rol === 'Administrador' ? getDoctorsData() : getEncuestasData(usuario._id)\r\n    }, [])\r\n    const getDoctorsData = () => { //Para el caso que la sesion sea de Administrador\r\n        const body = { ids: usuario.medicos_asignados }\r\n        sendDataBody(`users/getMany`, body).then(rs => { setMedicosData(rs); console.log('medicosData: ', rs); })\r\n    }\r\n    const getEncuestasData = (medico) => {\r\n        getData(`encuestas/depresion/medico/${medico}`).then((rs) => {\r\n            console.log(rs);\r\n            setEncuestasData(rs)\r\n        })\r\n    }\r\n\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Paciente',\r\n            dataIndex: 'usuario',\r\n            key: 'name',\r\n            render: (_, { usuario }) => <>{usuario.name}</>\r\n        },\r\n        {\r\n            title: 'Puntaje',\r\n            dataIndex: 'score',\r\n            key: 'age',\r\n        }\r\n    ];\r\n\r\n    return (\r\n        <div className='mainContainer'>\r\n            <h4>Resultados de encuestas de sintomatologia depresiva</h4>\r\n            <br />\r\n            {\r\n                usuario.rol === 'Administrador' && <Form.Item label=\"Medico\" name=\"usuario\" rules={[{ required: true, message: 'Selecciona el paciente' }]}\r\n                    style={{ alignItems: 'center', paddingTop: 20 }}>\r\n                    <Select\r\n                        style={{ width: 260, }}\r\n                        onChange={getEncuestasData}\r\n                        placeholder='Selecciona un medico'\r\n                    >\r\n                        {\r\n                            medicosData.map((p) => {\r\n                                return <Option key={p._id} value={p._id}>{p.name}</Option>\r\n                            })\r\n                        }\r\n                    </Select>\r\n                </Form.Item>\r\n            }\r\n\r\n            <br />\r\n            <Table dataSource={encuestasData} columns={columns} />\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { useEffect } from 'react';\r\nimport { Space, Table, Tag, Progress } from 'antd'\r\nimport { Form, Select } from 'antd';\r\nimport { getData, usuario, sendDataBody } from '../../resources';\r\nconst { Option } = Select;\r\n\r\nexport default function EfectosResults() {\r\n\r\n  const [efectosData, setEfectosData] = useState(null);\r\n  const [medicosData, setMedicosData] = useState([])\r\n\r\n\r\n  // useEffect(() => {\r\n  //   const url = `encuestas/ketamina/medico/${usuario._id}`\r\n  //   console.log(url);\r\n  //   getData(url).then((res) => {\r\n  //     setEfectosData(res);\r\n  //     console.log(res)\r\n  //   })\r\n  // }, [])\r\n\r\n  useEffect(() => {\r\n    usuario.rol === 'Administrador' ? getDoctorsData() : getEncuestasData(usuario._id)\r\n  }, [])\r\n  const getDoctorsData = () => { //Para el caso que la sesion sea de Administrador\r\n    const body = { ids: usuario.medicos_asignados }\r\n    sendDataBody(`users/getMany`, body).then(rs => { setMedicosData(rs); console.log('medicosData: ', rs); })\r\n  }\r\n  const getEncuestasData = (medico) => {\r\n    getData(`encuestas/ketamina/medico/${medico}`).then((rs) => {\r\n      console.log(rs);\r\n      setEfectosData(rs)\r\n    })\r\n  }\r\n  const columns = [\r\n\r\n    {\r\n      title: 'Usuario',\r\n      key: 'usuario',\r\n      dataIndex: 'usuario',\r\n      render: (_, { usuario }) => (\r\n        <>\r\n          {usuario.name}\r\n        </>\r\n      ),\r\n    },\r\n    {\r\n      title: '¿Parece que las cosas se mueven en cámara lenta ?',\r\n      key: 'desrealizacion_0',\r\n      dataIndex: 'respuestas_ketamina',\r\n      render: (_, { respuestas_ketamina }) => (\r\n        <>{respuestas_ketamina.desrealizacion_0}</>\r\n      ),\r\n    },\r\n    {\r\n      title: '¿Te parecen irreales las cosas, como si estuvieras en un sueño?',\r\n      key: 'desrealizacion_1',\r\n      dataIndex: 'respuestas_ketamina',\r\n      render: (_, { respuestas_ketamina }) => (\r\n        <>{respuestas_ketamina.desrealizacion_1}</>\r\n      ),\r\n    },\r\n    {\r\n      title: '¿Te sientes desconectado de tu propio cuerpo?',\r\n      key: 'despersonalizacion_0',\r\n      dataIndex: 'respuestas_ketamina',\r\n      render: (_, { respuestas_ketamina }) => (\r\n        <>{respuestas_ketamina.despersonalizacion_0}</>\r\n      ),\r\n    },\r\n    {\r\n      title: 'Sientes que ha cambiado el sentido de tu propio cuerpo?: por ejemplo, tu cuerpo se siente inusualmente largo o inusualmente pequeño?',\r\n      key: 'despersonalizacion_1',\r\n      dataIndex: 'respuestas_ketamina',\r\n      render: (_, { respuestas_ketamina }) => (\r\n        <>{respuestas_ketamina.despersonalizacion_1}</>\r\n      ),\r\n    },\r\n    {\r\n      title: 'Te has distraído, o has perdido el rastro de alguna manera de lo que esta pasando durante esta experiencia?',\r\n      key: 'amnesia_0',\r\n      dataIndex: 'respuestas_ketamina',\r\n      render: (_, { respuestas_ketamina }) => (\r\n        <>{respuestas_ketamina.amnesia_0}</>\r\n      ),\r\n    },\r\n    {\r\n      title: 'Tiene lagunas (vacios) en su memoria?',\r\n      key: 'amnesia_1',\r\n      dataIndex: 'respuestas_ketamina',\r\n      render: (_, { respuestas_ketamina }) => (\r\n        <>{respuestas_ketamina.amnesia_1}</>\r\n      ),\r\n    },\r\n    {\r\n      title: 'Gusto por la ketamina',\r\n      key: 'ketamina',\r\n      dataIndex: 'respuestas_ketamina',\r\n      render: (_, { respuestas_ketamina }) => (\r\n        <Space direction='vertical'>\r\n          <>Gusto por la ketamina: <Progress percent={respuestas_ketamina.ketamina * 10} /></>\r\n          <>Anhelo/Apetito de ketamina: <Progress percent={respuestas_ketamina.ketaminaiv * 10} /></>\r\n          <>Deseo de Ketamina IV: <Progress percent={respuestas_ketamina.ketaminaivb * 10} /></>\r\n        </Space>\r\n      ),\r\n    },\r\n    {\r\n      title: 'Efectos',\r\n      key: 'Efectos',\r\n      dataIndex: 'respuestas_ketamina',\r\n      render: (_, { respuestas_ketamina }) => (\r\n        <div>\r\n          {respuestas_ketamina.Aumento_de_la_Presión_Arterial && <Tag color=\"red\">Aumento de la presion arterial</Tag>}\r\n          {respuestas_ketamina.Debilidad_o_Mareos_ligeros && <Tag color=\"red\">Debilidad o Mareos ligeros</Tag>}\r\n          {respuestas_ketamina.Dolor_de_cabeza && <Tag color=\"red\">Dolor de cabeza</Tag>}\r\n          {respuestas_ketamina.Mareos && <Tag color=\"red\">Mareos</Tag>}\r\n          {respuestas_ketamina.Nauseas && <Tag color=\"red\">Nauseas</Tag>}\r\n          {respuestas_ketamina.Sentimientos_de_Ansiedad && <Tag color=\"red\">Sentimientos de Ansiedad</Tag>}\r\n        </div>\r\n      ),\r\n    },\r\n\r\n  ];\r\n\r\n  return (\r\n    <div>\r\n      <br />\r\n      <h4>Resultados de listas de verificacion para efectos secundarios</h4>\r\n      <br />\r\n      {\r\n        usuario.rol === 'Administrador' && <Form.Item label=\"Medico\" name=\"usuario\" rules={[{ required: true, message: 'Selecciona el paciente' }]}\r\n          style={{ alignItems: 'center', paddingTop: 20 }}>\r\n          <Select\r\n            style={{ width: 260, }}\r\n            onChange={getEncuestasData}\r\n            placeholder='Selecciona un medico'\r\n          >\r\n            {\r\n              medicosData.map((p) => {\r\n                return <Option key={p._id} value={p._id}>{p.name}</Option>\r\n              })\r\n            }\r\n          </Select>\r\n        </Form.Item>\r\n      }\r\n      <br />\r\n      <Table dataSource={efectosData} columns={columns} scroll={{ x: 1300 }} />\r\n\r\n    </div>\r\n  )\r\n}\r\n","import React, { useEffect, useState, useRef } from 'react'\r\nimport { getData, sendDataBody } from '../../resources';\r\nimport { Form, Button, Space, Select, message } from 'antd'\r\nimport { usuario } from '../../resources';\r\nimport QRCode from \"react-qr-code\";\r\nimport { toBlob, toPng } from 'html-to-image';\r\nconst { Option } = Select;\r\n\r\n\r\nexport default function EfectosCreateLink() {\r\n\r\n    const [misPacientes, setMisPacientes] = useState([])\r\n    const [selectedPatient, setSelectedPatient] = useState(null)\r\n    const [link, setLink] = useState('')\r\n    // Used to add a medico _id when the user is admin\r\n    const [medicosData, setMedicosData] = useState([])\r\n    const [medico, setMedico] = useState(null)\r\n\r\n    const imageRef = useRef(null);\r\n\r\n\r\n    const getPacientesOfDoctor = (_id) => { //Para el caso que la sesion sea de Medico\r\n        getData(`mispacientes/${_id}`).then(rs => { setSelectedPatient(null); setMisPacientes(rs); console.log(`patients of ${_id}`, rs); })\r\n    }\r\n\r\n    const getDoctorsData = () => { //Para el caso que la sesion sea de Administrador\r\n        const body = { ids: usuario.medicos_asignados }\r\n        sendDataBody(`users/getMany`, body).then(rs => { setMedicosData(rs); console.log('medicosData: ', rs); })\r\n    }\r\n\r\n    useEffect(() => {\r\n        usuario.rol === 'Medico' ? getPacientesOfDoctor(usuario._id) : getDoctorsData()\r\n    }, [])\r\n\r\n    const handleDoctorChange = (value) => { setMedico(value); getPacientesOfDoctor(value) };\r\n    const handleChange = (value) => { setLink(null); setSelectedPatient(value) };\r\n\r\n    const generateLink = () => {\r\n        let usr = usuario.rol === 'Administrador' ? medico : usuario._id;\r\n        // let l = `https://sistema.recreamed.com/escalas_public/${usr}/${selectedPatient}/${Date.now()}`\r\n        let l = `http://localhost:3000/escalas_public/${usr}/${selectedPatient}/${Date.now()}`\r\n        setLink(l)\r\n    }\r\n    const copyLink = () => {\r\n        navigator.clipboard.writeText(link)\r\n        message.success('Enlace Copiado al Portapapeles!')\r\n    }\r\n\r\n    const handleDownload = async () => {\r\n        const dataUrl = await toPng(imageRef.current, { width: 288 });\r\n\r\n        // download image\r\n        const link = document.createElement('a');\r\n        link.download = \"codigo-de-enlace.png\";\r\n        link.href = dataUrl;\r\n        link.click();\r\n    }\r\n\r\n    const handleCopy = async () => {\r\n        message.info('Espere mientras se copia el codigo...')\r\n        toBlob(imageRef.current, { width: 288 })\r\n            .then(async function (blob) {\r\n                try {\r\n                    await navigator.clipboard.write([\r\n                        // eslint-disable-next-line no-undef\r\n                        new ClipboardItem({\r\n                            [blob.type]: blob\r\n                        })\r\n                    ]);\r\n                    console.log(\"Image copied\");\r\n                    message.success('Codigo Copiado al Portapapeles')\r\n                } catch (error) {\r\n                    console.error(error);\r\n                }\r\n            });\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h5>Generar enlace para encuesta de Ketamina</h5>\r\n            <br />\r\n            <Space >\r\n                {\r\n                    usuario.rol === 'Administrador' &&\r\n                    <Form.Item label=\"Medico\" name=\"usuario\" rules={[{ required: true, message: 'Selecciona el paciente' }]}\r\n                        style={{ alignItems: 'center', paddingTop: 20 }}>\r\n                        <Select\r\n                            style={{ width: 260, }}\r\n                            onChange={handleDoctorChange}\r\n                            placeholder='Selecciona un medico'\r\n                        >\r\n                            {\r\n                                medicosData.map((p) => {\r\n                                    return <Option value={p._id}>{p.name}</Option>\r\n                                })\r\n                            }\r\n                        </Select>\r\n                    </Form.Item>\r\n                }\r\n\r\n                <Form.Item label=\"Paciente\" name=\"usuario\" rules={[{ required: true, message: 'Selecciona el paciente' }]}\r\n                    style={{ alignItems: 'center', paddingTop: 20 }}>\r\n                    <Select\r\n                        style={{ width: 260, }}\r\n                        onChange={handleChange}\r\n                        placeholder='Selecciona un paciente'\r\n                        value={selectedPatient}\r\n                    >\r\n                        {\r\n                            misPacientes.map((p) => {\r\n                                return <Option value={p._id}>{p.name}</Option>\r\n                            })\r\n                        }\r\n                    </Select>\r\n                </Form.Item>\r\n                <Button onClick={generateLink} disabled={!selectedPatient} >Generar Enlace</Button>\r\n            </Space>\r\n\r\n            <br />\r\n\r\n            {\r\n                selectedPatient && link ? <div>\r\n                    <Space align='center'>\r\n                        <p style={{ paddingTop: 16, color: '#1890ff' }} >{link}</p>\r\n                        <Button onClick={copyLink}>Copiar Link</Button>\r\n                    </Space>\r\n                    <br />\r\n                    <div ref={imageRef} style={{ background: 'white', padding: '16px' }}> <QRCode value={link} /> </div>\r\n                    <Button onClick={handleDownload}>Descargar Codigo</Button>\r\n                    <Button onClick={handleCopy} style={{ marginLeft: 12 }}>Copiar Codigo</Button>\r\n                </div> : <></>\r\n            }\r\n\r\n\r\n            <div style={{ height: 350 }}></div>\r\n\r\n        </div >\r\n    )\r\n}\r\n","export const dolor_catalog = [\r\n    {\r\n        'n': 1,\r\n        'tipo': 'multiple',\r\n        'pregunta': 'Indique en el diagrama las zonas donde siente dolor sombreando la parte afectada. Marque una cruz en la zona que más le duele.',\r\n        'respuestas': ['Delante Derecha', 'Delante Izquierda', 'Detras Derecha', 'Detras Izquierda']\r\n    },\r\n    {\r\n        'n': 2,\r\n        'tipo': 'metrica',\r\n        'pregunta': 'Por favor, evalúe su dolor rodeando con un círculo el número que mejor describa la intensidad máxima de su dolor en la última semana',\r\n    },\r\n    {\r\n        'n': 3,\r\n        'tipo': 'metrica',\r\n        'pregunta': 'Por favor, evalúe su dolor rodeando con un círculo el número que mejor describa la intensidad mínima de su dolor en la última semana',\r\n    },\r\n    {\r\n        'n': 4,\r\n        'tipo': 'metrica',\r\n        'pregunta': 'Por  favor,  evalúe  su  dolor  rodeando  con  un  círculo  el  número  que  mejor  describa  la  intensidad  mediade  su  dolor.',\r\n    },\r\n    {\r\n        'n': 5,\r\n        'tipo': 'metrica',\r\n        'pregunta': 'Por favor, evalúe su dolor rodeando con un círculo el número que mejor describa la intensidad de su dolor ahora mismo',\r\n    },\r\n    {\r\n        'n': 6,\r\n        'tipo': 'texto',\r\n        'pregunta': '¿Qué tipo de cosas le alivia el dolor (p. ej., caminar, estar de pie, levantar algo)?',\r\n    },\r\n    {\r\n        'n': 7,\r\n        'tipo': 'texto',\r\n        'pregunta': '¿Qué tipo de cosas empeora el dolor (p. ej., caminar, estar de pie, levantar algo)?',\r\n    },\r\n    {\r\n        'n': 8,\r\n        'tipo': 'texto',\r\n        'pregunta': '¿Qué tratamiento o medicación está recibiendo para el dolor?',\r\n    },\r\n    {\r\n        'n': 9,\r\n        'tipo': 'metrica',\r\n        'pregunta': 'En la última semana, ¿hasta qué punto le han aliviado los tratamientos o medicación para el dolor? Por favor, rodee con un círculo el porcentaje que corresponda al grado de alivio que ha sentido'\r\n    },\r\n    {\r\n        'n': 10,\r\n        'tipo': 'seleccion',\r\n        'pregunta': 'Si toma medicación, ¿cuánto tarda en volver a sentir dolor?',\r\n        'respuestas': ['La medicación para el dolor no me ayuda nada', '1h', '2h', '3h', '4h', 'De 5 a 12h', 'Más de 12h', 'No tomo medicación para el dolor']\r\n    },\r\n    {\r\n        'n': 11,\r\n        'tipo': 'multiple',\r\n        'pregunta': 'Marque con una cruz la casilla que considere adecuada para cada una de las respuestas.',\r\n        'respuestas': ['A. Los efectos del tratamiento (p. ej., medicación, operación, radiación, prótesis)', 'B. Mi enfermedad principal (la enfermedad que actualmente se está tratando y evaluando)', 'C.  Una situación no relacionada con mi enfermedad principal (p. ej., artrosis)']\r\n    },\r\n    {\r\n        'n': 12,\r\n        'tipo': 'multiple',\r\n        'pregunta': 'Para cada una de las siguientes palabras, marque con una cruz «sí» o «no» si ese adjetivo se aplica a su dolor.',\r\n        'respuestas': ['Dolorido/continuo', 'Palpitante', 'Irradiante', 'Punzante', 'Fatigoso (pesado)', 'Penetrante', 'Persistente', 'Mortificante (calambre)', 'Agudo', 'Sensible', 'Quemante', 'Agotador', 'Entumecido (adormecido)', 'Penoso', 'Insoportable']\r\n    },\r\n    {\r\n        'n': 13,\r\n        'tipo': 'titulo',\r\n        'pregunta': 'Rodee con un círculo el número que mejor describa hasta qué punto el dolor le ha afectado en los siguientes aspectos de la vida, durante la última semana.',\r\n    },\r\n    {\r\n        'n': 'A13',\r\n        'tipo': 'metrica',\r\n        'pregunta': '13 A. Actividades en general',\r\n    },\r\n    {\r\n        'n': 'B13',\r\n        'tipo': 'metrica',\r\n        'pregunta': '13 B. Estado de ánimo',\r\n    },\r\n    {\r\n        'n': 'C13',\r\n        'tipo': 'metrica',\r\n        'pregunta': '13 C. Capacidad de caminar',\r\n    },\r\n    {\r\n        'n': 'D13',\r\n        'tipo': 'metrica',\r\n        'pregunta': '13 D. Trabajo habitual (incluye tanto el trabajo fuera de casa como las tareas domésticas)',\r\n    },\r\n    {\r\n        'n': 'E13',\r\n        'tipo': 'metrica',\r\n        'pregunta': '13 E. Relaciones con otras personas',\r\n    },\r\n    {\r\n        'n': 'F13',\r\n        'tipo': 'metrica',\r\n        'pregunta': '13 F. Sueño',\r\n    },\r\n    {\r\n        'n': 'G13',\r\n        'tipo': 'metrica',\r\n        'pregunta': '13 G. Disfrutar de la vida',\r\n    },\r\n    {\r\n        'n': 14,\r\n        'tipo': 'seleccion',\r\n        'pregunta': '14. Prefiero tomar mi medicación para el dolor:',\r\n        'respuestas': ['De forma regular', 'Sólo cuando lo necesito', 'No tomo medicación para el dolor']\r\n    },\r\n    {\r\n        'n': 15,\r\n        'tipo': 'seleccion',\r\n        'pregunta': '15. Tomo mi medicación para el dolor (en un período de un día)',\r\n        'respuestas': ['No todos los días', '1 a 2 veces al día', '3 a 4 veces al día', '5 a 6 veces al día', 'Más de 6 veces al día']\r\n    },\r\n    {\r\n        'n': 16,\r\n        'tipo': 'seleccion',\r\n        'pregunta': '16. ¿Cree que necesita una medicación más fuerte para el dolor?',\r\n        'respuestas': ['Si', 'No', 'No lo sé']\r\n    },\r\n    {\r\n        'n': 17,\r\n        'tipo': 'seleccion',\r\n        'pregunta': '17. ¿Cree que debería tomar más dosis de la medicación para el dolor que las que le ha recetado el médico?',\r\n        'respuestas': ['Si', 'No', 'No lo sé']\r\n    },\r\n    {\r\n        'n': 18,\r\n        'tipo': 'seleccion',\r\n        'pregunta': '18. ¿Está preocupado/a porque toma demasiada medicación para el dolor?',\r\n        'respuestas': ['Si', 'No', 'No lo sé']\r\n    },\r\n    {\r\n        'n': 'B18',\r\n        'tipo': 'texto',\r\n        'pregunta': '18 B.Si la respuesta es «sí», ¿por qué?'\r\n    },\r\n    {\r\n        'n': 19,\r\n        'tipo': 'seleccion',\r\n        'pregunta': '19. ¿Tiene problemas con los efectos secundarios de su medicación para el dolor?',\r\n        'respuestas': ['Si', 'No']\r\n    },\r\n    {\r\n        'n': 'B19',\r\n        'tipo': 'texto',\r\n        'pregunta': '19 B.¿Qué efectos secundarios?'\r\n    },\r\n    {\r\n        'n': 20,\r\n        'tipo': 'seleccion',\r\n        'pregunta': '20. ¿Cree que necesita recibir más información sobre su medicación para el dolor?',\r\n        'respuestas': ['Si', 'No']\r\n    },\r\n    {\r\n        'n': 21,\r\n        'tipo': 'multiple',\r\n        'pregunta': '21. Otros métodos que uso para aliviar mi dolor son (por favor, marque con una cruz todo lo que se le aplique):',\r\n        'respuestas': ['Compresas calientes', 'Distracción', 'Compresas frías', 'Biofeedback', 'Técnicas de relajación', 'Hipnosis']\r\n    },\r\n    {\r\n        'n': 'B21',\r\n        'tipo': 'texto',\r\n        'pregunta': '21 B.Si su respuesta es otros, por favor, especifique'\r\n    },\r\n    {\r\n        'n': 22,\r\n        'tipo': 'texto',\r\n        'pregunta': '22. Otras medicaciones no recetadas por mi médico y que tomo para el dolor son:'\r\n    },\r\n]","import React, { useState, useEffect } from 'react'\r\nimport { dolor_catalog } from './dolor_catalog';\r\nimport { Form, Input, Button, Slider, Checkbox, Radio, message } from 'antd';\r\nimport { getData, sendDataBody } from '../../resources';\r\nimport logo from \"../../assets/Logo.png\";\r\n\r\nexport default function DolorEncuesta(props) {\r\n    // For check if the encuesta existts on db\r\n    const [encuestaNotExists, setEncuestaNotExists] = useState(null)\r\n    const [checking, setChecking] = useState(true)\r\n    const [pacienteData, setPacienteData] = useState({})\r\n    const [medicoData, setMedicoData] = useState({})\r\n\r\n    useEffect(() => {\r\n        checkEncuesta()\r\n    }, [])\r\n\r\n\r\n    const checkEncuesta = () => {\r\n\r\n        getData('getuser/' + props.idpaciente).then((rs) => { setPacienteData(rs) })\r\n        getData('getuser/' + props.idmedico).then((rs) => { setMedicoData(rs) })\r\n\r\n\r\n        getData(`encuestas/uuid/${props.token}`).then(rs => {\r\n            console.log(rs);\r\n            setEncuestaNotExists(rs.message === 'The survey does not exist')\r\n        }).then(() => { setChecking(false); console.log('Not exists: ', encuestaNotExists); })\r\n    }\r\n\r\n    const onFinish = (values) => {\r\n        const body = {\r\n            usuario: props.idpaciente,\r\n            medico: props.idmedico,\r\n            respuestas_dolor: values,\r\n            tipo: 'dolor',\r\n            uuid: props.token\r\n        }\r\n        console.log('Body:', body);\r\n        sendDataBody('encuestas/add', body).then((rs) => {\r\n            console.log('add enc resp', rs)\r\n            message.success(rs.message)\r\n        }).then(() => checkEncuesta())\r\n    };\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n        errorInfo.errorFields.map((p) => {\r\n            message.error('Conteste la pregunta ' + p.name)\r\n        })\r\n    };\r\n    const onChange = (checkedValues) => {\r\n        console.log('checked = ', checkedValues);\r\n    };\r\n\r\n    // Loading state\r\n    if (checking) return <div style={{ paddingTop: 180 }}>\r\n        <div style={{ margin: 'auto', width: '40%', textAlign: 'center' }}>\r\n            <h3 >Cargando</h3>\r\n        </div>\r\n    </div>\r\n\r\n    if (!encuestaNotExists) return <div style={{ paddingTop: 180 }}>\r\n        <div style={{ margin: 'auto', width: '40%', textAlign: 'center' }}>\r\n            <h3 >Gracias por contestar la encuesta</h3>\r\n            <img width={256} src={logo} alt=\"recreamedLogo\" style={{ margin: 'auto' }} />\r\n        </div>\r\n    </div>\r\n    return (\r\n        <div className='mainContainer'>\r\n            <h4>Encuesta de Dolor</h4>\r\n            <br />\r\n            <h5>Medico: {medicoData.name}</h5>\r\n            <h5>Paciente: {pacienteData.name}</h5>\r\n            <br />\r\n            <Form\r\n                name=\"basic\"\r\n                labelCol={{ span: 24 }}\r\n                wrapperCol={{ span: 24 }}\r\n                initialValues={{ remember: true }}\r\n                onFinish={onFinish}\r\n                onFinishFailed={onFinishFailed}\r\n                autoComplete=\"off\"\r\n            >\r\n                {\r\n                    dolor_catalog.map((p) => {\r\n                        let input;\r\n                        switch (p.tipo) {\r\n                            case 'metrica':\r\n                                input = <Slider defaultValue={0} min={0} max={10} />\r\n                                break;\r\n                            case 'multiple':\r\n                                input = <Checkbox.Group options={p.respuestas} defaultValue={['Apple']} onChange={onChange} />\r\n                                break;\r\n                            case 'seleccion':\r\n                                input = <Radio.Group>\r\n                                    {p.respuestas.map((r, i) => { return <Radio value={i}>{r}</Radio> })}\r\n                                </Radio.Group>;\r\n                                break;\r\n                            case 'texto':\r\n                                input = < Input />;\r\n                                break;\r\n                            default:\r\n                                input = < Input />;\r\n                        }\r\n\r\n                        return p.tipo !== 'titulo' ? <Form.Item\r\n                            key={p.n}\r\n                            label={p.n + '. ' + p.pregunta}\r\n                            name={p.n}\r\n                            rules={[{ required: true, message: 'Conteste correctamente' }]}\r\n                        >\r\n                            {input}\r\n                        </Form.Item> : <h5>{`${p.n}.  ${p.pregunta}`}</h5>\r\n                    })\r\n                }\r\n\r\n\r\n                <Form.Item\r\n                    wrapperCol={{\r\n                        offset: 8,\r\n                        span: 16,\r\n                    }}\r\n                >\r\n                    <Button type=\"primary\" htmlType=\"submit\">\r\n                        Guardar\r\n                    </Button>\r\n                </Form.Item>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState, useRef } from 'react'\r\nimport { getData, sendDataBody } from '../../resources';\r\nimport { Form, Button, Space, Select, message } from 'antd'\r\nimport { usuario } from '../../resources';\r\nimport QRCode from \"react-qr-code\";\r\nimport { toBlob, toPng } from 'html-to-image';\r\nconst { Option } = Select;\r\n\r\nexport default function DolorCreateLink() {\r\n\r\n    const [misPacientes, setMisPacientes] = useState([])\r\n    const [selectedPatient, setSelectedPatient] = useState(null)\r\n    const [link, setLink] = useState('')\r\n    // Used to add a medico _id when the user is admin\r\n    const [medicosData, setMedicosData] = useState([])\r\n    const [medico, setMedico] = useState(null)\r\n\r\n    const imageRef = useRef(null);\r\n\r\n\r\n    const getPacientesOfDoctor = (_id) => { //Para el caso que la sesion sea de Medico\r\n        getData(`mispacientes/${_id}`).then(rs => { setSelectedPatient(null); setMisPacientes(rs); console.log(`patients of ${_id}`, rs); })\r\n    }\r\n\r\n    const getDoctorsData = () => { //Para el caso que la sesion sea de Administrador\r\n        const body = { ids: usuario.medicos_asignados }\r\n        sendDataBody(`users/getMany`, body).then(rs => { setMedicosData(rs); console.log('medicosData: ', rs); })\r\n    }\r\n\r\n    useEffect(() => {\r\n        usuario.rol === 'Medico' ? getPacientesOfDoctor(usuario._id) : getDoctorsData()\r\n    }, [])\r\n\r\n    const handleDoctorChange = (value) => { setMedico(value); getPacientesOfDoctor(value) };\r\n    const handleChange = (value) => { setLink(null); setSelectedPatient(value) };\r\n\r\n    const generateLink = () => {\r\n        let usr = usuario.rol === 'Administrador' ? medico : usuario._id;\r\n        // let l = `https://sistema.recreamed.com/dolor_public/${usr}/${selectedPatient}/${Date.now()}`\r\n        let l = `http://localhost:3000/dolor_public/${usr}/${selectedPatient}/${Date.now()}`\r\n        setLink(l)\r\n    }\r\n    const copyLink = () => {\r\n        navigator.clipboard.writeText(link)\r\n        message.success('Enlace Copiado al Portapapeles!')\r\n    }\r\n\r\n    const handleDownload = async () => {\r\n        const dataUrl = await toPng(imageRef.current, { width: 288 });\r\n\r\n        // download image\r\n        const link = document.createElement('a');\r\n        link.download = \"codigo-de-enlace.png\";\r\n        link.href = dataUrl;\r\n        link.click();\r\n    }\r\n\r\n    const handleCopy = async () => {\r\n        message.info('Espere mientras se copia el codigo...')\r\n        toBlob(imageRef.current, { width: 288 })\r\n            .then(async function (blob) {\r\n                try {\r\n                    await navigator.clipboard.write([\r\n                        // eslint-disable-next-line no-undef\r\n                        new ClipboardItem({\r\n                            [blob.type]: blob\r\n                        })\r\n                    ]);\r\n                    console.log(\"Image copied\");\r\n                    message.success('Codigo Copiado al Portapapeles')\r\n                } catch (error) {\r\n                    console.error(error);\r\n                }\r\n            });\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h5>Generar enlace para encuesta de dolor</h5>\r\n            <br />\r\n            <Space >\r\n                {\r\n                    usuario.rol === 'Administrador' &&\r\n                    <Form.Item label=\"Medico\" name=\"usuario\" rules={[{ required: true, message: 'Selecciona el paciente' }]}\r\n                        style={{ alignItems: 'center', paddingTop: 20 }}>\r\n                        <Select\r\n                            style={{ width: 260, }}\r\n                            onChange={handleDoctorChange}\r\n                            placeholder='Selecciona un medico'\r\n                        >\r\n                            {\r\n                                medicosData.map((p) => {\r\n                                    return <Option value={p._id}>{p.name}</Option>\r\n                                })\r\n                            }\r\n                        </Select>\r\n                    </Form.Item>\r\n                }\r\n                <Form.Item label=\"Paciente\" name=\"usuario\" rules={[{ required: true, message: 'Selecciona el paciente' }]}\r\n                    style={{ alignItems: 'center', paddingTop: 20 }}>\r\n                    <Select\r\n                        style={{ width: 260, }}\r\n                        onChange={handleChange}\r\n                        placeholder='Selecciona un paciente'\r\n                    >\r\n                        {\r\n                            misPacientes.map((p) => {\r\n                                return <Option value={p._id}>{p.name}</Option>\r\n                            })\r\n                        }\r\n                    </Select>\r\n                </Form.Item>\r\n                <Button onClick={generateLink} disabled={!selectedPatient} >Generar Enlace</Button>\r\n            </Space>\r\n            <br />\r\n            {\r\n                selectedPatient && link ? <div>\r\n                    <Space align='center'>\r\n                        <p style={{ paddingTop: 16, color: '#1890ff' }} >{link}</p>\r\n                        <Button onClick={copyLink}>Copiar Link</Button>\r\n                    </Space>\r\n                    <br />\r\n                    <div ref={imageRef} style={{ background: 'white', padding: '16px' }}> <QRCode value={link} /> </div>\r\n                    <Button onClick={handleDownload}>Descargar Codigo</Button>\r\n                    <Button onClick={handleCopy} style={{ marginLeft: 12 }}>Copiar Codigo</Button>\r\n                </div> : <></>\r\n            }\r\n\r\n\r\n            <div style={{ height: 350 }}></div>\r\n\r\n        </div >\r\n    )\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { useState } from 'react'\r\nimport { usuario, getData, sendDataBody } from '../../resources'\r\nimport { Form, Select, Space, Tag, Table } from 'antd';\r\nconst { Option } = Select;\r\n\r\nexport default function DolorResults() {\r\n    const [encuestasData, setEncuestasData] = useState([])\r\n    const [medicosData, setMedicosData] = useState([])\r\n    const [medico, setMedico] = useState(null)\r\n    useEffect(() => {\r\n        usuario.rol === 'Administrador' ? getDoctorsData() : getEncuestasData(usuario._id)\r\n    }, [])\r\n    const getDoctorsData = () => { //Para el caso que la sesion sea de Administrador\r\n        const body = { ids: usuario.medicos_asignados }\r\n        sendDataBody(`users/getMany`, body).then(rs => { setMedicosData(rs); console.log('medicosData: ', rs); })\r\n    }\r\n    const getEncuestasData = (medico) => {\r\n        getData(`encuestas/dolor/medico/${medico}`).then((rs) => {\r\n            console.log(rs);\r\n            setEncuestasData(rs)\r\n        })\r\n    }\r\n\r\n    const columns = [\r\n\r\n        {\r\n            title: 'Usuario',\r\n            dataIndex: 'usuario',\r\n            key: 'usuario',\r\n            render: (_, { usuario }) => <p>{usuario.name}</p>\r\n        },\r\n        {\r\n            title: 'Pretgunta 1',\r\n            dataIndex: 'respuestas_dolor',\r\n            key: 'usuario',\r\n            render: (_, { respuestas_dolor }) => <p>{respuestas_dolor[1]}</p>\r\n        },\r\n        {\r\n            title: 'Pretgunta 2',\r\n            dataIndex: 'respuestas_dolor',\r\n            key: 'usuario',\r\n            render: (_, { respuestas_dolor }) => <p>{respuestas_dolor[2]}</p>\r\n        },\r\n        {\r\n            title: 'Pretgunta 3',\r\n            dataIndex: 'respuestas_dolor',\r\n            key: 'usuario',\r\n            render: (_, { respuestas_dolor }) => <p>{respuestas_dolor[3]}</p>\r\n        },\r\n        {\r\n            title: 'Pretgunta 4',\r\n            dataIndex: 'respuestas_dolor',\r\n            key: 'usuario',\r\n            render: (_, { respuestas_dolor }) => <p>{respuestas_dolor[4]}</p>\r\n        },\r\n        {\r\n            title: 'Pretgunta 5',\r\n            dataIndex: 'respuestas_dolor',\r\n            key: 'usuario',\r\n            render: (_, { respuestas_dolor }) => <p>{respuestas_dolor[5]}</p>\r\n        },\r\n        {\r\n            title: 'Pretgunta 6',\r\n            dataIndex: 'respuestas_dolor',\r\n            key: 'usuario',\r\n            render: (_, { respuestas_dolor }) => <p>{respuestas_dolor[6]}</p>\r\n        },\r\n        {\r\n            title: 'Pretgunta 7',\r\n            dataIndex: 'respuestas_dolor',\r\n            key: 'usuario',\r\n            render: (_, { respuestas_dolor }) => <p>{respuestas_dolor[7]}</p>\r\n        },\r\n        {\r\n            title: 'Pretgunta 8',\r\n            dataIndex: 'respuestas_dolor',\r\n            key: 'usuario',\r\n            render: (_, { respuestas_dolor }) => <p>{respuestas_dolor[8]}</p>\r\n        },\r\n        {\r\n            title: 'Pretgunta 9',\r\n            dataIndex: 'respuestas_dolor',\r\n            key: 'usuario',\r\n            render: (_, { respuestas_dolor }) => <p>{respuestas_dolor[9]}</p>\r\n        },\r\n        {\r\n            title: 'Pretgunta 10',\r\n            dataIndex: 'respuestas_dolor',\r\n            key: 'usuario',\r\n            render: (_, { respuestas_dolor }) => <p>{respuestas_dolor[10]}</p>\r\n        },\r\n        {\r\n            title: 'Pretgunta 11',\r\n            dataIndex: 'respuestas_dolor',\r\n            key: 'usuario',\r\n            render: (_, { respuestas_dolor }) => <p>{respuestas_dolor[11]}</p>\r\n        },\r\n        {\r\n            title: 'Pretgunta 12',\r\n            dataIndex: 'respuestas_dolor',\r\n            key: 'usuario',\r\n            render: (_, { respuestas_dolor }) => <p>{respuestas_dolor[12]}</p>\r\n        },\r\n        {\r\n            title: 'Pretgunta 13',\r\n            dataIndex: 'respuestas_dolor',\r\n            key: 'usuario',\r\n            render: (_, { respuestas_dolor }) => <p>{respuestas_dolor[13]}</p>\r\n        },\r\n        {\r\n            title: 'Pretgunta 14',\r\n            dataIndex: 'respuestas_dolor',\r\n            key: 'usuario',\r\n            render: (_, { respuestas_dolor }) => <p>{respuestas_dolor[14]}</p>\r\n        },\r\n        {\r\n            title: 'Pretgunta 15',\r\n            dataIndex: 'respuestas_dolor',\r\n            key: 'usuario',\r\n            render: (_, { respuestas_dolor }) => <p>{respuestas_dolor[15]}</p>\r\n        },\r\n        {\r\n            title: 'Pretgunta 16',\r\n            dataIndex: 'respuestas_dolor',\r\n            key: 'usuario',\r\n            render: (_, { respuestas_dolor }) => <p>{respuestas_dolor[16]}</p>\r\n        },\r\n        {\r\n            title: 'Pretgunta 17',\r\n            dataIndex: 'respuestas_dolor',\r\n            key: 'usuario',\r\n            render: (_, { respuestas_dolor }) => <p>{respuestas_dolor[17]}</p>\r\n        },\r\n        {\r\n            title: 'Pretgunta 18',\r\n            dataIndex: 'respuestas_dolor',\r\n            key: 'usuario',\r\n            render: (_, { respuestas_dolor }) => <p>{respuestas_dolor[18]}</p>\r\n        },\r\n        {\r\n            title: 'Pretgunta 19',\r\n            dataIndex: 'respuestas_dolor',\r\n            key: 'usuario',\r\n            render: (_, { respuestas_dolor }) => <p>{respuestas_dolor[19]}</p>\r\n        },\r\n        {\r\n            title: 'Pretgunta 20',\r\n            dataIndex: 'respuestas_dolor',\r\n            key: 'usuario',\r\n            render: (_, { respuestas_dolor }) => <p>{respuestas_dolor[20]}</p>\r\n        },\r\n        {\r\n            title: 'Pretgunta 21',\r\n            dataIndex: 'respuestas_dolor',\r\n            key: 'usuario',\r\n            render: (_, { respuestas_dolor }) => <p>{respuestas_dolor[21]}</p>\r\n        },\r\n        {\r\n            title: 'Pretgunta 22',\r\n            dataIndex: 'respuestas_dolor',\r\n            key: 'usuario',\r\n            render: (_, { respuestas_dolor }) => <p>{respuestas_dolor[22]}</p>\r\n        },\r\n        // {\r\n        //     title: 'Address',\r\n        //     dataIndex: 'address',\r\n        //     key: 'address',\r\n        // },\r\n        // {\r\n        //     title: 'Tags',\r\n        //     key: 'tags',\r\n        //     dataIndex: 'tags',\r\n        //     render: (_, { tags }) => (\r\n        //         <>\r\n        //             {tags.map((tag) => {\r\n        //                 let color = tag.length > 5 ? 'geekblue' : 'green';\r\n        //                 if (tag === 'loser') {\r\n        //                     color = 'volcano';\r\n        //                 }\r\n        //                 return (\r\n        //                     <Tag color={color} key={tag}>\r\n        //                         {tag.toUpperCase()}\r\n        //                     </Tag>\r\n        //                 );\r\n        //             })}\r\n        //         </>\r\n        //     ),\r\n        // },\r\n        {\r\n            title: 'Action',\r\n            key: 'action',\r\n            render: (_, record) => (\r\n                <Space size=\"middle\">\r\n                    <a>Invite {record.name}</a>\r\n                    <a>Delete</a>\r\n                </Space>\r\n            ),\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <div>\r\n            <h4>Resultados de encuestas de dolor</h4>\r\n            {\r\n                usuario.rol === 'Administrador' && <Form.Item label=\"Medico\" name=\"usuario\" rules={[{ required: true, message: 'Selecciona el paciente' }]}\r\n                    style={{ alignItems: 'center', paddingTop: 20 }}>\r\n                    <Select\r\n                        style={{ width: 260, }}\r\n                        onChange={getEncuestasData}\r\n                        placeholder='Selecciona un medico'\r\n                    >\r\n                        {\r\n                            medicosData.map((p) => {\r\n                                return <Option key={p._id} value={p._id}>{p.name}</Option>\r\n                            })\r\n                        }\r\n                    </Select>\r\n                </Form.Item>\r\n            }\r\n            <Table columns={columns} dataSource={encuestasData} scroll={{ x: '200vw' }} />\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Tabs } from 'antd';\r\nimport DepresionCreateLink from './depresion/depresionCreateLink';\r\nimport DepresionResults from './depresion/depresionResults';\r\nimport EfectosResults from './ketamina/efectosResults';\r\nimport EfectosCreateLink from './ketamina/efectosCreateLink';\r\nimport DolorEncuesta from './dolor/dolorEncuesta';\r\nimport DolorCreateLink from './dolor/dolorCreateLink';\r\nimport DolorResults from './dolor/dolorResults';\r\nconst { TabPane } = Tabs;\r\n\r\nconst onChange = (key) => {\r\n    console.log(key);\r\n};\r\n\r\nexport default function Escalas() {\r\n    return (\r\n        <div>\r\n            <Tabs defaultActiveKey=\"1\" onChange={onChange} tabPosition='left'>\r\n                <TabPane tab=\"Ketamina\" key=\"1\">\r\n                    <EfectosCreateLink />\r\n                </TabPane>\r\n                <TabPane tab=\"Resultados Ketamina\" key=\"2\">\r\n                    <EfectosResults />\r\n                </TabPane>\r\n                <TabPane tab=\"Depresion\" key=\"3\">\r\n                    <DepresionCreateLink />\r\n                </TabPane>\r\n                <TabPane tab=\"Resultados Depresion\" key=\"4\">\r\n                    <DepresionResults />\r\n                </TabPane>\r\n                <TabPane tab=\"Dolor\" key=\"5\">\r\n                    <DolorCreateLink />\r\n                </TabPane>\r\n                <TabPane tab=\"Resultados Dolor\" key=\"6\">\r\n                    <DolorResults />\r\n                </TabPane>\r\n            </Tabs>\r\n        </div>\r\n\r\n    )\r\n}\r\n","import { Space, Table, Tag } from 'antd';\r\nimport React from 'react';\r\nconst columns = [\r\n    {\r\n        title: 'Paciente',\r\n        dataIndex: 'Paciente',\r\n        key: 'Paciente',\r\n        render: (text) => <a>{text}</a>,\r\n    },\r\n    {\r\n        title: 'Pago',\r\n        dataIndex: 'Pago',\r\n        key: 'Pago',\r\n    },\r\n    {\r\n        title: 'Forma de pago',\r\n        key: 'FormaDePago',\r\n        dataIndex: 'FormaDePago',\r\n        render: (_, { FormaDePago }) => (\r\n            <>\r\n                {FormaDePago.map((tag) => {\r\n                    let color = tag === 'efectivo' ? 'geekblue' : 'green';\r\n                    if (tag === 'loser') {\r\n                        color = 'volcano';\r\n                    }\r\n                    return (\r\n                        <Tag color={color} key={tag}>\r\n                            {tag.toUpperCase()}\r\n                        </Tag>\r\n                    );\r\n                })}\r\n            </>\r\n        ),\r\n    },\r\n    {\r\n        title: 'Estado',\r\n        key: 'Estado',\r\n        dataIndex: 'Estado',\r\n        render: (_, { Estado }) => (\r\n            <>\r\n                {Estado.map((tag) => {\r\n                    let color = tag === 'pagado' ? 'geekblue' : 'green';\r\n                    if (tag === 'sin pagar') {\r\n                        color = 'volcano';\r\n                    }\r\n                    return (\r\n                        <Tag color={color} key={tag}>\r\n                            {tag.toUpperCase()}\r\n                        </Tag>\r\n                    );\r\n                })}\r\n            </>\r\n        ),\r\n    },\r\n    {\r\n        title: 'Cita',\r\n        key: 'Cita',\r\n        render: (_, record) => (\r\n            <Space size=\"middle\">\r\n                {/* <a>Invite {record.name}</a> */}\r\n                <a href='#'>Ir a la cita</a>\r\n            </Space>\r\n        ),\r\n    },\r\n];\r\nconst data = [\r\n    {\r\n        key: '1',\r\n        Paciente: 'Jorge Suarez',\r\n        Pago: 32,\r\n        FormaDePago: ['efectivo'],\r\n        Estado: ['pagado'],\r\n    },\r\n    {\r\n        key: '2',\r\n        Paciente: 'Jorge Suarez',\r\n        Pago: 42,\r\n        FormaDePago: ['tarjeta'],\r\n        Estado: ['por liberar'],\r\n    },\r\n    {\r\n        key: '3',\r\n        Paciente: 'Ignacio Lopez',\r\n        Pago: 32,\r\n        FormaDePago: ['efectivo'],\r\n        Estado: ['pagado'],\r\n    },\r\n    {\r\n        key: '4',\r\n        Paciente: 'Jorge Suarez',\r\n        Pago: 32,\r\n        FormaDePago: ['tarjeta'],\r\n        Estado: ['sin pagar'],\r\n    },\r\n];\r\nexport default function Balances() {\r\n    return (\r\n        <div className='mainContainer'>\r\n            <Table columns={columns} dataSource={data} />\r\n            <div style={{ height: 200 }}></div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Button } from 'antd'\r\nimport { Container, Nav, Navbar } from \"react-bootstrap\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport Patients from './pacientesDash/main.patients'\r\nimport { Citas } from './citas'\r\nimport Expedientes from './expedientes/expedientes'\r\n// import Recetas from './recetas'\r\nimport Perfil from './perfil'\r\nimport { DoctorNotas } from './doctorNotas'\r\nimport Home from './home/home'\r\nimport icon from '../assets/Icon.png';\r\nimport { Footer, logout } from '../resources'\r\nimport { usuario } from '../resources'\r\nimport { Historial } from './historial';\r\nimport MainPacientes from './pacientes/main.pacientes';\r\nimport Escalas from '../escalas/escalasMenu';\r\nimport Balances from './balances';\r\n\r\nfunction Navigator() {\r\n  console.log(\"DoctorApp\", usuario.name)\r\n  return <Navbar bg=\"light\" expand=\"lg\">\r\n    <Container>\r\n      <Navbar.Brand href=\"#home\" style={{ fontFamily: 'Arial', color: '#515a6e' }}>\r\n        <img\r\n          src={icon}\r\n          width=\"40\"\r\n          height=\"35\"\r\n          className=\"d-inline-block align-top\"\r\n          alt=\"Recreamed logo\"\r\n          style={{ marginRight: 6 }}\r\n        />\r\n        Bienvenido {usuario.name}\r\n      </Navbar.Brand>\r\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n      <Navbar.Collapse id=\"basic-navbar-nav\">\r\n        <Nav className=\"me-auto\">\r\n          <Nav.Link href=\"/\">Inicio</Nav.Link>\r\n          {/* <Nav.Link href=\"/pacientesdash\">PacientesDash</Nav.Link> */}\r\n          <Nav.Link href=\"/pacientes\" >Pacientes</Nav.Link>\r\n          <Nav.Link href=\"/citas\">Citas</Nav.Link>\r\n          <Nav.Link href=\"/escalas\">Escalas</Nav.Link>\r\n          <Nav.Link href=\"/balances\">Ingresos</Nav.Link>\r\n          {/* <Nav.Link href=\"/expedientes\">Expedientes</Nav.Link> */}\r\n          {/* <Nav.Link href=\"/recetas\">Recetas</Nav.Link> */}\r\n          {/* <Nav.Link href=\"/notas\">Notas</Nav.Link> */}\r\n          {/* <Nav.Link href=\"/historial\">Historiales</Nav.Link> */}\r\n          <Nav.Link href=\"/perfil\">Mi Perfil</Nav.Link>\r\n        </Nav>\r\n      </Navbar.Collapse>\r\n      <Navbar.Collapse className=\"justify-content-end\">\r\n        <Button onClick={logout} >Cerrar Sesion</Button>\r\n      </Navbar.Collapse>\r\n    </Container>\r\n  </Navbar>\r\n\r\n}\r\n\r\nexport default function DoctorApp() {\r\n\r\n  return (\r\n    <Router>\r\n\r\n      <Navigator />\r\n\r\n      <Switch>\r\n\r\n        <Route path=\"/pacientesdash\">\r\n          <Patients />\r\n        </Route>\r\n\r\n        <Route path=\"/pacientes\">\r\n          <MainPacientes />\r\n        </Route>\r\n\r\n        <Route path=\"/citas\">\r\n          <Citas />\r\n        </Route>\r\n\r\n        <Route path=\"/expedientes\">\r\n          <Expedientes />\r\n        </Route>\r\n\r\n        {/* <Route path=\"/Recetas\">\r\n          <Recetas />\r\n        </Route> */}\r\n\r\n        <Route path=\"/perfil\">\r\n          <Perfil />\r\n        </Route>\r\n\r\n        <Route path=\"/notas\">\r\n          <DoctorNotas />\r\n        </Route>\r\n\r\n        <Route path=\"/historial\">\r\n          <Historial />\r\n        </Route>\r\n      \r\n        <Route path=\"/balances\">\r\n          <Balances/>\r\n        </Route>\r\n\r\n        <Route path=\"/escalas\">\r\n          {/* This is taken from escalas directory*/}\r\n          <Escalas />\r\n        </Route>\r\n\r\n        <Route path=\"/\">\r\n          <Home />\r\n        </Route>\r\n\r\n      </Switch>\r\n\r\n      <Footer />\r\n    </Router>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Form, Input, Button, message } from 'antd'\r\nimport { InputNumber, Select } from 'antd';\r\nimport { S_API } from '../../resources'\r\nimport { usuario } from '../../resources'\r\n\r\nconst { Option } = Select;\r\nconst estados = [\"Michoacan\", \"Morelos\", \"Guerrero\"];\r\n\r\nexport default function Register() {\r\n\r\n  const [form] = Form.useForm();\r\n\r\n  const onFinish = (values) => {\r\n    values.avatar = 'https://';\r\n    values.estatus = '1';\r\n    values.rol = 'Paciente';\r\n    values.password = values.telefono;\r\n    values.universidad = '';\r\n    values.certificacion = '';\r\n    values.cedula = '';\r\n    values.horarios = [];\r\n    values.medicos_asignados = [usuario._id];\r\n\r\n    delete values.prefix;\r\n\r\n    console.log(values)\r\n    fetch(S_API + 'register', {\r\n      method: 'POST',\r\n      body: JSON.stringify(values),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).then(res => res.json())\r\n      .then(response => { console.log('Success:', response); message.success(response.message || response.error); })\r\n      .catch(error => console.error('Error:', error))\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log('Failed:', errorInfo);\r\n  };\r\n\r\n  const prefixSelector = (\r\n    <Form.Item name=\"prefix\" noStyle>\r\n      <Select\r\n        style={{\r\n          width: 70,\r\n        }}\r\n      >\r\n        <Option value=\"+52\">+52</Option>\r\n      </Select>\r\n    </Form.Item>\r\n  );\r\n  const suffixSelector = (\r\n    <Form.Item name=\"suffix\" noStyle>\r\n      <Select\r\n        style={{\r\n          width: 70,\r\n        }}\r\n      >\r\n        <Option value=\"USD\">$</Option>\r\n        <Option value=\"CNY\">¥</Option>\r\n      </Select>\r\n    </Form.Item>\r\n  );\r\n  return (\r\n    <div>\r\n      <h4>Registrar Paciente</h4>\r\n      <br />\r\n      <Form\r\n        // {...formItemLayout}\r\n        labelCol={{ span: 6 }} wrapperCol={{ span: 16 }}\r\n        form={form}\r\n        name=\"register\"\r\n        onFinish={onFinish}\r\n        initialValues={{\r\n          residence: ['zhejiang', 'hangzhou', 'xihu'],\r\n          prefix: '52',\r\n        }}\r\n        scrollToFirstError\r\n      >\r\n        <Form.Item\r\n          name=\"email\"\r\n          label=\"Correo\"\r\n          rules={[\r\n            {\r\n              type: 'email',\r\n              message: 'The input is not valid E-mail!',\r\n            },\r\n            {\r\n              required: true,\r\n              message: 'Please input your E-mail!',\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        {/* <Form.Item name=\"password\" label=\"Contraseña\" rules={[{ required: true, message: 'Por favor ingrese su contraseña!', },]} hasFeedback >\r\n          <Input.Password />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"confirm\"\r\n          label=\"Confirmar contraseña\"\r\n          dependencies={['password']}\r\n          hasFeedback\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Please confirm your password!',\r\n            },\r\n            ({ getFieldValue }) => ({\r\n              validator(_, value) {\r\n                if (!value || getFieldValue('password') === value) {\r\n                  return Promise.resolve();\r\n                }\r\n                return Promise.reject(new Error('Las contraseñas deben coincidir!'));\r\n              },\r\n            }),\r\n          ]}\r\n        >\r\n          <Input.Password />\r\n        </Form.Item> */}\r\n\r\n        <Form.Item\r\n          name=\"telefono\"\r\n          label=\"Telefono\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Please input your phone number!',\r\n            },\r\n          ]}\r\n        >\r\n          <Input\r\n            addonBefore={prefixSelector}\r\n            style={{\r\n              width: '100%',\r\n            }}\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"name\"\r\n          label=\"Nombre\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Ingresa Nombre y apellidos',\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n\r\n\r\n        <Form.Item\r\n          name=\"calle\"\r\n          label=\"Calle\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Ingresa calle',\r\n              whitespace: true,\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"numexterior\"\r\n          label=\"Num Exterior\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Ingresa numero exterior',\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"numinterior\"\r\n          label=\"Num Interior\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Ingresa numinterior',\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"Colonia\"\r\n          name=\"colonia\"\r\n          rules={[{ required: true, message: 'Please input your colobnia!' }]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item name=\"estado\" label=\"Estado\" rules={[{ required: true, message: 'Apellido materno', },]}>\r\n          <Select placeholder=\"Elije tu estado\">\r\n            {estados.map(e => <Option value={e}>{e}</Option>)}\r\n          </Select>\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"municipio\"\r\n          label=\"Municipio\"\r\n          rules={[{ required: true, message: 'Ingresa tu municipio' }]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item name=\"codigopostal\" label=\"Codigo Postal\" rules={[{ required: true, message: 'Ingresa codigopostal', },]}>\r\n          <InputNumber addonAfter={suffixSelector} style={{ width: '100%', }} />\r\n        </Form.Item>\r\n        {/* <Form.Item\r\n          name=\"certificacion\"\r\n          label=\"Certificacion\"\r\n          rules={[{ required: true, message: 'Ingresa tu certificacion' }]}\r\n        >\r\n          <Input />\r\n        </Form.Item> */}\r\n        {/* <Form.Item\r\n          name=\"universidad\"\r\n          label=\"Universidad\" rules={[{ required: true, message: 'Ingresa tu universidad' }]} >\r\n          <Input />\r\n        </Form.Item> */}\r\n\r\n        <Form.Item >\r\n          <Button type=\"primary\" htmlType=\"submit\">\r\n            Registrar\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </div>\r\n  )\r\n}\r\n","import React, { Component, useState, useEffect } from 'react'\r\nimport { Table } from 'antd'\r\nimport { API } from '../../resources'\r\nimport Loading from '../../loading'\r\nimport { usuario } from '../../resources'\r\n\r\n\r\nexport default function Dash() {\r\n\r\n  const [pacientesData, setPacientesData] = useState([])\r\n  const [isLoading, setIsLoading] = useState(true)\r\n  const [view, setview] = useState('tabla')\r\n  const views = {\r\n    'tabla': 'tabla'\r\n  }\r\n\r\n  useEffect(() => {\r\n    getPacientesData()\r\n  }, [])\r\n\r\n  const getPacientesData = () => {\r\n    fetch(API + `mispacientes/${usuario._id}`)\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        console.log(data); setPacientesData(data);\r\n      })\r\n      .finally(() => setIsLoading(false))\r\n  }\r\n\r\n  const columns = [\r\n    {\r\n      title: 'Nombre',\r\n      dataIndex: 'name',\r\n      key: 'name',\r\n      render: (text)=><a href=\"detalles\">{text}</a>\r\n    },\r\n    // {\r\n    //   title: 'Edad',\r\n    //   dataIndex: 'age',\r\n    //   key: 'age',\r\n    // },\r\n    {\r\n      title: 'Medico',\r\n      dataIndex: 'id_medicoasignado',\r\n      key: 'id_medicoasignado',\r\n    },\r\n    {\r\n      title: 'Municipio',\r\n      dataIndex: 'municipio',\r\n      key: 'municipio',\r\n    },\r\n    {\r\n      title: 'Calle',\r\n      dataIndex: 'calle',\r\n      key: 'calle',\r\n    },\r\n    {\r\n      title: 'N Exterior',\r\n      dataIndex: 'numexterior',\r\n      key: 'numexterior',\r\n    },\r\n    {\r\n      title: 'Telefono',\r\n      dataIndex: 'telefono',\r\n      key: 'telefono',\r\n    },\r\n\r\n  ];\r\n\r\n  const tablaPacientes = () => {\r\n\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h4>Pacientes</h4>\r\n      {\r\n        isLoading ? <Loading /> :\r\n          <Table dataSource={pacientesData} columns={columns} />\r\n      }\r\n      \r\n    </div>\r\n  )\r\n\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Button, Form, Input, Select, message } from 'antd';\r\nimport { API } from '../../resources';\r\nimport { usuario } from '../../resources';\r\nconst { Option } = Select;\r\n\r\n\r\nexport default function MovePatients() {\r\n    const [pacientesData, setPacientesData] = useState([]);\r\n    const [medicosData, setMedicosData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        getPacientesData()\r\n        getMedicosData()\r\n    }, [])\r\n\r\n    const getPacientesData = () => {\r\n        fetch(API + `mispacientes/${usuario._id}`)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log(\"Pacientes: \", data);\r\n                setPacientesData(data);\r\n                // setILoading(false);\r\n            });\r\n    }\r\n\r\n    const getMedicosData = () => {\r\n        fetch(API + `users_by_rol/Medico`)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log(data);\r\n                setMedicosData(data);\r\n                // setILoading(false);\r\n            });\r\n    }\r\n\r\n    const onFinish = (values) => {\r\n        // console.log('Valores:', values);\r\n        const userFound = pacientesData.find(p => p._id === values.id_usuario);\r\n        let userMedicos = userFound.medicos_asignados;\r\n        userMedicos.push(values.medico);\r\n        const postBody = { medicos_asignados: userMedicos }\r\n        fetch(API + `users/updateMedicos/${values.id_usuario}`, { \r\n            method: 'PUT',\r\n            body: JSON.stringify(postBody),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }).then(res => res.json())\r\n            .then(response => { console.log('Success:', response); message.success(response.message || response.error); })\r\n            .catch(error => console.error('Error:', error))\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n\r\n\r\n    //Select paciente widget\r\n    function onChange(value) {\r\n        console.log(`selected ${value}`);\r\n    }\r\n    function onSearch(val) {\r\n        console.log('search:', val);\r\n    }\r\n    //End of select paciente widget\r\n    return (\r\n        <div>\r\n            <h4> Asignar pacientes a otro médico </h4>\r\n            <br />\r\n            <Form name=\"expediente\" labelCol={{ span: 8 }} wrapperCol={{ span: 12 }} onFinish={onFinish} onFinishFailed={onFinishFailed} autoComplete=\"off\" >\r\n\r\n                <Form.Item label=\"Paciente\" name=\"id_usuario\" rules={[{ required: true, message: 'Selecciona Usuario' }]} >\r\n                    <Select\r\n                        showSearch\r\n                        placeholder=\"Select a person\"\r\n                        optionFilterProp=\"children\"\r\n                        onChange={onChange}\r\n                        onSearch={onSearch}\r\n                    >\r\n                        {\r\n                            pacientesData.map(p => <Option value={p._id}>{p.name}</Option>)\r\n                        }\r\n                    </Select>\r\n                </Form.Item>\r\n                <Form.Item label=\"Medico\" name=\"medico\" rules={[{ required: true, message: 'Ingresa RFC' }]} >\r\n                    <Select\r\n                        showSearch\r\n                        placeholder=\"Select a person\"\r\n                        optionFilterProp=\"children\"\r\n                        onChange={onChange}\r\n                        onSearch={onSearch}\r\n                    >\r\n                        {\r\n                            medicosData.map(p => <Option value={p._id}>{p.name}</Option>)\r\n                        }\r\n                    </Select>\r\n                </Form.Item>\r\n\r\n                <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\r\n                    <Button type=\"primary\" htmlType=\"submit\" form='expediente'>\r\n                        Guardar\r\n                    </Button>\r\n                </Form.Item>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function DetallesPaciente() {\r\n  return (\r\n    <div>DetallesPaciente</div>\r\n  )\r\n}\r\n","import { React, Component } from 'react';\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\nimport { Layout, Menu } from 'antd';\r\nimport { UserOutlined, UserAddOutlined, MenuOutlined, SwapOutlined } from '@ant-design/icons';\r\n\r\nimport Register from './register.patient';\r\nimport Dash from './dash.patients';\r\nimport MovePatients from './move.patients';\r\nimport DetallesPaciente from './detalles.paciente';\r\n\r\nconst { Header, Content, Footer, Sider } = Layout;\r\n\r\nclass SideMenu extends Component {\r\n  handleClick = e => {\r\n    console.log('click ', e);\r\n  };\r\n\r\n  state = {\r\n    collapsed: false,\r\n  };\r\n\r\n  onCollapse = (collapsed) => {\r\n    this.setState({ collapsed });\r\n  }\r\n  toggle = () => {\r\n    this.setState({\r\n      collapsed: !this.state.collapsed,\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <Layout style={{ minHeight: '100vh' }}>\r\n          <Sider\r\n            theme=\"light\"\r\n            collapsible\r\n            collapsed={this.state.collapsed}\r\n            onCollapse={this.onCollapse}>\r\n            <div className=\"logo\" />\r\n            <Menu defaultSelectedKeys={['1']} mode=\"inline\">\r\n              <Menu.Item icon={ <UserOutlined /> } key=\"1\">\r\n                <span>Pacientes</span>\r\n                <Link to=\"/pacientes\" />\r\n              </Menu.Item>\r\n              <Menu.Item icon={ <UserAddOutlined /> } key=\"2\">\r\n                <span>Registrar Paciente</span>\r\n                <Link to=\"/registrar\" />\r\n              </Menu.Item>\r\n              <Menu.Item icon={ <SwapOutlined />} key=\"3\">\r\n                <span>Re-asignar Paciente</span>\r\n                <Link to=\"/mover\" />\r\n              </Menu.Item>\r\n              <Menu.Item icon={ <SwapOutlined />} key=\"4\">\r\n                <span>Detalles</span>\r\n                <Link to=\"/detalles\" />\r\n              </Menu.Item>\r\n            </Menu>\r\n          </Sider>\r\n          <Layout>\r\n\r\n            <Header style={{ background: '#fff', padding: 0, paddingLeft: 16 }}>\r\n              <MenuOutlined className=\"trigger\" style={{ cursor: 'pointer' }} onClick={this.toggle} />\r\n            </Header>\r\n\r\n            <Content style={{ margin: '24px 16px', padding: 24, background: '#fff', minHeight: 280 }}>\r\n              <Route exact path=\"/registrar\" component={Register} />\r\n              <Route path=\"/pacientes\" component={Dash} />\r\n              <Route path=\"/detalles\" component={DetallesPaciente} />\r\n              <Route path=\"/mover\" component={MovePatients} />\r\n            </Content>\r\n\r\n            <Footer style={{ textAlign: 'center' }}>\r\n              RECREAMED ©2021 Created by Realidad Creativa\r\n            </Footer>\r\n          </Layout>\r\n\r\n        </Layout>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SideMenu\r\n\r\n\r\n","import React, { Component } from 'react'\r\n// import {Card } from 'antd'\r\nimport SideMenu from './side.patients';\r\n\r\nexport class Patients extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div>\r\n                            <SideMenu />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Patients\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Row, Col, Button, Modal, Form, Input, DatePicker, message, Popconfirm } from 'antd';\r\nimport { Calendar, Badge, Switch, Space } from 'antd';\r\nimport { deleteData, getData, sendDataBody } from '../resources';\r\nimport { usuario } from '../resources';\r\nimport { Select } from 'antd';\r\nimport { VideoCameraOutlined, NotificationOutlined, CalendarOutlined, UserOutlined, BankOutlined, ClockCircleOutlined } from '@ant-design/icons';\r\nimport moment from \"moment\";\r\n\r\nconst { Option } = Select;\r\n\r\nconst format = 'HH:mm';\r\n\r\nexport function Citas() {\r\n    const [isModalVisible, setIsModalVisible] = useState(false);\r\n    const [citasData, setCitasData] = useState([])\r\n    const [citasLoading, setCitasLoading] = useState(true)\r\n    const [cita, setCita] = useState({})\r\n    const [isDetailVisible, setIsDetailVisible] = useState(false);\r\n    const [misPacientes, setMisPacientes] = useState([])\r\n    const [isOnline, setIsOnline] = useState(false)\r\n\r\n    useEffect(() => {\r\n        console.log('Yo : ', usuario);\r\n        getData(`mispacientes/${usuario._id}`).then(rs => { setMisPacientes(rs) })\r\n        getCitasData()\r\n    }, [])\r\n\r\n    const getCitasData = () => {\r\n        getData(`citas/medico/${usuario._id}`).then(rs => { console.log('GetCitas: ', rs); setCitasData(rs); setCitasLoading(false) })\r\n    }\r\n\r\n\r\n    // Add Modal\r\n    const showModal = () => { setIsModalVisible(true) };\r\n    const handleOk = () => { setIsModalVisible(false); };\r\n    const handleCancel = () => { setIsModalVisible(false); };\r\n    // Details Modal\r\n    const handleDetailOk = () => { setIsDetailVisible(false); };\r\n    const handleDetailCancel = () => { setIsDetailVisible(false); };\r\n\r\n    const onFinish = (values) => {\r\n        values.medico = usuario._id;\r\n        values.sucursal = usuario.horarios[0].sucursal;\r\n\r\n        console.log('ready to send: ', values);\r\n        sendDataBody('citas/add', values).then((response) => {\r\n            console.log('Success:', response); message.success(response.message || response.error);\r\n            getCitasData(); setIsModalVisible(false)\r\n        })\r\n\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    // DatePicker\r\n    function onChange(value, dateString) {\r\n        console.log('Selected Time: ', value);\r\n        console.log('Formatted Selected Time: ', dateString);\r\n\r\n    }\r\n    function onOk(value) {\r\n        console.log('onOk: ', value);\r\n    }\r\n\r\n    //Calendar Functions\r\n    const getMonthData = (value) => {\r\n        if (value.month() === 8) {\r\n            return 1394;\r\n        }\r\n    };\r\n    const monthCellRender = (value) => {\r\n        const num = getMonthData(value);\r\n        return num ? (\r\n            <div className=\"notes-month\">\r\n                <section>{num}</section>\r\n                <span>Backlog number</span>\r\n            </div>\r\n        ) : null;\r\n    };\r\n\r\n    const dateCellRender = (value) => {\r\n        // const hoy = value.format('L');\r\n        let hoy = value.format();\r\n        hoy = hoy.substring(0, 10)\r\n        return (\r\n            <ul className=\"events\">\r\n                {citasData.map((cita) => {\r\n                    cita.fecha_cita = cita.fecha_hora.substring(0, 10);\r\n                    cita.hora_cita = cita.fecha_hora.substring(11, 16);\r\n                    return cita.fecha_cita === hoy ?\r\n                        <li style={{ listStyleType: 'none' }} key={cita._id}>\r\n                            <Badge status='success' text={cita.usuario.name} onClick={() => { setCita(cita); setIsDetailVisible(true); }} />\r\n                        </li>\r\n                        : <></>\r\n\r\n                })\r\n                }\r\n            </ul >\r\n        );\r\n    };\r\n    // Select \r\n    const handleChange = (value) => {\r\n        // console.log(`selected ${value}`);\r\n    };\r\n    // Switch For online or Presencial\r\n    const onSwitch = (checked) => {\r\n        console.log(`switch to ${checked}`);\r\n        setIsOnline(checked)\r\n    };\r\n    // Confirmar Borrar\r\n    const confirm = (e) => { deleteData('citas/remove/' + cita._id).then((rs) => { setIsDetailVisible(false); getCitasData() }) }\r\n    const cancel = (e) => { console.log(e); };\r\n    // End of Confirmar Borrar\r\n\r\n    return (\r\n        <div className='mainContainer'>\r\n            <Row>\r\n                <h4 style={{ marginRight: 20 }}>CALENDARIO DE CITAS</h4>\r\n                <Button type=\"primary\" onClick={showModal}>\r\n                    Nueva Cita\r\n                </Button>\r\n            </Row>\r\n\r\n            {/* {isLoading ? <Loading /> : <Table columns={columns} dataSource={citasData} />} */}\r\n\r\n            <Calendar dateCellRender={dateCellRender} monthCellRender={monthCellRender} />\r\n\r\n            <Modal title=\"Nueva Cita\" visible={isModalVisible} onOk={handleOk} onCancel={handleCancel} destroyOnClose\r\n                footer={[\r\n                    <Button onClick={handleCancel}>Cancelar</Button>,\r\n                    <Button type=\"primary\" htmlType=\"submit\" form='nueva_cita_medic'>\r\n                        Guardar\r\n                    </Button>\r\n                ]}\r\n            >\r\n                <Form name=\"nueva_cita_medic\" labelCol={{ span: 8 }} wrapperCol={{ span: 12 }} onFinish={onFinish} onFinishFailed={onFinishFailed} autoComplete=\"off\"\r\n                    initialValues={{ isOnline: false }}>\r\n\r\n                    <Form.Item label=\"Paciente\" name=\"usuario\" rules={[{ required: true, message: 'Selecciona Usuario' }]} >\r\n                        <Select\r\n                            onChange={handleChange}\r\n                        >\r\n                            {\r\n                                misPacientes.map((p) => {\r\n                                    return <Option value={p._id}>{p.name}</Option>\r\n                                })\r\n                            }\r\n                        </Select>\r\n                    </Form.Item>\r\n\r\n\r\n                    <Form.Item label=\"Fecha y Hora\" name=\"fecha_hora\" rules={[{ required: true, message: 'Selecciona Fecha y Hora' }]} >\r\n                        <DatePicker onChange={onChange} onOk={onOk} placeholder='Selecciona Fecha y Hora'\r\n                            format=\"YYYY-MM-DD HH:mm:ss\"\r\n                            showTime={{\r\n                                defaultValue: moment(\"00:00:00\", \"HH:mm:ss\"),\r\n                                format: \"HH:mm\"\r\n                            }} />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item label=\"VideoLlada\" name=\"isOnline\" >\r\n                        <Switch onChange={onSwitch} />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item label=\"Comentarios\" name=\"comentarios\" rules={[{ required: false, message: 'Ingresa RFC' }]} >\r\n                        <Input />\r\n                    </Form.Item>\r\n\r\n\r\n                </Form>\r\n            </Modal>\r\n\r\n            <Modal title=\"Detalles de la cita\" visible={isDetailVisible} onOk={handleDetailOk} onCancel={handleDetailCancel} destroyOnClose\r\n                footer={[\r\n                    <Popconfirm\r\n                        title=\"Esta seguro de que quiere borrar esta cita?\"\r\n                        onConfirm={confirm}\r\n                        onCancel={cancel}\r\n                        okText=\"Si\"\r\n                        cancelText=\"No\"\r\n                    >\r\n                        <Button danger>Borrar Cita</Button>\r\n                    </Popconfirm>,\r\n                    <Button type='primary' onClick={handleDetailOk}>Aceptar</Button>\r\n                ]}\r\n            >\r\n                {\r\n                    cita ?\r\n                        <Space direction='vertical'>\r\n\r\n                            <Space align='center'> <UserOutlined /> {cita.usuario?.name}</Space>\r\n                            <Space align='center'> <CalendarOutlined /> {cita.fecha_cita} <ClockCircleOutlined style={{ marginBottom: 6 }}/> {cita.hora_cita}</Space>\r\n                            <Space align='baseline'> <BankOutlined /> {cita.sucursal?.nombre}</Space>\r\n                            <Space align='baseline'> <NotificationOutlined /> {cita.comentarios}</Space>\r\n                            {cita.id_reunion && <Space align='center'> <VideoCameraOutlined style={{ marginBottom: 6 }} /> ID reunion: {cita.id_reunion.substring(26, 37)} </Space>}\r\n                            {cita.id_reunion && <Space align='center'> <VideoCameraOutlined style={{ marginBottom: 6 }} /> Contraseña : {cita.password_reunion} </Space>}\r\n                            {cita.id_reunion && <Space align='center'> <VideoCameraOutlined style={{ marginBottom: 6, color: '#1890ff' }} /> <a href={cita.id_reunion} target='_blank' rel='noreferrer'> Ir a la cita </a> </Space>}\r\n\r\n                        </Space>\r\n                        :\r\n                        <p>Sin cita seleccionada</p>\r\n                }\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { API, getDataWithTrigger } from '../../resources';\r\nimport { getData } from '../../resources';\r\nimport { Button, Modal, Form, Input, Select, message } from 'antd';\r\nconst { Option } = Select;\r\n\r\nexport default function CreateExpedient(props) {\r\n    //PacientesData ya viene en props\r\n    const [historiasData, sethistoriasData] = useState([])\r\n    const [historiasLoading, sethistoriasLoading] = useState(true)\r\n    const [notasData, setNotasData] = useState([])\r\n    const [notasLoading, setNotasLoading] = useState(true)\r\n    const [recetasData, setRecetasData] = useState([])\r\n    const [recetasLoading, setRecetasLoading] = useState(true)\r\n\r\n    useEffect(() => {\r\n        getData('historias').then(rs => {sethistoriasData(rs); sethistoriasLoading(false)});\r\n        getData('notas').then(rs => {setNotasData(rs); setNotasLoading(false)});\r\n        getData('recetas').then(rs => {setRecetasData(rs); setRecetasLoading(false)});\r\n    }, [])\r\n\r\n\r\n    //Save expedient\r\n    const onFinish = (values) => {\r\n        console.log('Valores:', values);\r\n        fetch(API + 'expedientes/add', {\r\n            method: 'POST',\r\n            body: JSON.stringify(values),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }).then(res => res.json())\r\n            .then(response => { console.log('Success:', response); message.success(response.message || response.error); })\r\n            .catch(error => console.error('Error:', error))\r\n        // getExpedientesData() \r\n    };\r\n    const handleOk = () => {\r\n\r\n    };\r\n\r\n    const handleCancel = () => {\r\n        props.setIsModalVisible(false);\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n    return (\r\n        <Modal title=\"Nuevo expediente\" visible={props.isModalVisible} onCancel={handleCancel}\r\n        footer={[\r\n            \r\n        ]}\r\n        >\r\n            <Form name=\"expediente\" labelCol={{ span: 6 }} wrapperCol={{ span: 12 }} onFinish={onFinish} onFinishFailed={onFinishFailed} autoComplete=\"off\" >\r\n                <Form.Item label=\"Paciente\" name=\"usuario\" rules={[{ required: true, message: 'Ingresa RFC' }]} >\r\n                    <Select\r\n                        defaultValue={props.pacientesData[0] && props.pacientesData[0]._id}\r\n                        placeholder='Selecciona un paciente'\r\n                        style={{ width: 200 }}\r\n                    // onChange={handleChange}\r\n                    >\r\n                        {\r\n                            props.pacientesData.map(p => <Option value={p._id}>{p.name}</Option>)\r\n                        }\r\n\r\n                    </Select>\r\n                </Form.Item>\r\n                <Form.Item label=\"Historia Clinica\" name=\"historia\" rules={[{ required: true, message: 'Ingresa RFC' }]} >\r\n                    {\r\n                        historiasLoading ? <Input /> :\r\n                            <Select\r\n                                placeholder='Selecciona una Historia'\r\n                                style={{ width: 200 }}\r\n                            // onChange={handleChange}\r\n                            >\r\n                                {\r\n                                   historiasData.map(h => <Option key={h._id} value={h._id}>{h.historial}</Option>)\r\n                                }\r\n\r\n                            </Select>\r\n                    }\r\n\r\n                </Form.Item>\r\n                <Form.Item label=\"Notas Medicas\" name=\"nota\" rules={[{ required: true, message: 'Ingresa RFC' }]} >\r\n                {\r\n                        notasLoading ? <Input /> :\r\n                            <Select\r\n                                placeholder='Selecciona una Nota'\r\n                                style={{ width: 200 }}\r\n                            // onChange={handleChange}\r\n                            >\r\n                                {\r\n                                   notasData.map(n => <Option key={n._id} value={n._id}>{n.createdAt}</Option>)\r\n                                }\r\n\r\n                            </Select>\r\n                    }\r\n                </Form.Item>\r\n                <Form.Item label=\"Receta\" name=\"receta\" rules={[{ required: true, message: 'Ingresa RFC' }]} >\r\n                {\r\n                        recetasLoading ? <Input /> :\r\n                            <Select\r\n                                placeholder='Selecciona una Receta'\r\n                                style={{ width: 200 }}\r\n                            // onChange={handleChange}\r\n                            >\r\n                                {\r\n                                   recetasData.map(r => <Option key={r._id} value={r._id}>{r.prescripcion}</Option>)\r\n                                }\r\n\r\n                            </Select>\r\n                    }\r\n                </Form.Item>\r\n\r\n                <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\r\n                    <Button type=\"primary\" htmlType=\"submit\" form='expediente'>\r\n                        Guardar\r\n                    </Button>\r\n                </Form.Item>\r\n               \r\n                <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\r\n                    <Button type=\"primary\" htmlType=\"submit\" form='expediente'>\r\n                        Cancelar\r\n                    </Button>\r\n                </Form.Item>\r\n            </Form>\r\n        </Modal>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Form, Input, Button, message, Select, Upload, Space } from 'antd';\r\nimport { API, usuario } from '../../resources';\r\nimport { MinusCircleOutlined, PlusOutlined, UploadOutlined, InboxOutlined } from '@ant-design/icons';\r\nimport { diagnosticos } from '../../assets/diagnosticos2';\r\nconst { Option, OptGroup } = Select;\r\nconst { Dragger } = Upload;\r\nconst { TextArea } = Input;\r\n\r\nconst handleChange = (value) => {\r\n    // Select diagnostic\r\n    console.log(`selected ${value}`);\r\n};\r\n\r\nconst onFinishFailed = (errorInfo) => {\r\n    console.log('Failed:', errorInfo);\r\n};\r\n\r\n\r\n//List of Estudios styles\r\nconst formItemLayout = {\r\n    labelCol: {\r\n        xs: {\r\n            span: 24,\r\n        },\r\n        sm: {\r\n            span: 4,\r\n        },\r\n    },\r\n    wrapperCol: {\r\n        xs: {\r\n            span: 24,\r\n        },\r\n        sm: {\r\n            span: 20,\r\n        },\r\n    },\r\n};\r\nconst formItemLayoutWithOutLabel = {\r\n    wrapperCol: {\r\n        xs: {\r\n            span: 24,\r\n            offset: 0,\r\n        },\r\n        sm: {\r\n            span: 20,\r\n            offset: 4,\r\n        },\r\n    },\r\n};\r\n\r\n\r\n\r\nexport function NuevaNota(props) {\r\n    const [estudiosFiles, setEstudiosFiles] = useState([])\r\n\r\n    useEffect(() => {\r\n        console.log('Received nota on props: ', props.nota)\r\n    }, [])\r\n\r\n    // const [pacientesData, setPacientesData] = useState([]);\r\n    const onFinishTest = (values) => {\r\n        // Create Nota\r\n        values.id_medico = usuario._id;\r\n        values.id_usuario = props.paciente;\r\n        values.recetas = [];\r\n        values.estudios = estudiosFiles;\r\n\r\n        console.log('Estudios ready to send: ', values.estudios)\r\n        console.log('ready to send: ', values)\r\n    }\r\n    const onFinish = async (values) => {\r\n        // Create Nota\r\n        values.id_medico = usuario._id;\r\n        values.id_usuario = props.paciente;\r\n        values.recetas = [];\r\n        values.estudios = estudiosFiles;\r\n        console.log('ready To send: ', values)\r\n        const newNota = await fetch(API + 'notas/add', {\r\n            method: 'POST',\r\n            body: JSON.stringify(values),\r\n            headers: { 'Content-Type': 'application/json' }\r\n        }).then(res => res.json())\r\n            .then(response => {\r\n                message.success(response.message || response.error);\r\n                // response.message && response.message === ''\r\n                return response;\r\n            })\r\n            .catch(error => console.error('Error:', error))\r\n\r\n        // Add new nota to received notas\r\n        props.prevExpNotas.push(newNota.id_nota)\r\n        //Update nota at expedient\r\n        fetch(API + 'expedientes/updateNotas/' + props.id_expediente, {\r\n            method: 'PUT',\r\n            body: JSON.stringify({ \"notas\": props.prevExpNotas }),\r\n            headers: { 'Content-Type': 'application/json' }\r\n        }).then(res => res.json())\r\n            .then(response => {\r\n                console.log('Update Exp:', response);\r\n                message.success(response.message || response.error);\r\n            })\r\n            .catch(error => console.error('Error:', error))\r\n    };\r\n\r\n    const onFinishEdit = (values) => {\r\n        // Create Nota\r\n        console.log('ready To send: ', values)\r\n        fetch(API + 'notas/update/' + props.nota._id, {\r\n            method: 'PUT',\r\n            body: JSON.stringify(values),\r\n            headers: { 'Content-Type': 'application/json' }\r\n        }).then(res => res.json())\r\n            .then(response => {\r\n                message.success(response.message || response.error);\r\n                if (response.message && response.message === 'Nota Updated') props.setIsModalVisible(false)\r\n                console.log(response);\r\n            })\r\n            .catch(error => console.error('Error:', error))\r\n    };\r\n\r\n    // Upload File\r\n    const dragDropProps = {\r\n        name: 'file',\r\n        multiple: true,\r\n        action: API + 'notas/estudios/upload', // Production\r\n\r\n        onChange(info) {\r\n            const { status } = info.file;\r\n\r\n            if (status !== 'uploading') {\r\n                console.log(info.file, info.fileList);\r\n            }\r\n\r\n            if (status === 'done') {\r\n                message.success(`${info.file.name} file uploaded successfully.`);\r\n                console.log('New Files: ', info.file.response.file)\r\n                setEstudiosFiles([...estudiosFiles, info.file.response.file])\r\n            } else if (status === 'error') {\r\n                message.error(`${info.file.name} file upload failed.`);\r\n            }\r\n        },\r\n\r\n        onDrop(e) {\r\n            console.log('Dropped files', e.dataTransfer.files);\r\n        },\r\n    };\r\n\r\n\r\n    // Get value Of upload\r\n    const getFile = (e) => {\r\n        console.log('Upload event:', e);\r\n\r\n        if (Array.isArray(e)) {\r\n            return e;\r\n        }\r\n        return e && e.file.response.file;\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h4 style={{ marginLeft: 20 }}>Detalles de la nota</h4>\r\n            {/* <p>Expediente received: {props.id_expediente}</p>\r\n            <p>Paciente received: {props.paciente}</p>\r\n            <p>Medico received: {usuario._id}</p>\r\n            <p>prevExpNotas received: {props.prevExpNotas}</p>\r\n            *La nota lleva el id del medico, obtenido de la sesion */}\r\n            {/* <p>Diag [0].clasificacion {diagnosticos[0]['clasificacion']}</p> */}\r\n\r\n            <br />\r\n            <Dragger {...dragDropProps}>\r\n                <p className=\"ant-upload-drag-icon\">\r\n                    <InboxOutlined />\r\n                </p>\r\n                <p className=\"ant-upload-text\">Arrastra los archivos de estudio aquí, o da click para buscar</p>\r\n                <p className=\"ant-upload-hint\">\r\n                    Selecciona archivos en pdf o imagen que sean menores a 2 MB para poder subirlos\r\n                </p>\r\n            </Dragger>\r\n            <Form name=\"basic\" labelCol={{ span: 8 }} wrapperCol={{ span: 14 }} initialValues={props.nota ? props.nota : { remember: true, estudios: [] }} onFinish={props.nota ? onFinishEdit : onFinish} onFinishFailed={onFinishFailed} autoComplete=\"off\" style={{ marginTop: 12 }} >\r\n\r\n                <Form.Item label=\"Edad\" name=\"edad\" rules={[{ required: true, message: 'Ingresa RFC' }]} >\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item label=\"Talla\" name=\"talla\" rules={[{ required: false, message: 'Ingresa RFC' }]} >\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item label=\"Peso\" name=\"peso\" rules={[{ required: false, message: 'Ingresa RFC' }]} >\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item label=\"IMC\" name=\"imc\" rules={[{ required: false, message: 'Ingresa RFC' }]} >\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item label=\"Temperatura\" name=\"temperatura\" rules={[{ required: false, message: 'Ingresa RFC' }]} >\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item label=\"Presion Arterial\" name=\"presion_arterial\" rules={[{ required: false, message: 'Ingresa RFC' }]} >\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item label=\"Frecuencia Cariaca\" name=\"frecuencia_cardiaca\" rules={[{ required: false, message: 'Ingresa RFC' }]} >\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item label=\"Frecuencia respiratoria\" name=\"frecuencia_respiratoria\" rules={[{ required: false, message: 'Ingresa RFC' }]} >\r\n                    <Input />\r\n                </Form.Item>\r\n\r\n                {/* <Form.Item label=\"Estudios\" name=\"estudios\" rules={[{ required: true, message: 'Ingresa RFC' }]} >\r\n                    <Input />\r\n                </Form.Item> */}\r\n\r\n                {/* \r\n                <Form.List\r\n                    name=\"estudios\"\r\n                    rules={[\r\n                        {\r\n                            validator: async (_, names) => {\r\n                                if (!names || names.length < 1) {\r\n                                    return Promise.reject(new Error('Ingresa al menos un estudio'));\r\n                                }\r\n                            },\r\n                        },\r\n                    ]}\r\n                >\r\n                    {(fields, { add, remove }, { errors }) => (\r\n                        <>\r\n                            {fields.map((field, index) => (\r\n                                <Form.Item\r\n                                    {...(index === 0 ? formItemLayout : formItemLayoutWithOutLabel)}\r\n                                    label={index === 0 ? 'Estudio' : ''}\r\n                                    required={false}\r\n                                    key={field.key}\r\n                                    getValueFromEvent={getFile}\r\n                                >\r\n                                    <Form.Item\r\n                                        {...field}\r\n                                        validateTrigger={['onChange', 'onBlur']}\r\n                                        rules={[\r\n                                            {\r\n                                                required: true,\r\n                                                whitespace: true,\r\n                                                message: \"Ingresa estudios\",\r\n                                            },\r\n                                        ]}\r\n                                        noStyle\r\n                                    >\r\n                                        <Upload {...UploadProps}>\r\n                                            <Button icon={<UploadOutlined />}>Click to Upload</Button>\r\n                                        </Upload>\r\n                                    </Form.Item>\r\n                                    {fields.length > 1 ? (\r\n                                        <MinusCircleOutlined\r\n                                            className=\"dynamic-delete-button\"\r\n                                            onClick={() => remove(field.name)}\r\n                                        />\r\n                                    ) : null}\r\n                                </Form.Item>\r\n                            ))}\r\n                            <Form.Item>\r\n                                <Button\r\n                                    type=\"dashed\"\r\n                                    onClick={() => add()}\r\n                                    style={{\r\n                                        // width: '100%',\r\n                                        position: 'relative',\r\n                                        alignItems: 'center',\r\n                                        justifyContent: 'flex-end'\r\n                                    }}\r\n                                    icon={<PlusOutlined />}\r\n                                >\r\n                                    Agregar Estudios\r\n                                </Button>\r\n                                <Form.ErrorList errors={errors} />\r\n                            </Form.Item>\r\n                        </>\r\n                    )}\r\n                </Form.List>\r\n */}\r\n\r\n                <Form.Item label=\"Observaciones\" name=\"Observaciones\" rules={[{ required: true, message: 'Ingresa Observaciones' }]} >\r\n                    <TextArea rows={4} />\r\n                </Form.Item>\r\n\r\n                <Form.Item label=\"Diagnostico\" name=\"diagnostico\" rules={[{ required: true, message: 'Selecciona Diagnostico' }]} >\r\n                    <Select\r\n                        showSearch\r\n                        style={{ width: 400 }}\r\n                        onChange={handleChange}\r\n                    >\r\n                        {\r\n                            Object.keys(diagnosticos).map((k) => {\r\n                                return <OptGroup label={k}>\r\n                                    {Object.keys(diagnosticos[k]).map((sk) => {\r\n                                        return <Option value={sk}>{diagnosticos[k][sk]}</Option>\r\n                                    })}\r\n                                </OptGroup>\r\n\r\n                            })\r\n                        }\r\n                    </Select>\r\n                </Form.Item>\r\n\r\n                <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\r\n                    <Space>\r\n                        <Button onClick={() => props.setIsModalVisible(false)}>\r\n                            Cancelar\r\n                        </Button>\r\n                        <Button type=\"primary\" htmlType=\"submit\">\r\n                            Guardar\r\n                        </Button>\r\n                    </Space>\r\n\r\n                </Form.Item>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Page, Text, View, Document, StyleSheet, Image } from '@react-pdf/renderer';\r\nimport { PDFViewer } from '@react-pdf/renderer';\r\nimport William from '../../assets/logos/william_h.jpg'\r\nimport Logo from '../../assets/Logo.png'\r\nimport { usuario, IMAGE_API } from '../../resources';\r\n\r\nexport default function RecetaDocument(props) {\r\n    // Create styles\r\n    const styles = StyleSheet.create({\r\n        page: {\r\n            flexDirection: 'column',\r\n            backgroundColor: 'white'\r\n        },\r\n        block: {\r\n            flexDirection: 'row'\r\n        },\r\n        section: {\r\n            margin: 10,\r\n            padding: 10,\r\n            flexGrow: 1\r\n        },\r\n        image: {\r\n            // marginVertical: 15,\r\n            // marginHorizontal: 10,\r\n            width: 132\r\n        },\r\n        footText: {\r\n            fontSize: 14\r\n        }\r\n    });\r\n    // Create Document Component\r\n    function Receta() {\r\n        return <Document>\r\n            <Page size=\"A4\" style={styles.page}>\r\n\r\n                <View style={styles.block}>\r\n                    <View style={styles.section}>\r\n                        <Image style={styles.image} src={IMAGE_API + props.logoHospital} />\r\n                    </View>\r\n                    <View style={[styles.section, { alignItems: 'center' }]}>\r\n                        <Text style={styles.footText}>{usuario.name}</Text>\r\n                        <Text style={styles.footText}>Cédula Profesional: {usuario.cedula}</Text>\r\n                        <Text style={styles.footText}>Certificación: {usuario.certificacion}</Text>\r\n                        <Text style={styles.footText}>{usuario.universidad}</Text>\r\n                    </View>\r\n                </View>\r\n\r\n                <View style={{ margin: 35, flexGrow: 1 }}>\r\n                    <View style={styles.section}>\r\n                        <Text style={{ lineHeight: 2 }}>{props.receta.prescripcion}</Text>\r\n                        {/* <Text>Lorem ipsum dolor, sit amet consectetur adipisicing elit. Hic veniam totam praesentium sapiente, provident, quidem deleniti magni ea fuga laborum dignissimos saepe sed voluptatibus voluptates? Iste consequuntur qui ab facere.</Text> */}\r\n                    </View>\r\n                </View>\r\n\r\n                <View style={{ color: 'black', width: '90%', backgroundColor: 'black', borderBottomColor: '#9bb4df', borderBottomWidth: 1, marginHorizontal: 20 }}></View>\r\n                <View style={styles.block}>\r\n                    <View style={styles.section}>\r\n                        {/* <Text style={styles.footText}>José Rubén Romero #103, Bosque Camelinas</Text>\r\n                        <Text style={styles.footText}>Morelia, Mich. CP 58290</Text>\r\n                        <Text style={styles.footText}>Tel. (443) 3235088, Cel (443) 356 7822</Text> */}\r\n                        <Text style={styles.footText}>Pagina de la clinica, Correo@clinica.com</Text>\r\n                    </View>\r\n                    <View style={styles.section}>\r\n                        <Image style={styles.image} src={Logo} />F\r\n                        <Text style={{ fontSize: 10, marginLeft: 20 }}>www.recreamed.com</Text>\r\n                    </View>\r\n                </View>\r\n            </Page>\r\n\r\n\r\n        </Document>\r\n    }\r\n    return <div>\r\n        <PDFViewer height={500} width={550}>\r\n            <Receta />\r\n        </PDFViewer>\r\n    </div>\r\n\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { Card, Button, Row, Col, Modal, Form, Input, message } from 'antd';\r\nimport { API, sendDataBody, updateData, usuario } from '../../resources';\r\nimport { PlusOutlined, FormOutlined, PrinterOutlined } from '@ant-design/icons';\r\nimport RecetaDocument from './detalleRecetaForPrint';\r\nconst { TextArea } = Input;\r\n//Los IDS de las recetas son tomados y enviados desde el expediente\r\n// Estan siendo agregadas y actualizadas directamente al expediente desde el form de detallenota->Agregar Receta\r\nexport default function DetalleReceta(props) {\r\n\r\n    const [recetaData, setRecetaData] = useState([]);\r\n    const [recetaLoading, setRecetaLoading] = useState(true);\r\n    const [recetaForEdit, setRecetaForEdit] = useState({});\r\n    const [isModalVisible, setIsModalVisible] = useState(false); // Modal For Add REcipe\r\n    const [isEditingModalVisible, setIsEditingModalVisible] = useState(false); // Modal For Edit Recipe\r\n    const [isPrintingModalVisible, setIsPrintingModalVisible] = useState(false)\r\n\r\n    // Add Recipe Modal\r\n    const showModal = () => { setIsModalVisible(true); };\r\n    const handleOk = () => { setIsModalVisible(false); };\r\n    const handleCancel = () => { setIsModalVisible(false); };\r\n    // Edit Recipe Modal\r\n    const showEditModal = () => { console.log('BeforeEdit'); setIsEditingModalVisible(true); };\r\n    const handleEditOk = () => { setIsEditingModalVisible(false); };\r\n    const handleEditCancel = () => { setIsEditingModalVisible(false); };\r\n    // Print Receta Modal\r\n    const showPrintModal = () => { setIsPrintingModalVisible(true); };\r\n    const handlePrintOk = () => { setIsPrintingModalVisible(false); setIsLogoSelected(false)};\r\n    const handlePrintCancel = () => { setIsPrintingModalVisible(false);setIsLogoSelected(false)};\r\n    // Select logo for print in receta. Switches the modal view into select logo hospital/pdf recipe for print\r\n    const [logoHospital, setLogoHospital] = useState(null)\r\n    const [isLogoSelected, setIsLogoSelected] = useState(false)\r\n\r\n    useEffect(() => {\r\n        props.recetas ?\r\n            getRecetasData()\r\n            :\r\n            finifhGet()\r\n    }, [props.recetas])\r\n\r\n    const getRecetasData = () => {\r\n        sendDataBody('recetas/getMany', { 'ids': props.recetas }).then((response) => {\r\n            setRecetaData(response);\r\n            setRecetaLoading(false)\r\n        })\r\n        // fetch(API + 'recetas/getMany', {\r\n        //     method: 'POST',\r\n        //     headers: { 'Content-Type': 'application/json' },\r\n        //     body: JSON.stringify({ 'ids': props.recetas })\r\n        // }).then(res => res.json())\r\n        //     .then(response => {\r\n        //         // console.log('Recetas Received:', response);\r\n        //         setRecetaData(response);\r\n        //         setRecetaLoading(false)\r\n        //     })\r\n        //     .catch(error => console.error('Error:', error))\r\n    }\r\n\r\n    const finifhGet = () => { setRecetaData([]); setRecetaLoading(false); }\r\n\r\n    // New Receta\r\n    const onFinish = async (values) => {\r\n        values.id_nota = props.id_nota;\r\n        console.log('new Receta:', values);\r\n        console.log('new Recetas:', values);\r\n\r\n        const newReceta = await fetch(API + 'recetas/add', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(values)\r\n        }).then(res => res.json())\r\n            .then(response => {\r\n                console.log('Success:', response);\r\n                message.info(response.message || response.error)\r\n                response.message === 'Receta creada correctamente' ? setIsModalVisible(false) : console.log(response.error);\r\n                return response;\r\n            })\r\n            .catch(error => console.error('Error:', error))\r\n\r\n        props.recetas.push(newReceta.id_receta)\r\n        console.log('New Recetas: ', props.recetas);\r\n\r\n        // Update nota.recetas\r\n        fetch(API + 'notas/updateRecetas/' + props.id_nota, {\r\n            method: 'PUT',\r\n            body: JSON.stringify({ \"recetas\": props.recetas }),\r\n            headers: { 'Content-Type': 'application/json' }\r\n        }).then(res => res.json())\r\n            .then(response => {\r\n                console.log('Update Exp:', response);\r\n                message.success(response.message || response.error);\r\n            })\r\n            .catch(error => console.error('Error:', error))\r\n\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n    // End of Form\r\n\r\n    // Set Edit Receta and open modal\r\n    const editReceta = (r) => {\r\n        setRecetaForEdit(r)\r\n        console.log(r);\r\n        showEditModal();\r\n    }\r\n    // Send data for update Receta\r\n    const updateReceta = (values) => {\r\n        console.log('update', values);\r\n        updateData(`recetas/update/${recetaForEdit._id}`, values).then((rs) => {\r\n            // message.success(rs);\r\n            setIsEditingModalVisible(false)\r\n            getRecetasData()\r\n        })\r\n    }\r\n    // Print Receta\r\n    const printReceta = async (r) => {\r\n        await setRecetaForEdit(r)\r\n        setIsPrintingModalVisible(true)\r\n        console.log(r);\r\n    }\r\n\r\n\r\n    const gridStyle = {\r\n        width: '100%',\r\n        height: '32',\r\n        textAlign: 'center',\r\n        display: 'inline-flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    };\r\n\r\n\r\n\r\n    return <div>\r\n        <Card bordered={false} title={<>Recetas <Button onClick={() => setIsModalVisible(true)} size='small' type=\"primary\" shape=\"circle\" icon={<PlusOutlined />} /></>} >\r\n            \r\n            {\r\n                recetaLoading ? <h5>Cargando Receta...</h5> :\r\n                    recetaData.length > 0 ?\r\n\r\n                        recetaData.map((r) => {\r\n                            return <><Card.Grid key={r._id} style={gridStyle}>\r\n                                <p style={{ whiteSpace: 'pre' }}> Prescripcion : {r.prescripcion} </p>\r\n                                <Button style={{ marginLeft: 8 }} onClick={() => editReceta(r)} size='small' type=\"primary\" shape=\"circle\" icon={<FormOutlined />} />\r\n                                <Button style={{ marginLeft: 8 }} onClick={() => printReceta(r)} size='small' type=\"primary\" shape=\"circle\" icon={<PrinterOutlined />} />\r\n                            </Card.Grid></>\r\n                        })\r\n                        :\r\n                        <h6>No hay una receta asignada</h6>\r\n            }\r\n        </Card>\r\n\r\n        <Modal title=\"Nueva Receta\" visible={isModalVisible} onOk={handleOk} onCancel={handleCancel}\r\n            footer={[\r\n                <Button type=\"primary\" htmlType=\"submit\" form='create_receta_medic'>\r\n                    Guardar\r\n                </Button>,\r\n                <Button onClick={handleCancel}>Cancelar</Button>\r\n            ]}>\r\n            <Form\r\n                name=\"create_receta_medic\"\r\n                labelCol={{ span: 8 }}\r\n                wrapperCol={{ span: 16 }}\r\n                initialValues={{ remember: true }}\r\n                onFinish={onFinish}\r\n                onFinishFailed={onFinishFailed}\r\n                autoComplete=\"off\"\r\n            >\r\n                <Form.Item\r\n                    label=\"Prescripcion\"\r\n                    name=\"prescripcion\"\r\n                    rules={[{ required: true, message: 'Ingresa la prescripcion' }]}\r\n                >\r\n                    <TextArea rows={4} />\r\n                </Form.Item>\r\n\r\n            </Form>\r\n        </Modal>\r\n\r\n        <Modal title=\"Editar Receta\" visible={isEditingModalVisible} onOk={handleEditOk} onCancel={handleEditCancel} destroyOnClose\r\n            footer={[\r\n                <Button type=\"primary\" htmlType=\"submit\" form='update_receta_medic'>\r\n                    Actualizar\r\n                </Button>,\r\n                <Button onClick={handleEditCancel}>Cancelar</Button>\r\n            ]}>\r\n            {\r\n                Object.keys(recetaForEdit).map((k) => {\r\n                    return <p>{k} : {recetaForEdit[k]}</p>\r\n                })\r\n            }\r\n            <Form\r\n                name=\"update_receta_medic\"\r\n                labelCol={{ span: 8 }}\r\n                wrapperCol={{ span: 16 }}\r\n                initialValues={{ prescripcion: recetaForEdit.prescripcion }}\r\n                onFinish={updateReceta}\r\n                onFinishFailed={onFinishFailed}\r\n                autoComplete=\"off\"\r\n            >\r\n                <Form.Item\r\n                    label=\"Prescripcion\"\r\n                    name=\"prescripcion\"\r\n                    rules={[{ required: true, message: 'Ingresa la prescripcion' }]}\r\n                >\r\n                    <TextArea rows={4} />\r\n                </Form.Item>\r\n\r\n            </Form>\r\n        </Modal>\r\n\r\n        <Modal title=\"Imprimir Receta\" visible={isPrintingModalVisible} onOk={handlePrintOk} onCancel={handlePrintCancel} width={600}>\r\n            {\r\n                isLogoSelected ? // Si ya hay logo seleccionado, se pasa a la receta y se muestra en pdf\r\n                    <RecetaDocument receta={recetaForEdit} logoHospital={logoHospital} />\r\n                    :\r\n                    <div>\r\n                        <Card title='Selecciona un hospital' bordered={false}>\r\n                            {\r\n                                usuario.horarios.map((h) => {\r\n                                    return <Card.Grid style={{ width: '100%' }} onClick={() => {setLogoHospital(h.sucursal.logo); setIsLogoSelected(true)}}>\r\n                                        <Row align=\"middle\">\r\n                                            <Col span={6} offset={4}><img width={64} src={'https://api.recreamed.com/images/' + h.sucursal.logo} alt=\"Logo\" /></Col>\r\n                                            <Col span={10}>{h.sucursal.nombre} <br /> {h.horario}</Col>\r\n                                        </Row>\r\n                                    </Card.Grid>\r\n                                })\r\n                            }\r\n                        </Card>\r\n                    </div>\r\n            }\r\n        </Modal>\r\n    </div>\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Card, Collapse, Button, Tabs, Row, Col, Modal, Space } from 'antd';\r\nimport { getData, API } from '../../resources';\r\nimport { PlusOutlined, ExperimentOutlined, DownloadOutlined, EditOutlined } from '@ant-design/icons';\r\nimport { NuevaNota } from './nuevaNota';\r\nimport DetalleReceta from './detalleReceta';\r\nconst { TabPane } = Tabs;\r\nconst { Panel } = Collapse;\r\n\r\nexport default function DetalleNota(props) {\r\n\r\n    const [notaData, setNotaData] = useState(\"\");\r\n    const [notaLoading, setnotaLoading] = useState(true);\r\n    const [view, setView] = useState('detalles');\r\n    const [notaForEdit, setNotaForEdit] = useState(\"\")\r\n    // Add Nota Modal\r\n    const [isModalVisible, setIsModalVisible] = useState(false);\r\n    const showModal = () => { setIsModalVisible(true) };\r\n    const handleOk = () => { setIsModalVisible(false) };\r\n    const handleCancel = () => { setIsModalVisible(false) };\r\n    // End of Add Nota Modal\r\n    // Edit Nota Modal\r\n    const [isEditModalVisible, setIsEditModalVisible] = useState(false);\r\n    const showEditModal = () => { setIsEditModalVisible(true) };\r\n    const handleEditOk = () => { setIsEditModalVisible(false) };\r\n    const handleEditCancel = () => { setIsEditModalVisible(false) };\r\n    const editarNota = async (n) => { await setNotaForEdit(n); setIsEditModalVisible(true) }\r\n    // End of Edit Nota Modal\r\n\r\n\r\n    useEffect(() => {\r\n        // console.log('Paciente received to detailNota: ', props.paciente)\r\n        props.paciente ?\r\n            getData(`notas/${props.paciente}`).then(rs => { console.log('NotasData: ', rs); setNotaData(rs); setnotaLoading(false) })\r\n            :\r\n            finishGet()\r\n    }, [props.paciente])\r\n\r\n    const finishGet = () => { setNotaData([]); setnotaLoading(false); }\r\n\r\n    const gridStyle = {\r\n        // width: '50%',\r\n        width: '100%',\r\n        height: '32',\r\n        textAlign: 'center',\r\n        display: 'inline-flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center'\r\n    };\r\n\r\n    const NotaGridStyle = {\r\n        width: '25%',\r\n        textAlign: 'center',\r\n        border: '1px solid rgba(255, 255, 255, 255)'\r\n    };\r\n    const EstudioGridStyle = {\r\n        width: '50%',\r\n        // height: '32',\r\n        textAlign: 'center',\r\n        display: 'inline-flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center'\r\n    };\r\n\r\n\r\n    const NotaView = () => {\r\n        switch (view) {\r\n            case 'detalles':\r\n                return <>{\r\n                    notaData.length > 0 ?\r\n                        Object.keys(notaData[0]).map(k => {\r\n                            return <><Card.Grid key={k} style={gridStyle}>{k}</Card.Grid><Card.Grid style={gridStyle} size='small'>{notaData[0][k]}</Card.Grid></>\r\n                        })\r\n                        :\r\n                        <h6>No hay una nota asignada</h6>\r\n                }</>\r\n            case 'adding':\r\n                return <>Adding\r\n                    <NuevaNota id_expediente={props.id_expediente} paciente={props.paciente} prevExpNotas={props.prevExpNotas} />\r\n                    <Button onClick={() => setView('detalles')} >Cancelar</Button>\r\n                </>\r\n            case 'editing':\r\n                return <>Editing\r\n                    <Button onClick={() => setView('detalles')} >Cancelar</Button>\r\n                </>\r\n            default:\r\n                <>Notas del paciente</>\r\n        }\r\n    }\r\n\r\n\r\n\r\n    return <div>\r\n\r\n        <Space>\r\n            <h5>Notas </h5>\r\n            <Button onClick={showModal} size='small' type=\"primary\" shape=\"circle\" icon={<PlusOutlined />} />\r\n        </Space>\r\n\r\n        <Tabs tabPosition='top' onTabClick={(k, e) => { console.log('OnTABClickNota', k); }}>\r\n\r\n            {notaLoading ? <h5>Cargando Nota...</h5> :\r\n\r\n                notaData.map((nota, i) => {\r\n                    let index = i + 1;\r\n                    return <TabPane tab={`Nota ${index}`} key={nota._id} style={{ width: '100%' }}>\r\n                        <Row>\r\n                            {/* Mitad de la pantalla para NOTA*/}\r\n                            <Col span={12}>\r\n                                <Collapse bordered={false}>\r\n                                    <Panel header=\"Detalles de la nota\" key=\"1\">\r\n                                        <Card >\r\n                                            <Card.Grid style={NotaGridStyle}>Edad: {nota.edad}</Card.Grid>\r\n                                            <Card.Grid style={NotaGridStyle}>Talla: {nota.talla}</Card.Grid>\r\n                                            <Card.Grid style={NotaGridStyle}>Peso: {nota.peso}</Card.Grid>\r\n                                            <Card.Grid style={NotaGridStyle}>IMC: {nota.imc}</Card.Grid>\r\n                                            <Card.Grid style={NotaGridStyle}>Temperatura: {nota.temperatura}</Card.Grid>\r\n                                            <Card.Grid style={NotaGridStyle}>Presion Arterial : {nota.presion_arterial}</Card.Grid>\r\n                                            <Card.Grid style={NotaGridStyle}>Frecuencia Cardiaca : {nota.frecuencia_cardiaca}</Card.Grid>\r\n                                            <Card.Grid style={NotaGridStyle}>Frecuencia Respiratoria : {nota.frecuencia_respiratoria}</Card.Grid>\r\n                                        </Card>\r\n                                    </Panel>\r\n                                </Collapse>\r\n\r\n                                <Card title='Observaciones'>\r\n                                    {nota.Observaciones}\r\n                                </Card>\r\n\r\n                                <Card title='Diagnostico'>\r\n                                    {nota.diagnostico}\r\n                                </Card>\r\n\r\n                                <Card title='Estudios'>\r\n                                    {nota.estudios.map((e) => {\r\n                                        return <Card.Grid style={EstudioGridStyle}>\r\n                                            <a href={`${API}notas/estudios/download/${e}`}><ExperimentOutlined />{e}<DownloadOutlined /> </a>\r\n                                        </Card.Grid>\r\n                                    })}\r\n                                </Card>\r\n                                <Button style={{ float: 'right' }} onClick={() => { editarNota(nota) }} size='small' type=\"primary\" icon={<EditOutlined />} >Editar Nota</Button>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <DetalleReceta recetas={nota.recetas} id_nota={nota._id} />\r\n                            </Col>\r\n                        </Row>\r\n                    </TabPane>\r\n                })\r\n            }\r\n\r\n        </Tabs>\r\n\r\n\r\n        <Modal title=\"Nueva Nota\" visible={isModalVisible} onOk={handleOk} onCancel={handleCancel} width={680} footer={[]} destroyOnClose>\r\n            <NuevaNota id_expediente={props.id_expediente} paciente={props.paciente} prevExpNotas={props.prevExpNotas} setIsModalVisible={setIsModalVisible} />\r\n        </Modal>\r\n\r\n        <Modal title=\"Editar Nota\" visible={isEditModalVisible} onOk={handleEditOk} onCancel={handleEditCancel} width={680} footer={[]} destroyOnClose>\r\n            <NuevaNota nota={notaForEdit} setIsModalVisible={setIsEditModalVisible} />\r\n        </Modal>\r\n\r\n    </div>\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Card, Space, Button, Input, Form, message } from 'antd';\r\nimport { getData, API } from '../../resources';\r\nimport { FormOutlined } from '@ant-design/icons';\r\n\r\nexport default function DetalleHistoria(props) {\r\n    const { TextArea } = Input;\r\n    const [historiaData, setHistoriaData] = useState(\"\")\r\n    const [notaLoading, setHistoriaLoading] = useState(true)\r\n    const [editing, setEditing] = useState(false)\r\n\r\n    useEffect(() => {\r\n        //     console.log(\"Props IDHistoria: \", props.historia)\r\n        props.historia ?\r\n            getHistoriaData()\r\n            :\r\n            finifhGet()\r\n    }, [props.historia])\r\n\r\n    const finifhGet = () => { setHistoriaData([]); setHistoriaLoading(false); }\r\n\r\n    const getHistoriaData = () => {\r\n        getData(`historia/${props.historia}`).then(rs => { console.log('DetalleHistoria: ', rs); setHistoriaData(rs); setHistoriaLoading(false) })\r\n    }\r\n\r\n    const gridStyle = {\r\n        width: '100%',\r\n        // height: '40',\r\n        textAlign: 'center',\r\n        // display: 'inline-flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        marginTop: 15\r\n    };\r\n\r\n    const updateHistoria = (values) => {\r\n        setEditing(false)\r\n        fetch(API + 'historias/update/' + historiaData[0]._id, {\r\n            method: 'PUT',\r\n            body: JSON.stringify(values),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }).then(res => res.json())\r\n            .then(response => {\r\n                console.log('Success:', response);\r\n                message.success(response.message || response.error);\r\n            })\r\n            .finally(() => {\r\n                getHistoriaData()\r\n                setEditing(false)\r\n            })\r\n        console.log('New Historia', values);\r\n    }\r\n\r\n\r\n    const HistoriaDetails = () => {\r\n        return <Card.Grid style={gridStyle} >{\r\n            editing ?\r\n                <>\r\n                    <Form name='historiaForm' initialValues={{ historial: historiaData[0].historial }} onFinish={updateHistoria}>\r\n                        <Form.Item name='historial'>\r\n                            <TextArea rows={4} />\r\n                        </Form.Item>\r\n                        <Space>\r\n                            <Form.Item>\r\n                                <Button type=\"primary\" htmlType=\"submit\">Guardar</Button>\r\n                            </Form.Item>\r\n                            <Form.Item>\r\n                                <Button onClick={() => setEditing(false)}>Cancelar</Button>\r\n                            </Form.Item>\r\n                        </Space>\r\n\r\n\r\n                    </Form>\r\n                </>\r\n                :\r\n                <p style={{ whiteSpace: 'pre', textAlign: 'left' }}>{historiaData[0].historial}</p>\r\n        }</Card.Grid>\r\n    }\r\n\r\n\r\n    return <div>\r\n        <Card bordered={false}>\r\n            <Space>\r\n                <h5>Historia Clinica</h5>\r\n                <Button onClick={() => setEditing(true)} size='small' disabled={!props.historia} type=\"primary\" shape=\"circle\" icon={<FormOutlined />} />\r\n            </Space>\r\n            {\r\n                notaLoading ? <h5>Cargando Historia...</h5> :\r\n                    historiaData.length > 0 ?\r\n                        <HistoriaDetails />\r\n                        :\r\n                        <h6>No hay una historia asignada</h6>\r\n            }\r\n        </Card>\r\n    </div>\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Button, Select, Space } from 'antd';\r\nimport { API } from '../../resources';\r\nimport CreateExpedient from './createExpedient';\r\nimport DetalleNota from './detalleNota'\r\nimport DetalleHistoria from './detalleHistoria';\r\nimport html2canvas from 'html2canvas';\r\nimport { jsPDF } from \"jspdf\";\r\n\r\n\r\nexport default function Expedientes(props) {\r\n    const [isModalVisible, setIsModalVisible] = useState(false);\r\n    const [expedientesData, setExpedientesData] = useState([]);\r\n    const [expedientesLoading, setExpedientesLoading] = useState(true);\r\n    const [historia, setHistoria] = useState(\"\");\r\n    const [notas, setNotas] = useState(\"\");\r\n\r\n\r\n    useEffect(() => {\r\n        getExpedientesData(props.paciente)\r\n    }, [props.paciente])\r\n\r\n\r\n    const getExpedientesData = (id_paciente) => {\r\n        fetch(API + `expedientes/${id_paciente}`)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                // console.log(\"GetExpData: \", data);\r\n                setExpedientesData(data);\r\n                if (typeof data != \"undefined\") {\r\n                    setNotas(data.notas); setHistoria(data.historia);\r\n                } else { setNotas(null); setHistoria(null) }\r\n            })\r\n            .finally(() => setExpedientesLoading(false))\r\n    }\r\n\r\n    const printDocument = () => {\r\n        const input = document.getElementById('expedient-export');\r\n        html2canvas(input)\r\n            .then((canvas) => {\r\n                const imgData = canvas.toDataURL('image/png');\r\n                const pdf = new jsPDF();\r\n                pdf.addImage(imgData, 'JPEG', 0, 0);\r\n                // pdf.output('dataurlnewwindow');\r\n                pdf.save(\"expediente.pdf\");\r\n            })\r\n            ;\r\n    }\r\n\r\n\r\n    return <div id='expedient-export' >\r\n\r\n        <Space size='middle'><h4>Expediente </h4><h3> </h3></Space>\r\n\r\n        <DetalleHistoria historia={historia} />\r\n\r\n        <DetalleNota notas={notas} id_expediente={expedientesData._id} prevExpNotas={expedientesData.notas} paciente={props.paciente} />\r\n\r\n        <CreateExpedient isModalVisible={isModalVisible} setIsModalVisible={setIsModalVisible} pacientesData={[]} />\r\n\r\n        <Button onClick={printDocument}>Exportar a pdf</Button>\r\n\r\n    </div>;\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Form, Input, Button, message, Space, Row, Col, Upload } from 'antd'\r\nimport { MinusCircleOutlined, PlusOutlined, InboxOutlined } from '@ant-design/icons';\r\nimport { InputNumber, Select } from 'antd';\r\nimport { S_API, getData, API } from '../resources'\r\nconst { Option } = Select;\r\nconst estados = [\"Michoacan\", \"Morelos\", \"Guerrero\"];\r\nconst { Dragger } = Upload;\r\n\r\n\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    xs: {\r\n      span: 24,\r\n    },\r\n    sm: {\r\n      span: 8,\r\n    },\r\n  },\r\n  wrapperCol: {\r\n    xs: {\r\n      span: 24,\r\n    },\r\n    sm: {\r\n      span: 14,\r\n    },\r\n  },\r\n};\r\nconst tailFormItemLayout = {\r\n  wrapperCol: {\r\n    xs: {\r\n      span: 24,\r\n      offset: 0,\r\n    },\r\n    sm: {\r\n      span: 16,\r\n      offset: 8,\r\n    },\r\n  },\r\n};\r\nexport default function PerfilEdit(props) {\r\n\r\n  const [form] = Form.useForm();\r\n\r\n  const [sucursales, setSucursales] = useState([]);\r\n  const [sucursalesLoading, setSucursalesLoading] = useState(true);\r\n  const [avatar, setAvatar] = useState(props.perfil.avatar)\r\n\r\n  //Start upload props Upload File\r\n  const dragDropProps = {\r\n    name: 'file',\r\n    multiple: false,\r\n    action: API + 'imagenes/upload',\r\n\r\n    onChange(info) {\r\n      const { status } = info.file;\r\n\r\n      if (status !== 'uploading') {\r\n        console.log(info.file, info.fileList);\r\n      }\r\n\r\n      if (status === 'done') {\r\n        message.success(`${info.file.name} file uploaded successfully.`);\r\n        console.log('New Files: ', info.file.response.file)\r\n        setAvatar(info.file.response.file)\r\n      } else if (status === 'error') {\r\n        message.error(`${info.file.name} file upload failed.`);\r\n      }\r\n    },\r\n\r\n    onDrop(e) {\r\n      console.log('Dropped files', e.dataTransfer.files);\r\n    },\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log('received Medic: ', props.perfil);\r\n    getData('sucursales').then((rs) => { setSucursales(rs); setSucursalesLoading(false) })\r\n  }, [])\r\n\r\n\r\n\r\n  const onFinish = (values) => {\r\n    values.avatar = avatar;\r\n    values.estatus = '1';\r\n    values.rol = 'Medico';\r\n    delete values.confirm;\r\n    delete values.prefix;\r\n\r\n    console.log('ready to send', values)\r\n    fetch(S_API + 'register', {\r\n      method: 'POST',\r\n      body: JSON.stringify(values),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).then(res => res.json())\r\n      .then(response => {\r\n        console.log('Success:', response);\r\n        response.message && response.message === 'Usuario creado correctamente' ?\r\n          window.location.href = 'doctores' : message.error(response.error);\r\n      })\r\n      .catch(error => console.error('Error:', error))\r\n  };\r\n\r\n  const onFinishEdit = (values) => {\r\n    values.avatar = avatar;\r\n    // values.estatus = '1';\r\n    // values.rol = 'Medico';\r\n    // delete values.confirm;\r\n    // delete values.prefix;\r\n\r\n    console.log('ready to send', values)\r\n    fetch(API + 'users/updateUser/' + props.perfil._id, {\r\n      method: 'PUt',\r\n      body: JSON.stringify(values),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).then(res => res.json())\r\n      .then(response => {\r\n        console.log('Success:', response);\r\n        response.message && response.message === 'Usuario actualizado correctamente' ?\r\n          props.setEditing(false) : message.error(response.error);\r\n      })\r\n      .catch(error => console.error('Error:', error))\r\n  };\r\n\r\n  const prefixSelector = (\r\n    <Form.Item name=\"prefix\" noStyle>\r\n      <Select\r\n        style={{\r\n          width: 70,\r\n        }}\r\n      >\r\n        <Option value=\"+52\">+52</Option>\r\n      </Select>\r\n    </Form.Item>\r\n  );\r\n  const suffixSelector = (\r\n    <Form.Item name=\"suffix\" noStyle>\r\n      <Select\r\n        style={{\r\n          width: 70,\r\n        }}\r\n      >\r\n        <Option value=\"USD\">$</Option>\r\n        <Option value=\"CNY\">¥</Option>\r\n      </Select>\r\n    </Form.Item>\r\n  );\r\n\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log('Failed:', errorInfo);\r\n  };\r\n  return (\r\n    <div>\r\n      <h4>Editar perfil</h4>\r\n      <br />\r\n      <Dragger {...dragDropProps}>\r\n        <p className=\"ant-upload-drag-icon\">\r\n          <InboxOutlined />\r\n        </p>\r\n        <p className=\"ant-upload-text\">Arrastra la imagen de perfil o click ara buscar</p>\r\n        <p className=\"ant-upload-hint\">\r\n          Selecciona archivos en formato png, jpeg o webp\r\n        </p>\r\n      </Dragger>\r\n      <br />\r\n      <Form\r\n        {...formItemLayout}\r\n        form={form}\r\n        name=\"register\"\r\n        onFinish={onFinishEdit}\r\n        // initialValues={{ horarios: [{ sucursal: '', horario: '' }], prefix: '+52' }}\r\n        initialValues={props.perfil}\r\n        scrollToFirstError\r\n      >\r\n\r\n        <Row>\r\n\r\n          <Col span={11}>\r\n            <Form.Item name=\"name\" label=\"Nombre\" rules={[{ required: true, message: 'Ingresa Nombre y apellidos' }]}>\r\n              <Input />\r\n            </Form.Item>\r\n            <Form.Item name=\"email\" label=\"Correo\" rules={[{ type: 'email', message: 'Ingresa un corrreo electronico valido' }, { required: true, message: 'Please input your E-mail!' }]}>\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            {/* <Form.Item name=\"password\" label=\"Contraseña\" rules={[{ required: true, message: 'Por favor ingrese su contraseña!', },]} hasFeedback >\r\n              <Input.Password />\r\n            </Form.Item>\r\n\r\n            <Form.Item name=\"confirm\" label=\"Confirmar contraseña\" dependencies={['password']} hasFeedback\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: 'Please confirm your password!',\r\n                },\r\n                ({ getFieldValue }) => ({\r\n                  validator(_, value) {\r\n                    if (!value || getFieldValue('password') === value) {\r\n                      return Promise.resolve();\r\n                    }\r\n                    return Promise.reject(new Error('Las contraseñas deben coincidir!'));\r\n                  },\r\n                }),\r\n              ]}\r\n            >\r\n              <Input.Password />\r\n            </Form.Item> */}\r\n\r\n            <Form.Item name=\"telefono\" label=\"Telefono\" rules={[{ required: true, message: 'Ingresa el numero de telefono correcto' },]}>\r\n              <Input addonBefore={prefixSelector} style={{ width: '100%', }} />\r\n            </Form.Item>\r\n\r\n\r\n            <Form.Item label=\"horarios\" rules={[{ required: true, message: 'Ingresa al menos un horario', },]}>\r\n              <Form.List name=\"horarios\" label=\"horarios list\"\r\n              >\r\n                {(fields, { add, remove }) => (\r\n                  <>\r\n                    {fields.map(({ key, name, ...restField }) => (\r\n                      <Space key={key} style={{ display: 'flex', marginBottom: 8 }} align=\"baseline\">\r\n                        <Form.Item\r\n                          {...restField}\r\n                          name={[name, 'sucursal']}\r\n                          rules={[{ required: true, message: 'Elije Sucursal' }]}\r\n                        >\r\n                          <Select placeholder=\"Elije Sucursal\" style={{ width: '120px' }} >\r\n                            {sucursalesLoading ? \"Cargando\" :\r\n                              sucursales.map(s => <Option value={s._id}>{s.nombre}</Option>)\r\n                            }\r\n                          </Select>\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                          {...restField}\r\n                          name={[name, 'horario']}\r\n                          rules={[{ required: true, message: 'Missing last name' }]}\r\n                        >\r\n                          <Input placeholder=\"Horario\" />\r\n                        </Form.Item>\r\n                        <MinusCircleOutlined onClick={() => remove(name)} />\r\n                      </Space>\r\n                    ))}\r\n                    <Form.Item>\r\n                      <Button type=\"dashed\" onClick={() => add()} block icon={<PlusOutlined />}>\r\n                        Agregar Horario\r\n                      </Button>\r\n                    </Form.Item>\r\n                  </>\r\n                )}\r\n              </Form.List>\r\n            </Form.Item>\r\n\r\n\r\n\r\n          </Col>\r\n          <Col span={12}>\r\n            <Form.Item name=\"cedula\" label=\"Cedula\" rules={[{ required: false, message: 'Ingresa cedula' }]}>\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            {/* Not Necesary For Medic. He'll be in hospital direction */}\r\n            {/* <Form.Item name=\"calle\" label=\"Calle\" rules={[{ required: true, message: 'Ingresa calle', whitespace: true }]}>\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item name=\"numexterior\" label=\"Num Exterior\" rules={[{ required: true, message: 'Ingresa numero exterior' }]}>\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item name=\"numinterior\" label=\"Num Interior\" rules={[{ required: true, message: 'Ingresa numinterior' }]}>\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item label=\"Colonia\" name=\"colonia\" rules={[{ required: true, message: 'Please input your colobnia!' }]}            >\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item name=\"estado\" label=\"Estado\" rules={[{ required: true, message: 'Apellido materno', },]}>\r\n              <Select placeholder=\"Elije tu estado\">\r\n                {estados.map(e => <Option value={e}>{e}</Option>)}\r\n              </Select>\r\n            </Form.Item>\r\n\r\n            <Form.Item name=\"municipio\" label=\"Municipio\" rules={[{ required: true, message: 'Ingresa tu municipio' }]} >\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item name=\"codigopostal\" label=\"Codigo Postal\" rules={[{ required: true, message: 'Ingresa codigopostal', },]}>\r\n              <InputNumber addonAfter={suffixSelector} style={{ width: '100%', }} />\r\n            </Form.Item> */}\r\n\r\n            <Form.Item name=\"certificacion\" label=\"Certificacion\" rules={[{ required: false, message: 'Ingresa tu certificacion' }]}>\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item name=\"universidad\" label=\"Universidad\" rules={[{ required: false, message: 'Ingresa tu universidad' }]} >\r\n              <Input />\r\n            </Form.Item>\r\n            <Form.Item {...tailFormItemLayout}>\r\n              <Button type=\"primary\" htmlType=\"submit\">\r\n                Guardar\r\n              </Button>\r\n            </Form.Item>\r\n          </Col>\r\n        </Row>\r\n\r\n\r\n\r\n\r\n\r\n        {/* <Form.Item\r\n          name=\"agreement\"\r\n          valuePropName=\"checked\"\r\n          rules={[\r\n            {\r\n              validator: (_, value) =>\r\n                value ? Promise.resolve() : Promise.reject(new Error('Should accept agreement')),\r\n            },\r\n          ]}\r\n          {...tailFormItemLayout}\r\n        >\r\n          <Checkbox>\r\n            He leído y acepto los <a href=\"https://recreamed.com\">terminos y condiciones</a>\r\n          </Checkbox>\r\n        </Form.Item> */}\r\n\r\n\r\n      </Form>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Row, Col, Space, Button, Divider, Image } from 'antd';\r\nimport { Avatar, Card } from 'antd';\r\nimport { UserOutlined } from '@ant-design/icons';\r\nimport { API, usuario } from '.././resources';\r\nimport Loading from '.././loading';\r\nimport { PlusOutlined, FormOutlined } from '@ant-design/icons';\r\nimport PerfilEdit from './perfilEdit';\r\n\r\nexport default function Perfil() {\r\n\r\n    const [profileData, setProfileData] = useState([]);\r\n    const [profileForEdit, setProfileForEdit] = useState([]);\r\n    const [editing, setEditing] = useState(false)\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [visible, setVisible] = useState(false)\r\n\r\n    useEffect(() => {\r\n        getProfileData()\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        getProfileData()\r\n    }, [editing])\r\n\r\n    const getProfileData = () => {\r\n        fetch(API + 'userByMail/' + usuario.email)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log(data);\r\n                setProfileData(data[0]);\r\n                setIsLoading(false);\r\n            });\r\n    }\r\n\r\n    const editPerfil = async (p) => {\r\n        p.horarios.forEach((h) => { h.sucursal = h.sucursal._id })\r\n        console.log('Horarios before edit profile: ', p.horarios);\r\n        await setProfileForEdit(p)\r\n        setEditing(true);\r\n        console.log('Editar medico: ', p)\r\n    }\r\n\r\n    const DetailsProfile = () => {\r\n        return <Row>\r\n            <Col span={8}>\r\n                {\r\n                    // Profile Pic\r\n                    profileData.avatar.length > 8 ?\r\n                        <Image style={{ borderRadius: 12 }} width={256} src={'https://api.recreamed.com/images/' + profileData.avatar} />\r\n                        :\r\n                        <Avatar size={128} icon={<UserOutlined />} />\r\n                }\r\n                <Divider />\r\n                <p>Nombre: {profileData.name} </p>\r\n                <p>Correo: {profileData.email} </p>\r\n                <p>Telefono: {profileData.telefono} </p>\r\n            </Col>\r\n            {/* <Col span={8}>\r\n                <p>Estado: {profileData.estado}</p>\r\n                <p>Municipio: {profileData.municipio}</p>\r\n                <p>Colonia: {profileData.colonia}</p>\r\n                <p>Calle: {profileData.calle}</p>\r\n                <p>Codigo Postal:{profileData.codigopostal} </p>\r\n            </Col> */}\r\n            <Col span={8}>\r\n                <Card title='Horarios' style={{ borderRadius: 12 }}>\r\n                    {\r\n                        profileData.horarios.map((h) => {\r\n                            return <Card.Grid style={{ width: '100%' }} >\r\n                                <Row align=\"middle\">\r\n                                    <Col span={6} offset={4}><img width={64} src={'https://api.recreamed.com/images/' + h.sucursal.logo} alt=\"Logo\" /></Col>\r\n                                    <Col span={10}>{h.sucursal.nombre} <br /> {h.horario}</Col>\r\n                                </Row>\r\n                            </Card.Grid>\r\n                        })\r\n                    }\r\n                </Card>\r\n                <br />\r\n                <p>Universidad: {profileData.universidad} </p>\r\n                <p>Certificacion: {profileData.certificacion} </p>\r\n                <p>Cedula: {profileData.cedula} </p>\r\n            </Col>\r\n\r\n\r\n\r\n        </Row>\r\n    }\r\n\r\n    return (\r\n        <div className='mainContainer'>\r\n\r\n            <Space>\r\n                <h3>PERFIL</h3>\r\n                <Button onClick={() => editPerfil(profileData)} type=\"primary\" shape=\"circle\" icon={<FormOutlined />} />\r\n            </Space>\r\n            {isLoading ? <Loading /> :\r\n                <Card style={{ borderRadius: 16 }}>\r\n                    {\r\n                        editing ?\r\n\r\n                            <>\r\n                                <PerfilEdit perfil={profileData} setEditing={setEditing} />\r\n                                <Button shape=\"circle\" title='Cancelar' />\r\n                                <Button onClick={() => setEditing(false)}>Cancelar</Button>\r\n                            </> :\r\n                            <DetailsProfile />\r\n                    }\r\n                </Card>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Card, Button, Modal, Row, Col, Space, Table, Tag } from 'antd';\r\nimport { API } from '../resources';\r\nimport Loading from '../loading';\r\n\r\n\r\nexport function DoctorNotas() {\r\n\r\n    const [nota, setNota] = useState({});\r\n    const [isModalVisible, setIsModalVisible] = useState(false);\r\n    const [notasData, setNotasData] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const showModal = () => { setIsModalVisible(true); };\r\n    const handleOk = () => { setIsModalVisible(false); getNotasData();};\r\n    const handleCancel = () => { setIsModalVisible(false); };\r\n\r\n    const [isModalDetailVisible, setIsModalDetailVisible] = useState(false);\r\n    const showDetailModal = () => { setIsModalDetailVisible(true); };\r\n    const handleDetailOk = () => { setIsModalDetailVisible(false); };\r\n    const handleDetailCancel = () => { setIsModalDetailVisible(false); };\r\n\r\n    useEffect(() => {\r\n      getNotasData()\r\n    }, [])\r\n\r\n    const getNotasData = () => {\r\n        fetch( API + 'notas')\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log(data); setNotasData(data);\r\n                setIsLoading(false)\r\n            })\r\n            .finally(() => setIsLoading(false))\r\n    }\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Paciente',\r\n            dataIndex: 'id_usuario',\r\n            key: 'Paciente',\r\n            render: text => <a>{text}</a>,\r\n        }, {\r\n            title: 'Edad',\r\n            dataIndex: 'edad',\r\n            key: 'Edad',\r\n        },\r\n        {\r\n            title: 'Talla',\r\n            dataIndex: 'talla',\r\n            key: 'Talla',\r\n        },\r\n        {\r\n            title: 'IMC',\r\n            dataIndex: 'imc',\r\n            key: 'imc',\r\n        },\r\n\r\n        {\r\n            title: 'Observaciones',\r\n            key: 'Observaciones',\r\n            dataIndex: 'observaciones',\r\n            // render: observaciones => (\r\n            //     <>\r\n            //         {observaciones.map(tag => {\r\n            //             let color = tag.length > 5 ? 'geekblue' : 'green';\r\n            //             if (tag === 'diabetes') {\r\n            //                 color = 'volcano';\r\n            //             }\r\n            //             return (\r\n            //                 <Tag color={color} key={tag}>\r\n            //                     {tag.toUpperCase()}\r\n            //                 </Tag>\r\n            //             );\r\n            //         })}\r\n            //     </>\r\n            // ),\r\n        },\r\n        {\r\n            title: 'Detalles',\r\n            key: 'action',\r\n            render: (text, record) => (\r\n                <Space size=\"middle\">\r\n                    <Button onClick={() => { showDetailModal(); setNota(record) }}>Detalles</Button>\r\n                </Space>\r\n            ),\r\n        },\r\n    ];\r\n\r\n    const gridStyle = {\r\n        width: '50%',\r\n        height: '50px',\r\n        textAlign: 'center',\r\n        display: 'inline-flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center'\r\n    };\r\n\r\n\r\n    function DetalleNota() {\r\n        return <div>\r\n            <Card bordered={false}>\r\n                {\r\n                    Object.keys(nota).map(k => {\r\n                        return <><Card.Grid style={gridStyle}>{k}</Card.Grid><Card.Grid style={gridStyle} size='small'>{nota[k]}</Card.Grid></>\r\n                    })\r\n                }\r\n            </Card>\r\n        </div>\r\n    }\r\n\r\n\r\n    return (\r\n        <div className='mainContainer'>\r\n            <Row>\r\n                <Col span={8}><h4>Notas de los pacientes del medico</h4></Col>\r\n                <Col>\r\n                    <Button type=\"primary\" onClick={showModal}>\r\n                        Nueva Nota\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n\r\n            { isLoading ? <Loading/> :  <Table columns={columns} dataSource={notasData} /> }\r\n\r\n\r\n\r\n\r\n            <Modal width={800} title={<h4>Crear Nota</h4>} visible={isModalVisible} onOk={handleOk} onCancel={handleCancel}>\r\n                {/* <NuevaNota /> */}\r\n            </Modal>\r\n            <Modal width={800} title={<h4>Detalles de la nota </h4>} visible={isModalDetailVisible} onOk={handleDetailOk} onCancel={handleDetailCancel}>\r\n                <DetalleNota />\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Row, Col, Statistic, Card } from 'antd'\r\nimport { Pie, Line } from '@ant-design/charts';\r\nimport './home.css'\r\n\r\nexport class Home extends Component {\r\n\r\n    dataPie = [\r\n        {\r\n            type: 'F01',\r\n            value: 9,\r\n        },\r\n        {\r\n            type: 'F05',\r\n            value: 4,\r\n        },\r\n        {\r\n            type: 'F09',\r\n            value: 7,\r\n        },\r\n        {\r\n            type: 'F13',\r\n            value: 2,\r\n        },\r\n        {\r\n            type: 'F16',\r\n            value: 12,\r\n        },\r\n        {\r\n            type: 'F22',\r\n            value: 3,\r\n        },\r\n    ];\r\n\r\n    configPie = {\r\n        appendPadding: 10,\r\n        data: this.dataPie,\r\n        angleField: 'value',\r\n        colorField: 'type',\r\n        height: 450,\r\n        radius: 0.8,\r\n        label: {\r\n            type: 'inner',\r\n            offset: '-0.5',\r\n            content: '{name} {percentage}',\r\n            style: {\r\n                fill: '#fff',\r\n                fontSize: 14,\r\n                textAlign: 'center',\r\n            },\r\n        },\r\n    };\r\n\r\n    dataLine = [\r\n        { mes: 'Junio', consultas: 24 },\r\n        { mes: 'Julio', consultas: 17 },\r\n        { mes: 'Agosto', consultas: 22 },\r\n        { mes: 'Septiembre', consultas: 15 },\r\n        { mes: 'Octubre', consultas: 18 }\r\n    ];\r\n\r\n    configLine = {\r\n        data: this.dataLine,\r\n        height: 410,\r\n        xField: 'mes',\r\n        yField: 'consultas',\r\n        color: '#01B075',\r\n        point: {\r\n            size: 5,\r\n            shape: 'diamond',\r\n            color: '#01B075'\r\n        },\r\n        label: {\r\n            style: {\r\n                fill: '#aaa',\r\n                fontSize: 16,\r\n                stroke: '#01B075'\r\n            },\r\n        },\r\n    };\r\n    render() {\r\n        return (\r\n            <>\r\n\r\n                <br />\r\n                <div className=\"contenedor\">\r\n                    <Row gutter={30}>\r\n                        <Col xs={24} sm={12} lg={6}>\r\n                            <Card className=\"cardsContenedor\" hoverable bordered={false}>\r\n                                <Statistic title=\"Total Hospitales\" value=\"4\" valueStyle={{ color: 'white' }} style={{ backgroundColor: '#4BA6FE', borderRadius: 12 }} className=\"cardsContenido\" />\r\n                            </Card>\r\n                        </Col>\r\n                        <Col xs={24} sm={12} lg={6}>\r\n                            <Card className=\"cardsContenedor\" hoverable bordered={false}>\r\n                                <Statistic title=\"Total Medicos\" value=\"14\" valueStyle={{ color: 'white' }} style={{ backgroundColor: '#FF838A', borderRadius: 12 }} className=\"cardsContenido\" />\r\n                            </Card>\r\n                        </Col>\r\n\r\n                        <Col xs={24} sm={12} lg={6}>\r\n                            <Card className=\"cardsContenedor\" hoverable bordered={false}>\r\n                                <Statistic title=\"Total Pacientes\" value=\"241\" valueStyle={{ color: 'white' }} style={{ backgroundColor: '#18D0C2', borderRadius: 12 }} className=\"cardsContenido\" />\r\n                            </Card>\r\n                        </Col>\r\n                        <Col xs={24} sm={12} lg={6}>\r\n                            <Card className=\"cardsContenedor\" hoverable bordered={false}>\r\n                                <Statistic title=\"Citas Hoy\" value={47} valueStyle={{ color: 'white' }} style={{ backgroundColor: '#847DFC', borderRadius: 12 }} className=\"cardsContenido\" />\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row gutter={20}>\r\n                        <Col xs={24} md={12} style={{textAlign:'center'}}>\r\n                            <h5 style={{color: '#1F263C'}}>Diagnosticos</h5>\r\n                        </Col>\r\n                        <Col xs={24} md={12} style={{textAlign:'center'}}>\r\n                            <h5>Citas</h5>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row gutter={20}>\r\n                        <Col xs={24} md={12} className=\"graficaCircular\">\r\n                            <Pie {...this.configPie} style={{ backgroundColor: '#1F263C', borderRadius: 12 }} />\r\n                        </Col>\r\n\r\n                        <Col xs={24} md={12}>\r\n                            <Line {...this.configLine} style={{ backgroundColor: '#1F263C', padding: '20px', borderRadius: 12 }} />\r\n                        </Col>\r\n                    </Row>\r\n\r\n                </div>\r\n\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home\r\n","import React from 'react'\r\nimport { Form, Input, Button } from 'antd';\r\nconst { TextArea } = Input;\r\n\r\n\r\nconst onFinish = (values) => {\r\n    console.log('Success:', values);\r\n};\r\n\r\nconst onFinishFailed = (errorInfo) => {\r\n    console.log('Failed:', errorInfo);\r\n};\r\n\r\nexport function Historial() {\r\n    return (\r\n        <div className='mainContainer'>\r\n            <h4>Historial de los pacientes del medico</h4>\r\n            <h4>Historial Clinico</h4>\r\n            <Form name=\"basic\" labelCol={{ span: 6 }} wrapperCol={{ span: 12 }} initialValues={{ remember: true }} onFinish={onFinish} onFinishFailed={onFinishFailed} autoComplete=\"off\" >\r\n\r\n                <Form.Item label=\"Paciente\" name=\"username\" rules={[{ required: true, message: 'Please input your username!' }]} >\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item label=\"comentarios\" name=\"id_paciente\" rules={[{ required: true, message: 'Ingresa RFC' }]} >\r\n                    <TextArea rows={4} />\r\n                </Form.Item>\r\n\r\n                <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\r\n                    <Button type=\"primary\" htmlType=\"submit\">\r\n                        Guardar\r\n                    </Button>\r\n                </Form.Item>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { Form, Input, Button, message, Space, Divider, Upload, Switch } from 'antd'\r\nimport { InputNumber, Select } from 'antd';\r\nimport { S_API, API } from '../../resources'\r\nimport { usuario } from '../../resources'\r\nimport { InboxOutlined, UploadOutlined, PlusOutlined, MinusCircleOutlined } from '@ant-design/icons'\r\nconst { Dragger } = Upload;\r\n\r\n\r\nconst { Option } = Select;\r\nconst estados = [\"Michoacan\", \"Morelos\", \"Guerrero\"];\r\n\r\nexport default function Register(props) {\r\n\r\n  const [form] = Form.useForm();\r\n  const [avatar, setAvatar] = useState(props.paciente ? props.paciente.avatar : 'noimg.jpg')\r\n\r\n  async function addHistoria() {\r\n    return await fetch(API + 'historias/add', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        historial: \"Historia clinica al \" + new Date()\r\n      })\r\n    }).then(res => res.json())\r\n      .then(response => {\r\n        console.log('Story Created: ', response);\r\n        return response\r\n      })\r\n      .catch(error => console.error('Error:', error))\r\n  }\r\n\r\n  const createPAtientData = async (usr) => {\r\n    const historia = await addHistoria();\r\n    console.log('historia on Register: ', historia);\r\n    const postBody = {\r\n      usuario: usr,\r\n      historia: historia.id_historia,\r\n      notas: [],\r\n      recetas: []\r\n    }\r\n    console.log('postBodyForExpedient: ', postBody);\r\n    await fetch(API + 'expedientes/add', {\r\n      method: 'POST',\r\n      body: JSON.stringify(postBody),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).then(res => res.json())\r\n      .then(response => {\r\n        console.log('Success:', response);\r\n        message.success(response.message || response.error);\r\n        if (response.message && response.message === 'Expediente creado correctamente') {\r\n          props.setAdding(false)\r\n        }\r\n      })\r\n      .catch(error => console.error('Error:', error))\r\n  }\r\n\r\n  const onFinish = async (values) => {\r\n\r\n    // Register patient\r\n    values.avatar = avatar;\r\n    values.estatus = '1';\r\n    values.rol = 'Paciente';\r\n    values.password = '' + values.telefono;\r\n    values.universidad = '';\r\n    values.certificacion = '';\r\n    values.cedula = '';\r\n    values.horarios = [];\r\n    values.medicos_asignados = props.paciente ? props.paciente.medicos_asignados : [usuario._id];\r\n    values.responsable = props.paciente ? props.paciente.responsable : { nombre: values.res_name, telefono: values.res_phone }\r\n\r\n    delete values.prefix;\r\n    delete values.res_name;\r\n    delete values.res_phone;\r\n\r\n    const url = props.paciente ? API + 'users/updateUser/' + props.paciente._id : S_API + 'register';\r\n\r\n    console.log(values)\r\n    console.log('url: ', url);\r\n    await fetch(url, {\r\n      method: props.paciente ? 'PUT' : 'POST',\r\n      body: JSON.stringify(values),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).then(res => res.json())\r\n      .then(response => {\r\n        console.log('Create User Response:', response);\r\n        message.success(response.message || response.error);\r\n        props.paciente ? console.log('Editing, not creating patient') : createPAtientData(response.user_id);\r\n        response.message === 'Usuario creado correctamente' ?\r\n          props.setAdding(false) : console.log(response);\r\n        response.message === 'Usuario actualizado correctamente' ?\r\n          props.setAdding(false) : console.log(response);\r\n\r\n      })\r\n      .catch(error => console.error('Error:', error))\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log('Failed:', errorInfo);\r\n  };\r\n\r\n  const prefixSelector = (\r\n    <Form.Item name=\"prefix\" noStyle>\r\n      <Select\r\n        defaultValue='+52'\r\n        style={{\r\n          width: 70,\r\n        }}\r\n      >\r\n        <Option value=\"+52\">+52</Option>\r\n      </Select>\r\n    </Form.Item>\r\n  );\r\n  const suffixSelector = (\r\n    <Form.Item name=\"suffix\" noStyle>\r\n      <Select\r\n        style={{\r\n          width: 70,\r\n        }}\r\n      >\r\n        <Option value=\"USD\">$</Option>\r\n        <Option value=\"CNY\">¥</Option>\r\n      </Select>\r\n    </Form.Item>\r\n  );\r\n  //Start upload props Upload File\r\n  const dragDropProps = {\r\n    name: 'file',\r\n    multiple: false,\r\n    action: API + 'imagenes/upload',\r\n\r\n    onChange(info) {\r\n      const { status } = info.file;\r\n\r\n      if (status !== 'uploading') {\r\n        console.log(info.file, info.fileList);\r\n      }\r\n\r\n      if (status === 'done') {\r\n        message.success(`${info.file.name} file uploaded successfully.`);\r\n        console.log('New Files: ', info.file.response.file)\r\n        setAvatar(info.file.response.file)\r\n      } else if (status === 'error') {\r\n        message.error(`${info.file.name} file upload failed.`);\r\n      }\r\n    },\r\n\r\n    // onDrop(e) {\r\n    //   console.log('Dropped files', e.dataTransfer.files);\r\n    // },\r\n  };\r\n  return (\r\n    <div\r\n      style={{ width: '100%' }}\r\n    >\r\n      {\r\n        props.paciente ? <h4>Editar paciente</h4> : <h4>Registrar Paciente</h4>\r\n      }\r\n\r\n      <br />\r\n      {/* <Dragger {...dragDropProps} style={{ height: 70 }}>\r\n        <p className=\"ant-upload-drag-icon\">\r\n          <InboxOutlined />\r\n        </p>\r\n        <p className=\"ant-upload-text\">Arrastra la imagen de perfil o click ara buscar</p>\r\n        <p className=\"ant-upload-hint\">\r\n          Selecciona archivos en formato png, jpeg o webp\r\n        </p>\r\n      </Dragger> */}\r\n\r\n      <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\r\n        <Upload {...dragDropProps}>\r\n          <Button type=\"dashed\" icon={<UploadOutlined style={{ fontSize: 24, color: '#0d6efd' }} />} style={{ width: 400, height: 80 }} block>Selecciona la foto de perfil</Button>\r\n        </Upload>\r\n      </div>\r\n      <br />\r\n      <Form\r\n        // {...formItemLayout}\r\n        labelCol={{ span: 6 }} wrapperCol={{ span: 16 }}\r\n        form={form}\r\n        name=\"register\"\r\n        onFinish={onFinish}\r\n        onFinishFailed={onFinishFailed}\r\n        initialValues={props.paciente}\r\n        scrollToFirstError\r\n      >\r\n\r\n        <Form.Item\r\n          name=\"name\"\r\n          label=\"Nombre\"\r\n          rules={[{ required: true, message: 'Ingresa Nombre y apellidos' }]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"email\"\r\n          label=\"Correo\"\r\n          rules={[{ type: 'email', message: 'Ingresa un correo electronico vaido!' }, { required: true, message: 'Ingresa un correo electronico' }]}>\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        {/* <Form.Item name=\"password\" label=\"Contraseña\" rules={[{ required: true, message: 'Por favor ingrese su contraseña!', },]} hasFeedback >\r\n          <Input.Password />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"confirm\"\r\n          label=\"Confirmar contraseña\"\r\n          dependencies={['password']}\r\n          hasFeedback\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Please confirm your password',\r\n            },\r\n            ({ getFieldValue }) => ({\r\n              validator(_, value) {\r\n                if (!value || getFieldValue('password') === value) {\r\n                  return Promise.resolve();\r\n                }\r\n                return Promise.reject(new Error('Las contraseñas deben coincidir!'));\r\n              },\r\n            }),\r\n          ]}\r\n        >\r\n          <Input.Password />\r\n        </Form.Item> */}\r\n\r\n        <Form.Item\r\n          name=\"telefono\"\r\n          label=\"Telefono\"\r\n          rules={[{ required: true, message: 'Ingresa tu numero de telefono' }]}\r\n        >\r\n          <Input\r\n            // addonBefore={prefixSelector}\r\n            style={{ width: '100%' }}\r\n          />\r\n        </Form.Item>\r\n\r\n        <Divider>Responsable (opcional) </Divider>\r\n        <Form.Item name=\"res_name\" label=\"Nombre Responsable\" >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item name=\"res_phone\" label=\"Telefono Responsable\">\r\n          <Input />\r\n        </Form.Item>\r\n        <Divider />\r\n\r\n        <Form.Item\r\n          name=\"calle\"\r\n          label=\"Calle\"\r\n          rules={[{ required: false, message: 'Ingresa calle', whitespace: true }]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"numexterior\"\r\n          label=\"Num Exterior\"\r\n          rules={[{ required: false, message: 'Ingresa numero exterior' }]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"numinterior\"\r\n          label=\"Num Interior\"\r\n          rules={[{ required: false, message: 'Ingresa numinterior' }]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"Colonia\"\r\n          name=\"colonia\"\r\n          rules={[{ required: false, message: 'Ingresa ' }]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"estado\"\r\n          label=\"Estado\"\r\n          rules={[{ required: true, message: 'Apellido materno', },]}>\r\n          <Select placeholder=\"Elije tu estado\">\r\n            {estados.map(e => <Option value={e}>{e}</Option>)}\r\n          </Select>\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"municipio\"\r\n          label=\"Municipio\"\r\n          rules={[{ required: true, message: 'Ingresa tu municipio' }]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"codigopostal\"\r\n          label=\"Codigo Postal\"\r\n          rules={[{ required: true, message: 'Ingresa codigopostal', },]}>\r\n          <InputNumber style={{ width: '100%', }} />\r\n        </Form.Item>\r\n\r\n        <Form.Item name=\"sexo\" label=\"sexo\" rules={[{ required: true, message: 'Selecciona una opcion' }]}>\r\n          <Select placeholder=\"Elije el sexo\" >\r\n            <Option value=\"H\">H</Option>\r\n            <Option value=\"M\">M</Option>\r\n            <Option value=\"Otro\">Otro</Option>\r\n          </Select>\r\n        </Form.Item>\r\n\r\n        <Form.Item name=\"edad\" label=\"Edad\" rules={[{ required: true, message: 'Ingresa edad' }]} >\r\n          <InputNumber min={1} max={120} />\r\n        </Form.Item>\r\n\r\n        <Form.Item name=\"diagnostico\" label=\"Diagnostico\" rules={[{ required: true, message: 'Ingresa el diagnostico' }]} >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item name=\"peso\" label=\"Peso\" rules={[{ required: true, message: 'Ingresa el peso' }]} >\r\n          <InputNumber min={1} max={200} />\r\n        </Form.Item>\r\n\r\n        <Form.Item name=\"talla\" label=\"Talla\" rules={[{ required: true, message: 'Ingresa la talla' }]} >\r\n          <InputNumber min={1} max={200} />\r\n        </Form.Item>\r\n\r\n        <Form.Item name=\"ocupacion\" label=\"Ocupacion\" rules={[{ required: true, message: 'Ingresa ocupacion' }]} >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item name=\"estado_civil\" label=\"Estado Civil\" rules={[{ required: true, message: 'Ingresa estado civil' }]} >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item name=\"escolaridad\" label=\"Escolaridad\" rules={[{ required: true, message: 'Ingresa escolaridad' }]} >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item name=\"lugar_de_nacimiento\" label=\"Lugar De Nacimiento\" rules={[{ required: true, message: 'Ingresa el lugar de nacimiento' }]} >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item name=\"ciudad\" label=\"Ciudad\" rules={[{ required: true, message: 'Ingresa ciudad' }]} >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item name=\"fuma\" label=\"Fuma\" rules={[{ required: false, message: 'Ingresa tu universidad' }]} >\r\n          <Switch defaultChecked={false} />\r\n        </Form.Item>\r\n\r\n        <Form.Item name=\"alcohol\" label=\"Alcohol\" rules={[{ required: false, message: 'Ingresa tu universidad' }]} >\r\n          <Switch defaultChecked={false} />\r\n        </Form.Item>\r\n\r\n        <Form.Item name=\"drogas\" label=\"Drogas\" rules={[{ required: true, message: 'Selecciona una opcion' }]} >\r\n          <Select placeholder=\"Elije una opcion\" >\r\n            <Option value=\"Antes\">Antes</Option>\r\n            <Option value=\"Ahora\">Ahora</Option>\r\n            <Option value=\"Nunca\">Nunca</Option>\r\n          </Select>\r\n        </Form.Item>\r\n\r\n        <Form.Item name=\"cuales_drogas\" label=\"Cuales Drogas\" rules={[{ required: false, message: 'Selecciona una opcion' }]} >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item name=\"enfermedades_familiares\" label=\"Enfermedades Familiares\" rules={[{ required: false, message: 'Ingresa tu universidad' }]} >\r\n          <Form.List name=\"enfermedades_familiares\" >\r\n            {(fields, { add, remove }, { errors }) => (\r\n              <>\r\n                {fields.map((field, index) => (\r\n                  <Form.Item label='' required={false} key={field.key}>\r\n                    <Form.Item {...field} noStyle\r\n                      validateTrigger={['onChange', 'onBlur']}\r\n                      rules={[{ required: true, whitespace: true, message: \"Ingresa la enfermedad o elimina este campo\" }]}\r\n                    >\r\n                      <Input placeholder=\"Ingresa enfermedad\" style={{ width: fields.length > 1 ? '95%' : '100%' }} />\r\n                    </Form.Item>\r\n                    {fields.length > 1 ? (\r\n                      <MinusCircleOutlined\r\n                        className=\"dynamic-delete-button\"\r\n                        onClick={() => remove(field.name)}\r\n                      />\r\n                    ) : null}\r\n                  </Form.Item>\r\n                ))}\r\n                <Form.Item>\r\n                  <Button type=\"dashed\" onClick={() => add()} icon={<PlusOutlined />}>\r\n                    Add field\r\n                  </Button>\r\n\r\n                  <Form.ErrorList errors={errors} />\r\n                </Form.Item>\r\n              </>\r\n            )}\r\n          </Form.List>\r\n        </Form.Item>\r\n\r\n        <Form.Item name=\"enfermedades_medicas\" label=\"Enfermedades Medicas\" rules={[{ required: false, message: 'Ingresa tu universidad' }]} >\r\n          <Form.List name=\"enfermedades_medicas\">\r\n            {(fields, { add, remove }, { errors }) => (\r\n              <>\r\n                {fields.map((field, index) => (\r\n                  <Form.Item label='' required={false} key={field.key}>\r\n                    <Form.Item {...field} noStyle\r\n                      validateTrigger={['onChange', 'onBlur']}\r\n                      rules={[{ required: true, whitespace: true, message: \"Ingresa la enfermedad o elimina este campo\" }]}\r\n                    >\r\n                      <Input placeholder=\"Ingresa enfermedad\" style={{ width: fields.length > 1 ? '95%' : '100%' }}/>\r\n                    </Form.Item>\r\n                    {fields.length > 1 ? (\r\n                      <MinusCircleOutlined\r\n                        className=\"dynamic-delete-button\"\r\n                        onClick={() => remove(field.name)}\r\n                      />\r\n                    ) : null}\r\n                  </Form.Item>\r\n                ))}\r\n                <Form.Item>\r\n                  <Button type=\"dashed\" onClick={() => add()} icon={<PlusOutlined />}>\r\n                    Add field\r\n                  </Button>\r\n\r\n                  <Form.ErrorList errors={errors} />\r\n                </Form.Item>\r\n              </>\r\n            )}\r\n          </Form.List>\r\n        </Form.Item>\r\n\r\n        <Form.Item name=\"tratamiento_actual\" label=\"Tratamiento actual\" rules={[{ required: false, message: 'Ingresa tu universidad' }]} >\r\n          <Form.List name=\"tratamiento_actual\" >\r\n            {(fields, { add, remove }, { errors }) => (\r\n              <>\r\n                {fields.map((field, index) => (\r\n                  <Form.Item\r\n                    // label={`Tratamiento ${index + 1}`} \r\n                    label=''\r\n                    required={false} key={field.key}>\r\n                    <Form.Item {...field} noStyle\r\n                      validateTrigger={['onChange', 'onBlur']}\r\n                      rules={[{ required: true, whitespace: true, message: \"Ingresa la enfermedad o elimina este campo\" }]}\r\n                    >\r\n                      <Input placeholder=\"Ingresa enfermedad\" style={{ width: fields.length > 1 ? '95%' : '100%' }}/>\r\n                    </Form.Item>\r\n                    {fields.length > 1 ? (\r\n                      <MinusCircleOutlined\r\n                        className=\"dynamic-delete-button\"\r\n                        onClick={() => remove(field.name)}\r\n                      />\r\n                    ) : null}\r\n                  </Form.Item>\r\n                ))}\r\n                <Form.Item>\r\n                  <Button type=\"dashed\" onClick={() => add()} icon={<PlusOutlined />}>\r\n                    Add field\r\n                  </Button>\r\n\r\n                  <Form.ErrorList errors={errors} />\r\n                </Form.Item>\r\n              </>\r\n            )}\r\n          </Form.List>\r\n        </Form.Item>\r\n\r\n        <Form.Item label='*'>\r\n          <Space>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              Registrar\r\n            </Button>\r\n            <Button onClick={() => props.setAdding(false)}>Cancelar</Button>\r\n          </Space>\r\n\r\n        </Form.Item>\r\n      </Form>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { getData } from '../../resources';\r\nimport { Row, Col } from 'antd';\r\nimport { Avatar, Card, Space, Button } from 'antd';\r\nimport { UserOutlined } from '@ant-design/icons';\r\nimport Loading from '../../loading';\r\nimport { FormOutlined } from '@ant-design/icons';\r\nimport Register from './register.patient';\r\n\r\n\r\nexport default function DetallesPaciente(props) {\r\n    const [pacienteData, setPacienteData] = useState([]);\r\n    const [pacienteLoading, setPacienteLoading] = useState(true);\r\n    const [editing, setEditing] = useState(false)\r\n\r\n    useEffect(() => {\r\n        getData(`getuser/${props.paciente}`).then(rs => { console.log(\"DetallePac: \", rs); setPacienteData(rs); setPacienteLoading(false) });\r\n    }, [props.paciente])\r\n\r\n    const ProfileDetails = () => {\r\n        return editing ?\r\n            <>\r\n                <Register setAdding={setEditing} paciente={pacienteData} />\r\n            </> :\r\n            <Card style={{ width: '98%', borderRadius: 12 }} bordered={false}>\r\n                <Space><h5>Datos del Paciente</h5><Button onClick={() => setEditing(true)} size='small' disabled={!props.paciente} type=\"primary\" shape=\"circle\" icon={<FormOutlined />} /></Space>\r\n                <Row>\r\n                    <Col span={8}>\r\n                        <Row justify=\"center\"><Col span={12}>\r\n                            {\r\n                                pacienteData.avatar.length > 9 ?\r\n                                    <img width={128} src={'https://api.recreamed.com/images/' + pacienteData.avatar} alt='ProfilePic' /> :\r\n                                    <Avatar size={128} icon={<UserOutlined />} />\r\n                            }\r\n                        </Col></Row>\r\n                        <br />\r\n                        <Row><Col span={8}>Nombre:</Col><Col span={10}>{pacienteData.name}</Col></Row>\r\n                        <Row><Col span={8}>Correo:</Col><Col span={10}>{pacienteData.email}</Col></Row>\r\n                        <Row><Col span={8}>Telefono:</Col><Col span={10}>{pacienteData.telefono}</Col></Row>\r\n                        <Row><Col span={8}>Estado:</Col><Col span={10}> {pacienteData.estado}</Col></Row>\r\n                        <Row><Col span={8}>Municipio:</Col><Col span={10}> {pacienteData.municipio}</Col></Row>\r\n                        <Row><Col span={8}>Colonia:</Col><Col span={10}> {pacienteData.colonia}</Col></Row>\r\n                        <Row><Col span={8}>Calle:</Col><Col span={10}> {pacienteData.calle}</Col></Row>\r\n                    </Col>\r\n                    <Col span={8}>\r\n                        <Row><Col span={8}>C.P.:</Col><Col span={10}>{pacienteData.codigopostal}</Col> </Row>\r\n                        <Row><Col span={8}>Sexo:</Col><Col span={10}>{pacienteData.sexo}</Col> </Row>\r\n                        <Row><Col span={8}>Edad:</Col><Col span={10}>{pacienteData.edad}</Col> </Row>\r\n                        <Row><Col span={8}>Peso:</Col><Col span={10}>{pacienteData.peso}</Col> </Row>\r\n                        <Row><Col span={8}>Talla:</Col><Col span={10}>{pacienteData.talla}</Col></Row>\r\n                        <Row><Col span={8}>Ocupacion:</Col><Col span={10}> {pacienteData.ocupacion}</Col></Row>\r\n                        <Row><Col span={8}>Diagnostico:</Col><Col span={10}>{pacienteData.diagnostico}</Col> </Row>\r\n                        <Row><Col span={8}>Estado Civil:</Col><Col span={10}> {pacienteData.estado_civil}</Col></Row>\r\n                        <Row><Col span={8}>Escolaridad:</Col><Col span={10}> {pacienteData.escolaridad}</Col></Row>\r\n                        <Row><Col span={8}>Ciudad:</Col><Col span={10}> {pacienteData.ciudad}</Col></Row>\r\n                        <Row><Col span={8}>Luga de Nacimiento:</Col><Col span={10}>{pacienteData.lugar_de_nacimiento}</Col> </Row>\r\n                        <Row><Col span={8}>Fuma:</Col><Col span={10}>{pacienteData.fuma}</Col> </Row>\r\n                        <Row><Col span={8}>alcohol:</Col><Col span={10}>{pacienteData.alcohol}</Col> </Row>\r\n                    </Col>\r\n                    <Col span={8}>\r\n                        <Row><Col span={10}>drogas:</Col><Col span={10}>{pacienteData.drogas}</Col> </Row>\r\n                        <Row><Col span={10}>cuales_drogas:</Col><Col span={10}>{pacienteData.cuales_drogas}</Col> </Row>\r\n                        <Row><Col span={10}>Diagnostico:</Col><Col span={10}>{pacienteData.peso}</Col> </Row>\r\n                        <Row><Col span={10}>Enfermedades familiares:</Col><Col span={10}>{pacienteData.enfermedades_familiares.map((e) => <p>{e}</p>)}</Col> </Row>\r\n                        <Row><Col span={10}>Enfermedades Medicas:</Col><Col span={10}>{pacienteData.enfermedades_medicas.map((e) => <p>{e}</p>)}</Col> </Row>\r\n                        <Row><Col span={10}>Tratamiento Actual:</Col><Col span={10}>{pacienteData.tratamiento_actual.map((t) => <p>{toString}</p>)}</Col> </Row>\r\n                    </Col>\r\n                </Row>\r\n            </Card>\r\n    }\r\n\r\n    return (\r\n        // <div className='mainContainer'>\r\n        <div>\r\n\r\n            {pacienteLoading ? <Loading /> :\r\n                <Row>\r\n                    <ProfileDetails />\r\n                </Row>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Space, Button, Select, Tabs, Row, Col } from 'antd'\r\nimport { API } from '../../resources'\r\nimport Loading from '../../loading'\r\nimport { usuario } from '../../resources'\r\nimport Expedientes from '../expedientes/expedientes'\r\nimport DetallesPaciente from './detalles.paciente'\r\nimport Register from './register.patient'\r\nimport { PlusOutlined, PhoneOutlined, UserOutlined } from '@ant-design/icons';\r\nconst { TabPane } = Tabs;\r\nconst { Option } = Select;\r\n\r\nexport default function MainPacientes() {\r\n\r\n  const [pacientesData, setPacientesData] = useState([])\r\n  const [isLoading, setIsLoading] = useState(true)\r\n  const [paciente, setPaciente] = useState(null)\r\n  const [adding, setAdding] = useState(false)\r\n  const [activePatient, setActivePatient] = useState(pacientesData[0]?._id)\r\n\r\n  useEffect(() => {\r\n    getPacientesData()\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    getPacientesData()\r\n  }, [adding])\r\n\r\n  const getPacientesData = () => {\r\n    fetch(API + `mispacientes/${usuario.medicos_asignados[0]}`)\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        data.forEach(paciente => {\r\n          paciente.value = paciente.name;\r\n        });\r\n        console.log(data); setPacientesData(data);\r\n        if (data && data.length > 0) setPaciente(data[0]._id)\r\n      })\r\n      .finally(() => setIsLoading(false))\r\n  }\r\n\r\n  const onSelect = (data) => {\r\n    console.log('onSelect', data);\r\n  };\r\n\r\n  const onChange = (data) => {\r\n    console.log('onchangeSearchInput', data)\r\n    setActivePatient(data)\r\n  };\r\n\r\n  const onSearch = (value) => {\r\n    console.log('search:', value);\r\n  };\r\n\r\n  return (\r\n    <div className='mainContainer'>\r\n      <Row justify=\"start\">\r\n        <Col ><h4 >Pacientes</h4> </Col>\r\n        <Col style={{ marginLeft: 12 }}><Button style={{ marginTop: 4 }} onClick={() => setAdding(!adding)} size='small' type=\"primary\" shape=\"circle\" icon={<PlusOutlined />} /> </Col>\r\n        <Col style={{ marginLeft: 16 }}>\r\n          <div className=\"my-select-container\">\r\n            <Select\r\n              // Widget para buscar pacientes\r\n              style={{ borderRadius: 8 }}\r\n              dropdownStyle={{ borderRadius: 8 }}\r\n              showSearch\r\n              placeholder=\"Buscar paciente\"\r\n              optionFilterProp=\"children\"\r\n              onChange={onChange}\r\n              onSearch={onSearch}\r\n              filterOption={(input, option) => option.children.toLowerCase().includes(input.toLowerCase())}\r\n            >\r\n              {\r\n                pacientesData.map((p) => <Option value={p._id}>{p.name}</Option>)\r\n              }\r\n            </Select>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n      {\r\n        isLoading ? <Loading /> :\r\n          adding ? <Register setAdding={setAdding} /> :\r\n            <div style={{ border: '1px solid #D6D6D6', borderRadius: 12, padding: 12 }}>\r\n              <Tabs activeKey={activePatient} tabPosition='left' onTabClick={(k, e) => { console.log('OnTABClick', k); setPaciente(k) }} style={{ marginTop: 6 }}>\r\n                {\r\n                  pacientesData.map((pt) => {\r\n                    return <TabPane tab={<><UserOutlined />{pt.name} <PhoneOutlined style={{ marginBottom: 2 }} />{pt.telefono}</>} key={pt._id} onClick={() => { setPaciente(pt._id) }}>\r\n                      <DetallesPaciente paciente={pt._id} />\r\n                    </TabPane>\r\n                  })\r\n                }\r\n              </Tabs>\r\n            </div>\r\n      }\r\n      <br />\r\n\r\n      {/* <Expedientes paciente={paciente} /> */}\r\n\r\n\r\n    </div >\r\n  )\r\n\r\n}\r\n","import { Space, Table, Tag } from 'antd';\r\nimport React from 'react';\r\nconst columns = [\r\n    {\r\n        title: 'Paciente',\r\n        dataIndex: 'Paciente',\r\n        key: 'Paciente',\r\n        render: (text) => <a>{text}</a>,\r\n    },\r\n    {\r\n        title: 'Pago',\r\n        dataIndex: 'Pago',\r\n        key: 'Pago',\r\n    },\r\n    {\r\n        title: 'Forma de pago',\r\n        key: 'FormaDePago',\r\n        dataIndex: 'FormaDePago',\r\n        render: (_, { FormaDePago }) => (\r\n            <>\r\n                {FormaDePago.map((tag) => {\r\n                    let color = tag === 'efectivo' ? 'geekblue' : 'green';\r\n                    if (tag === 'loser') {\r\n                        color = 'volcano';\r\n                    }\r\n                    return (\r\n                        <Tag color={color} key={tag}>\r\n                            {tag.toUpperCase()}\r\n                        </Tag>\r\n                    );\r\n                })}\r\n            </>\r\n        ),\r\n    },\r\n    {\r\n        title: 'Estado',\r\n        key: 'Estado',\r\n        dataIndex: 'Estado',\r\n        render: (_, { Estado }) => (\r\n            <>\r\n                {Estado.map((tag) => {\r\n                    let color = tag === 'pagado' ? 'geekblue' : 'green';\r\n                    if (tag === 'sin pagar') {\r\n                        color = 'volcano';\r\n                    }\r\n                    return (\r\n                        <Tag color={color} key={tag}>\r\n                            {tag.toUpperCase()}\r\n                        </Tag>\r\n                    );\r\n                })}\r\n            </>\r\n        ),\r\n    },\r\n    {\r\n        title: 'Cita',\r\n        key: 'Cita',\r\n        render: (_, record) => (\r\n            <Space size=\"middle\">\r\n                {/* <a>Invite {record.name}</a> */}\r\n                <a href='#'>Ir a la cita</a>\r\n            </Space>\r\n        ),\r\n    },\r\n];\r\nconst data = [\r\n    {\r\n        key: '1',\r\n        Paciente: 'Jorge Suarez',\r\n        Pago: 32,\r\n        FormaDePago: ['efectivo'],\r\n        Estado: ['pagado'],\r\n    },\r\n    {\r\n        key: '2',\r\n        Paciente: 'Jorge Suarez',\r\n        Pago: 42,\r\n        FormaDePago: ['tarjeta'],\r\n        Estado: ['por liberar'],\r\n    },\r\n    {\r\n        key: '3',\r\n        Paciente: 'Ignacio Lopez',\r\n        Pago: 32,\r\n        FormaDePago: ['efectivo'],\r\n        Estado: ['pagado'],\r\n    },\r\n    {\r\n        key: '4',\r\n        Paciente: 'Jorge Suarez',\r\n        Pago: 32,\r\n        FormaDePago: ['tarjeta'],\r\n        Estado: ['sin pagar'],\r\n    },\r\n];\r\nexport default function Balances() {\r\n    return (\r\n        <div className='mainContainer'>\r\n            <Table columns={columns} dataSource={data} />\r\n            <div style={{ height: 200 }}></div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Button } from 'antd'\r\nimport { Container, Nav, Navbar } from \"react-bootstrap\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport Patients from './pacientesDash/main.patients'\r\nimport { Citas } from './citas'\r\nimport Expedientes from './expedientes/expedientes'\r\n// import Recetas from './recetas'\r\nimport Perfil from './perfil'\r\nimport { DoctorNotas } from './doctorNotas'\r\nimport Home from './home/home'\r\nimport icon from '../assets/Icon.png';\r\nimport { Footer, logout } from '../resources'\r\nimport { usuario } from '../resources'\r\nimport { Historial } from './historial';\r\nimport MainPacientes from './pacientes/main.pacientes';\r\nimport Escalas from '../escalas/escalasMenu';\r\nimport Balances from './balances';\r\n\r\nfunction Navigator() {\r\n  console.log(\"DoctorApp\", usuario.name)\r\n  return <Navbar bg=\"light\" expand=\"lg\">\r\n    <Container>\r\n      <Navbar.Brand href=\"#home\" style={{ fontFamily: 'Arial', color: '#515a6e' }}>\r\n        <img\r\n          src={icon}\r\n          width=\"40\"\r\n          height=\"35\"\r\n          className=\"d-inline-block align-top\"\r\n          alt=\"Recreamed logo\"\r\n          style={{ marginRight: 6 }}\r\n        />\r\n        Bienvenido {usuario.name}\r\n      </Navbar.Brand>\r\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n      <Navbar.Collapse id=\"basic-navbar-nav\">\r\n        <Nav className=\"me-auto\">\r\n          <Nav.Link href=\"/\">Inicio</Nav.Link>\r\n          {/* <Nav.Link href=\"/pacientesdash\">PacientesDash</Nav.Link> */}\r\n          <Nav.Link href=\"/pacientes\" >Pacientes</Nav.Link>\r\n          <Nav.Link href=\"/citas\">Citas</Nav.Link>\r\n          <Nav.Link href=\"/escalas\">Escalas</Nav.Link>\r\n          <Nav.Link href=\"/balances\">Ingresos</Nav.Link>\r\n          {/* <Nav.Link href=\"/expedientes\">Expedientes</Nav.Link> */}\r\n          {/* <Nav.Link href=\"/recetas\">Recetas</Nav.Link> */}\r\n          {/* <Nav.Link href=\"/notas\">Notas</Nav.Link> */}\r\n          {/* <Nav.Link href=\"/historial\">Historiales</Nav.Link> */}\r\n          <Nav.Link href=\"/perfil\">Mi Perfil</Nav.Link>\r\n        </Nav>\r\n      </Navbar.Collapse>\r\n      <Navbar.Collapse className=\"justify-content-end\">\r\n        <Button onClick={logout} >Cerrar Sesion</Button>\r\n      </Navbar.Collapse>\r\n    </Container>\r\n  </Navbar>\r\n\r\n}\r\n\r\nexport default function RecepcionApp() {\r\n\r\n  return (\r\n    <Router>\r\n\r\n      <Navigator />\r\n\r\n      <Switch>\r\n\r\n        <Route path=\"/pacientesdash\">\r\n          <Patients />\r\n        </Route>\r\n\r\n        <Route path=\"/pacientes\">\r\n          <MainPacientes />\r\n        </Route>\r\n\r\n        <Route path=\"/citas\">\r\n          <Citas />\r\n        </Route>\r\n\r\n        <Route path=\"/expedientes\">\r\n          <Expedientes />\r\n        </Route>\r\n\r\n        {/* <Route path=\"/Recetas\">\r\n          <Recetas />\r\n        </Route> */}\r\n\r\n        <Route path=\"/perfil\">\r\n          <Perfil />\r\n        </Route>\r\n\r\n        <Route path=\"/notas\">\r\n          <DoctorNotas />\r\n        </Route>\r\n\r\n        <Route path=\"/historial\">\r\n          <Historial />\r\n        </Route>\r\n      \r\n        <Route path=\"/balances\">\r\n          <Balances/>\r\n        </Route>\r\n\r\n        <Route path=\"/escalas\">\r\n          {/* This is taken from escalas directory*/}\r\n          <Escalas />\r\n        </Route>\r\n\r\n        <Route path=\"/\">\r\n          <Home />\r\n        </Route>\r\n\r\n      </Switch>\r\n\r\n      <Footer />\r\n    </Router>\r\n  )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Table, Space, Row, Col, Button, Modal, Form, Input, message, DatePicker } from 'antd';\r\nimport { Calendar, Badge } from 'antd';\r\nimport { API, getData } from '../resources';\r\nimport { usuario } from '../resources';\r\nimport Loading from '../loading'\r\n// import { API } from '../resources'\r\n\r\nexport default function MisCitas() {\r\n    const [isModalVisible, setIsModalVisible] = useState(false);\r\n    const [citasData, setCitasData] = useState([])\r\n    const [isLoading, setIsLoading] = useState(true)\r\n    const [cita, setCita] = useState({})\r\n    const [isDetailVisible, setIsDetailVisible] = useState(false);\r\n\r\n    useEffect(() => {\r\n        getCitasData()\r\n        // getData(`receta/${props.receta}`).then(rs => { setRecetaData(rs); setRecetaLoading(false) })\r\n\r\n    }, [])\r\n\r\n    const getCitasData = () => {\r\n        fetch(API + `citas/${usuario._id}`)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log(data); setCitasData(data);\r\n            })\r\n            .finally(() => setIsLoading(false))\r\n    }\r\n    \r\n    // Add Modal\r\n    const showModal = () => { setIsModalVisible(true) };\r\n    const handleOk = () => { setIsModalVisible(false) };\r\n    const handleCancel = () => { setIsModalVisible(false) };\r\n    // Details Modal\r\n    const handleDetailOk = () => { setIsDetailVisible(false); };\r\n    const handleDetailCancel = () => { setIsDetailVisible(false); };\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Fecha y Hora',\r\n            dataIndex: 'fecha_hora',\r\n            key: 'fecha_hora',\r\n            render: text => <a>{text}</a>,\r\n        },\r\n        {\r\n            title: 'Paciente',\r\n            dataIndex: 'id_usuario',\r\n            key: 'id_usuario',\r\n        },\r\n        {\r\n            title: 'Sucursal',\r\n            dataIndex: 'id_sucursal',\r\n            key: 'v',\r\n        },\r\n        {\r\n            title: 'Comentarios',\r\n            dataIndex: 'comentarios',\r\n            key: 'comentarios',\r\n        },\r\n        {\r\n            title: 'Detalles',\r\n            key: 'detalles',\r\n            render: (text, record) => (\r\n                <Space size=\"middle\">\r\n                    {/* <a href>Enlace</a> */}\r\n                    <Button>Enlace</Button>\r\n                </Space>\r\n            ),\r\n        },\r\n    ];\r\n\r\n    const onFinish = (values) => {\r\n        values.medico = usuario._id;\r\n        console.log('Valores:', values);\r\n        fetch(API + 'citas/add', {\r\n            method: 'POST',\r\n            body: JSON.stringify(values),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }).then(res => res.json())\r\n            .then(response => { console.log('Success:', response); message.success(response.message || response.error); })\r\n            .catch(error => console.error('Error:', error))\r\n            .finally(() => { getCitasData(); setIsModalVisible(false) })\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    // DatePicker\r\n    function onChange(value, dateString) {\r\n        console.log('Selected Time: ', value);\r\n        console.log('Formatted Selected Time: ', dateString);\r\n    }\r\n    function onOk(value) {\r\n        console.log('onOk: ', value);\r\n    }\r\n\r\n    //Calendar Functions\r\n    const getMonthData = (value) => {\r\n        if (value.month() === 8) {\r\n            return 1394;\r\n        }\r\n    };\r\n    const monthCellRender = (value) => {\r\n        const num = getMonthData(value);\r\n        return num ? (\r\n            <div className=\"notes-month\">\r\n                <section>{num}</section>\r\n                <span>Backlog number</span>\r\n            </div>\r\n        ) : null;\r\n    };\r\n\r\n    const dateCellRender = (value) => {\r\n        // const hoy = value.format('L');\r\n        let hoy = value.format();\r\n        hoy = hoy.substring(0, 10)\r\n        return (\r\n            <ul className=\"events\">\r\n                {citasData.map((cita) => {\r\n\r\n                    cita.fecha_hora = cita.fecha_hora.substring(0, 10);\r\n                    return cita.fecha_hora === hoy ?\r\n                        <li style={{ listStyleType: 'none' }} key={cita._id}>\r\n                            <Badge status='success' text={cita.medico.name} onClick={() => { setCita(cita); setIsDetailVisible(true); }} />\r\n                        </li>\r\n                        : <></>\r\n\r\n                })\r\n                }\r\n            </ul >\r\n        );\r\n    };\r\n\r\n    return (\r\n        <div className='mainContainer'>\r\n            <Row>\r\n                <Col span={8}><h4>CALENDARIO DE CITAS</h4></Col>\r\n                <Col>\r\n                    <Button type=\"primary\" onClick={showModal}>\r\n                        Nueva Cita\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n\r\n            {/* {isLoading ? <Loading /> : <Table columns={columns} dataSource={citasData} />} */}\r\n\r\n            <Calendar dateCellRender={dateCellRender} monthCellRender={monthCellRender} />\r\n\r\n\r\n\r\n            <Modal title=\"Nuevo expediente\" visible={isModalVisible} onOk={handleOk} onCancel={handleCancel}>\r\n                <Form name=\"expediente\" labelCol={{ span: 8 }} wrapperCol={{ span: 12 }} onFinish={onFinish} onFinishFailed={onFinishFailed} autoComplete=\"off\" >\r\n\r\n                    <Form.Item label=\"Paciente\" name=\"usuario\" rules={[{ required: true, message: 'Ingresa RFC' }]} >\r\n                        <Input />\r\n                    </Form.Item>\r\n                    <Form.Item label=\"Sucursal\" name=\"sucursal\" rules={[{ required: true, message: 'Ingresa RFC' }]} >\r\n                        <Input />\r\n                    </Form.Item>\r\n                    <Form.Item label=\"Fecha y Hora\" name=\"fecha_hora\" rules={[{ required: true, message: 'Selecciona Fecha y Hora' }]} >\r\n                        <DatePicker showTime onChange={onChange} onOk={onOk} placeholder='Selecciona Fecha y Hora' />\r\n                    </Form.Item>\r\n                    <Form.Item label=\"Enlace a la reunion\" name=\"id_reunion\" rules={[{ required: true, message: 'Ingresa RFC' }]} >\r\n                        <Input />\r\n                    </Form.Item>\r\n                    <Form.Item label=\"Contraseña\" name=\"password_reunion\" rules={[{ required: true, message: 'Ingresa RFC' }]} >\r\n                        <Input placeholder='Opcional' />\r\n                    </Form.Item>\r\n                    <Form.Item label=\"Comentarios\" name=\"comentarios\" rules={[{ required: true, message: 'Ingresa RFC' }]} >\r\n                        <Input />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\r\n                        <Button type=\"primary\" htmlType=\"submit\" form='expediente'>\r\n                            Guardar\r\n                        </Button>\r\n                    </Form.Item>\r\n                </Form>\r\n            </Modal>\r\n            <Modal title=\"Detalles de la cita\" visible={isDetailVisible} onOk={handleDetailOk} onCancel={handleDetailCancel}>\r\n                {\r\n                    cita ?\r\n                        <>\r\n                            <p>Paciente: {cita.usuario?.name}</p>\r\n                            <p>fecha y hora: {cita.fecha_hora}</p>\r\n                            <p>Sucursal: {cita.sucursal?.nombre}</p>\r\n                            <p>Comentarios: {cita.comentarios}</p>\r\n                            <p> <a href={cita.id_reunion} target='_blank' rel='noreferrer'>ir a la cita </a> </p>\r\n                        </>\r\n                        :\r\n                        <p>Sin cita seleccionada</p>\r\n                }\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { Table, Tag, Space, Button, Modal } from 'antd';\r\n\r\n\r\nexport default function Recetas() {\r\n\r\n    const [isModalVisible, setIsModalVisible] = useState(false);\r\n    const showModal = () => {\r\n        setIsModalVisible(true);\r\n    };\r\n\r\n    const handleOk = () => {\r\n        setIsModalVisible(false);\r\n    };\r\n\r\n    const handleCancel = () => {\r\n        setIsModalVisible(false);\r\n    };\r\n    const columns = [\r\n        {\r\n            title: 'ID Receta',\r\n            dataIndex: 'key',\r\n            key: '_id',\r\n            render: text => <a>{text}</a>,\r\n        },\r\n        {\r\n            title: 'ID Nota',\r\n            dataIndex: 'id_nota',\r\n            key: 'id_nota',\r\n        },\r\n        {\r\n            title: 'Prescripcion',\r\n            dataIndex: 'prescripcion',\r\n            key: 'prescripcion',\r\n        },\r\n        {\r\n            title: 'Detalles',\r\n            key: 'action',\r\n            render: (text, record) => (\r\n                <Space size=\"middle\">\r\n                    <Button onClick={showModal}>Detalles</Button>\r\n                </Space>\r\n            ),\r\n        },\r\n    ];\r\n\r\n    const data = [\r\n        {\r\n            key: \"62570ab89a6437369f835be7\",\r\n            id_nota: \"62570a9a9a6437369f835be5\",\r\n            prescripcion: \"Paracetamol cada 8 horas\",\r\n            createdAt: \"2022-04-13T17:39:04.541Z\",\r\n            updatedAt: \"2022-04-13T17:39:04.541Z\",\r\n            __v: 0\r\n        },\r\n        {\r\n            key: \"62570ab89a6437369f835be8\",\r\n            id_nota: \"62570a9a9a6437369f835be5\",\r\n            prescripcion: \"Ibuprofeno\",\r\n            createdAt: \"2022-04-13T17:39:04.541Z\",\r\n            updatedAt: \"2022-04-13T17:39:04.541Z\",\r\n            __v: 0\r\n        }\r\n    ];\r\n    return (\r\n        <div className='mainContainer'>\r\n            <h4>Mis Recetas</h4>\r\n            \r\n            <Table columns={columns} dataSource={data} />\r\n\r\n            <Modal title=\"Basic Modal\" visible={isModalVisible} onOk={handleOk} onCancel={handleCancel}>\r\n\r\n                <p> _id\": \"62570ab89a6437369f835be7\",</p>\r\n                <p> id_nota\": \"62570a9a9a6437369f835be5\",</p>\r\n                <p> prescripcion\": \"Paracetamol cada 8 horas\",</p>\r\n                <p> createdAt\": \"2022-04-13T17:39:04.541Z\",</p>\r\n                <p> updatedAt\": \"2022-04-13T17:39:04.541Z\",</p>\r\n                <p> __v\": 0</p>\r\n\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Form, Input, Button, message, Space, Row, Col, Upload } from 'antd'\r\nimport { MinusCircleOutlined, PlusOutlined, InboxOutlined } from '@ant-design/icons';\r\nimport { InputNumber, Select } from 'antd';\r\nimport { S_API, getData, API } from '../resources'\r\nconst { Option } = Select;\r\nconst estados = [\"Michoacan\", \"Morelos\", \"Guerrero\"];\r\nconst { Dragger } = Upload;\r\n\r\n\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    xs: {\r\n      span: 24,\r\n    },\r\n    sm: {\r\n      span: 8,\r\n    },\r\n  },\r\n  wrapperCol: {\r\n    xs: {\r\n      span: 24,\r\n    },\r\n    sm: {\r\n      span: 14,\r\n    },\r\n  },\r\n};\r\nconst tailFormItemLayout = {\r\n  wrapperCol: {\r\n    xs: {\r\n      span: 24,\r\n      offset: 0,\r\n    },\r\n    sm: {\r\n      span: 16,\r\n      offset: 8,\r\n    },\r\n  },\r\n};\r\nexport default function PerfilEdit(props) {\r\n\r\n  const [form] = Form.useForm();\r\n\r\n  const [sucursales, setSucursales] = useState([]);\r\n  const [sucursalesLoading, setSucursalesLoading] = useState(true);\r\n  const [avatar, setAvatar] = useState(props.perfil.avatar)\r\n\r\n  //Start upload props Upload File\r\n  const dragDropProps = {\r\n    name: 'file',\r\n    multiple: false,\r\n    action: API + 'imagenes/upload',\r\n\r\n    onChange(info) {\r\n      const { status } = info.file;\r\n\r\n      if (status !== 'uploading') {\r\n        console.log(info.file, info.fileList);\r\n      }\r\n\r\n      if (status === 'done') {\r\n        message.success(`${info.file.name} file uploaded successfully.`);\r\n        console.log('New Files: ', info.file.response.file)\r\n        setAvatar(info.file.response.file)\r\n      } else if (status === 'error') {\r\n        message.error(`${info.file.name} file upload failed.`);\r\n      }\r\n    },\r\n\r\n    onDrop(e) {\r\n      console.log('Dropped files', e.dataTransfer.files);\r\n    },\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log('received Medic: ', props.perfil);\r\n    getData('sucursales').then((rs) => { setSucursales(rs); setSucursalesLoading(false) })\r\n  }, [])\r\n\r\n\r\n\r\n  const onFinish = (values) => {\r\n    values.avatar = avatar;\r\n    values.estatus = '1';\r\n    values.rol = 'Medico';\r\n    delete values.confirm;\r\n    delete values.prefix;\r\n\r\n    console.log('ready to send', values)\r\n    fetch(S_API + 'register', {\r\n      method: 'POST',\r\n      body: JSON.stringify(values),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).then(res => res.json())\r\n      .then(response => {\r\n        console.log('Success:', response);\r\n        response.message && response.message === 'Usuario creado correctamente' ?\r\n          window.location.href = 'doctores' : message.error(response.error);\r\n      })\r\n      .catch(error => console.error('Error:', error))\r\n  };\r\n\r\n  const onFinishEdit = (values) => {\r\n    values.avatar = avatar;\r\n    // values.estatus = '1';\r\n    // values.rol = 'Medico';\r\n    // delete values.confirm;\r\n    // delete values.prefix;\r\n\r\n    console.log('ready to send', values)\r\n    fetch(API + 'users/updateUser/' + props.perfil._id, {\r\n      method: 'PUt',\r\n      body: JSON.stringify(values),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).then(res => res.json())\r\n      .then(response => {\r\n        console.log('Success:', response);\r\n        response.message && response.message === 'Usuario actualizado correctamente' ?\r\n          props.setEditing(false) : message.error(response.error);\r\n      })\r\n      .catch(error => console.error('Error:', error))\r\n  };\r\n\r\n  const prefixSelector = (\r\n    <Form.Item name=\"prefix\" noStyle>\r\n      <Select\r\n        style={{\r\n          width: 70,\r\n        }}\r\n      >\r\n        <Option value=\"+52\">+52</Option>\r\n      </Select>\r\n    </Form.Item>\r\n  );\r\n  const suffixSelector = (\r\n    <Form.Item name=\"suffix\" noStyle>\r\n      <Select\r\n        style={{\r\n          width: 70,\r\n        }}\r\n      >\r\n        <Option value=\"USD\">$</Option>\r\n        <Option value=\"CNY\">¥</Option>\r\n      </Select>\r\n    </Form.Item>\r\n  );\r\n\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log('Failed:', errorInfo);\r\n  };\r\n  return (\r\n    <div>\r\n      <h4>Editar perfil</h4>\r\n      <br />\r\n      <Dragger {...dragDropProps}>\r\n        <p className=\"ant-upload-drag-icon\">\r\n          <InboxOutlined />\r\n        </p>\r\n        <p className=\"ant-upload-text\">Arrastra la imagen de perfil o click ara buscar</p>\r\n        <p className=\"ant-upload-hint\">\r\n          Selecciona archivos en formato png, jpeg o webp\r\n        </p>\r\n      </Dragger>\r\n      <br />\r\n      <Form\r\n        {...formItemLayout}\r\n        form={form}\r\n        name=\"register\"\r\n        onFinish={onFinishEdit}\r\n        // initialValues={{ horarios: [{ sucursal: '', horario: '' }], prefix: '+52' }}\r\n        initialValues={props.perfil}\r\n        scrollToFirstError\r\n      >\r\n\r\n        <Row>\r\n\r\n          <Col span={11}>\r\n            <Form.Item name=\"name\" label=\"Nombre\" rules={[{ required: true, message: 'Ingresa Nombre y apellidos' }]}>\r\n              <Input />\r\n            </Form.Item>\r\n            <Form.Item name=\"email\" label=\"Correo\" rules={[{ type: 'email', message: 'Ingresa un corrreo electronico valido' }, { required: true, message: 'Please input your E-mail!' }]}>\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            {/* <Form.Item name=\"password\" label=\"Contraseña\" rules={[{ required: true, message: 'Por favor ingrese su contraseña!', },]} hasFeedback >\r\n              <Input.Password />\r\n            </Form.Item>\r\n\r\n            <Form.Item name=\"confirm\" label=\"Confirmar contraseña\" dependencies={['password']} hasFeedback\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: 'Please confirm your password!',\r\n                },\r\n                ({ getFieldValue }) => ({\r\n                  validator(_, value) {\r\n                    if (!value || getFieldValue('password') === value) {\r\n                      return Promise.resolve();\r\n                    }\r\n                    return Promise.reject(new Error('Las contraseñas deben coincidir!'));\r\n                  },\r\n                }),\r\n              ]}\r\n            >\r\n              <Input.Password />\r\n            </Form.Item> */}\r\n\r\n            <Form.Item name=\"telefono\" label=\"Telefono\" rules={[{ required: true, message: 'Ingresa el numero de telefono correcto' },]}>\r\n              <Input addonBefore={prefixSelector} style={{ width: '100%', }} />\r\n            </Form.Item>\r\n\r\n\r\n            <Form.Item label=\"horarios\" rules={[{ required: true, message: 'Ingresa al menos un horario', },]}>\r\n              <Form.List name=\"horarios\" label=\"horarios list\"\r\n              >\r\n                {(fields, { add, remove }) => (\r\n                  <>\r\n                    {fields.map(({ key, name, ...restField }) => (\r\n                      <Space key={key} style={{ display: 'flex', marginBottom: 8 }} align=\"baseline\">\r\n                        <Form.Item\r\n                          {...restField}\r\n                          name={[name, 'sucursal']}\r\n                          rules={[{ required: true, message: 'Elije Sucursal' }]}\r\n                        >\r\n                          <Select placeholder=\"Elije Sucursal\" style={{ width: '120px' }} >\r\n                            {sucursalesLoading ? \"Cargando\" :\r\n                              sucursales.map(s => <Option value={s._id}>{s.nombre}</Option>)\r\n                            }\r\n                          </Select>\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                          {...restField}\r\n                          name={[name, 'horario']}\r\n                          rules={[{ required: true, message: 'Missing last name' }]}\r\n                        >\r\n                          <Input placeholder=\"Horario\" />\r\n                        </Form.Item>\r\n                        <MinusCircleOutlined onClick={() => remove(name)} />\r\n                      </Space>\r\n                    ))}\r\n                    <Form.Item>\r\n                      <Button type=\"dashed\" onClick={() => add()} block icon={<PlusOutlined />}>\r\n                        Agregar Horario\r\n                      </Button>\r\n                    </Form.Item>\r\n                  </>\r\n                )}\r\n              </Form.List>\r\n            </Form.Item>\r\n\r\n\r\n\r\n          </Col>\r\n          <Col span={12}>\r\n            <Form.Item name=\"cedula\" label=\"Cedula\" rules={[{ required: false, message: 'Ingresa cedula' }]}>\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            {/* Not Necesary For Medic. He'll be in hospital direction */}\r\n            {/* <Form.Item name=\"calle\" label=\"Calle\" rules={[{ required: true, message: 'Ingresa calle', whitespace: true }]}>\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item name=\"numexterior\" label=\"Num Exterior\" rules={[{ required: true, message: 'Ingresa numero exterior' }]}>\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item name=\"numinterior\" label=\"Num Interior\" rules={[{ required: true, message: 'Ingresa numinterior' }]}>\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item label=\"Colonia\" name=\"colonia\" rules={[{ required: true, message: 'Please input your colobnia!' }]}            >\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item name=\"estado\" label=\"Estado\" rules={[{ required: true, message: 'Apellido materno', },]}>\r\n              <Select placeholder=\"Elije tu estado\">\r\n                {estados.map(e => <Option value={e}>{e}</Option>)}\r\n              </Select>\r\n            </Form.Item>\r\n\r\n            <Form.Item name=\"municipio\" label=\"Municipio\" rules={[{ required: true, message: 'Ingresa tu municipio' }]} >\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item name=\"codigopostal\" label=\"Codigo Postal\" rules={[{ required: true, message: 'Ingresa codigopostal', },]}>\r\n              <InputNumber addonAfter={suffixSelector} style={{ width: '100%', }} />\r\n            </Form.Item> */}\r\n\r\n            <Form.Item name=\"certificacion\" label=\"Certificacion\" rules={[{ required: false, message: 'Ingresa tu certificacion' }]}>\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item name=\"universidad\" label=\"Universidad\" rules={[{ required: false, message: 'Ingresa tu universidad' }]} >\r\n              <Input />\r\n            </Form.Item>\r\n            <Form.Item {...tailFormItemLayout}>\r\n              <Button type=\"primary\" htmlType=\"submit\">\r\n                Guardar\r\n              </Button>\r\n            </Form.Item>\r\n          </Col>\r\n        </Row>\r\n\r\n\r\n\r\n\r\n\r\n        {/* <Form.Item\r\n          name=\"agreement\"\r\n          valuePropName=\"checked\"\r\n          rules={[\r\n            {\r\n              validator: (_, value) =>\r\n                value ? Promise.resolve() : Promise.reject(new Error('Should accept agreement')),\r\n            },\r\n          ]}\r\n          {...tailFormItemLayout}\r\n        >\r\n          <Checkbox>\r\n            He leído y acepto los <a href=\"https://recreamed.com\">terminos y condiciones</a>\r\n          </Checkbox>\r\n        </Form.Item> */}\r\n\r\n\r\n      </Form>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Row, Col, Space, Button } from 'antd';\r\nimport { Avatar, Card } from 'antd';\r\nimport { UserOutlined } from '@ant-design/icons';\r\nimport { API, usuario } from '.././resources';\r\nimport Loading from '.././loading';\r\nimport { PlusOutlined, FormOutlined } from '@ant-design/icons';\r\nimport PerfilEdit from './perfilEdit';\r\n\r\n\r\nexport default function Perfil() {\r\n\r\n    const [profileData, setProfileData] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [profileForEdit, setProfileForEdit] = useState([]);\r\n    const [editing, setEditing] = useState(false)\r\n\r\n    useEffect(() => {\r\n        getProfileData()\r\n    }, [])\r\n\r\n    const getProfileData = () => {\r\n        fetch(API + 'userByMail/' + usuario.email)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log(data);\r\n                setProfileData(data[0]);\r\n                setIsLoading(false);\r\n            });\r\n    }\r\n\r\n    const DetailsProfile = () => {\r\n        return <Row>\r\n            <Col span={8}>\r\n                <Card>\r\n                    {\r\n                        profileData.avatar.length > 8 ?\r\n                            <img width={256} src={'https://api.recreamed.com/images/' + profileData.avatar} alt='ProfilePic' /> :\r\n                            <Avatar size={128} icon={<UserOutlined />} />\r\n                    }\r\n                    <br />\r\n                    <p>Nombre: {profileData.name} </p>\r\n                    <p>Correo: {profileData.email} </p>\r\n                    <p>Telefono: {profileData.telefono} </p>\r\n                </Card>\r\n            </Col>\r\n            {/* <Col span={8}>\r\n                <Card>\r\n                    <p>Universidad: {profileData.universidad} </p>\r\n                    <p>Certificacion: {profileData.certificacion} </p>\r\n                    <p>Cedula: {profileData.cedula} </p>\r\n                </Card>\r\n            </Col> */}\r\n            <Col span={8}>\r\n                <Card>\r\n                    <p>Estado: {profileData.estado}</p>\r\n                    <p>Municipio: {profileData.municipio}</p>\r\n                    <p>Colonia: {profileData.colonia}</p>\r\n                    <p>Calle: {profileData.calle}</p>\r\n                    <p>Codigo Postal:{profileData.codigopostal} </p>\r\n                </Card>\r\n            </Col>\r\n        </Row>\r\n    }\r\n    const editPerfil = async (p) => {\r\n        p.horarios.forEach((h) => { h.sucursal = h.sucursal._id })\r\n        console.log('Horarios before edit profile: ', p.horarios);\r\n        await setProfileForEdit(p)\r\n        setEditing(true);\r\n        console.log('Editar medico: ', p)\r\n    }\r\n\r\n    return (\r\n        <div className='mainContainer'>\r\n\r\n            <Space>\r\n                <h3>PERFIL</h3>\r\n                <Button onClick={() => editPerfil(profileData)} type=\"primary\" shape=\"circle\" icon={<FormOutlined />} />\r\n\r\n            </Space>\r\n            {isLoading ? <Loading /> :\r\n                <Card>\r\n                    {\r\n                        editing ?\r\n\r\n                            <>\r\n                                <PerfilEdit perfil={profileData} setEditing={setEditing} />\r\n                                <Button shape=\"circle\" title='Cancelar' />\r\n                                <Button onClick={() => setEditing(false)}>Cancelar</Button>\r\n                            </> :\r\n                            <DetailsProfile />\r\n                    }\r\n                </Card>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Row, Col, Statistic, Card } from 'antd'\r\nimport { Pie, Line } from '@ant-design/charts';\r\nimport './home.css'\r\n\r\nexport class Home extends Component {\r\n    \r\n    dataPie = [\r\n        {\r\n            type: 'Covid',\r\n            value: 130737,\r\n        },\r\n        {\r\n            type: 'Colesterol',\r\n            value: 21468,\r\n        },\r\n        {\r\n            type: 'Diabetes',\r\n            value: 18098,\r\n        },\r\n        {\r\n            type: 'Presion',\r\n            value: 17912,\r\n        },\r\n        {\r\n            type: 'Oseo',\r\n            value: 15282,\r\n        },\r\n        {\r\n            type: 'Migraña',\r\n            value: 11650,\r\n        },\r\n    ];\r\n\r\n    configPie = {\r\n        appendPadding: 10,\r\n        data: this.dataPie,\r\n        angleField: 'value',\r\n        colorField: 'type',\r\n        height: 450,\r\n        radius: 0.8,\r\n        label: {\r\n            type: 'inner',\r\n            offset: '-0.5',\r\n            content: '{name} {percentage}',\r\n            style: {\r\n                fill: '#fff',\r\n                fontSize: 14,\r\n                textAlign: 'center',\r\n            },\r\n        },\r\n    };\r\n\r\n    dataLine = [\r\n        { mes: 'Junio', consultas: 17945 },\r\n        { mes: 'Julio', consultas: 24011 },\r\n        { mes: 'Agosto', consultas: 46493 },\r\n        { mes: 'Septiembre', consultas: 105293 },\r\n        { mes: 'Octubre', consultas: 77190 }\r\n    ];\r\n\r\n    configLine = {\r\n        data: this.dataLine,\r\n        height: 410,\r\n        xField: 'mes',\r\n        yField: 'consultas',\r\n        color: '#01B075',\r\n        point: {\r\n            size: 5,\r\n            shape: 'diamond',\r\n            color: '#01B075'\r\n        },\r\n        label: {\r\n            style: {\r\n                fill: '#aaa',\r\n                fontSize: 16,\r\n                stroke: '#01B075'\r\n            },\r\n        },\r\n    };\r\n    render() {\r\n        return (\r\n            <>\r\n\r\n                <br />\r\n                <div className=\"contenedor\">\r\n                    <Row gutter={30}>\r\n                        <Col xs={24} sm={12} lg={6}>\r\n                            {/* <div className=\"cardsContenedor\" > */}\r\n                            <Card className=\"cardsContenedor\" hoverable bordered={false}>\r\n\r\n                                <Statistic title=\"Total Hospitales\" value=\"4\" valueStyle={{ color: 'white' }} style={{ backgroundColor: '#4BA6FE' }} className=\"cardsContenido\" />\r\n                            </Card>\r\n                        </Col>\r\n                        <Col xs={24} sm={12} lg={6}>\r\n                            <Card className=\"cardsContenedor\" hoverable bordered={false}>\r\n                                <Statistic title=\"Total Medicos\" value=\"14\" valueStyle={{ color: 'white' }} style={{ backgroundColor: '#FF838A' }} className=\"cardsContenido\" />\r\n                            </Card>\r\n                        </Col>\r\n\r\n                        <Col xs={24} sm={12} lg={6}>\r\n                            <Card className=\"cardsContenedor\" hoverable bordered={false}>\r\n\r\n                                <Statistic title=\"Total Pacientes\" value=\"241\" valueStyle={{ color: 'white' }} style={{ backgroundColor: '#18D0C2' }} className=\"cardsContenido\" />\r\n                            </Card>\r\n                        </Col>\r\n                        <Col xs={24} sm={12} lg={6}>\r\n                            <Card className=\"cardsContenedor\" hoverable bordered={false}>\r\n\r\n                                <Statistic title=\"Citas Hoy\" value={47} valueStyle={{ color: 'white' }} style={{ backgroundColor: '#847DFC' }} className=\"cardsContenido\" />\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n                    <br />\r\n                    <Row gutter={20}>\r\n                        <Col xs={24} md={12} className=\"graficaCircular\">\r\n                            <Pie {...this.configPie} style={{ backgroundColor: '#1F263C' }} />\r\n                        </Col>\r\n\r\n                        <Col xs={24} md={12}>\r\n                            <Line {...this.configLine} style={{ backgroundColor: '#1F263C', padding: '20px' }} />\r\n                        </Col>\r\n                    </Row>\r\n\r\n                </div>\r\n\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home\r\n","import React from 'react'\r\nimport { Container, Nav, Navbar } from \"react-bootstrap\";\r\nimport icon from '../assets/Icon.png';\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport { Button } from 'antd'\r\nimport MisCitas from './misCitas'\r\nimport Recetas from './recetas'\r\nimport Perfil from './perfil';\r\nimport Home from './home/home';\r\nimport { usuario } from '../resources'\r\n\r\nconst logout = () => { localStorage.removeItem('sessionToken'); localStorage.removeItem('userType'); window.location.href = '/'; }\r\n\r\nfunction Navigator() {\r\n\r\n  return <Navbar bg=\"light\" expand=\"lg\">\r\n    <Container>\r\n      <Navbar.Brand href=\"#home\">\r\n        <img\r\n          src={icon}\r\n          width=\"40\"\r\n          height=\"35\"\r\n          className=\"d-inline-block align-top\"\r\n          alt=\"Recreamed logo\"\r\n        />\r\n        Bienvenido {usuario.name}\r\n      </Navbar.Brand>\r\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n      <Navbar.Collapse id=\"basic-navbar-nav\">\r\n        <Nav className=\"me-auto\">\r\n          {/* <Nav.Link href=\"/\">Landing</Nav.Link> */}\r\n          <Nav.Link href=\"/citas\">Mis Citas</Nav.Link>\r\n          <Nav.Link href=\"/recetas\">Mis Recetas</Nav.Link>\r\n          <Nav.Link href=\"/perfil\">Mi Perfil</Nav.Link>\r\n        </Nav>\r\n      </Navbar.Collapse>\r\n      <Navbar.Collapse className=\"justify-content-end\">\r\n        <Button onClick={logout} >Cerrar Sesion</Button>\r\n      </Navbar.Collapse>\r\n    </Container>\r\n  </Navbar>;\r\n\r\n}\r\n\r\nexport default function PatientApp() {\r\n  return (\r\n    <Router>\r\n      <Navigator />\r\n      <Switch>\r\n        <Route path=\"/citas\">\r\n          <MisCitas />\r\n        </Route>\r\n        <Route path=\"/recetas\">\r\n          <Recetas />\r\n        </Route>\r\n        <Route path=\"/perfil\">\r\n          <Perfil />\r\n        </Route>\r\n        <Route path=\"/\">\r\n          <Home />\r\n        </Route>\r\n      </Switch>\r\n    </Router>\r\n  )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Table, Space, Row, Col, Button, Modal, Form, Input, message, DatePicker } from 'antd';\r\nimport { API } from '../../resources';\r\nimport Loading from '../../loading'\r\n// import { API } from '../resources'\r\n\r\nexport function Citas() {\r\n    const [isModalVisible, setIsModalVisible] = useState(false);\r\n    const [citasData, setCitasData] = useState([])\r\n    const [isLoading, setIsLoading] = useState(true)\r\n\r\n    useEffect(() => {\r\n        getCitasData()\r\n    }, [])\r\n\r\n    const getCitasData = () => {\r\n        fetch(API + 'citas')\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log(data); setCitasData(data);\r\n            })\r\n            .finally(() => setIsLoading(false))\r\n    }\r\n\r\n    const showModal = () => {\r\n        setIsModalVisible(true);\r\n    };\r\n\r\n    const handleOk = () => {\r\n        setIsModalVisible(false);\r\n    };\r\n\r\n    const handleCancel = () => {\r\n        setIsModalVisible(false);\r\n    };\r\n    const columns = [\r\n        {\r\n            title: 'Fecha y Hora',\r\n            dataIndex: 'fecha_hora',\r\n            key: 'fecha_hora',\r\n            render: text => <a>{text}</a>,\r\n        },\r\n        {\r\n            title: 'Paciente',\r\n            dataIndex: 'id_usuario',\r\n            key: 'id_usuario',\r\n        },\r\n        {\r\n            title: 'Sucursal',\r\n            dataIndex: 'id_sucursal',\r\n            key: 'v',\r\n        },\r\n        {\r\n            title: 'Comentarios',\r\n            dataIndex: 'comentarios',\r\n            key: 'comentarios',\r\n        },\r\n        {\r\n            title: 'Detalles',\r\n            key: 'detalles',\r\n            render: (text, record) => (\r\n                <Space size=\"middle\">\r\n                    {/* <a href>Enlace</a> */}\r\n                    <Button>Enlace</Button>\r\n                </Space>\r\n            ),\r\n        },\r\n    ];\r\n\r\n    const onFinish = (values) => {\r\n        console.log('Valores:', values);\r\n        fetch(API + 'expedientes/add', {\r\n            method: 'POST',\r\n            body: JSON.stringify(values),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }).then(res => res.json())\r\n            .then(response => { console.log('Success:', response); message.success(response.message || response.error); })\r\n            .catch(error => console.error('Error:', error))\r\n            .finally(() => { getCitasData(); setIsModalVisible(false) })\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    // DatePicker\r\n    function onChange(value, dateString) {\r\n        console.log('Selected Time: ', value);\r\n        console.log('Formatted Selected Time: ', dateString);\r\n    }\r\n    function onOk(value) {\r\n        console.log('onOk: ', value);\r\n    }\r\n\r\n    return (\r\n        <div className='mainContainer'>\r\n            <Row>\r\n                <Col span={8}><h4>Citas de todos los pacientes</h4></Col>\r\n                <Col>\r\n                    <Button type=\"primary\" onClick={showModal}>\r\n                        Nueva Cita\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n\r\n            {isLoading ? <Loading /> : <Table columns={columns} dataSource={citasData} />}\r\n\r\n\r\n\r\n            <Modal title=\"Nuevo expediente\" visible={isModalVisible} onOk={handleOk} onCancel={handleCancel}>\r\n                <Form name=\"expediente\" labelCol={{ span: 8 }} wrapperCol={{ span: 12 }} onFinish={onFinish} onFinishFailed={onFinishFailed} autoComplete=\"off\" >\r\n\r\n                    <Form.Item label=\"Paciente\" name=\"id_usuario\" rules={[{ required: true, message: 'Ingresa RFC' }]} >\r\n                        <Input />\r\n                    </Form.Item>\r\n                    <Form.Item label=\"Sucursal\" name=\"id_sucursal\" rules={[{ required: true, message: 'Ingresa RFC' }]} >\r\n                        <Input />\r\n                    </Form.Item>\r\n                    <Form.Item label=\"Fecha y Hora\" name=\"id_nota\" rules={[{ required: true, message: 'Selecciona Fecha y Hora' }]} >\r\n                        <DatePicker showTime onChange={onChange} onOk={onOk} placeholder='Selecciona Fecha y Hora' />\r\n                    </Form.Item>\r\n                    <Form.Item label=\"Enlace a la reunion\" name=\"id_reunion\" rules={[{ required: true, message: 'Ingresa RFC' }]} >\r\n                        <Input />\r\n                    </Form.Item>\r\n                    <Form.Item label=\"Contraseña\" name=\"password_reunion\" rules={[{ required: true, message: 'Ingresa RFC' }]} >\r\n                        <Input placeholder='Opcional' />\r\n                    </Form.Item>\r\n                    <Form.Item label=\"Comentarios\" name=\"comentarios\" rules={[{ required: true, message: 'Ingresa RFC' }]} >\r\n                        <Input />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\r\n                        <Button type=\"primary\" htmlType=\"submit\" form='expediente'>\r\n                            Guardar\r\n                        </Button>\r\n                    </Form.Item>\r\n                </Form>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Form, Input, Button, message } from 'antd'\r\nimport { InputNumber, Select } from 'antd';\r\nimport { S_API } from '../../resources'\r\n\r\nconst { Option } = Select;\r\nconst estados = [\"Michoacan\", \"Morelos\", \"Guerrero\"];\r\n\r\nexport default function Register() {\r\n  \r\n  const [form] = Form.useForm(); \r\n\r\n  const onFinish = (values) => {\r\n    values.avatar = 'https://';\r\n    values.estatus = '1';\r\n    values.rol = 'Paciente';\r\n    delete values.confirm;\r\n    delete values.prefix;\r\n    delete values.agreement;\r\n\r\n    console.log(values)\r\n    fetch(S_API + 'register', {\r\n      method: 'POST',\r\n      body: JSON.stringify(values),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).then(res => res.json())\r\n      .then(response => { console.log('Success:', response); message.success(response.message || response.error); })\r\n      .catch(error => console.error('Error:', error))\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log('Failed:', errorInfo);\r\n  };\r\n\r\n  const prefixSelector = (\r\n    <Form.Item name=\"prefix\" noStyle>\r\n      <Select\r\n        style={{\r\n          width: 70,\r\n        }}\r\n      >\r\n        <Option value=\"+52\">+52</Option>\r\n      </Select>\r\n    </Form.Item>\r\n  );\r\n  const suffixSelector = (\r\n    <Form.Item name=\"suffix\" noStyle>\r\n      <Select\r\n        style={{\r\n          width: 70,\r\n        }}\r\n      >\r\n        <Option value=\"USD\">$</Option>\r\n        <Option value=\"CNY\">¥</Option>\r\n      </Select>\r\n    </Form.Item>\r\n  );\r\n  return (\r\n    <div>\r\n      <h4>Registrar Usuario</h4>\r\n      <br />\r\n      <Form\r\n        // {...formItemLayout}\r\n        labelCol={{ span: 6 }} wrapperCol={{ span: 16 }}\r\n        form={form}\r\n        name=\"register\"\r\n        onFinish={onFinish}\r\n        initialValues={{\r\n          residence: ['zhejiang', 'hangzhou', 'xihu'],\r\n          prefix: '52',\r\n        }}\r\n        scrollToFirstError\r\n      >\r\n        <Form.Item\r\n          name=\"email\"\r\n          label=\"Correo\"\r\n          rules={[\r\n            {\r\n              type: 'email',\r\n              message: 'The input is not valid E-mail!',\r\n            },\r\n            {\r\n              required: true,\r\n              message: 'Please input your E-mail!',\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item name=\"password\" label=\"Contraseña\" rules={[{ required: true, message: 'Por favor ingrese su contraseña!', },]} hasFeedback >\r\n          <Input.Password />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"confirm\"\r\n          label=\"Confirmar contraseña\"\r\n          dependencies={['password']}\r\n          hasFeedback\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Please confirm your password!',\r\n            },\r\n            ({ getFieldValue }) => ({\r\n              validator(_, value) {\r\n                if (!value || getFieldValue('password') === value) {\r\n                  return Promise.resolve();\r\n                }\r\n                return Promise.reject(new Error('Las contraseñas deben coincidir!'));\r\n              },\r\n            }),\r\n          ]}\r\n        >\r\n          <Input.Password />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"telefono\"\r\n          label=\"Telefono\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Please input your phone number!',\r\n            },\r\n          ]}\r\n        >\r\n          <Input\r\n            addonBefore={prefixSelector}\r\n            style={{\r\n              width: '100%',\r\n            }}\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"id_sucursal\"\r\n          label=\"Id Sucursal\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Ingresa el ID de la sucursal',\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"id_medicoasignado\"\r\n          label=\"Id Medico Asignado\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Ingresa el ID del medico ',\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"name\"\r\n          label=\"Nombre\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Ingresa Nombre y apellidos',\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"cedula\"\r\n          label=\"Cedula\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Ingresa cedula',\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"calle\"\r\n          label=\"Calle\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Ingresa calle',\r\n              whitespace: true,\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"numexterior\"\r\n          label=\"Num Exterior\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Ingresa numero exterior',\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"numinterior\"\r\n          label=\"Num Interior\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Ingresa numinterior',\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"Colonia\"\r\n          name=\"colonia\"\r\n          rules={[{ required: true, message: 'Please input your colobnia!' }]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item name=\"estado\" label=\"Estado\" rules={[{ required: true, message: 'Apellido materno', },]}>\r\n          <Select placeholder=\"Elije tu estado\">\r\n            {estados.map(e => <Option value={e}>{e}</Option>)}\r\n          </Select>\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"municipio\"\r\n          label=\"Municipio\"\r\n          rules={[{ required: true, message: 'Ingresa tu municipio' }]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item name=\"codigopostal\" label=\"Codigo Postal\" rules={[{ required: true, message: 'Ingresa codigopostal', },]}>\r\n          <InputNumber addonAfter={suffixSelector} style={{ width: '100%', }} />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"certificacion\"\r\n          label=\"Certificacion\"\r\n          rules={[{ required: true, message: 'Ingresa tu certificacion' }]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"universidad\"\r\n          label=\"Universidad\" rules={[{ required: true, message: 'Ingresa tu universidad' }]} >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item >\r\n          <Button type=\"primary\" htmlType=\"submit\">\r\n            Registrar\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Table, Space, Button, Card, Modal } from 'antd'\r\nimport { API } from '../../resources';\r\nimport Loading from '../../loading';\r\n\r\n\r\nexport default function Dash() {\r\n\r\n  const [usuario, setUsuario] = useState({});\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const showModal = () => { setIsModalVisible(true); };\r\n  const handleOk = () => { setIsModalVisible(false); };\r\n  const handleCancel = () => { setIsModalVisible(false); };\r\n  const [isLoading, setILoading] = useState(true);\r\n  const [pacientesData, setPacientesData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getPacientesData()\r\n  }, [])\r\n\r\n  const getPacientesData = () => {\r\n    fetch(API + 'users_by_rol/Paciente')\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        console.log(data); setPacientesData(data);\r\n      })\r\n      .finally(() => setILoading(false))\r\n  }\r\n\r\n  const columns = [\r\n    {\r\n      title: 'Nombre',\r\n      dataIndex: 'name',\r\n      key: 'name',\r\n    },\r\n    {\r\n      title: 'Rol',\r\n      dataIndex: 'rol',\r\n      key: 'rol',\r\n    },\r\n    {\r\n      title: 'Sucursal',\r\n      dataIndex: 'id_sucursal',\r\n      key: 'address',\r\n    },\r\n    {\r\n      title: 'Telefono',\r\n      dataIndex: 'telefono',\r\n      key: 'tel',\r\n    },\r\n    {\r\n      title: 'Detalles',\r\n      key: 'detalles',\r\n      render: (text, record) => (\r\n        <Space size=\"middle\">\r\n          <Button onClick={() => { setUsuario(record); showModal(); }}>Detalles</Button>\r\n        </Space>\r\n      )\r\n    }\r\n  ];\r\n\r\n  const gridStyle = {\r\n    width: '50%',\r\n    height: '50px',\r\n    textAlign: 'center',\r\n    display: 'inline-flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center'\r\n  };\r\n\r\n  function DetalleUsuario() {\r\n    return <div>\r\n      <Card bordered={false}>\r\n        {\r\n          Object.keys(usuario).map(k => {\r\n            return <><Card.Grid style={gridStyle}>{k}</Card.Grid><Card.Grid style={gridStyle} size='small'>{usuario[k]}</Card.Grid></>\r\n          })\r\n        }\r\n      </Card>\r\n    </div>\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h4>Usuarios</h4>\r\n      {isLoading ? <Loading /> :\r\n\r\n        <Table dataSource={pacientesData} columns={columns} />\r\n      }\r\n      <Modal width={800} title={<h4>Detalles de la nota </h4>} visible={isModalVisible} onOk={handleOk} onCancel={handleCancel}>\r\n        <DetalleUsuario />\r\n      </Modal>\r\n    </div>\r\n  )\r\n\r\n}\r\n","import { React, Component } from 'react';\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\nimport { Layout, Menu } from 'antd';\r\nimport { UserOutlined, UserAddOutlined, MenuOutlined } from '@ant-design/icons';\r\n\r\nimport Register from './register.user';\r\nimport Dash from './dash.users';\r\n\r\nconst { Header, Content, Footer, Sider } = Layout;\r\n\r\nclass SideMenu extends Component {\r\n  handleClick = e => {\r\n    console.log('click ', e);\r\n  };\r\n\r\n  state = {\r\n    collapsed: false,\r\n  };\r\n\r\n  onCollapse = (collapsed) => {\r\n    this.setState({ collapsed });\r\n  }\r\n  toggle = () => {\r\n    this.setState({\r\n      collapsed: !this.state.collapsed,\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <Layout style={{ minHeight: '100vh' }}>\r\n          <Sider\r\n            theme=\"light\"\r\n            collapsible\r\n            collapsed={this.state.collapsed}\r\n            onCollapse={this.onCollapse}>\r\n            <div className=\"logo\" />\r\n            <Menu defaultSelectedKeys={['1']} mode=\"inline\">\r\n              <Menu.Item icon={ <UserOutlined /> } key=\"1\">\r\n                <span>Usuarios</span>\r\n                <Link to=\"/usuarios\" />\r\n              </Menu.Item>\r\n              <Menu.Item icon={ <UserAddOutlined /> } key=\"2\">\r\n                <span>Registrar Usuario</span>\r\n                <Link to=\"/registrar_usuario\" />\r\n              </Menu.Item>\r\n            </Menu>\r\n          </Sider>\r\n          <Layout>\r\n\r\n            <Header style={{ background: '#fff', padding: 0, paddingLeft: 16 }}>\r\n              <MenuOutlined className=\"trigger\" style={{ cursor: 'pointer' }} onClick={this.toggle} />\r\n            </Header>\r\n\r\n            <Content style={{ margin: '24px 16px', padding: 24, background: '#fff', minHeight: 280 }}>\r\n              <Route exact path=\"/registrar_usuario\" component={Register} />\r\n              <Route path=\"/usuarios\" component={Dash} />\r\n            </Content>\r\n\r\n            <Footer style={{ textAlign: 'center' }}>\r\n              RECREAMED ©2021 Created by Realidad Creativa\r\n            </Footer>\r\n          </Layout>\r\n\r\n        </Layout>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SideMenu\r\n\r\n\r\n","import React, { Component } from 'react'\r\n// import {Card } from 'antd'\r\nimport SideMenu from './side.users';\r\n\r\nexport class Users extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div>\r\n                            <SideMenu />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Users\r\n","import { Form, Input, Button, message } from 'antd'\r\nimport React, { useState } from 'react';\r\nimport {\r\n  InputNumber,\r\n  Select,\r\n  Checkbox,\r\n} from 'antd';\r\nimport { S_API } from '../../resources'\r\nconst { Option } = Select;\r\nconst estados = [\"Michoacan\", \"Morelos\", \"Guerrero\"];\r\n\r\nexport default function Register() {\r\n\r\n  const [form] = Form.useForm();\r\n\r\n  const onFinish = (values) => {\r\n    values.avatar = 'https://';\r\n    values.estatus = '1';\r\n    values.rol = 'Medico';\r\n    delete values.confirm;\r\n    delete values.prefix;\r\n    delete values.agreement;\r\n\r\n    console.log(values)\r\n    fetch(S_API + 'register', {\r\n      method: 'POST',\r\n      body: JSON.stringify(values),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).then(res => res.json())\r\n      .then(response => { console.log('Success:', response); message.success(response.message || response.error); })\r\n      .catch(error => console.error('Error:', error))\r\n  };\r\n\r\n  const prefixSelector = (\r\n    <Form.Item name=\"prefix\" noStyle>\r\n      <Select\r\n        style={{\r\n          width: 70,\r\n        }}\r\n      >\r\n        <Option value=\"+52\">+52</Option>\r\n      </Select>\r\n    </Form.Item>\r\n  );\r\n  const suffixSelector = (\r\n    <Form.Item name=\"suffix\" noStyle>\r\n      <Select\r\n        style={{\r\n          width: 70,\r\n        }}\r\n      >\r\n        <Option value=\"USD\">$</Option>\r\n        <Option value=\"CNY\">¥</Option>\r\n      </Select>\r\n    </Form.Item>\r\n  );\r\n\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log('Failed:', errorInfo);\r\n  };\r\n  return (\r\n    <div>\r\n      <h1>Registrar doctor</h1>\r\n      <br />\r\n      {/* <Form name=\"basic\" labelCol={{ span: 6 }} wrapperCol={{ span: 16 }} initialValues={{ remember: true }} onFinish={onFinish} onFinishFailed={onFinishFailed} autoComplete=\"off\" >\r\n        <Form.Item label=\"Hospital\" name=\"Hospital\" rules={[{ required: true, message: 'Please input your username!' }]} >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item label=\"Nombre\" name=\"username\" rules={[{ required: true, message: 'Please input your username!' }]} >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item label=\"Apellido Paterno\" name=\"rfc\" rules={[{ required: true, message: 'Ingresa RFC' }]} >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item label=\"Apellido Materno\" name=\"calle\" rules={[{ required: true, message: 'Avenida Madero esquina con Santiago Tapia' }]} >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item label=\"Cedula\" name=\"nint\" rules={[{ required: true, message: '74B' }]} >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item label=\"Calle\" name=\"next\" rules={[{ required: true, message: '12' }]} >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item label=\"Numero\" name=\"colonia\" rules={[{ required: true, message: 'Centro' }]} >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item label=\"Colonia\" name=\"cp\" rules={[{ required: true, message: '58000' }]} >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item label=\"Telefono\" name=\"ciudad_municipio\" rules={[{ required: true, message: 'Ingresa ciudad/municipio' }]} >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item label=\"Correo\" name=\"estado\" rules={[{ required: true, message: 'Ingresa estado' }]} >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\r\n          <Button type=\"primary\" htmlType=\"submit\">\r\n            Guardar\r\n          </Button>\r\n        </Form.Item>\r\n      </Form> */}\r\n      <Form\r\n        // {...formItemLayout}\r\n        labelCol={{ span: 6 }} wrapperCol={{ span: 16 }}\r\n        form={form}\r\n        name=\"register\"\r\n        onFinish={onFinish}\r\n        initialValues={{\r\n          residence: ['zhejiang', 'hangzhou', 'xihu'],\r\n          prefix: '52',\r\n        }}\r\n        scrollToFirstError\r\n      >\r\n        <Form.Item\r\n          name=\"email\"\r\n          label=\"Correo\"\r\n          rules={[\r\n            {\r\n              type: 'email',\r\n              message: 'The input is not valid E-mail!',\r\n            },\r\n            {\r\n              required: true,\r\n              message: 'Please input your E-mail!',\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item name=\"password\" label=\"Contraseña\" rules={[{ required: true, message: 'Por favor ingrese su contraseña!', },]} hasFeedback >\r\n          <Input.Password />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"confirm\"\r\n          label=\"Confirmar contraseña\"\r\n          dependencies={['password']}\r\n          hasFeedback\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Please confirm your password!',\r\n            },\r\n            ({ getFieldValue }) => ({\r\n              validator(_, value) {\r\n                if (!value || getFieldValue('password') === value) {\r\n                  return Promise.resolve();\r\n                }\r\n                return Promise.reject(new Error('Las contraseñas deben coincidir!'));\r\n              },\r\n            }),\r\n          ]}\r\n        >\r\n          <Input.Password />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"telefono\"\r\n          label=\"Telefono\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Please input your phone number!',\r\n            },\r\n          ]}\r\n        >\r\n          <Input\r\n            addonBefore={prefixSelector}\r\n            style={{\r\n              width: '100%',\r\n            }}\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"id_sucursal\"\r\n          label=\"Id Sucursal\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Ingresa el ID de la sucursal',\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"id_medicoasignado\"\r\n          label=\"Id Medico Asignado\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Ingresa el ID del medico ',\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"name\"\r\n          label=\"Nombre\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Ingresa Nombre y apellidos',\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"cedula\"\r\n          label=\"Cedula\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Ingresa cedula',\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"calle\"\r\n          label=\"Calle\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Ingresa calle',\r\n              whitespace: true,\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"numexterior\"\r\n          label=\"Num Exterior\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Ingresa numero exterior',\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"numinterior\"\r\n          label=\"Num Interior\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Ingresa numinterior',\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"Colonia\"\r\n          name=\"colonia\"\r\n          rules={[{ required: true, message: 'Please input your colobnia!' }]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item name=\"estado\" label=\"Estado\" rules={[{ required: true, message: 'Apellido materno', },]}>\r\n          <Select placeholder=\"Elije tu estado\">\r\n            {estados.map(e => <Option value={e}>{e}</Option>)}\r\n          </Select>\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"municipio\"\r\n          label=\"Municipio\"\r\n          rules={[{ required: true, message: 'Ingresa tu municipio' }]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item name=\"codigopostal\" label=\"Codigo Postal\" rules={[{ required: true, message: 'Ingresa codigopostal', },]}>\r\n          <InputNumber addonAfter={suffixSelector} style={{ width: '100%', }} />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"certificacion\"\r\n          label=\"Certificacion\"\r\n          rules={[{ required: true, message: 'Ingresa tu certificacion' }]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"universidad\"\r\n          label=\"Universidad\" rules={[{ required: true, message: 'Ingresa tu universidad' }]} >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item >\r\n          <Button type=\"primary\" htmlType=\"submit\">\r\n            Registrar\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </div>\r\n  )\r\n}\r\n","import React, { Component, useState, useEffect } from 'react'\r\nimport { Table } from 'antd';\r\nimport { API, usuario } from '../../resources'\r\nimport Loading from '../../loading';\r\n\r\nexport default function Dash() {\r\n\r\n  const [isLoading, setILoading] = useState(true);\r\n  const [doctoresData, setDoctoresData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getDoctoresData()\r\n  }, [])\r\n\r\n  const findMyDoctors = (arr) => {\r\n    let dl = [];\r\n    arr.forEach((d) => {\r\n      if (usuario.medicos_asignados.includes(d._id)) dl.push(d)\r\n    })\r\n    return dl;\r\n  }\r\n\r\n  const getDoctoresData = () => {\r\n    fetch(API + 'users_by_rol/Medico')\r\n      .then(response => response.json())\r\n      .then(data => {\r\n\r\n        console.log(data);\r\n        setDoctoresData(findMyDoctors(data));\r\n      })\r\n      .finally(() => setILoading(false))\r\n  }\r\n\r\n  const columns = [\r\n    {\r\n      title: 'Rol',\r\n      dataIndex: 'rol',\r\n      key: 'rol',\r\n      onFilter: (value, record) => record.rol === \"Medico\",\r\n    },\r\n    {\r\n      title: 'Nombre',\r\n      dataIndex: 'name',\r\n      key: 'name',\r\n    },\r\n    {\r\n      title: 'Correo',\r\n      dataIndex: 'email',\r\n      key: 'email',\r\n    },\r\n    {\r\n      title: 'Telefono',\r\n      dataIndex: 'telefono',\r\n      key: 'telefono',\r\n    },\r\n  ];\r\n  return (\r\n    <div>\r\n      <h1>Doctores</h1>\r\n      {isLoading ? <Loading /> :\r\n        <Table dataSource={doctoresData} columns={columns} />\r\n      }\r\n    </div>\r\n  )\r\n}\r\n","import { React, Component } from 'react';\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\nimport { Layout, Menu } from 'antd';\r\nimport { TeamOutlined, UserAddOutlined, MenuOutlined } from '@ant-design/icons';\r\n\r\nimport Register from './register.doctor';\r\nimport Dash from './dash.doctors';\r\n\r\nconst { Header, Content, Footer, Sider } = Layout;\r\n\r\nclass SideMenu extends Component {\r\n  handleClick = e => {\r\n    console.log('click ', e);\r\n  };\r\n\r\n  state = {\r\n    collapsed: false,\r\n  };\r\n\r\n  onCollapse = (collapsed) => {\r\n    this.setState({ collapsed });\r\n  }\r\n  toggle = () => {\r\n    this.setState({\r\n      collapsed: !this.state.collapsed,\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <Layout style={{ minHeight: '100vh' }}>\r\n          <Sider\r\n            theme=\"light\"\r\n            collapsible\r\n            collapsed={this.state.collapsed}\r\n            onCollapse={this.onCollapse}>\r\n            <div className=\"logo\" />\r\n            <Menu defaultSelectedKeys={['1']} mode=\"inline\">\r\n              <Menu.Item icon={<TeamOutlined />} key=\"1\">\r\n                <span>Médicos</span>\r\n                <Link to=\"/doctores\" />\r\n              </Menu.Item>\r\n              <Menu.Item icon={<UserAddOutlined />} key=\"2\">\r\n                <span>Registrar Médico</span>\r\n                <Link to=\"/registrar\" />\r\n              </Menu.Item>\r\n            </Menu>\r\n            {/* <Menu\r\n        onClick={this.handleClick}\r\n        style={{ width: 256 }}\r\n        defaultSelectedKeys={['1']}\r\n        defaultOpenKeys={['sub1']}\r\n        mode=\"inline\"\r\n      >\r\n        <SubMenu key=\"sub1\" icon={<MailOutlined />} title=\"Navigation One\">\r\n          <Menu.ItemGroup key=\"g1\" title=\"Item 1\">\r\n            <Menu.Item key=\"1\" href=\"/dash\">Option 1 <Link to=\"/meseros\" /> </Menu.Item>\r\n            <Menu.Item key=\"2\">Option 2</Menu.Item>\r\n          </Menu.ItemGroup>\r\n          <Menu.ItemGroup key=\"g2\" title=\"Item 2\">\r\n            <Menu.Item key=\"3\">Option 3</Menu.Item>\r\n            <Menu.Item key=\"4\">Option 4</Menu.Item>\r\n          </Menu.ItemGroup>\r\n        </SubMenu>\r\n        <SubMenu key=\"sub2\" icon={<AppstoreOutlined />} title=\"Navigation Two\">\r\n          <Menu.Item key=\"5\">Option 5</Menu.Item>\r\n          <Menu.Item key=\"6\">Option 6</Menu.Item>\r\n          <SubMenu key=\"sub3\" title=\"Submenu\">\r\n            <Menu.Item key=\"7\">Option 7</Menu.Item>\r\n            <Menu.Item key=\"8\">Option 8</Menu.Item>\r\n          </SubMenu>\r\n        </SubMenu>\r\n        <SubMenu key=\"sub4\" icon={<SettingOutlined />} title=\"Navigation Three\">\r\n          <Menu.Item key=\"9\">Option 9</Menu.Item>\r\n          <Menu.Item key=\"10\">Option 10</Menu.Item>\r\n          <Menu.Item key=\"11\">Option 11</Menu.Item>\r\n          <Menu.Item key=\"12\">Option 12</Menu.Item>\r\n        </SubMenu>\r\n      </Menu> */}\r\n          </Sider>\r\n          <Layout>\r\n\r\n            <Header style={{ background: '#fff', padding: 0, paddingLeft: 16 }}>\r\n              <MenuOutlined className=\"trigger\" style={{ cursor: 'pointer' }} onClick={this.toggle} />\r\n            </Header>\r\n\r\n            <Content style={{ margin: '24px 16px', padding: 24, background: '#fff', minHeight: 280 }}>\r\n              <Route exact path=\"/registrar\" component={Register} />\r\n              <Route path=\"/doctores\" component={Dash} />\r\n            </Content>\r\n\r\n            <Footer style={{ textAlign: 'center' }}>\r\n              RECREAMED ©2021 Created by Realidad Creativa\r\n            </Footer>\r\n          </Layout>\r\n\r\n        </Layout>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SideMenu\r\n\r\n\r\n","import React, { Component } from 'react'\r\n// import {Card } from 'antd'\r\nimport SideMenu from './side.doctors';\r\n\r\nexport class Doctors extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div>\r\n                            <SideMenu />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Doctors\r\n","import React from 'react'\r\n\r\nexport default function Sucursal() {\r\n  return (\r\n    <div>Perfil de la sucursal</div>\r\n  )\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Form, Input, Button, message, Space, Row, Col, Upload } from 'antd'\r\nimport { MinusCircleOutlined, PlusOutlined, InboxOutlined } from '@ant-design/icons';\r\nimport { InputNumber, Select } from 'antd';\r\nimport { S_API, getData, API } from '../resources'\r\nconst { Option } = Select;\r\nconst estados = [\"Michoacan\", \"Morelos\", \"Guerrero\"];\r\nconst { Dragger } = Upload;\r\n\r\n\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    xs: {\r\n      span: 24,\r\n    },\r\n    sm: {\r\n      span: 8,\r\n    },\r\n  },\r\n  wrapperCol: {\r\n    xs: {\r\n      span: 24,\r\n    },\r\n    sm: {\r\n      span: 14,\r\n    },\r\n  },\r\n};\r\nconst tailFormItemLayout = {\r\n  wrapperCol: {\r\n    xs: {\r\n      span: 24,\r\n      offset: 0,\r\n    },\r\n    sm: {\r\n      span: 16,\r\n      offset: 8,\r\n    },\r\n  },\r\n};\r\nexport default function PerfilEdit(props) {\r\n\r\n  const [form] = Form.useForm();\r\n\r\n  const [sucursales, setSucursales] = useState([]);\r\n  const [sucursalesLoading, setSucursalesLoading] = useState(true);\r\n  const [avatar, setAvatar] = useState(props.perfil.avatar)\r\n\r\n  //Start upload props Upload File\r\n  const dragDropProps = {\r\n    name: 'file',\r\n    multiple: false,\r\n    action: API + 'imagenes/upload',\r\n\r\n    onChange(info) {\r\n      const { status } = info.file;\r\n\r\n      if (status !== 'uploading') {\r\n        console.log(info.file, info.fileList);\r\n      }\r\n\r\n      if (status === 'done') {\r\n        message.success(`${info.file.name} file uploaded successfully.`);\r\n        console.log('New Files: ', info.file.response.file)\r\n        setAvatar(info.file.response.file)\r\n      } else if (status === 'error') {\r\n        message.error(`${info.file.name} file upload failed.`);\r\n      }\r\n    },\r\n\r\n    onDrop(e) {\r\n      console.log('Dropped files', e.dataTransfer.files);\r\n    },\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log('received Medic: ', props.perfil);\r\n    getData('sucursales').then((rs) => { setSucursales(rs); setSucursalesLoading(false) })\r\n  }, [])\r\n\r\n\r\n\r\n  const onFinish = (values) => {\r\n    values.avatar = avatar;\r\n    values.estatus = '1';\r\n    values.rol = 'Medico';\r\n    delete values.confirm;\r\n    delete values.prefix;\r\n\r\n    console.log('ready to send', values)\r\n    fetch(S_API + 'register', {\r\n      method: 'POST',\r\n      body: JSON.stringify(values),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).then(res => res.json())\r\n      .then(response => {\r\n        console.log('Success:', response);\r\n        response.message && response.message === 'Usuario creado correctamente' ?\r\n          window.location.href = 'doctores' : message.error(response.error);\r\n      })\r\n      .catch(error => console.error('Error:', error))\r\n  };\r\n\r\n  const onFinishEdit = (values) => {\r\n    values.avatar = avatar;\r\n    // values.estatus = '1';\r\n    // values.rol = 'Medico';\r\n    // delete values.confirm;\r\n    // delete values.prefix;\r\n\r\n    console.log('ready to send', values)\r\n    fetch(API + 'users/updateUser/' + props.perfil._id, {\r\n      method: 'PUt',\r\n      body: JSON.stringify(values),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).then(res => res.json())\r\n      .then(response => {\r\n        console.log('Success:', response);\r\n        response.message && response.message === 'Usuario actualizado correctamente' ?\r\n          props.setEditing(false) : message.error(response.error);\r\n      })\r\n      .catch(error => console.error('Error:', error))\r\n  };\r\n\r\n  const prefixSelector = (\r\n    <Form.Item name=\"prefix\" noStyle>\r\n      <Select\r\n        style={{\r\n          width: 70,\r\n        }}\r\n      >\r\n        <Option value=\"+52\">+52</Option>\r\n      </Select>\r\n    </Form.Item>\r\n  );\r\n  const suffixSelector = (\r\n    <Form.Item name=\"suffix\" noStyle>\r\n      <Select\r\n        style={{\r\n          width: 70,\r\n        }}\r\n      >\r\n        <Option value=\"USD\">$</Option>\r\n        <Option value=\"CNY\">¥</Option>\r\n      </Select>\r\n    </Form.Item>\r\n  );\r\n\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log('Failed:', errorInfo);\r\n  };\r\n  return (\r\n    <div>\r\n      <h4>Editar perfil</h4>\r\n      <br />\r\n      <Dragger {...dragDropProps}>\r\n        <p className=\"ant-upload-drag-icon\">\r\n          <InboxOutlined />\r\n        </p>\r\n        <p className=\"ant-upload-text\">Arrastra la imagen de perfil o click ara buscar</p>\r\n        <p className=\"ant-upload-hint\">\r\n          Selecciona archivos en formato png, jpeg o webp\r\n        </p>\r\n      </Dragger>\r\n      <br />\r\n      <Form\r\n        {...formItemLayout}\r\n        form={form}\r\n        name=\"register\"\r\n        onFinish={onFinishEdit}\r\n        // initialValues={{ horarios: [{ sucursal: '', horario: '' }], prefix: '+52' }}\r\n        initialValues={props.perfil}\r\n        scrollToFirstError\r\n      >\r\n\r\n        <Row>\r\n\r\n          <Col span={11}>\r\n            <Form.Item name=\"name\" label=\"Nombre\" rules={[{ required: true, message: 'Ingresa Nombre y apellidos' }]}>\r\n              <Input />\r\n            </Form.Item>\r\n            <Form.Item name=\"email\" label=\"Correo\" rules={[{ type: 'email', message: 'Ingresa un corrreo electronico valido' }, { required: true, message: 'Please input your E-mail!' }]}>\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            {/* <Form.Item name=\"password\" label=\"Contraseña\" rules={[{ required: true, message: 'Por favor ingrese su contraseña!', },]} hasFeedback >\r\n              <Input.Password />\r\n            </Form.Item>\r\n\r\n            <Form.Item name=\"confirm\" label=\"Confirmar contraseña\" dependencies={['password']} hasFeedback\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: 'Please confirm your password!',\r\n                },\r\n                ({ getFieldValue }) => ({\r\n                  validator(_, value) {\r\n                    if (!value || getFieldValue('password') === value) {\r\n                      return Promise.resolve();\r\n                    }\r\n                    return Promise.reject(new Error('Las contraseñas deben coincidir!'));\r\n                  },\r\n                }),\r\n              ]}\r\n            >\r\n              <Input.Password />\r\n            </Form.Item> */}\r\n\r\n            <Form.Item name=\"telefono\" label=\"Telefono\" rules={[{ required: true, message: 'Ingresa el numero de telefono correcto' },]}>\r\n              <Input addonBefore={prefixSelector} style={{ width: '100%', }} />\r\n            </Form.Item>\r\n\r\n\r\n            <Form.Item label=\"horarios\" rules={[{ required: true, message: 'Ingresa al menos un horario', },]}>\r\n              <Form.List name=\"horarios\" label=\"horarios list\"\r\n              >\r\n                {(fields, { add, remove }) => (\r\n                  <>\r\n                    {fields.map(({ key, name, ...restField }) => (\r\n                      <Space key={key} style={{ display: 'flex', marginBottom: 8 }} align=\"baseline\">\r\n                        <Form.Item\r\n                          {...restField}\r\n                          name={[name, 'sucursal']}\r\n                          rules={[{ required: true, message: 'Elije Sucursal' }]}\r\n                        >\r\n                          <Select placeholder=\"Elije Sucursal\" style={{ width: '120px' }} >\r\n                            {sucursalesLoading ? \"Cargando\" :\r\n                              sucursales.map(s => <Option value={s._id}>{s.nombre}</Option>)\r\n                            }\r\n                          </Select>\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                          {...restField}\r\n                          name={[name, 'horario']}\r\n                          rules={[{ required: true, message: 'Missing last name' }]}\r\n                        >\r\n                          <Input placeholder=\"Horario\" />\r\n                        </Form.Item>\r\n                        <MinusCircleOutlined onClick={() => remove(name)} />\r\n                      </Space>\r\n                    ))}\r\n                    <Form.Item>\r\n                      <Button type=\"dashed\" onClick={() => add()} block icon={<PlusOutlined />}>\r\n                        Agregar Horario\r\n                      </Button>\r\n                    </Form.Item>\r\n                  </>\r\n                )}\r\n              </Form.List>\r\n            </Form.Item>\r\n\r\n\r\n\r\n          </Col>\r\n          <Col span={12}>\r\n            <Form.Item name=\"cedula\" label=\"Cedula\" rules={[{ required: false, message: 'Ingresa cedula' }]}>\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            {/* Not Necesary For Medic. He'll be in hospital direction */}\r\n            {/* <Form.Item name=\"calle\" label=\"Calle\" rules={[{ required: true, message: 'Ingresa calle', whitespace: true }]}>\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item name=\"numexterior\" label=\"Num Exterior\" rules={[{ required: true, message: 'Ingresa numero exterior' }]}>\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item name=\"numinterior\" label=\"Num Interior\" rules={[{ required: true, message: 'Ingresa numinterior' }]}>\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item label=\"Colonia\" name=\"colonia\" rules={[{ required: true, message: 'Please input your colobnia!' }]}            >\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item name=\"estado\" label=\"Estado\" rules={[{ required: true, message: 'Apellido materno', },]}>\r\n              <Select placeholder=\"Elije tu estado\">\r\n                {estados.map(e => <Option value={e}>{e}</Option>)}\r\n              </Select>\r\n            </Form.Item>\r\n\r\n            <Form.Item name=\"municipio\" label=\"Municipio\" rules={[{ required: true, message: 'Ingresa tu municipio' }]} >\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item name=\"codigopostal\" label=\"Codigo Postal\" rules={[{ required: true, message: 'Ingresa codigopostal', },]}>\r\n              <InputNumber addonAfter={suffixSelector} style={{ width: '100%', }} />\r\n            </Form.Item> */}\r\n\r\n            <Form.Item name=\"certificacion\" label=\"Certificacion\" rules={[{ required: false, message: 'Ingresa tu certificacion' }]}>\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item name=\"universidad\" label=\"Universidad\" rules={[{ required: false, message: 'Ingresa tu universidad' }]} >\r\n              <Input />\r\n            </Form.Item>\r\n            <Form.Item {...tailFormItemLayout}>\r\n              <Button type=\"primary\" htmlType=\"submit\">\r\n                Guardar\r\n              </Button>\r\n            </Form.Item>\r\n          </Col>\r\n        </Row>\r\n\r\n\r\n\r\n\r\n\r\n        {/* <Form.Item\r\n          name=\"agreement\"\r\n          valuePropName=\"checked\"\r\n          rules={[\r\n            {\r\n              validator: (_, value) =>\r\n                value ? Promise.resolve() : Promise.reject(new Error('Should accept agreement')),\r\n            },\r\n          ]}\r\n          {...tailFormItemLayout}\r\n        >\r\n          <Checkbox>\r\n            He leído y acepto los <a href=\"https://recreamed.com\">terminos y condiciones</a>\r\n          </Checkbox>\r\n        </Form.Item> */}\r\n\r\n\r\n      </Form>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Row, Col, Space, Button, Divider, Image } from 'antd';\r\nimport { Avatar, Card } from 'antd';\r\nimport { UserOutlined } from '@ant-design/icons';\r\nimport { API, usuario } from '.././resources';\r\nimport Loading from '.././loading';\r\nimport { PlusOutlined, FormOutlined } from '@ant-design/icons';\r\nimport PerfilEdit from './perfilEdit';\r\n\r\nexport default function PerfilAdministrador() {\r\n\r\n  const [profileData, setProfileData] = useState([]);\r\n  const [profileForEdit, setProfileForEdit] = useState([]);\r\n  const [editing, setEditing] = useState(false)\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [visible, setVisible] = useState(false)\r\n\r\n  useEffect(() => {\r\n    getProfileData()\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    getProfileData()\r\n  }, [editing])\r\n\r\n  const getProfileData = () => {\r\n    fetch(API + 'userByMail/' + usuario.email)\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        console.log(data);\r\n        setProfileData(data[0]);\r\n        setIsLoading(false);\r\n      });\r\n  }\r\n\r\n  const editPerfil = async (p) => {\r\n    p.horarios.forEach((h) => { h.sucursal = h.sucursal._id })\r\n    console.log('Horarios before edit profile: ', p.horarios);\r\n    await setProfileForEdit(p)\r\n    setEditing(true);\r\n    console.log('Editar medico: ', p)\r\n  }\r\n\r\n  const DetailsProfile = () => {\r\n    return <Row>\r\n      <Col span={8}>\r\n        {\r\n          // Profile Pic\r\n          profileData.avatar.length > 8 ?\r\n            <Image style={{ borderRadius: 12 }} width={256} src={'https://api.recreamed.com/images/' + profileData.avatar} />\r\n            :\r\n            <Avatar size={128} icon={<UserOutlined />} style={{ marginLeft: 80 }} />\r\n        }\r\n        <br /><br />\r\n        <p>Nombre: {profileData.name} </p>\r\n        <p>Correo: {profileData.email} </p>\r\n        <p>Telefono: {profileData.telefono} </p>\r\n      </Col>\r\n      {/* <Col span={8}>\r\n                <p>Estado: {profileData.estado}</p>\r\n                <p>Municipio: {profileData.municipio}</p>\r\n                <p>Colonia: {profileData.colonia}</p>\r\n                <p>Calle: {profileData.calle}</p>\r\n                <p>Codigo Postal:{profileData.codigopostal} </p>\r\n            </Col> */}\r\n      <Col span={8}>\r\n        <Card title='Horarios' style={{ borderRadius: 12 }}>\r\n          {\r\n            profileData.horarios.map((h) => {\r\n              return <Card.Grid style={{ width: '100%' }} >\r\n                <Row align=\"middle\">\r\n                  <Col span={6} offset={4}><img width={64} src={'https://api.recreamed.com/images/' + h.sucursal.logo} alt=\"Logo\" /></Col>\r\n                  <Col span={10}>{h.sucursal.nombre} <br /> {h.horario}</Col>\r\n                </Row>\r\n              </Card.Grid>\r\n            })\r\n          }\r\n        </Card>\r\n        <br />\r\n        {/* <p>Universidad: {profileData.universidad} </p> */}\r\n      </Col>\r\n\r\n\r\n\r\n    </Row>\r\n  }\r\n\r\n  return (\r\n    <div className='mainContainer'>\r\n\r\n      <Space>\r\n        <h3>PERFIL</h3>\r\n        <Button onClick={() => editPerfil(profileData)} type=\"primary\" shape=\"circle\" icon={<FormOutlined />} />\r\n      </Space>\r\n      {isLoading ? <Loading /> :\r\n        <Card style={{ borderRadius: 16 }}>\r\n          {\r\n            editing ?\r\n\r\n              <>\r\n                <PerfilEdit perfil={profileData} setEditing={setEditing} />\r\n                <Button shape=\"circle\" title='Cancelar' />\r\n                <Button onClick={() => setEditing(false)}>Cancelar</Button>\r\n              </> :\r\n              <DetailsProfile />\r\n          }\r\n        </Card>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Row, Col, Statistic, Card } from 'antd'\r\nimport { Pie, Line } from '@ant-design/charts';\r\nimport './home.css'\r\n\r\nexport class Home extends Component {\r\n    \r\n    dataPie = [\r\n        {\r\n            type: 'Covid',\r\n            value: 130737,\r\n        },\r\n        {\r\n            type: 'Colesterol',\r\n            value: 21468,\r\n        },\r\n        {\r\n            type: 'Diabetes',\r\n            value: 18098,\r\n        },\r\n        {\r\n            type: 'Presion',\r\n            value: 17912,\r\n        },\r\n        {\r\n            type: 'Oseo',\r\n            value: 15282,\r\n        },\r\n        {\r\n            type: 'Migraña',\r\n            value: 11650,\r\n        },\r\n    ];\r\n\r\n    configPie = {\r\n        appendPadding: 10,\r\n        data: this.dataPie,\r\n        angleField: 'value',\r\n        colorField: 'type',\r\n        height: 450,\r\n        radius: 0.8,\r\n        label: {\r\n            type: 'inner',\r\n            offset: '-0.5',\r\n            content: '{name} {percentage}',\r\n            style: {\r\n                fill: '#fff',\r\n                fontSize: 14,\r\n                textAlign: 'center',\r\n            },\r\n        },\r\n    };\r\n\r\n    dataLine = [\r\n        { mes: 'Junio', consultas: 17945 },\r\n        { mes: 'Julio', consultas: 24011 },\r\n        { mes: 'Agosto', consultas: 46493 },\r\n        { mes: 'Septiembre', consultas: 105293 },\r\n        { mes: 'Octubre', consultas: 77190 }\r\n    ];\r\n\r\n    configLine = {\r\n        data: this.dataLine,\r\n        height: 410,\r\n        xField: 'mes',\r\n        yField: 'consultas',\r\n        color: '#01B075',\r\n        point: {\r\n            size: 5,\r\n            shape: 'diamond',\r\n            color: '#01B075'\r\n        },\r\n        label: {\r\n            style: {\r\n                fill: '#aaa',\r\n                fontSize: 16,\r\n                stroke: '#01B075'\r\n            },\r\n        },\r\n    };\r\n    render() {\r\n        return (\r\n            <>\r\n\r\n                <br />\r\n                <div className=\"contenedor\">\r\n                    <Row gutter={30}>\r\n                        <Col xs={24} sm={12} lg={6}>\r\n                            {/* <div className=\"cardsContenedor\" > */}\r\n                            <Card className=\"cardsContenedor\" hoverable bordered={false}>\r\n\r\n                                <Statistic title=\"Total Hospitales\" value=\"4\" valueStyle={{ color: 'white' }} style={{ backgroundColor: '#4BA6FE' }} className=\"cardsContenido\" />\r\n                            </Card>\r\n                        </Col>\r\n                        <Col xs={24} sm={12} lg={6}>\r\n                            <Card className=\"cardsContenedor\" hoverable bordered={false}>\r\n                                <Statistic title=\"Total Medicos\" value=\"14\" valueStyle={{ color: 'white' }} style={{ backgroundColor: '#FF838A' }} className=\"cardsContenido\" />\r\n                            </Card>\r\n                        </Col>\r\n\r\n                        <Col xs={24} sm={12} lg={6}>\r\n                            <Card className=\"cardsContenedor\" hoverable bordered={false}>\r\n\r\n                                <Statistic title=\"Total Pacientes\" value=\"241\" valueStyle={{ color: 'white' }} style={{ backgroundColor: '#18D0C2' }} className=\"cardsContenido\" />\r\n                            </Card>\r\n                        </Col>\r\n                        <Col xs={24} sm={12} lg={6}>\r\n                            <Card className=\"cardsContenedor\" hoverable bordered={false}>\r\n\r\n                                <Statistic title=\"Citas Hoy\" value={47} valueStyle={{ color: 'white' }} style={{ backgroundColor: '#847DFC' }} className=\"cardsContenido\" />\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n                    <br />\r\n                    <Row gutter={20}>\r\n                        <Col xs={24} md={12} className=\"graficaCircular\">\r\n                            <Pie {...this.configPie} style={{ backgroundColor: '#1F263C' }} />\r\n                        </Col>\r\n\r\n                        <Col xs={24} md={12}>\r\n                            <Line {...this.configLine} style={{ backgroundColor: '#1F263C', padding: '20px' }} />\r\n                        </Col>\r\n                    </Row>\r\n\r\n                </div>\r\n\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home\r\n","import React from 'react'\r\nimport { Container, Nav, Navbar } from \"react-bootstrap\";\r\nimport { Button } from 'antd'\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport { Citas } from './citas/citas'\r\nimport Users from './users/main.users';\r\nimport Doctors from './doctors/main.doctors'\r\nimport Sucursal from './sucursal'\r\nimport PerfilAdministrador from './perfilAdministrador'\r\nimport Home from './home/home'\r\nimport icon from '../assets/Icon.png';\r\nimport Escalas from '../escalas/escalasMenu';\r\n\r\nconst logout = () => { localStorage.removeItem('sessionToken'); localStorage.removeItem('userType'); window.location.href = '/'; }\r\n\r\nfunction Navigator() {\r\n  return <Navbar bg=\"light\" expand=\"lg\">\r\n    <Container>\r\n      <Navbar.Brand href=\"#home\">\r\n        <img\r\n          src={icon}\r\n          width=\"40\"\r\n          height=\"35\"\r\n          className=\"d-inline-block align-top\"\r\n          alt=\"Recreamed logo\"\r\n        />\r\n        Bienvenido Administrador\r\n      </Navbar.Brand>\r\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n      <Navbar.Collapse id=\"basic-navbar-nav\">\r\n        <Nav className=\"me-auto\">\r\n\r\n          <Nav.Link href=\"/\">Inicio</Nav.Link>\r\n          <Nav.Link href=\"pacientes\">Pacientes</Nav.Link>\r\n          <Nav.Link href=\"doctores\">Medicos</Nav.Link>\r\n          <Nav.Link href=\"citas\">Citas</Nav.Link>\r\n          <Nav.Link href=\"escalas\">Escalas</Nav.Link>\r\n          <Nav.Link href=\"administrador\">Perfil</Nav.Link>\r\n\r\n        </Nav>\r\n      </Navbar.Collapse>\r\n      <Navbar.Collapse className=\"justify-content-end\">\r\n        <Button onClick={logout} >Cerrar Sesion</Button>\r\n      </Navbar.Collapse>\r\n    </Container>\r\n  </Navbar>;\r\n}\r\n\r\nexport default function AdminHospitalApp() {\r\n  return (\r\n    <Router>\r\n      <Navigator />\r\n      <Switch>\r\n        <Route path=\"/sucursal\">\r\n          <Sucursal />\r\n        </Route>\r\n        <Route path=\"/doctores\">\r\n          <Doctors />\r\n        </Route>\r\n        <Route path=\"/citas\">\r\n          <Citas />\r\n        </Route>\r\n        <Route path=\"/pacientes\">\r\n          <Users />\r\n        </Route>\r\n        <Route path=\"/escalas\">\r\n          <Escalas/>\r\n        </Route>\r\n        <Route path=\"/administrador\">\r\n          <PerfilAdministrador />\r\n        </Route>\r\n        <Route path=\"/\">\r\n          <Home />\r\n        </Route>\r\n\r\n      </Switch>\r\n    </Router>\r\n  )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Form, Input, Button, message, Upload, Divider, Row, Col } from 'antd'\r\nimport { InputNumber, Select } from 'antd';\r\nimport { InboxOutlined, MinusCircleOutlined, PlusOutlined } from '@ant-design/icons'\r\nimport { S_API, API, getData } from '../../resources'\r\n\r\nconst { Option } = Select;\r\nconst { Dragger } = Upload;\r\nconst estados = [\"Michoacan\", \"Morelos\", \"Guerrero\"];\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    xs: {\r\n      span: 24,\r\n    },\r\n    sm: {\r\n      span: 4,\r\n    },\r\n  },\r\n  wrapperCol: {\r\n    xs: {\r\n      span: 24,\r\n    },\r\n    sm: {\r\n      span: 20,\r\n    },\r\n  },\r\n};\r\nconst formItemLayoutWithOutLabel = {\r\n  wrapperCol: {\r\n    xs: {\r\n      span: 24,\r\n      offset: 0,\r\n    },\r\n    sm: {\r\n      span: 20,\r\n      offset: 4,\r\n    },\r\n  },\r\n};\r\nexport default function Register(props) {\r\n\r\n  const [form] = Form.useForm();\r\n\r\n  const [medicosData, setMedicosData] = useState(null)\r\n  const [medicosDataLoading, setMedicosDataLoading] = useState(true)\r\n  const [avatar, setAvatar] = useState(props.paciente ? props.paciente.avatar : 'https://')\r\n\r\n  useEffect(() => {\r\n    getData('/users_by_rol/Medico').then((res) => { setMedicosData(res); setMedicosDataLoading(false); })\r\n  }, [])\r\n\r\n\r\n  //Start upload props Upload File\r\n  const dragDropProps = {\r\n    name: 'file',\r\n    multiple: false,\r\n    action: API + 'imagenes/upload',\r\n\r\n    onChange(info) {\r\n      const { status } = info.file;\r\n\r\n      if (status !== 'uploading') {\r\n        console.log(info.file, info.fileList);\r\n      }\r\n\r\n      if (status === 'done') {\r\n        message.success(`${info.file.name} file uploaded successfully.`);\r\n        console.log('New Files: ', info.file.response.file)\r\n        setAvatar(info.file.response.file)\r\n      } else if (status === 'error') {\r\n        message.error(`${info.file.name} file upload failed.`);\r\n      }\r\n    },\r\n\r\n    onDrop(e) {\r\n      console.log('Dropped files', e.dataTransfer.files);\r\n    },\r\n  };\r\n\r\n  async function addHistoria() {\r\n    return await fetch(API + 'historias/add', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        historial: \"Historia clinica al \" + new Date()\r\n      })\r\n    }).then(res => res.json())\r\n      .then(response => {\r\n        console.log('Story Created: ', response);\r\n        return response\r\n      })\r\n      .catch(error => console.error('Error:', error))\r\n  }\r\n\r\n  const createPAtientData = async (usr) => {\r\n    const historia = await addHistoria();\r\n    console.log('historia on Register: ', historia);\r\n    const postBody = {\r\n      usuario: usr,\r\n      historia: historia.id_historia,\r\n      notas: [],\r\n      recetas: []\r\n    }\r\n    console.log('postBodyForExpedient: ', postBody);\r\n    await fetch(API + 'expedientes/add', {\r\n      method: 'POST',\r\n      body: JSON.stringify(postBody),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).then(res => res.json())\r\n      .then(response => {\r\n        console.log('Exp on register pat:', response);\r\n        message.success(response.message || response.error);\r\n        if (response.message && response.message === 'Expediente creado correctamente') {\r\n          window.location.href = '/pacientes';\r\n          console.log('Ready to navigate');\r\n\r\n        }\r\n      })\r\n      .catch(error => console.error('Error:', error))\r\n    // .finally(() => { props.setAdding(false) }) here will be close modal\r\n  }\r\n\r\n  const onFinish = async (values) => {\r\n\r\n    // Register patient\r\n    values.avatar = avatar;\r\n    values.estatus = '1';\r\n    values.rol = 'Paciente';\r\n    values.password = '' + values.telefono;\r\n    values.universidad = '';\r\n    values.certificacion = '';\r\n    values.cedula = '';\r\n    values.horarios = [];\r\n    // values.medicos_asignados = props.paciente ? props.paciente.medicos_asignados : [usuario._id];\r\n    values.responsable = props.paciente ? props.paciente.responsable : { nombre: values.res_name, telefono: values.res_phone }\r\n\r\n    delete values.prefix;\r\n    delete values.res_name;\r\n    delete values.res_phone;\r\n\r\n    const url = props.paciente ? API + 'users/updateUser/' + props.paciente._id : S_API + 'register';\r\n\r\n    console.log(values)\r\n    console.log('url: ', url);\r\n    await fetch(url, {\r\n      method: props.paciente ? 'PUT' : 'POST',\r\n      body: JSON.stringify(values),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).then(res => res.json())\r\n      .then(response => {\r\n        console.log('Create User Response:', response);\r\n        message.success(response.message || response.error);\r\n        props.paciente ? console.log('Editing, not creating patient') : createPAtientData(response.user_id);\r\n      })\r\n      .catch(error => console.error('Error:', error))\r\n  };\r\n\r\n  const onFinishEdit = (values) => {\r\n    values.avatar = avatar;\r\n    // values.estatus = '1';\r\n    // values.rol = 'Paciente';\r\n    // delete values.confirm;\r\n    // delete values.prefix;\r\n    // delete values.agreement;\r\n\r\n    console.log(values)\r\n    fetch(API + '/users/updateUser/:_id', {\r\n      method: 'PUT',\r\n      body: JSON.stringify(values),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).then(res => res.json())\r\n      .then(response => { console.log('Success:', response); message.success(response.message || response.error); })\r\n      .catch(error => console.error('Error:', error))\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log('Failed:', errorInfo);\r\n  };\r\n\r\n  const prefixSelector = (\r\n    <Form.Item name=\"prefix\" noStyle>\r\n      <Select\r\n        style={{\r\n          width: 70,\r\n        }}\r\n      >\r\n        <Option value=\"+52\">+52</Option>\r\n      </Select>\r\n    </Form.Item>\r\n  );\r\n  const suffixSelector = (\r\n    <Form.Item name=\"suffix\" noStyle>\r\n      <Select\r\n        style={{\r\n          width: 70,\r\n        }}\r\n      >\r\n        <Option value=\"USD\">$</Option>\r\n        <Option value=\"CNY\">¥</Option>\r\n      </Select>\r\n    </Form.Item>\r\n  );\r\n  return (\r\n    <div>\r\n      <h4>Registrar Usuario</h4>\r\n      <br />\r\n      <Dragger {...dragDropProps}>\r\n        <p className=\"ant-upload-drag-icon\">\r\n          <InboxOutlined />\r\n        </p>\r\n        <p className=\"ant-upload-text\">Arrastra la imagen de perfil o click ara buscar</p>\r\n        <p className=\"ant-upload-hint\">\r\n          Selecciona archivos en formato png, jpeg o webp\r\n        </p>\r\n      </Dragger>\r\n      <br />\r\n      <Form\r\n        // {...formItemLayout}\r\n        labelCol={{ span: 6 }} wrapperCol={{ span: 16 }}\r\n        form={form}\r\n        name=\"register\"\r\n        onFinish={onFinish}\r\n        initialValues={props.paciente}\r\n        scrollToFirstError\r\n      >\r\n        <Row>\r\n          <Col span={10}>\r\n            <Form.Item\r\n              name=\"name\"\r\n              label=\"Nombre\"\r\n              rules={[{ required: true, message: 'Ingresa Nombre y apellidos' }]}\r\n            >\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            <Form.List\r\n              name=\"medicos_asignados\"\r\n              rules={[\r\n                {\r\n                  validator: async (_, medicos_asignados) => {\r\n                    if (!medicos_asignados || medicos_asignados.length < 1) {\r\n                      return Promise.reject(new Error('Ingrese al menos un medico'));\r\n                    }\r\n                  },\r\n                },\r\n              ]}\r\n            >\r\n              {(fields, { add, remove }, { errors }) => (\r\n                <>\r\n                  {fields.map((field, index) => (\r\n                    <Form.Item\r\n                      {...(index === 0 ? formItemLayout : formItemLayoutWithOutLabel)}\r\n                      label={index === 0 ? 'Medico' : ''}\r\n                      required={false}\r\n                      key={field.key}\r\n                    >\r\n                      <Form.Item\r\n                        {...field}\r\n                        validateTrigger={['onChange', 'onBlur']}\r\n                        rules={[\r\n                          {\r\n                            required: true,\r\n                            whitespace: true,\r\n                            message: \"Ingrese nombre del medico o borre este campo.\",\r\n                          },\r\n                        ]}\r\n                        noStyle\r\n                      >\r\n                        <Select\r\n                          // defaultValue=\"lucy\"\r\n                          style={{\r\n                            marginLeft: 36,\r\n                            width: '80%',\r\n                          }}\r\n                        // onChange={handleChange}\r\n                        >\r\n                          {\r\n                            medicosDataLoading ? <Option value=\"loading\">Cargando...</Option> :\r\n                              medicosData.map((m) => <Option value={m._id}>{m.name}</Option>)\r\n                          }\r\n\r\n                        </Select>\r\n                      </Form.Item>\r\n                      {\r\n                        fields.length > 1 ? (\r\n                          <MinusCircleOutlined\r\n                            style={{ marginLeft: 2 }}\r\n                            className=\"dynamic-delete-button\"\r\n                            onClick={() => remove(field.name)}\r\n                          />\r\n                        ) : null\r\n                      }\r\n                    </Form.Item>\r\n                  ))}\r\n                  <Form.Item>\r\n                    <Button type=\"dashed\" onClick={() => add()} style={{ width: '100%', marginLeft: 108 }} icon={<PlusOutlined />}>\r\n                      Asignar Medico\r\n                    </Button>\r\n                    {/* <Button type=\"dashed\" onClick={() => { add('The head item', 0) }} style={{ width: '60%', marginTop: '20px' }} icon={<PlusOutlined />}>Add field at head</Button> */}\r\n                    <Form.ErrorList errors={errors} />\r\n                  </Form.Item>\r\n                </>\r\n              )}\r\n            </Form.List>\r\n\r\n            <Form.Item\r\n              name=\"email\"\r\n              label=\"Correo\"\r\n              rules={[{ type: 'email', message: 'Ingresa un correo electronico vaido!' }, { required: true, message: 'Please input your E-mail!' }]}>\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n              name=\"telefono\"\r\n              label=\"Telefono\"\r\n              rules={[{ required: true, message: 'Please input your phone number!' }]}\r\n            >\r\n              <Input\r\n                addonBefore={prefixSelector}\r\n                style={{\r\n                  width: '100%',\r\n                }}\r\n              />\r\n            </Form.Item>\r\n\r\n            <Divider>Responsable (opcional)</Divider>\r\n            <Form.Item\r\n              name=\"res_name\"\r\n              label=\"Nombre\"\r\n              rules={[{ message: 'Ingresa Nombre y apellidos' }]}\r\n            >\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n              name=\"res_phone\"\r\n              label=\"Telefono\"\r\n              rules={[{ message: 'Ingresa Nombre y apellidos' }\r\n              ]}\r\n            >\r\n              <Input />\r\n            </Form.Item>\r\n          </Col>\r\n\r\n\r\n          <Col span={10}>\r\n            <Form.Item\r\n              name=\"calle\"\r\n              label=\"Calle\"\r\n              rules={[{ required: false, message: 'Ingresa calle', whitespace: true }]}\r\n            >\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n              name=\"numexterior\"\r\n              label=\"Num Exterior\"\r\n              rules={[{ required: false, message: 'Ingresa numero exterior' }]}\r\n            >\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n              name=\"numinterior\"\r\n              label=\"Num Interior\"\r\n              rules={[{ required: false, message: 'Ingresa numinterior' }]}\r\n            >\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n              label=\"Colonia\"\r\n              name=\"colonia\"\r\n              rules={[{ required: false, message: 'Please input your colobnia!' }]}\r\n            >\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item name=\"estado\" label=\"Estado\" rules={[{ required: true, message: 'Apellido materno', },]}>\r\n              <Select placeholder=\"Elije tu estado\">\r\n                {estados.map(e => <Option value={e}>{e}</Option>)}\r\n              </Select>\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n              name=\"municipio\"\r\n              label=\"Municipio\"\r\n              rules={[{ required: true, message: 'Ingresa tu municipio' }]}\r\n            >\r\n              <Input />\r\n            </Form.Item>\r\n            <Form.Item name=\"codigopostal\" label=\"Codigo Postal\" rules={[{ required: false, message: 'Ingresa codigopostal', },]}>\r\n              <InputNumber style={{ width: '100%', }} />\r\n            </Form.Item>\r\n\r\n            <Form.Item wrapperCol={{span: 12}} labelCol={{span: 2}} >\r\n              {\r\n                props.setIsModalVisible && <Button onClick={() => props.setIsModalVisible(false)} style={{ marginRight: 8 }}>Cancelar</Button>\r\n              }\r\n              <Button type=\"primary\" htmlType=\"submit\">\r\n                Registrar\r\n              </Button>\r\n            </Form.Item>\r\n\r\n          </Col>\r\n\r\n\r\n\r\n\r\n        </Row>\r\n      </Form>\r\n    </div >\r\n  )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Table, Space, Button, Card, Modal, Popconfirm } from 'antd'\r\nimport { API, deleteData } from '../../resources';\r\nimport Loading from '../../loading';\r\nimport Register from './register.patient'\r\n\r\nexport default function Dash() {\r\n\r\n  const [usuario, setUsuario] = useState({});\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [isEditModalVisible, setIsEditModalVisible] = useState(false);\r\n  const [isLoading, setILoading] = useState(true);\r\n  const [pacientesData, setPacientesData] = useState([]);\r\n  const [patientForEdit, setPatientForEdit] = useState(null)\r\n  const showModal = () => { setIsModalVisible(true); };\r\n  const handleOk = () => { setIsModalVisible(false); };\r\n  const handleCancel = () => { setIsModalVisible(false); };\r\n  const handleOkEdit = () => { setIsEditModalVisible(false); };\r\n  const handleCancelEdit = () => { setIsEditModalVisible(false); };\r\n\r\n  useEffect(() => {\r\n    getPacientesData()\r\n  }, [])\r\n\r\n  const getPacientesData = () => {\r\n    fetch(API + 'users_by_rol/Paciente')\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        console.log(data); setPacientesData(data);\r\n      })\r\n      .finally(() => setILoading(false))\r\n  }\r\n\r\n  const editPatient = async (p) => {\r\n    await setPatientForEdit(p)\r\n    setIsEditModalVisible(true);\r\n    console.log('Editar paciente: ', p)\r\n  }\r\n\r\n  const deletePatient = (patient) => {\r\n    deleteData('/users/remove/' + patient._id).then(() => {\r\n      console.log('removed: ', patient._id);\r\n      getPacientesData()\r\n    })\r\n  }\r\n\r\n  const columns = [\r\n    {\r\n      title: 'Foto',\r\n      dataIndex: 'avatar',\r\n      key: 'avatar',\r\n      render: (_, record) => (\r\n        <img src={'https://api.recreamed.com/images/' + record.avatar} alt=\"Logo\" width={64} />\r\n      ),\r\n    },\r\n    {\r\n      title: 'Nombre',\r\n      dataIndex: 'name',\r\n      key: 'name',\r\n    },\r\n\r\n    {\r\n      title: 'Correo',\r\n      dataIndex: 'email',\r\n      key: 'email',\r\n    },\r\n\r\n    {\r\n      title: 'Telefono',\r\n      dataIndex: 'telefono',\r\n      key: 'tel',\r\n    },\r\n    // {\r\n    //   title: 'Detalles',\r\n    //   key: 'detalles',\r\n    //   render: (text, record) => (\r\n    //     <Space size=\"middle\">\r\n    //       <Button onClick={() => { setUsuario(record); showModal(); }}>Detalles</Button>\r\n    //     </Space>\r\n    //   )\r\n    // },\r\n    {\r\n      title: 'Opciones',\r\n      key: 'action',\r\n      render: (_, record) => (\r\n        <Space size=\"middle\">\r\n          <Button size='small' onClick={() => { editPatient(record) }}>\r\n            Editar\r\n          </Button>\r\n          <Popconfirm\r\n            title=\"Seguro que quiere borrar este paciente?\"\r\n            onConfirm={() => deletePatient(record)}\r\n            // onCancel={cancel}\r\n            okText=\"Si\"\r\n            cancelText=\"No\"\r\n          >\r\n            <Button danger size='small'>\r\n              Borrar\r\n            </Button>\r\n          </Popconfirm>\r\n\r\n        </Space>\r\n      ),\r\n    }\r\n  ];\r\n\r\n  const gridStyle = {\r\n    width: '50%',\r\n    height: '50px',\r\n    textAlign: 'center',\r\n    display: 'inline-flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center'\r\n  };\r\n\r\n  function DetalleUsuario() {\r\n    return <div>\r\n      <Card bordered={false}>\r\n        {\r\n          Object.keys(usuario).map(k => {\r\n            return <><Card.Grid style={gridStyle}>{k}</Card.Grid><Card.Grid style={gridStyle} size='small'>{usuario[k]}</Card.Grid></>\r\n          })\r\n        }\r\n      </Card>\r\n    </div>\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h4>Pacientes</h4>\r\n      {isLoading ? <Loading /> :\r\n\r\n        <Table dataSource={pacientesData} columns={columns} />\r\n      }\r\n      <Modal width={800} title={<h4>Datos del paciente </h4>} visible={isModalVisible} onOk={handleOk} onCancel={handleCancel} destroyOnClose={true}>\r\n        <DetalleUsuario />\r\n      </Modal>\r\n\r\n      <Modal width={1000} title={<h4>Editar Paciente</h4>} visible={isEditModalVisible} onOk={handleOkEdit} onCancel={handleCancelEdit} destroyOnClose\r\n        footer={[]}\r\n      >\r\n        <Register paciente={patientForEdit} setIsModalVisible={setIsEditModalVisible}/>\r\n      </Modal>\r\n    </div>\r\n  )\r\n\r\n}\r\n","import { React, Component } from 'react';\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\nimport { Layout, Menu } from 'antd';\r\nimport { UserOutlined, UserAddOutlined, MenuOutlined } from '@ant-design/icons';\r\n\r\nimport Register from './register.patient';\r\nimport Dash from './dash.patients';\r\n\r\nconst { Header, Content, Footer, Sider } = Layout;\r\n\r\nclass SideMenu extends Component {\r\n  handleClick = e => {\r\n    console.log('click ', e);\r\n  };\r\n\r\n  state = {\r\n    collapsed: false,\r\n  };\r\n\r\n  onCollapse = (collapsed) => {\r\n    this.setState({ collapsed });\r\n  }\r\n  toggle = () => {\r\n    this.setState({\r\n      collapsed: !this.state.collapsed,\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <Layout style={{ minHeight: '100vh' }}>\r\n          <Sider\r\n            theme=\"light\"\r\n            collapsible\r\n            collapsed={this.state.collapsed}\r\n            onCollapse={this.onCollapse}>\r\n            <div className=\"logo\" />\r\n            <Menu defaultSelectedKeys={['1']} mode=\"inline\">\r\n              <Menu.Item icon={ <UserOutlined /> } key=\"1\">\r\n                <span>Pacientes</span>\r\n                <Link to=\"/pacientes\" />\r\n              </Menu.Item>\r\n              <Menu.Item icon={ <UserAddOutlined /> } key=\"2\">\r\n                <span>Registrar Paciente</span>\r\n                <Link to=\"/registrar_paciente\" />\r\n              </Menu.Item>\r\n            </Menu>\r\n          </Sider>\r\n          <Layout>\r\n\r\n            <Header style={{ background: '#fff', padding: 0, paddingLeft: 16 }}>\r\n              <MenuOutlined className=\"trigger\" style={{ cursor: 'pointer' }} onClick={this.toggle} />\r\n            </Header>\r\n\r\n            <Content style={{ margin: '24px 16px', padding: 24, background: '#fff', minHeight: 280 }}>\r\n              <Route exact path=\"/registrar_paciente\" component={Register} />\r\n              <Route path=\"/pacientes\" component={Dash} />\r\n            </Content>\r\n\r\n            <Footer style={{ textAlign: 'center' }}>\r\n              RECREAMED ©2021 Created by Realidad Creativa\r\n            </Footer>\r\n          </Layout>\r\n\r\n        </Layout>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SideMenu\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport SideMenu from './side.patients';\r\n\r\nexport class Patients extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div>\r\n                            <SideMenu />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Patients\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Form, Input, Button, message, Space, Row, Col, Upload } from 'antd'\r\nimport { MinusCircleOutlined, PlusOutlined, InboxOutlined } from '@ant-design/icons';\r\nimport { Divider, Select } from 'antd';\r\nimport { S_API, getData, API } from '../../resources'\r\nconst { Option } = Select;\r\nconst estados = [\"Michoacan\", \"Morelos\", \"Guerrero\"];\r\nconst { Dragger } = Upload;\r\n\r\n\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    xs: {\r\n      span: 24,\r\n    },\r\n    sm: {\r\n      span: 8,\r\n    },\r\n  },\r\n  wrapperCol: {\r\n    xs: {\r\n      span: 24,\r\n    },\r\n    sm: {\r\n      span: 14,\r\n    },\r\n  },\r\n};\r\nconst tailFormItemLayout = {\r\n  wrapperCol: {\r\n    xs: {\r\n      span: 24,\r\n      offset: 0,\r\n    },\r\n    sm: {\r\n      span: 16,\r\n      offset: 8,\r\n    },\r\n  },\r\n};\r\nexport default function Register(props) {\r\n\r\n  const [form] = Form.useForm();\r\n\r\n  const [sucursales, setSucursales] = useState([]);\r\n  const [sucursalesLoading, setSucursalesLoading] = useState(true);\r\n  const [avatar, setAvatar] = useState(props.medico ? props.medico.avatar : 'https://')\r\n\r\n  //Start upload props Upload File\r\n  const dragDropProps = {\r\n    name: 'file',\r\n    multiple: false,\r\n    action: API + 'imagenes/upload',\r\n\r\n    onChange(info) {\r\n      const { status } = info.file;\r\n\r\n      if (status !== 'uploading') {\r\n        console.log(info.file, info.fileList);\r\n      }\r\n\r\n      if (status === 'done') {\r\n        message.success(`${info.file.name} file uploaded successfully.`);\r\n        console.log('New Files: ', info.file.response.file)\r\n        setAvatar(info.file.response.file)\r\n      } else if (status === 'error') {\r\n        message.error(`${info.file.name} file upload failed.`);\r\n      }\r\n    },\r\n\r\n    onDrop(e) {\r\n      console.log('Dropped files', e.dataTransfer.files);\r\n    },\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log('received Medic: ', props.medico);\r\n    getData('sucursales').then((rs) => { setSucursales(rs); setSucursalesLoading(false) })\r\n  }, [])\r\n\r\n\r\n\r\n  const onFinish = (values) => {\r\n    values.avatar = avatar;\r\n    values.estatus = '1';\r\n    values.rol = 'Medico';\r\n    delete values.confirm;\r\n    delete values.prefix;\r\n\r\n    console.log('ready to send', values)\r\n    fetch(S_API + 'register', {\r\n      method: 'POST',\r\n      body: JSON.stringify(values),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).then(res => res.json())\r\n      .then(response => {\r\n        console.log('Success:', response);\r\n        response.message && response.message === 'Usuario creado correctamente' ?\r\n          window.location.href = 'doctores' : message.error(response.error);\r\n      })\r\n      .catch(error => console.error('Error:', error))\r\n  };\r\n\r\n  const onFinishEdit = (values) => {\r\n    values.avatar = avatar;\r\n    // values.estatus = '1';\r\n    // values.rol = 'Medico';\r\n    // delete values.confirm;\r\n    // delete values.prefix;\r\n\r\n    console.log('ready to send', values)\r\n    fetch(API + 'users/updateUser/' + props.medico._id, {\r\n      method: 'PUT',\r\n      body: JSON.stringify(values),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).then(res => res.json())\r\n      .then(response => {\r\n        console.log('Success:', response);\r\n        response.message && response.message === 'Usuario actualizado correctamente' ?\r\n          props.setIsModalVisible(false) : message.error(response.error);\r\n      })\r\n      .catch(error => console.error('Error:', error))\r\n  };\r\n\r\n  const prefixSelector = (\r\n    <Form.Item name=\"prefix\" noStyle>\r\n      <Select\r\n        style={{\r\n          width: 70,\r\n        }}\r\n      >\r\n        <Option value=\"+52\">+52</Option>\r\n      </Select>\r\n    </Form.Item>\r\n  );\r\n  const suffixSelector = (\r\n    <Form.Item name=\"suffix\" noStyle>\r\n      <Select\r\n        style={{\r\n          width: 70,\r\n        }}\r\n      >\r\n        <Option value=\"USD\">$</Option>\r\n        <Option value=\"CNY\">¥</Option>\r\n      </Select>\r\n    </Form.Item>\r\n  );\r\n\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log('Failed:', errorInfo);\r\n  };\r\n  return (\r\n    <div>\r\n      {\r\n        props.medico ?\r\n          <></> : <h1>Registrar doctor</h1>\r\n      }\r\n      <br />\r\n      <Dragger {...dragDropProps}>\r\n        <p className=\"ant-upload-drag-icon\">\r\n          <InboxOutlined />\r\n        </p>\r\n        <p className=\"ant-upload-text\">Arrastra la imagen de perfil o click ara buscar</p>\r\n        <p className=\"ant-upload-hint\">\r\n          Selecciona archivos en formato png, jpeg o webp\r\n        </p>\r\n      </Dragger>\r\n      <br />\r\n      <Form\r\n        {...formItemLayout}\r\n        form={form}\r\n        name=\"register\"\r\n        onFinish={props.medico ? onFinishEdit : onFinish}\r\n        // initialValues={{ horarios: [{ sucursal: '', horario: '' }], prefix: '+52' }}\r\n        initialValues={props.medico}\r\n        scrollToFirstError\r\n      >\r\n\r\n        <Row>\r\n\r\n          <Col span={11}>\r\n            <Form.Item name=\"name\" label=\"Nombre\" rules={[{ required: true, message: 'Ingresa Nombre y apellidos' }]}>\r\n              <Input />\r\n            </Form.Item>\r\n            <Form.Item name=\"email\" label=\"Correo\" rules={[{ type: 'email', message: 'Ingresa un corrreo electronico valido' }, { required: true, message: 'Please input your E-mail!' }]}>\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            {\r\n              props.medico ? <></> : <>\r\n                <Form.Item name=\"password\" label=\"Contraseña\" rules={[{ required: true, message: 'Por favor ingrese su contraseña!', },]} hasFeedback >\r\n                  <Input.Password />\r\n                </Form.Item>\r\n\r\n                <Form.Item name=\"confirm\" label=\"Confirmar contraseña\" dependencies={['password']} hasFeedback\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: 'Please confirm your password!',\r\n                    },\r\n                    ({ getFieldValue }) => ({\r\n                      validator(_, value) {\r\n                        if (!value || getFieldValue('password') === value) {\r\n                          return Promise.resolve();\r\n                        }\r\n                        return Promise.reject(new Error('Las contraseñas deben coincidir!'));\r\n                      },\r\n                    }),\r\n                  ]}\r\n                >\r\n                  <Input.Password />\r\n                </Form.Item>\r\n              </>\r\n            }\r\n\r\n\r\n            <Form.Item name=\"telefono\" label=\"Telefono\" rules={[{ required: true, message: 'Ingresa el numero de telefono correcto' },]}>\r\n              <Input addonBefore={prefixSelector} style={{ width: '100%', }} />\r\n            </Form.Item>\r\n\r\n\r\n\r\n\r\n          </Col>\r\n          <Col span={11}>\r\n            <Form.Item label=\"horarios\" rules={[{ required: true, message: 'Ingresa al menos un horario', },]}>\r\n              <Form.List name=\"horarios\" label=\"horarios list\"\r\n              >\r\n                {(fields, { add, remove }) => (\r\n                  <>\r\n                    {fields.map(({ key, name, ...restField }) => (\r\n                      <Space key={key} style={{ display: 'flex', marginBottom: 8 }} align=\"baseline\">\r\n                        <Form.Item\r\n                          {...restField}\r\n                          name={[name, 'sucursal']}\r\n                          rules={[{ required: true, message: 'Elije Sucursal' }]}\r\n                        >\r\n                          <Select placeholder=\"Elije Sucursal\" style={{ width: '120px' }} >\r\n                            {sucursalesLoading ? \"Cargando\" :\r\n                              sucursales.map(s => <Option value={s._id}>{s.nombre}</Option>)\r\n                            }\r\n                          </Select>\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                          {...restField}\r\n                          name={[name, 'horario']}\r\n                          rules={[{ required: false, message: 'Missing last name' }]}\r\n                        >\r\n                          <Input placeholder=\"Horario\" />\r\n                        </Form.Item>\r\n                        <MinusCircleOutlined onClick={() => remove(name)} />\r\n                      </Space>\r\n                    ))}\r\n                    <Form.Item>\r\n                      <Button type=\"dashed\" onClick={() => add()} block icon={<PlusOutlined />}>\r\n                        Agregar Horario\r\n                      </Button>\r\n                    </Form.Item>\r\n                  </>\r\n                )}\r\n              </Form.List>\r\n            </Form.Item>\r\n\r\n            <Form.Item name=\"cedula\" label=\"Cedula\" rules={[{ required: false, message: 'Ingresa cedula' }]}>\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            {/* Not Necesary For Medic. He'll be in hospital direction */}\r\n            {/* <Form.Item name=\"calle\" label=\"Calle\" rules={[{ required: true, message: 'Ingresa calle', whitespace: true }]}>\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item name=\"numexterior\" label=\"Num Exterior\" rules={[{ required: true, message: 'Ingresa numero exterior' }]}>\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item name=\"numinterior\" label=\"Num Interior\" rules={[{ required: true, message: 'Ingresa numinterior' }]}>\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item label=\"Colonia\" name=\"colonia\" rules={[{ required: true, message: 'Please input your colobnia!' }]}            >\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item name=\"estado\" label=\"Estado\" rules={[{ required: true, message: 'Apellido materno', },]}>\r\n              <Select placeholder=\"Elije tu estado\">\r\n                {estados.map(e => <Option value={e}>{e}</Option>)}\r\n              </Select>\r\n            </Form.Item>\r\n\r\n            <Form.Item name=\"municipio\" label=\"Municipio\" rules={[{ required: true, message: 'Ingresa tu municipio' }]} >\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item name=\"codigopostal\" label=\"Codigo Postal\" rules={[{ required: true, message: 'Ingresa codigopostal', },]}>\r\n              <InputNumber addonAfter={suffixSelector} style={{ width: '100%', }} />\r\n            </Form.Item> */}\r\n\r\n            <Form.Item name=\"certificacion\" label=\"Certificacion\" rules={[{ required: false, message: 'Ingresa tu certificacion' }]}>\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item name=\"universidad\" label=\"Universidad\" rules={[{ required: false, message: 'Ingresa tu universidad' }]} >\r\n              <Input />\r\n            </Form.Item>\r\n            <Form.Item {...tailFormItemLayout}>\r\n              {\r\n                props.setIsModalVisible && <Button onClick={() => props.setIsModalVisible(false)} style={{ marginRight: 6 }}>\r\n                  Cancelar\r\n                </Button>\r\n              }\r\n              <Button type=\"primary\" htmlType=\"submit\">\r\n                Guardar\r\n              </Button>\r\n            </Form.Item>\r\n          </Col>\r\n\r\n        </Row>\r\n\r\n\r\n\r\n\r\n\r\n        {/* <Form.Item\r\n          name=\"agreement\"\r\n          valuePropName=\"checked\"\r\n          rules={[\r\n            {\r\n              validator: (_, value) =>\r\n                value ? Promise.resolve() : Promise.reject(new Error('Should accept agreement')),\r\n            },\r\n          ]}\r\n          {...tailFormItemLayout}\r\n        >\r\n          <Checkbox>\r\n            He leído y acepto los <a href=\"https://recreamed.com\">terminos y condiciones</a>\r\n          </Checkbox>\r\n        </Form.Item> */}\r\n\r\n\r\n      </Form>\r\n    </div>\r\n  )\r\n}\r\n","import React, {  useState, useEffect } from 'react'\r\nimport { Table, Space, Button, Popconfirm, Modal } from 'antd';\r\nimport { API, deleteData } from '../../resources'\r\nimport Loading from '../../loading';\r\nimport { HomeOutlined, ClockCircleOutlined } from '@ant-design/icons'\r\nimport Register from './register.doctor';\r\n\r\nexport default function Dash() {\r\n\r\n  const [isLoading, setILoading] = useState(true);\r\n  const [doctoresData, setDoctoresData] = useState([]);\r\n  const [doctorForEdit, setDoctorForEdit] = useState(null)\r\n  const [isModalVisible, setIsModalVisible] = useState(false)\r\n\r\n  useEffect(() => { getDoctoresData() }, [])\r\n  useEffect(() => { getDoctoresData() }, [isModalVisible])\r\n\r\n  const getDoctoresData = () => {\r\n    fetch(API + 'users_by_rol/Medico')\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        console.log(data); setDoctoresData(data);\r\n      })\r\n      .finally(() => setILoading(false))\r\n  }\r\n\r\n  const editDoctor = async (rd) => {\r\n    let d = JSON.parse(JSON.stringify(rd));\r\n    d.horarios.forEach((h) => { h.sucursal = h.sucursal._id })\r\n    console.log('Horarios before edit: ', d.horarios);\r\n    await setDoctorForEdit(d)\r\n    setIsModalVisible(true);\r\n    console.log('Editar medico: ', d)\r\n  }\r\n\r\n  const deleteDoctor = (doctor) => {\r\n    deleteData('/users/remove/' + doctor._id).then(() => {\r\n      console.log('removed: ', doctor._id);\r\n      getDoctoresData()\r\n    })\r\n  }\r\n\r\n \r\n\r\n  const handleCancel = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: 'Foto',\r\n      key: 'avatar',\r\n      render: (_, record) => (\r\n        <img src={'https://api.recreamed.com/images/' + record.avatar} alt=\"Logo\" width={64} />\r\n      ),\r\n    },\r\n    {\r\n      title: 'Nombre',\r\n      dataIndex: 'name',\r\n      key: 'name',\r\n    },\r\n    {\r\n      title: 'Correo',\r\n      dataIndex: 'email',\r\n      key: 'email',\r\n    },\r\n    {\r\n      title: 'Telefono',\r\n      dataIndex: 'telefono',\r\n      key: 'telefono',\r\n    },\r\n    {\r\n      title: 'Horarios',\r\n      dataIndex: 'horarios',\r\n      key: 'horarios',\r\n      render: (_, record) => (\r\n\r\n        <p>{record.horarios.map((h) => { return <Space size='small'><p><HomeOutlined style={{ marginTop: -6 }} />{h.sucursal.nombre}</p><p><ClockCircleOutlined />{h.horario}</p></Space> })}</p>\r\n\r\n      ),\r\n    },\r\n    {\r\n      title: 'Opciones',\r\n      key: 'action',\r\n      render: (_, record) => (\r\n        <Space size=\"middle\">\r\n          <Button size='small' onClick={() => { editDoctor(record) }}>\r\n            Editar\r\n          </Button>\r\n          <Popconfirm\r\n            title=\"Seguro que quiere borrar este doctor?\"\r\n            onConfirm={() => deleteDoctor(record)}\r\n            // onCancel={cancel}\r\n            okText=\"Si\"\r\n            cancelText=\"No\"\r\n          >\r\n            <Button danger size='small'>\r\n              Borrar\r\n            </Button>\r\n          </Popconfirm>\r\n\r\n        </Space>\r\n      ),\r\n    }\r\n  ];\r\n  return (\r\n    <div>\r\n      <h4>Doctores</h4>\r\n      {isLoading ? <Loading /> :\r\n        <Table dataSource={doctoresData} columns={columns} />\r\n      }\r\n\r\n      <Modal width={900} title=\"Editar Medico\" visible={isModalVisible} onCancel={handleCancel} destroyOnClose={true} footer={[]}>\r\n        <Register medico={doctorForEdit} setIsModalVisible={setIsModalVisible} />\r\n      </Modal>\r\n    </div>\r\n  )\r\n}\r\n","import { React, Component } from 'react';\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\nimport { Layout, Menu } from 'antd';\r\nimport { TeamOutlined, UserAddOutlined, MenuOutlined } from '@ant-design/icons';\r\n\r\nimport Register from './register.doctor';\r\nimport Dash from './dash.doctors';\r\n\r\nconst { Header, Content, Footer, Sider } = Layout;\r\n\r\nclass SideMenu extends Component {\r\n  handleClick = e => {\r\n    console.log('click ', e);\r\n  };\r\n\r\n  state = {\r\n    collapsed: false,\r\n  };\r\n\r\n  onCollapse = (collapsed) => {\r\n    this.setState({ collapsed });\r\n  }\r\n  toggle = () => {\r\n    this.setState({\r\n      collapsed: !this.state.collapsed,\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <Layout style={{ minHeight: '100vh' }}>\r\n          <Sider\r\n            theme=\"light\"\r\n            collapsible\r\n            collapsed={this.state.collapsed}\r\n            onCollapse={this.onCollapse}>\r\n            <div className=\"logo\" />\r\n            <Menu defaultSelectedKeys={['1']} mode=\"inline\">\r\n              <Menu.Item icon={<TeamOutlined />} key=\"1\">\r\n                <span>Médicos</span>\r\n                <Link to=\"/doctores\" />\r\n              </Menu.Item>\r\n              <Menu.Item icon={<UserAddOutlined />} key=\"2\">\r\n                <span>Registrar Médico</span>\r\n                <Link to=\"/registrar\" />\r\n              </Menu.Item>\r\n            </Menu>\r\n            {/* <Menu\r\n        onClick={this.handleClick}\r\n        style={{ width: 256 }}\r\n        defaultSelectedKeys={['1']}\r\n        defaultOpenKeys={['sub1']}\r\n        mode=\"inline\"\r\n      >\r\n        <SubMenu key=\"sub1\" icon={<MailOutlined />} title=\"Navigation One\">\r\n          <Menu.ItemGroup key=\"g1\" title=\"Item 1\">\r\n            <Menu.Item key=\"1\" href=\"/dash\">Option 1 <Link to=\"/meseros\" /> </Menu.Item>\r\n            <Menu.Item key=\"2\">Option 2</Menu.Item>\r\n          </Menu.ItemGroup>\r\n          <Menu.ItemGroup key=\"g2\" title=\"Item 2\">\r\n            <Menu.Item key=\"3\">Option 3</Menu.Item>\r\n            <Menu.Item key=\"4\">Option 4</Menu.Item>\r\n          </Menu.ItemGroup>\r\n        </SubMenu>\r\n        <SubMenu key=\"sub2\" icon={<AppstoreOutlined />} title=\"Navigation Two\">\r\n          <Menu.Item key=\"5\">Option 5</Menu.Item>\r\n          <Menu.Item key=\"6\">Option 6</Menu.Item>\r\n          <SubMenu key=\"sub3\" title=\"Submenu\">\r\n            <Menu.Item key=\"7\">Option 7</Menu.Item>\r\n            <Menu.Item key=\"8\">Option 8</Menu.Item>\r\n          </SubMenu>\r\n        </SubMenu>\r\n        <SubMenu key=\"sub4\" icon={<SettingOutlined />} title=\"Navigation Three\">\r\n          <Menu.Item key=\"9\">Option 9</Menu.Item>\r\n          <Menu.Item key=\"10\">Option 10</Menu.Item>\r\n          <Menu.Item key=\"11\">Option 11</Menu.Item>\r\n          <Menu.Item key=\"12\">Option 12</Menu.Item>\r\n        </SubMenu>\r\n      </Menu> */}\r\n          </Sider>\r\n          <Layout>\r\n\r\n            <Header style={{ background: '#fff', padding: 0, paddingLeft: 16 }}>\r\n              <MenuOutlined className=\"trigger\" style={{ cursor: 'pointer' }} onClick={this.toggle} />\r\n            </Header>\r\n\r\n            <Content style={{ margin: '24px 16px', padding: 24, background: '#fff', minHeight: 280 }}>\r\n              <Route exact path=\"/registrar\" component={Register} />\r\n              <Route path=\"/doctores\" component={Dash} />\r\n            </Content>\r\n\r\n            <Footer style={{ textAlign: 'center' }}>\r\n              RECREAMED ©2021 Created by Realidad Creativa\r\n            </Footer>\r\n          </Layout>\r\n\r\n        </Layout>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SideMenu\r\n\r\n\r\n","import React, { Component } from 'react'\r\n// import {Card } from 'antd'\r\nimport SideMenu from './side.doctors';\r\n\r\nexport class Doctors extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div>\r\n                            <SideMenu />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Doctors\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Table, Row, Col, Button, Modal, Form, Input, message } from 'antd';\r\nimport { API } from '../resources';\r\nimport Loading from '../loading';\r\n\r\n\r\nexport function SuperAdminExpedientes() {\r\n    const [isModalVisible, setIsModalVisible] = useState(false);\r\n    const [isLoading, setILoading] = useState(true);\r\n    const [expedientesData, setExpedientesData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        getExpedientesData()\r\n    }, [])\r\n\r\n    const getExpedientesData = () => {\r\n        fetch(API + 'expedientes')\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log(data); setExpedientesData(data);\r\n            })\r\n            .finally(() => setILoading(false))\r\n    }\r\n\r\n    const showModal = () => {\r\n        setIsModalVisible(true);\r\n    };\r\n\r\n    const handleOk = () => {\r\n\r\n    };\r\n\r\n    const handleCancel = () => {\r\n        setIsModalVisible(false);\r\n    };\r\n\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Paciente',\r\n            dataIndex: 'id_usuario',\r\n            key: 'Paciente',\r\n        },\r\n        {\r\n            title: 'Historia Clinica',\r\n            dataIndex: 'id_historia',\r\n            key: 'historiaClinica',\r\n            render: text => <a href='/historial_clinico'>{text}</a>,\r\n        },\r\n        {\r\n            title: 'Notas Medicas',\r\n            dataIndex: 'id_nota',\r\n            key: 'notasMedicas',\r\n            render: text => <a href='/notas'>{text}</a>,\r\n\r\n        },\r\n        {\r\n            title: 'Receta',\r\n            dataIndex: 'id_receta',\r\n            key: 'receta',\r\n        }\r\n    ];\r\n\r\n    const onFinish = (values) => {\r\n        console.log('Valores:', values);\r\n        fetch(API + 'expedientes/add', {\r\n            method: 'POST',\r\n            body: JSON.stringify(values),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }).then(res => res.json())\r\n            .then(response => { console.log('Success:', response); message.success(response.message || response.error); })\r\n            .catch(error => console.error('Error:', error))\r\n            .finally(() => { getExpedientesData(); setIsModalVisible(false) })\r\n        // getExpedientesData() \r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n    \r\n    return <div className=\"mainContainer\">\r\n        <Row>\r\n            <Col span={16}><h4>Expedientes</h4></Col>\r\n            <Col>\r\n                <Button type=\"primary\" onClick={showModal}>\r\n                    Nuevo expediente\r\n                </Button>\r\n            </Col>\r\n        </Row>\r\n        <br />\r\n\r\n        {isLoading ? <Loading /> :\r\n            <Table dataSource={expedientesData} columns={columns} />\r\n        }\r\n        <Modal title=\"Nuevo expediente\" visible={isModalVisible} onOk={handleOk} onCancel={handleCancel}>\r\n            <Form name=\"expediente\" labelCol={{ span: 6 }} wrapperCol={{ span: 12 }} onFinish={onFinish} onFinishFailed={onFinishFailed} autoComplete=\"off\" >\r\n                <Form.Item label=\"Paciente\" name=\"id_usuario\" rules={[{ required: true, message: 'Ingresa RFC' }]} >\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item label=\"Historia Clinica\" name=\"id_historia\" rules={[{ required: true, message: 'Ingresa RFC' }]} >\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item label=\"Notas Medicas\" name=\"id_nota\" rules={[{ required: true, message: 'Ingresa RFC' }]} >\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item label=\"Receta\" name=\"id_receta\" rules={[{ required: true, message: 'Ingresa RFC' }]} >\r\n                    <Input />\r\n                </Form.Item>\r\n\r\n                <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\r\n                    <Button type=\"primary\" htmlType=\"submit\" form='expediente'>\r\n                        Guardar\r\n                    </Button>\r\n                </Form.Item>\r\n            </Form>\r\n        </Modal>\r\n    </div>;\r\n}\r\n","import React, { Component, useState } from 'react'\r\nimport { Form, Input, Button, Row, Col, Upload } from 'antd';\r\nimport { InboxOutlined } from '@ant-design/icons';\r\n// import { Upload } from 'antd';\r\nimport { message } from 'antd';\r\n// import { UploadOutlined } from '@ant-design/icons';\r\nimport { API, sendDataBody, updateData } from '../../resources'\r\nconst { Dragger } = Upload;\r\n\r\n\r\nexport default function Register(props) {\r\n  const [profilePic, setProfilePic] = useState('https://')\r\n\r\n  //Start upload props Upload File\r\n  const dragDropProps = {\r\n    name: 'file',\r\n    multiple: false,\r\n    action: API + 'imagenes/upload', // Production\r\n\r\n    beforeUpload: (file) => {\r\n      const isPNGorJPG = file.type === 'image/png' || file.type === 'image/jpeg';\r\n\r\n      if (!isPNGorJPG) {\r\n        message.error(`${file.name} no es una imagen tipo PNG o JPG`);\r\n      }\r\n\r\n      return isPNGorJPG || Upload.LIST_IGNORE;\r\n    },\r\n    onChange(info) {\r\n      const { status } = info.file;\r\n\r\n      if (status !== 'uploading') {\r\n        console.log(info.file, info.fileList);\r\n      }\r\n\r\n      if (status === 'done') {\r\n        message.success(`${info.file.name} file uploaded successfully.`);\r\n        console.log('New Files: ', info.file.response.file)\r\n        setProfilePic(info.file.response.file)\r\n      } else if (status === 'error') {\r\n        message.error(`${info.file.name} file upload failed.`);\r\n      }\r\n    },\r\n\r\n    onDrop(e) {\r\n      console.log('Dropped files', e.dataTransfer.files);\r\n    },\r\n  };\r\n\r\n  const onFinish = (values) => {\r\n    values.logo = profilePic;\r\n    values.estatus = '1';\r\n    values.delete = '0';\r\n    console.log(\"Ready to send:\", values)\r\n    sendDataBody('sucursales/add', values).then((rs) => {\r\n      // message.success(rs.message || rs.error);\r\n      console.log('resp: ', rs);\r\n      if (rs.message && rs.message === 'Sucursal creada correctamente') window.location.href = '/hospitales'\r\n      console.log('tosend: ', values);\r\n    })\r\n  };\r\n\r\n  const onFinishEdit = (values) => {\r\n    values.logo = profilePic;\r\n    console.log(\"Ready to send editing:\", values)\r\n    updateData('sucursales/update/' + props.hospital._id, values).then(() => {\r\n      props.setModalVisible(false)\r\n    })\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log('Failed:', errorInfo);\r\n  };\r\n  return (\r\n    <div>\r\n      {props.hospital ? <></> : <h4>Registrar Nuevo Hospital</h4>}\r\n\r\n      <Dragger {...dragDropProps}>\r\n        <p className=\"ant-upload-drag-icon\">\r\n          <InboxOutlined />\r\n        </p>\r\n        <p className=\"ant-upload-text\">Arrastra la imagen con el logotipo o click ara buscar</p>\r\n        <p className=\"ant-upload-hint\">\r\n          Selecciona archivos en formato png, jpeg o webp\r\n        </p>\r\n      </Dragger>\r\n      <br />\r\n      <Form name=\"basic\" labelCol={{ span: 12 }} wrapperCol={{ span: 12 }} initialValues={props.hospital} onFinish={props.hospital ? onFinishEdit : onFinish} onFinishFailed={onFinishFailed} autoComplete=\"off\" >\r\n\r\n        <Row>\r\n          <Col>\r\n\r\n            <Form.Item label=\"Nombre\" name=\"nombre\" rules={[{ required: true, message: 'Please input your username!' }]} >\r\n              <Input />\r\n            </Form.Item>\r\n            <Form.Item label=\"RFC\" name=\"rfc\" rules={[{ required: true, message: 'Ingresa RFC' }]} >\r\n              <Input />\r\n            </Form.Item>\r\n            <Form.Item label=\"Calle\" name=\"calle\" rules={[{ required: true, message: 'Ingresa nombre de la calle' }]} >\r\n              <Input />\r\n            </Form.Item>\r\n            <Form.Item label=\"Numero exterior\" name=\"num_exterior\" rules={[{ required: true, message: 'Ingresa numero exterion' }]} >\r\n              <Input />\r\n            </Form.Item>\r\n            <Form.Item label=\"Numero Interior\" name=\"num_interior\" rules={[{ required: false, message: 'Ingresa numero interior' }]} >\r\n              <Input />\r\n            </Form.Item>\r\n            <Form.Item label=\"Colonia\" name=\"colonia\" rules={[{ required: true, message: 'Ingresa nombre de colonia' }]} >\r\n              <Input />\r\n            </Form.Item>\r\n          </Col>\r\n\r\n          <Col>\r\n            <Form.Item label=\"Codigo Postal\" name=\"codigo_postal\" rules={[{ required: true, message: 'Ingresa codigo postal' }]} >\r\n              <Input />\r\n            </Form.Item>\r\n            <Form.Item label=\"Ciudad Municipio\" name=\"ciudad_municipio\" rules={[{ required: true, message: 'Ingresa ciudad/municipio' }]} >\r\n              <Input />\r\n            </Form.Item>\r\n            <Form.Item label=\"Estado\" name=\"estado\" rules={[{ required: true, message: 'Ingresa estado' }]} >\r\n              <Input />\r\n            </Form.Item>\r\n            <Form.Item label=\"Telefono\" name=\"telefono\" rules={[{ required: true, message: 'Ingresa numero de telefono' }]} >\r\n              <Input />\r\n            </Form.Item>\r\n            <Form.Item label=\"Correo Electronico\" name=\"email\" rules={[{ required: true, message: 'Correo@Hopspital.com' }]} >\r\n              <Input />\r\n            </Form.Item>\r\n            <Form.Item label=\"Sitio Web\" name=\"sitio_web\" rules={[{ required: true, message: 'www.hospital.com' }]} >\r\n              <Input />\r\n            </Form.Item>\r\n\r\n          </Col>\r\n        </Row>\r\n\r\n\r\n\r\n\r\n        <Form.Item wrapperCol={{ offset: 9 }}>\r\n\r\n\r\n          <Button type=\"primary\" htmlType=\"submit\" style={{ marginRight: 8 }}>\r\n            Guardar\r\n          </Button>\r\n          {props.setModalVisible && <Button onClick={() => props.setModalVisible(false)} >Cancelar</Button>}\r\n        </Form.Item>\r\n      </Form>\r\n    </div >\r\n  )\r\n}\r\n\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Table, Space, Button, Modal, Popconfirm } from 'antd';\r\nimport Loading from '../../loading'\r\nimport { API, deleteData } from '../../resources'\r\nimport Register from './register.hospital';\r\n\r\nexport default function Dash() {\r\n\r\n  const [isLoading, setILoading] = useState(true);\r\n  const [hospitalesData, setHospitalesData] = useState([]);\r\n  const [hospitalForEdit, setHospitalForEdit] = useState(null)\r\n  const [isModalVisible, setIsModalVisible] = useState(false)\r\n\r\n  useEffect(() => {\r\n    getHospitalesData()\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    getHospitalesData()\r\n  }, [isModalVisible])\r\n\r\n  const getHospitalesData = () => {\r\n    fetch(API + 'sucursales')\r\n      .then(response => response.json())\r\n      .then(data => { console.log(data); setHospitalesData(data); setILoading(false); });\r\n  }\r\n\r\n  // Edit Hospital\r\n  const editHospital = async (h) => {\r\n    await setHospitalForEdit(h)\r\n    setIsModalVisible(true);\r\n    console.log('Editar hospital: ', h)\r\n  }\r\n  // Confitmar Borrar\r\n  const confirm = (e) => {\r\n    console.log('toDel: ', e);\r\n    deleteData('sucursales/remove/' + e._id).then(() => getHospitalesData())\r\n  };\r\n  const cancel = (e) => {\r\n    console.log(e);\r\n  };\r\n\r\n  const handleOk = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  //Start tabla data\r\n  const columns = [\r\n    {\r\n      title: 'Logo',\r\n      key: 'logo',\r\n      render: (_, record) => (\r\n        <img src={'https://api.recreamed.com/images/' + record.logo} alt=\"Logo\" width={64} />\r\n      ),\r\n    },\r\n    {\r\n      title: 'Sucursal',\r\n      dataIndex: 'nombre'\r\n    },\r\n    {\r\n      title: 'Ciudad_municipio',\r\n      dataIndex: 'ciudad_municipio',\r\n      defaultSortOrder: 'descend',\r\n    },\r\n    {\r\n      title: 'Colonia',\r\n      dataIndex: 'colonia',\r\n    },\r\n\r\n    {\r\n      title: 'calle',\r\n      dataIndex: 'calle',\r\n    },\r\n    {\r\n      title: 'Telefono',\r\n      dataIndex: 'telefono',\r\n      defaultSortOrder: 'descend',\r\n    },\r\n    {\r\n      title: 'Opciones',\r\n      key: 'action',\r\n      render: (_, record) => (\r\n        <Space size=\"middle\">\r\n          <Button size='small' onClick={() => { editHospital(record) }}>\r\n            Editar\r\n          </Button>\r\n          <Popconfirm\r\n            title=\"Seguro que quiere borrar esta sucursal?\"\r\n            onConfirm={() => confirm(record)}\r\n            onCancel={cancel}\r\n            okText=\"Si\"\r\n            cancelText=\"No\"\r\n          >\r\n            <Button danger size='small'>\r\n              Borrar\r\n            </Button>\r\n          </Popconfirm>\r\n\r\n        </Space>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  const onChange = (pagination, filters, sorter, extra) => {\r\n    console.log('params', pagination, filters, sorter, extra);\r\n  }\r\n  //End tabla data\r\n\r\n  return (\r\n    isLoading ? <Loading /> :\r\n      <div>\r\n        <h1>Hospitales</h1>\r\n        <Table columns={columns} dataSource={hospitalesData} onChange={onChange} />\r\n\r\n        <Modal width={800} title=\"Editar Hospital\" visible={isModalVisible} onOk={handleOk} onCancel={handleCancel} destroyOnClose={true} footer={[]}>\r\n          <Register hospital={hospitalForEdit} setModalVisible={setIsModalVisible} />\r\n        </Modal>\r\n      </div>\r\n  )\r\n\r\n}\r\n\r\n","import { React, Component } from 'react';\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\nimport { Layout, Menu } from 'antd';\r\nimport { BankOutlined, AppstoreAddOutlined, MenuOutlined } from '@ant-design/icons';\r\n\r\nimport Register from './register.hospital';\r\nimport Dash from './dash.hospitals';\r\n\r\nconst { Header, Content, Footer, Sider } = Layout;\r\n\r\nclass SideMenu extends Component {\r\n  handleClick = e => {\r\n    console.log('click ', e);\r\n  };\r\n\r\n  state = {\r\n    collapsed: false,\r\n  };\r\n\r\n  onCollapse = (collapsed) => {\r\n    this.setState({ collapsed });\r\n  }\r\n  toggle = () => {\r\n    this.setState({\r\n      collapsed: !this.state.collapsed,\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <Layout style={{ minHeight: '100vh' }}>\r\n          <Sider\r\n            theme=\"light\"\r\n            collapsible\r\n            collapsed={this.state.collapsed}\r\n            onCollapse={this.onCollapse}>\r\n            <div className=\"logo\" />\r\n            <Menu defaultSelectedKeys={['1']} mode=\"inline\">\r\n              <Menu.Item icon={<BankOutlined />} key=\"1\">\r\n                {/* <Icon type=\"pie-chart\" /> */}\r\n                <span>Hospitales</span>\r\n                <Link to=\"/hospitales\" />\r\n              </Menu.Item>\r\n              <Menu.Item icon={<AppstoreAddOutlined />} key=\"2\">\r\n                {/* <Icon type=\"desktop\" /> */}\r\n                <span>Registrar Hospital</span>\r\n                <Link to=\"/registrar\" />\r\n              </Menu.Item>\r\n            </Menu>\r\n            {/* <Menu\r\n        onClick={this.handleClick}\r\n        style={{ width: 256 }}\r\n        defaultSelectedKeys={['1']}\r\n        defaultOpenKeys={['sub1']}\r\n        mode=\"inline\"\r\n      >\r\n        <SubMenu key=\"sub1\" icon={<MailOutlined />} title=\"Navigation One\">\r\n          <Menu.ItemGroup key=\"g1\" title=\"Item 1\">\r\n            <Menu.Item key=\"1\" href=\"/dash\">Option 1 <Link to=\"/meseros\" /> </Menu.Item>\r\n            <Menu.Item key=\"2\">Option 2</Menu.Item>\r\n          </Menu.ItemGroup>\r\n          <Menu.ItemGroup key=\"g2\" title=\"Item 2\">\r\n            <Menu.Item key=\"3\">Option 3</Menu.Item>\r\n            <Menu.Item key=\"4\">Option 4</Menu.Item>\r\n          </Menu.ItemGroup>\r\n        </SubMenu>\r\n        <SubMenu key=\"sub2\" icon={<AppstoreOutlined />} title=\"Navigation Two\">\r\n          <Menu.Item key=\"5\">Option 5</Menu.Item>\r\n          <Menu.Item key=\"6\">Option 6</Menu.Item>\r\n          <SubMenu key=\"sub3\" title=\"Submenu\">\r\n            <Menu.Item key=\"7\">Option 7</Menu.Item>\r\n            <Menu.Item key=\"8\">Option 8</Menu.Item>\r\n          </SubMenu>\r\n        </SubMenu>\r\n        <SubMenu key=\"sub4\" icon={<SettingOutlined />} title=\"Navigation Three\">\r\n          <Menu.Item key=\"9\">Option 9</Menu.Item>\r\n          <Menu.Item key=\"10\">Option 10</Menu.Item>\r\n          <Menu.Item key=\"11\">Option 11</Menu.Item>\r\n          <Menu.Item key=\"12\">Option 12</Menu.Item>\r\n        </SubMenu>\r\n      </Menu> */}\r\n          </Sider>\r\n          <Layout>\r\n            <Header style={{ background: '#fff', padding: 0, paddingLeft: 16 }}>\r\n              <MenuOutlined className=\"trigger\"\r\n                style={{ cursor: 'pointer' }}\r\n                onClick={this.toggle} />\r\n              {/* { this.state.collapsed ? (<MenuUnfoldOutlined onClick={this.toggle} style={{ cursor: 'pointer' }}/>) : (<MenuFoldOutlined onClick={this.toggle} style={{ cursor: 'pointer' }}/>) } */}\r\n              {/* <Header > */}\r\n              {/* <Icon\r\n                        className=\"trigger\"\r\n                        type={this.state.collapsed ? 'menu-unfold' : 'menu-fold'}\r\n                        style={{ cursor: 'pointer' }}\r\n                        onClick={this.toggle}\r\n                    /> */}\r\n            </Header>\r\n            <Content style={{ margin: '24px 16px', padding: 24, background: '#fff', minHeight: 280 }}>\r\n              <Route exact path=\"/registrar\" component={Register} />\r\n              <Route path=\"/hospitales\" component={Dash} />\r\n            </Content>\r\n            <Footer style={{ textAlign: 'center' }}>\r\n              Ant Design ©2016 Created by Ant UED\r\n            </Footer>\r\n          </Layout>\r\n\r\n        </Layout>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SideMenu\r\n\r\n\r\n","import React, { Component } from \"react\";\r\nimport SideMenu from \"./side.hospitals\";\r\n\r\nexport class Hospitales extends Component {\r\n    \r\n  render() {\r\n    return (\r\n      <div>\r\n        <SideMenu />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Hospitales;\r\n","import React, { Component } from 'react'\r\nimport { Row, Col, Statistic, Card } from 'antd'\r\nimport { Pie, Line } from '@ant-design/charts';\r\nimport './home.css'\r\n\r\nexport class Home extends Component {\r\n    \r\n    dataPie = [\r\n        {\r\n            type: 'Covid',\r\n            value: 130737,\r\n        },\r\n        {\r\n            type: 'Colesterol',\r\n            value: 21468,\r\n        },\r\n        {\r\n            type: 'Diabetes',\r\n            value: 18098,\r\n        },\r\n        {\r\n            type: 'Presion',\r\n            value: 17912,\r\n        },\r\n        {\r\n            type: 'Oseo',\r\n            value: 15282,\r\n        },\r\n        {\r\n            type: 'Migraña',\r\n            value: 11650,\r\n        },\r\n    ];\r\n\r\n    configPie = {\r\n        appendPadding: 10,\r\n        data: this.dataPie,\r\n        angleField: 'value',\r\n        colorField: 'type',\r\n        height: 450,\r\n        radius: 0.8,\r\n        label: {\r\n            type: 'inner',\r\n            offset: '-0.5',\r\n            content: '{name} {percentage}',\r\n            style: {\r\n                fill: '#fff',\r\n                fontSize: 14,\r\n                textAlign: 'center',\r\n            },\r\n        },\r\n    };\r\n\r\n    dataLine = [\r\n        { mes: 'Junio', consultas: 17945 },\r\n        { mes: 'Julio', consultas: 24011 },\r\n        { mes: 'Agosto', consultas: 46493 },\r\n        { mes: 'Septiembre', consultas: 105293 },\r\n        { mes: 'Octubre', consultas: 77190 }\r\n    ];\r\n\r\n    configLine = {\r\n        data: this.dataLine,\r\n        height: 410,\r\n        xField: 'mes',\r\n        yField: 'consultas',\r\n        color: '#01B075',\r\n        point: {\r\n            size: 5,\r\n            shape: 'diamond',\r\n            color: '#01B075'\r\n        },\r\n        label: {\r\n            style: {\r\n                fill: '#aaa',\r\n                fontSize: 16,\r\n                stroke: '#01B075'\r\n            },\r\n        },\r\n    };\r\n    render() {\r\n        return (\r\n            <>\r\n\r\n                <br />\r\n                <div className=\"contenedor\">\r\n                    <Row gutter={30}>\r\n                        <Col xs={24} sm={12} lg={6}>\r\n                            {/* <div className=\"cardsContenedor\" > */}\r\n                            <Card className=\"cardsContenedor\" hoverable bordered={false}>\r\n\r\n                                <Statistic title=\"Total Hospitales\" value=\"4\" valueStyle={{ color: 'white' }} style={{ backgroundColor: '#4BA6FE' }} className=\"cardsContenido\" />\r\n                            </Card>\r\n                        </Col>\r\n                        <Col xs={24} sm={12} lg={6}>\r\n                            <Card className=\"cardsContenedor\" hoverable bordered={false}>\r\n                                <Statistic title=\"Total Medicos\" value=\"14\" valueStyle={{ color: 'white' }} style={{ backgroundColor: '#FF838A' }} className=\"cardsContenido\" />\r\n                            </Card>\r\n                        </Col>\r\n\r\n                        <Col xs={24} sm={12} lg={6}>\r\n                            <Card className=\"cardsContenedor\" hoverable bordered={false}>\r\n\r\n                                <Statistic title=\"Total Pacientes\" value=\"241\" valueStyle={{ color: 'white' }} style={{ backgroundColor: '#18D0C2' }} className=\"cardsContenido\" />\r\n                            </Card>\r\n                        </Col>\r\n                        <Col xs={24} sm={12} lg={6}>\r\n                            <Card className=\"cardsContenedor\" hoverable bordered={false}>\r\n\r\n                                <Statistic title=\"Citas Hoy\" value={47} valueStyle={{ color: 'white' }} style={{ backgroundColor: '#847DFC' }} className=\"cardsContenido\" />\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n                    <br />\r\n                    <Row gutter={20}>\r\n                        <Col xs={24} md={12} className=\"graficaCircular\">\r\n                            <Pie {...this.configPie} style={{ backgroundColor: '#1F263C' }} />\r\n                        </Col>\r\n\r\n                        <Col xs={24} md={12}>\r\n                            <Line {...this.configLine} style={{ backgroundColor: '#1F263C', padding: '20px' }} />\r\n                        </Col>\r\n                    </Row>\r\n\r\n                </div>\r\n\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home\r\n","import React from 'react'\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport { Container, Nav, Navbar } from \"react-bootstrap\";\r\nimport { Button } from 'antd'\r\nimport icon from '../assets/Icon.png';\r\nimport Patients from \"./patients/main.patients\";\r\nimport Doctors from \"./doctors/main.doctors\";\r\nimport { SuperAdminExpedientes } from \"./expedientes\";\r\nimport { Hospitales } from \"./hospitals/main.hospitals\";\r\nimport Home from './home/home'\r\n\r\nconst logout = () => { localStorage.removeItem('sessionToken'); localStorage.removeItem('userType'); window.location.href = '/'; }\r\n\r\nfunction Navigator() {\r\n      return <Navbar bg=\"light\" expand=\"lg\">\r\n        <Container>\r\n          <Navbar.Brand href=\"#home\">\r\n            <img\r\n              src={icon}\r\n              width=\"40\"\r\n              height=\"35\"\r\n              className=\"d-inline-block align-top\"\r\n              alt=\"Recreamed logo\"\r\n            />\r\n            Bienvenido Administrador\r\n          </Navbar.Brand>\r\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n          <Navbar.Collapse id=\"basic-navbar-nav\">\r\n            <Nav className=\"me-auto\">\r\n\r\n              <Nav.Link href=\"/\">Inicio</Nav.Link>\r\n              {/* <Nav.Link href=\"/\">Landing</Nav.Link> */}\r\n              <Nav.Link href=\"/\">Farmacia</Nav.Link>\r\n              <Nav.Link href=\"#\">|</Nav.Link>\r\n              <Nav.Link href=\"/hospitales\">Hospitales</Nav.Link>\r\n              <Nav.Link href=\"/doctores\">Medicos</Nav.Link>\r\n              <Nav.Link href=\"pacientes\">Pacientes</Nav.Link>\r\n              {/* <Nav.Link href=\"expedientes\">Expedientes</Nav.Link> */}\r\n              \r\n            </Nav>\r\n          </Navbar.Collapse>\r\n          <Navbar.Collapse className=\"justify-content-end\">\r\n            <Button onClick={logout} >Cerrar Sesion</Button>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>;\r\n\r\n\r\n}\r\n\r\nexport default function SuperAdminApp() {\r\n  return (\r\n    <Router>\r\n       <Navigator />\r\n       <Switch>\r\n         \r\n         <Route path=\"/hospitales\">\r\n           <Hospitales />\r\n         </Route>\r\n         <Route path=\"/doctores\">\r\n           <Doctors />\r\n         </Route>\r\n         <Route path=\"/expedientes\">\r\n           <SuperAdminExpedientes />\r\n         </Route>\r\n         <Route path=\"/pacientes\">\r\n           <Patients />\r\n         </Route>\r\n         <Route path=\"/\">\r\n           <Home/>\r\n         </Route>\r\n\r\n       </Switch>\r\n     </Router>\r\n  )\r\n}\r\n","export const catalogo_efectos = {\r\n    \"Ritmo Cardiaco Elevado\": false,\r\n    \"Sentimientos de Ansiedad\": true,\r\n    \"Debilidad o Mareos ligeros\": false,\r\n    \"Sedacion o Somnolencia\": false,\r\n    \"Nauseas\": false,\r\n    \"Vision Borrosa\": false,\r\n    \"Aumento de la Presión Arterial\": false,\r\n    \"Mareos\": false,\r\n    \"Dolor de cabeza\": false\r\n}\r\n\r\n\r\nexport const desrealizacion = {\r\n    \"1. ¿Parece que las cosas se mueven en cámara lenta ?\": [\r\n        \"No en absoluto\",\r\n        \"Leve, las cosas parecen un poco más lentas, pero no muy notable.\",\r\n        \"Moderado, las cosas se mueven aproximadamente el doble que normalmente.\",\r\n        \"Grave, las cosas se mueven tan lentamente que apenas se mueven.\",\r\n        \"Extremo, las cosas se mueven tan lentamente, que tengo la percepción de que todo se  detiene, como si el tiempo se detuviera.\"\r\n    ],\r\n    \"2. ¿Te parecen irreales las cosas, como si estuvieras en un sueño?\": [\r\n        \"No en absoluto.\",\r\n        \"Leve, las cosas se ven un poco irreales, pero soy muy consciente de donde estoy.\",\r\n        \"Moderado, las cosas parecen un sueño, aunque sé que estoy despierto.\",\r\n        \"Grave, las cosas se parecen mucho a un sueño, aunque sé que estoy aquí, tengo el sentimiento de que pudiera estar dormido.\",\r\n        \"Extremo, siento que nada es real, como si tuviera que pellizcarme para despertar, o preguntarle a alguien si esto es un sueño.\"\r\n    ]\r\n}\r\n\r\nexport const despersonalizacion = {\r\n    \"3. ¿Te sientes desconectado de tu propio cuerpo?\": [\r\n        \"No, en absoluto\",\r\n        \"Leve, Me siento un poco desconectado de mi mismo, pero básicamente estoy completamente aquí.\",\r\n        \"Moderado, Me siento algo desprendido de mi propio cuerpo, pero básicamente todo unido.\",\r\n        \"Grave, me siento desprendido de mi propio cuerpo, pero no muy alejado de mi cuerpo, y siento como si estuviera yo ahí.\",\r\n        \"Extremo, Me siento como si estuviera completamente fuera de mi cuerpo, como si estuviera viendo mi propio cuerpo desde muy lejos, como si estuviera otra persona ahí.\"\r\n    ],\r\n    \"4. Sientes que ha cambiado el sentido de tu propio cuerpo?: por ejemplo, tu cuerpo se siente inusualmente largo o inusualmente pequeño?\": [\r\n        \"No, en absoluto\",\r\n        \"Leve, Tengo un vago sentimiento de que algo en mi cuerpo ha cambiado, pero no puedo decir exactamente que es.\",\r\n        \"Moderado, Siento como que mi cuerpo ha aumentado o disminuido ligeramente de tamaño, o se siente como si no fuera mi cuerpo.\",\r\n        \"Grave, Siento como si mi cuerpo ha aumentado el doble de si tamaño normal, o disminuido el doble de su tamaño normal.\",\r\n        \"Extremo, siento como si mi cuerpo se hubiera hinchado al menos diez veces de su tamaño normal o como si fuera diez veces más pequeño, o como si mis brazos se hubieran convertido como palillos de dientes.\"\r\n    ]\r\n}\r\n\r\nexport const amnesia = {\r\n    \"5. Te has distraído, o has perdido el rastro de alguna manera de lo que esta pasando durante esta experiencia?\": [\r\n        \"No en absoluto\",\r\n        \"Leve, He tenido algunos episodios de haber perdido la noción sobre lo que está pasando, pero he seguido todo la mayor parte del tiempo.\",\r\n        \"Moderado, He perdido al menos un minuto de tiempo, o perdido completamente la noción de lo que está pasando ahora.\",\r\n        \"Grave, He perdido varios segmentos de tiempo de un minuto o más.\",\r\n        \"Extremo, he perdido largos segmentos de tiempo de al menos 15 minutos o más.\"\r\n    ],\r\n    \"6. Tiene lagunas (vacios) en su memoria?\": [\r\n        \"No en lo absoluto\",\r\n        \"Leve, Hay algunas cosas recientes que no puedo recordar.\",\r\n        \"Moderado, Han habido algunas lagunas (vacios)  en mi memoria que duraron unos minutos\",\r\n        \"Grave, Han habido largas lagunas (vacios) en mi memoria que duraron más de algunos minutos.\",\r\n        \"Extremo, No puedo reconstruir lo que está pasando de un momento al siguiente, debido a largas lagunas (vacios)  en mi memoria.\"\r\n    ]\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { catalogo_efectos, desrealizacion, despersonalizacion, amnesia } from './efects_catalog'\r\nimport { Form, Switch, Button, Radio, Space, Slider, Select, message } from 'antd'\r\nimport { getData, sendDataBody } from '../../resources';\r\nimport logo from \"../../assets/Logo.png\";\r\nconst { Option } = Select;\r\n\r\nexport default function EfectosEncuesta(props) {\r\n  // For check if the encuesta existts on db\r\n  const [encuestaNotExists, setEncuestaNotExists] = useState(null)\r\n  const [checking, setChecking] = useState(true)\r\n  const [pacienteData, setPacienteData] = useState({})\r\n  const [medicoData, setMedicoData] = useState({})\r\n\r\n  useEffect(() => {\r\n    checkEncuesta()\r\n  }, [])\r\n\r\n  const checkEncuesta = () => {\r\n\r\n    getData('getuser/' + props.idpaciente).then((rs) => { setPacienteData(rs) })\r\n    getData('getuser/' + props.idmedico).then((rs) => { setMedicoData(rs) })\r\n\r\n\r\n    getData(`encuestas/uuid/${props.token}`).then(rs => {\r\n      console.log(rs);\r\n      setEncuestaNotExists(rs.message === 'The survey does not exist')\r\n    }).then(() => { setChecking(false); console.log('Not exists: ', encuestaNotExists); })\r\n  }\r\n\r\n  const onFinish = (values) => {\r\n\r\n    Object.keys(values).forEach((k) => {\r\n      const nk = k.replace(/ /g, \"_\")\r\n      values[nk] = values[k];\r\n      if (k.includes(' ')) delete values[k];\r\n    })\r\n\r\n    const body = {\r\n      usuario: props.idpaciente,\r\n      medico: props.idmedico,\r\n      respuestas_ketamina: values,\r\n      tipo: 'ketamina',\r\n      uuid: props.token\r\n    }\r\n\r\n    console.log('Efectos Form:', values);\r\n    sendDataBody('encuestas/add', body).then((rs) => {\r\n      console.log(rs)\r\n      message.success(rs.message)\r\n    }).then(() => checkEncuesta())\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log('Failed:', errorInfo);\r\n  };\r\n  const marks = { 0: '0', 10: '10' };\r\n\r\n  if (checking) return <div style={{ paddingTop: 180 }}>\r\n    <div style={{ margin: 'auto', width: '40%', textAlign: 'center' }}>\r\n      <h3 >Cargando</h3>\r\n    </div>\r\n  </div>\r\n\r\n  if (!encuestaNotExists) return <div style={{ paddingTop: 180 }}>\r\n    <div style={{ margin: 'auto', width: '40%', textAlign: 'center' }}>\r\n      <h3 >Gracias por contestar la encuesta</h3>\r\n      <img width={256} src={logo} alt=\"recreamedLogo\" style={{ margin: 'auto' }} />\r\n    </div>\r\n  </div>\r\n\r\n  return (\r\n    <div className='mainContainer'>\r\n      <h4>Lista de verificación para Efectos Secundarios  </h4>\r\n      <br />\r\n      <h5>Medico: {medicoData.name}</h5>\r\n      <h5>Paciente: {pacienteData.name}</h5>\r\n      <br />\r\n      <Form\r\n        name=\"efectos_form\"\r\n        labelCol={{ span: 8 }}\r\n        wrapperCol={{ span: 16 }}\r\n        initialValues={{ ...catalogo_efectos, ketamina: 0, ketaminaiv: 0, ketaminaivb: 0 }}\r\n        onFinish={onFinish}\r\n        onFinishFailed={onFinishFailed}\r\n        autoComplete=\"off\"\r\n      >\r\n\r\n        {\r\n          Object.keys(catalogo_efectos).map((efk, i) => {\r\n            return <Form.Item\r\n              label={efk}\r\n              name={efk}\r\n              rules={[{ required: false, message: 'Selecciona una respuesta' }]}\r\n            >\r\n              <Switch checkedChildren=\"Si\" unCheckedChildren=\"No\" defaultChecked={false} />\r\n            </Form.Item>\r\n          })\r\n        }\r\n        <h4>Escala de 6 elementos simplificada de síntomas disociativos administrada por el médico  (CADSS)</h4>\r\n\r\n        <h5>Desrealizacion</h5>\r\n        {\r\n          Object.keys(desrealizacion).map((pr, index) => {\r\n            return <Form.Item\r\n              label={pr}\r\n              name={'desrealizacion_' + index}\r\n              rules={[{ required: true, message: 'Selecciona una respuesta' }]}\r\n            >\r\n              <Radio.Group>\r\n                <Space direction=\"vertical\">\r\n                  {\r\n                    desrealizacion[pr].map((rs, i) => <Radio value={i}>{rs}</Radio>)\r\n                  }\r\n                </Space>\r\n              </Radio.Group>\r\n            </Form.Item>\r\n          })\r\n        }\r\n\r\n\r\n        <h5>Despersonalizacion</h5>\r\n        {\r\n          Object.keys(despersonalizacion).map((pr, index) => {\r\n            return <Form.Item\r\n              label={pr}\r\n              name={'despersonalizacion_' + index}\r\n              rules={[{ required: true, message: 'Selecciona una respuesta' }]}\r\n            >\r\n              <Radio.Group>\r\n                <Space direction=\"vertical\">\r\n                  {\r\n                    despersonalizacion[pr].map((rs, i) => <Radio value={i}>{rs}</Radio>)\r\n                  }\r\n                </Space>\r\n              </Radio.Group>\r\n            </Form.Item>\r\n          })\r\n        }\r\n\r\n        <h5>Amnesia</h5>\r\n        {\r\n          Object.keys(amnesia).map((pr, i) => {\r\n            return <Form.Item\r\n              label={pr}\r\n              name={'amnesia_' + i}\r\n              rules={[{ required: true, message: 'Selecciona una respuesta' }]}\r\n            >\r\n              <Radio.Group>\r\n                <Space direction=\"vertical\">\r\n                  {\r\n                    amnesia[pr].map((rs, i) => <Radio value={i}>{rs}</Radio>)\r\n                  }\r\n                </Space>\r\n              </Radio.Group>\r\n            </Form.Item>\r\n          })\r\n        }\r\n\r\n        <Form.Item\r\n          label=\"a)\tEn general mi gusto por la ketamina IV es:\"\r\n          name=\"ketamina\"\r\n\r\n        // rules={[{ required: true, message: 'Selecciona una opcion' }]}\r\n        >\r\n          <Slider min={0} max={10} marks={marks} dots defaultValue={0} />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"a.)\tEn general, cuánto anhela, apetece el tratamiento de la ketamina IV para otros efectos además de los efectos antidepresivos? \"\r\n          name=\"ketaminaiv\"\r\n        // rules={[{ required: true, message: 'Selecciona una opcion' }]}\r\n        >\r\n          <Slider min={0} max={10} marks={marks} dots defaultValue='0' />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"b.)\tCuánto desea usar la ketamina IV en cantidades mayores con más frecuencia de lo que su psiquiatra le esta prescribiendo por razones distintas a esperar más efecto antidepresivo?  \"\r\n          name=\"ketaminaivb\"\r\n        // rules={[{ required: true, message: 'Selecciona una opcion' }]}\r\n        >\r\n          <Slider min={0} max={10} marks={marks} dots />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          wrapperCol={{\r\n            offset: 8,\r\n            span: 16,\r\n          }}\r\n        >\r\n          <Button type=\"primary\" htmlType=\"submit\">\r\n            Guardar\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport EfectosEncuesta from '../escalas/ketamina/efectosEncuesta'\r\n\r\nimport {\r\n    useParams\r\n} from \"react-router-dom\";\r\n\r\nexport default function KetaminaPublic() {\r\n    let { idmedico, idpaciente, key } = useParams();\r\n    console.log(key)\r\n    return (\r\n        <div>\r\n            <EfectosEncuesta idmedico={idmedico} idpaciente={idpaciente} token={key} />\r\n        </div>\r\n    )\r\n}\r\n","export const depresion_catalog = [\r\n\r\n\r\n    {\r\n        \"n\": 1,\r\n        \"pregunta\": \"Conciliar el sueño\",\r\n        \"respuestas\": [\r\n            'Nunca tardé más de 30 minutos en dormirme.',\r\n            'Tardé por lo menos 30 minutos en dormirme, menos de la mitad de las veces.',\r\n            'Tardé por lo menos 30 minutos en dormirme, más de la mitad de las veces.',\r\n            'Tardé más de 60 minutos en dormirme, más de la mitad de la veces']\r\n    },\r\n    {\r\n        \"n\": 2,\r\n        \"pregunta\": \"Al dormir durante la noche\",\r\n        \"respuestas\": [\r\n            \"No me desperté durante la noche.\",\r\n            \"Tuve el sueño liviano e intranquilo; me desperté unas cuantas veces todas las noches por corto tiempo.\",\r\n            \"Me desperté al menos una vez cada noche, pero volví a dormirme fácilmente.\",\r\n            \"Me desperté más de una vez cada noche y me quedé despierto/a durante 20 minutos o más, más de la mitad de las veces\"]\r\n    },\r\n    {\r\n        \"n\": 3,\r\n        \"pregunta\": \" Despertarse demasiado temprano\",\r\n        \"respuestas\": [\r\n            'La mayoría de las veces me desperté no más de 30 minutos antes de lo necesario.',\r\n            'Más de la mitad de las veces me desperté más de 30 minutos antes de lo necesario.',\r\n            'Casi siempre me desperté por lo menos una hora antes de lo necesario, pero finalmente me dormí nuevamente',\r\n            'Me desperté por lo menos una hora antes de lo necesario y no pude volver a dormirme']\r\n    },\r\n    {\r\n        \"n\": 4,\r\n        \"pregunta\": \" Dormir demasiado\",\r\n        \"respuestas\": [\r\n            'Dormí no más de 7-8 horas por noche, sin haber dormido la siesta durante el día.',\r\n            'Dormí no más de 10 horas en un período de 24 horas, incluyendo las siestas.',\r\n            'Dormí no más de 12 horas en un período de 24 horas, incluyendo las siestas.',\r\n            'Dormí más de 12 horas en un período de 24 horas, incluyendo las siestas.']\r\n    },\r\n    {\r\n        \"n\": 5,\r\n        \"pregunta\": \"Sensación de tristeza\",\r\n        \"respuestas\": [\r\n            'No me sentí triste.',\r\n            'Me sentí triste menos de la mitad de las veces.',\r\n            'Me sentí triste más de la mitad de las veces.',\r\n            'Me sentí triste casi todo el tiempo.']\r\n    }\r\n]\r\n\r\nexport const disminucion_apetito = [\r\n    'Mi apetito no disminuyó.',\r\n    'Comí con considerable menor frecuencia o menor cantidad de comida de lo habitual.',\r\n    'Comí mucho menos de lo habitual y sólo haciendo un esfuerzo.',\r\n    'Casi no comí dentro de un período de 24 horas, y sólo haciendo un tremendo esfuerzo o cuando los demás me convencieron de comer'\r\n]\r\n\r\nexport const aumento_apetito = [\r\n    'Mi apetito no aumentó.',\r\n    'Sentí la necesidad de comer con más frecuencia de lo habitual.',\r\n    'A menudo comí con más frecuencia y/o más cantidad de comida de lo habitual.',\r\n    'Me sentí impulsado/a a comer de más, tanto en las comidas como entre las comidas.',\r\n]\r\n\r\nexport const perdida_peso = [\r\n    'No he perdido peso.',\r\n    'Siento que tuve una leve pérdida de peso.',\r\n    'He perdido 1 kg o más.',\r\n    'He perdido 2 kg o más.',\r\n]\r\n\r\nexport const aumento_peso = [\r\n    'No he aumentado de peso.',\r\n    'Siento que tuve un leve aumento de peso.',\r\n    'He aumentado 1 kg o más.',\r\n    'He aumentado 2 kg o más.'\r\n]\r\n\r\nexport const depresion_catalog2 = [\r\n    {\r\n        \"n\": 10,\r\n        \"pregunta\": \"Concentración/Toma de decisiones\",\r\n        \"respuestas\": [\r\n            'No hubo cambio en mi capacidad habitual para concentrarme o tomar decisiones.',\r\n            'A veces me sentí indeciso/a o me di cuenta de que me distraía.',\r\n            'La mayor parte del tiempo tuve que esforzarme para mantener la atención o para tomar decisiones.',\r\n            'No me pude concentrar suficientemente bien para leer ni tampoco pude tomar decisiones sin importancia']\r\n    },\r\n    {\r\n        \"n\": 11,\r\n        \"pregunta\": \"Percepción de mí mismo/a\",\r\n        \"respuestas\": [\r\n            'Me consideré que valgo tanto y que tengo los mismos derechos que las demás personas.',\r\n            'Me sentí más culpable de lo habitual.',\r\n            'En gran medida, creí que le causé problemas a otras personas.',\r\n            'Pensé casi constantemente en mis defectos, tanto en los importantes como en los triviales.',]\r\n    },\r\n    {\r\n        \"n\": 12,\r\n        \"pregunta\": \"Pensamientos de muerte o suicidio\",\r\n        \"respuestas\": [\r\n            'No pensé en el suicidio o la muerte.',\r\n            'Sentí que mi vida estaba vacía y me pregunté si valía la pena vivir.',\r\n            'Pensé en el suicidio o la muerte varias veces en la semana durante varios minutos.',\r\n            'Pensé en el suicidio o la muerte varias veces al día con cierto detalle, o hice planes de cómo suicidarme, o realmente intenté quitarme la vida.']\r\n    },\r\n    {\r\n        \"n\": 13,\r\n        \"pregunta\": \"Interés general\",\r\n        \"respuestas\": [\r\n            'No hubo cambio de lo habitual en cuanto a mi interés en otras personas o actividades.',\r\n            'Noté que estaba menos interesado / a en la gente o en las actividades.',\r\n            'Me di cuenta que sólo me interesaban una o dos de las actividades que solía hacer.',\r\n            'No tuve prácticamente ningún interés en las actividades que solía hacer.']\r\n    },\r\n    {\r\n        \"n\": 14,\r\n        \"pregunta\": \"Nivel de energía\",\r\n        \"respuestas\": [\r\n            'No hubo cambio en mi nivel de energía habitual.',\r\n            'Me cansé más fácilmente de lo habitual.',\r\n            'Tuve que hacer un gran esfuerzo para empezar o terminar mis actividades diarias habituales(porejemplo: hacer las compras, estudiar, cocinar o ir a trabajar).',\r\n            'Realmente, no pude realizar la mayoría de mis actividades diarias habituales porque simplementeno tuve energías.']\r\n    },\r\n    {\r\n        \"n\": 15,\r\n        \"pregunta\": \" Sensación de estar más lento/a\",\r\n        \"respuestas\": [\r\n            'Pensé, hablé y me moví a mi nivel de velocidad habitual.',\r\n            'Me di cuenta de que mi pensamiento estaba más lento de lo habitual o que mi voz sonabamonótona y achatada.',\r\n            'Tardé varios segundos para responder la mayoría de las preguntas y estoy seguro / a de que mipensamiento estaba más lento de lo habitual.',\r\n            'Con frecuencia no pude responder preguntas si no era haciendo un extremo esfuerzo.']\r\n    },\r\n    {\r\n        \"n\": 16,\r\n        \"pregunta\": \" Sensación de inquietud\",\r\n        \"respuestas\": [\r\n            'No me sentí inquieto/a.',\r\n            'Con frecuencia me sentí intranquilo/a, me apretaba las manos o necesitaba cambiar la posición enla que estaba sentado/a.',\r\n            'Tuve impulsos de estar en movimiento y me sentí bastante inquieto/a.',\r\n            'Por momentos, me resultó imposible quedarme sentado/a y comencé a dar vueltas.']\r\n    },\r\n]","import React, { useState, useEffect } from 'react'\r\nimport { Form, Switch, Button, Radio, Space, Row, Col, Select, message, Divider } from 'antd'\r\nimport { depresion_catalog, depresion_catalog2, disminucion_apetito, perdida_peso, aumento_apetito, aumento_peso } from './depresion_catalog'\r\nimport { Card } from 'react-bootstrap'\r\nimport { getData, sendDataBody } from '../../resources';\r\nimport logo from \"../../assets/Logo.png\";\r\nconst { Option } = Select;\r\n\r\nexport default function DepresionEncuesta(props) {\r\n  const [pesoEnabled, setPesoEnabled] = useState(false)\r\n  const [apetitoEnabled, setApetitoEnabled] = useState(false)\r\n  // For check if the encuesta existts on db\r\n  const [encuestaNotExists, setEncuestaNotExists] = useState(null)\r\n  const [checking, setChecking] = useState(true)\r\n  const [pacienteData, setPacienteData] = useState({})\r\n  const [medicoData, setMedicoData] = useState({})\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    checkEncuesta()\r\n  }, [])\r\n\r\n  const checkEncuesta = () => {\r\n\r\n    getData('getuser/' + props.idpaciente).then((rs) => { setPacienteData(rs) })\r\n    getData('getuser/' + props.idmedico).then((rs) => { setMedicoData(rs) })\r\n\r\n\r\n    getData(`encuestas/uuid/${props.token}`).then(rs => {\r\n      console.log(rs);\r\n      setEncuestaNotExists(rs.message === 'The survey does not exist')\r\n    }).then(() => { setChecking(false); console.log('Not exists: ', encuestaNotExists); })\r\n  }\r\n\r\n  const onFinish = (values) => {\r\n    let _score = 0;\r\n    let high1_4 = 0;\r\n    let high6_9 = 0;\r\n    console.log('Sintomatologia:', values);\r\n    // El mayor de la 1 a la 4\r\n    for (var i = 1; i < 5; i++) {\r\n      if (values[i] > high1_4) high1_4 = values[i]\r\n    }\r\n    // El mayor de la 6 a la 9\r\n    for (var i = 6; i < 10; i++) {\r\n      if (values[i] > high6_9) high6_9 = values[i]\r\n    }\r\n    // console.log('6-9', high6_9)\r\n    // Suma de la 10 a la 14\r\n    for (var i = 10; i < 15; i++) {\r\n      _score += values[i]\r\n    }\r\n    // Suma el mayor enre 15 y 16 y sumarlo\r\n    values[15] > values[16] ? _score += values[15] : _score += values[16];\r\n\r\n    // Sumar la 5 y el resto\r\n    _score = _score + high1_4 + values[5] + high6_9;\r\n\r\n    console.log('score: ', _score);\r\n    const body = {\r\n      usuario: props.idpaciente,\r\n      medico: props.idmedico,\r\n      score: _score,\r\n      tipo: 'depresion',\r\n      uuid: props.token\r\n    }\r\n\r\n    console.log('Efectos body:', body);\r\n    sendDataBody('encuestas/add', body).then((rs) => {\r\n      console.log(rs)\r\n      message.success(rs.message)\r\n    }).then(() => checkEncuesta())\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log('Failed:', errorInfo);\r\n    errorInfo.errorFields.map((p) => {\r\n      message.error('Conteste la pregunta ' + p.name)\r\n    })\r\n  };\r\n  const handleChange = (value) => {\r\n    // console.log(`selected ${value}`);\r\n  };\r\n\r\n  // Loading state\r\n  if (checking) return <div style={{ paddingTop: 180 }}>\r\n    <div style={{ margin: 'auto', width: '40%', textAlign: 'center' }}>\r\n      <h3 >Cargando</h3>\r\n    </div>\r\n  </div>\r\n\r\n  if (!encuestaNotExists) return <div style={{ paddingTop: 180 }}>\r\n    <div style={{ margin: 'auto', width: '40%', textAlign: 'center' }}>\r\n      <h3 >Gracias por contestar la encuesta</h3>\r\n      <img width={256} src={logo} alt=\"recreamedLogo\" style={{ margin: 'auto' }} />\r\n    </div>\r\n  </div>\r\n\r\n  return (\r\n    <div className='mainContainer'>\r\n      <h4>Sintomatologia de Depresion</h4>\r\n      <br />\r\n      <h5>Medico: {medicoData.name}</h5>\r\n      <h5>Paciente: {pacienteData.name}</h5>\r\n      <br />\r\n\r\n      <Form\r\n        name=\"basic\"\r\n        labelCol={{ span: 8 }}\r\n        wrapperCol={{ span: 16 }}\r\n        initialValues={{ remember: true }}\r\n        onFinish={onFinish}\r\n        onFinishFailed={onFinishFailed}\r\n        autoComplete=\"off\"\r\n      >\r\n\r\n\r\n        {\r\n          depresion_catalog.map((p) => {\r\n            return <Form.Item\r\n              label={p.n + '. ' + p.pregunta}\r\n              name={p.n}\r\n              rules={[{ required: true, message: `Selecciona una opcion` }]}\r\n            >\r\n              <Radio.Group>\r\n                <Space direction=\"vertical\">\r\n                  {\r\n                    p.respuestas.map((r, i) => <Radio value={i}> {r} </Radio>)\r\n                  }\r\n                </Space>\r\n              </Radio.Group>\r\n            </Form.Item>\r\n          })\r\n        }\r\n\r\n        {/*Apetito*/}\r\n        <Card>\r\n          <Form.Item wrapperCol={{ offset: 8, span: 16 }} >\r\n            Disminucion apetito <Switch onChange={() => setApetitoEnabled(!apetitoEnabled)} /> Aumento Apetito\r\n          </Form.Item>\r\n          <Row>\r\n            <Col span={10}>\r\n              <Form.Item\r\n                label='Disminucion Apetito'\r\n                name='6'\r\n                rules={[{ required: !apetitoEnabled, message: `Selecciona una opcion` }]}\r\n              >\r\n                <Radio.Group disabled={apetitoEnabled}>\r\n                  <Space direction=\"vertical\">\r\n                    {\r\n                      disminucion_apetito.map((s, i) => <Radio value={i}> {s} </Radio>)\r\n                    }\r\n                  </Space>\r\n                </Radio.Group>\r\n              </Form.Item>\r\n            </Col>\r\n\r\n            <Col>\r\n              <Form.Item\r\n                label='Aumento Apetito'\r\n                name='6'\r\n                rules={[{ required: apetitoEnabled, message: `Selecciona una opcion` }]}\r\n              >\r\n\r\n                <Radio.Group disabled={!apetitoEnabled}>\r\n                  <Space direction=\"vertical\">\r\n                    {\r\n                      aumento_apetito.map((s, i) => <Radio value={i}> {s} </Radio>)\r\n                    }\r\n                  </Space>\r\n                </Radio.Group>\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n        </Card>\r\n\r\n\r\n\r\n        {/* Peso */}\r\n        <Card>\r\n          <Form.Item wrapperCol={{ offset: 8, span: 16 }} >\r\n            Disminucion de Peso <Switch onChange={() => setPesoEnabled(!pesoEnabled)} /> Aumento de Peso\r\n          </Form.Item>\r\n          <Row>\r\n            <Col span={10}>\r\n              <Form.Item\r\n                label='Perdida de Peso'\r\n                name='8'\r\n                rules={[{ required: !pesoEnabled, message: `Selecciona una opcion` }]}\r\n              >\r\n                <Radio.Group disabled={pesoEnabled}>\r\n                  <Space direction=\"vertical\">\r\n                    {\r\n                      perdida_peso.map((s, i) => <Radio value={i}> {s} </Radio>)\r\n                    }\r\n                  </Space>\r\n                </Radio.Group>\r\n              </Form.Item>\r\n            </Col>\r\n\r\n            <Col>\r\n              <Form.Item\r\n                label='Aumento Peso'\r\n                name='8'\r\n                rules={[{ required: pesoEnabled, message: `Selecciona una opcion` }]}\r\n              >\r\n\r\n                <Radio.Group disabled={!pesoEnabled}>\r\n                  <Space direction=\"vertical\">\r\n                    {\r\n                      aumento_peso.map((s, i) => <Radio value={i}> {s} </Radio>)\r\n                    }\r\n                  </Space>\r\n                </Radio.Group>\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n        </Card>\r\n\r\n        <br />\r\n\r\n        {\r\n          depresion_catalog2.map((p) => {\r\n            return <Form.Item\r\n              label={p.n + '. ' + p.pregunta}\r\n              name={p.n}\r\n              rules={[{ required: true, message: `Selecciona una opcion` }]}\r\n            >\r\n              <Radio.Group>\r\n                <Space direction=\"vertical\">\r\n                  {\r\n                    p.respuestas.map((r, i) => <Radio value={i}> {r} </Radio>)\r\n                  }\r\n                </Space>\r\n              </Radio.Group>\r\n            </Form.Item>\r\n          })\r\n        }\r\n\r\n\r\n\r\n        <Form.Item\r\n          wrapperCol={{ offset: 8, span: 16 }}\r\n        >\r\n          <Button type=\"primary\" htmlType=\"submit\">\r\n            Guardar\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport DepresionEncuesta from '../escalas/depresion/depresionEncuesta'\r\n\r\nimport {\r\n    useParams\r\n} from \"react-router-dom\";\r\n\r\nexport default function DepresionPublic() {\r\n    let { idmedico, idpaciente, key } = useParams();\r\n    console.log(key)\r\n    return (\r\n        <div>\r\n            <DepresionEncuesta idmedico={idmedico} idpaciente={idpaciente} token={key} />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport DolorEncuesta from '../escalas/dolor/dolorEncuesta';\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nexport default function HeadachePublic() {\r\n    let { idmedico, idpaciente, key } = useParams();\r\n    console.log(key)\r\n    return (\r\n        <div>\r\n            <DolorEncuesta idmedico={idmedico} idpaciente={idpaciente} token={key} />\r\n        </div>\r\n    )\r\n}\r\n","import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'antd/dist/antd.css';\r\nimport { Login } from \"./session/login\";\r\nimport { Register } from \"./session/register\";\r\nimport \"./App.css\"\r\nimport DoctorApp from \"./doctorViews/doctorApp\";\r\nimport RecepcionApp from \"./recepcionViews/recepcionApp\";\r\nimport PatientApp from \"./patientViews/patientApp\";\r\nimport AdminHospitalApp from \"./admHospitalViews/adminHospitalApp\";\r\nimport SuperAdminApp from \"./superAdminViews/superAdminApp\";\r\nimport KetaminaPublic from \"./session/ketaminaPublic\";\r\nimport DepresionPublic from \"./session/depresionPublic\";\r\nimport HeadachePublic from \"./session/dolorPublic\";\r\n\r\nconst userType = localStorage.getItem('userType');\r\n\r\n// Changing Repo\r\n\r\nexport function App() {\r\n\r\n  const token = localStorage.getItem('sessionToken');\r\n\r\n  if (!token) {\r\n    console.log(\"tok:\", localStorage.getItem('sessionToken'));\r\n    return <Router>\r\n      <Switch>\r\n        <Route path=\"/escalas_public/:idmedico/:idpaciente/:key\">\r\n          <KetaminaPublic />\r\n        </Route>\r\n        <Route path=\"/depresion_public/:idmedico/:idpaciente/:key\">\r\n          <DepresionPublic />\r\n        </Route>\r\n        <Route path=\"/dolor_public/:idmedico/:idpaciente/:key\">\r\n          <HeadachePublic />\r\n        </Route>\r\n        <Route path=\"/register\">\r\n          <Register />\r\n        </Route>\r\n        <Router path=\"/\">\r\n          <Login />\r\n        </Router>\r\n\r\n      </Switch>\r\n    </Router>\r\n  }\r\n\r\n  switch (userType) {\r\n    case 'SuperAdministrador':\r\n      return <SuperAdminApp />\r\n    case 'Administrador':\r\n      return <AdminHospitalApp />\r\n    case 'Recepcion':\r\n      return <RecepcionApp />\r\n    case 'Paciente':\r\n      return <PatientApp />\r\n    case 'Medico':\r\n      return <DoctorApp />\r\n    default:\r\n      return 'foo';\r\n  }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { App } from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n//Main\r\n\r\n"],"sourceRoot":""}