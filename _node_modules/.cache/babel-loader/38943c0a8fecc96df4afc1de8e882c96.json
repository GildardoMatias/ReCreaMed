{"ast":null,"code":"import React,{useState,useEffect}from'react';import{Modal,Form,Select,Input,Button,message,Switch,DatePicker}from'antd';import{sendDataBody,updateData,ids_hospitales}from'../../resources';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export function CreateCitaForm(props){const isCreating=!props.cita||Object.keys(props.cita).length===0;// const [medicosLoading, setMedicosLoading] = useState(true)\nconst[medicos,setMedicos]=useState([]);//Set Medicos for select\n// const [medicosData, setMedicosData] = useState([]) // List of all Medicos\nconst[servicios,setServicios]=useState([]);const[errorMessage,setErrorMessage]=useState(\"\");const[enableCreateCita,setEnableCreateCita]=useState(true);// Body of cita\nconst[isOnline,setIsOnline]=useState(false);const[costo,setCosto]=useState(0);const[costoBaseCita,setCostoBaseCita]=useState(0);const[usesCostoBase,setUsesCostoBase]=useState(false);useEffect(()=>{// getDoctorsData()\nconsole.log('Received Cita for edit',props.cita);if(props.cita&&props.cita.usuario){handlePatientChange(props.cita.usuario);handleMedicochange(props.cita.medico);}},[]);useEffect(()=>{if(props.cita&&props.cita.medico)handleMedicochange(props.cita.medico);},[medicos]);// Form Methods\nconst onFinish=values=>{const tipo_pago=values.tipo_pago;values.sucursal=props.hospital;delete values.tratamiento;values.id_servicio=values.servicio.key;values.servicio=values.servicio.title;delete values.tipo_pago;// Handle if its updating or creating cita\nconsole.log('cita ready',values);if(props.cita){updateData(\"citas/update/\".concat(props.cita._id),values).then(response=>{// message.success(response.message || response.error);\nprops.setIsModalOpen(false);props.setEditingCita(false);}).finally(()=>{props.getCitasData();});}else{sendDataBody('citas/add',values).then(response=>{message.success(response.message||response.error);createBalance(response.id_nueva_cita,values.medico,values.fecha_hora,tipo_pago,values.servicio);}).finally(()=>{props.getCitasData();props.setIsModalOpen(false);});}};const createBalance=(_cita,medico,_fecha_hora,tipo_pago,_concepto)=>{const balanceBody={tipo:'ingreso',medico:medico,cita:_cita,monto:costo,forma_de_pago:tipo_pago,fecha_hora:_fecha_hora,estado:'pendiente',concepto:_concepto};console.log('Balance ready to send: ',balanceBody);sendDataBody('balances/add',balanceBody).then(rs=>{message.success(rs.message||rs.error);console.log(rs);});};const onFinishFailed=errorInfo=>{console.log('Failed:',errorInfo);};const handlePatientChange=value=>{const found=props.pacientesData.find(p=>p._id===value);if(found){setEnableCreateCita(true);let{medicos_asignados}=found;medicos_asignados.forEach(m=>{m.label=m.name;m.value=m._id;});console.log('Found',found);console.log('meds',medicos_asignados);setMedicos(medicos_asignados);}else{setEnableCreateCita(false);setErrorMessage(\"Usuario no encontrado\");}};const onSearchPatient=value=>{};const handleMedicochange=_id=>{console.log('selected',_id);console.log('all medics handle med chang',medicos);// Populate the \"servicio\" select\nif(medicos.length>0){let found=medicos.find(m=>m._id===_id);if(found&&found.configuracion.tratamientos_ofrecidos){setErrorMessage(\"\");setEnableCreateCita(true);if(props.enableCreateCita)props.setEditingCita(false);let{configuracion:{tratamientos_ofrecidos}}=found;console.log(\"found tr\",tratamientos_ofrecidos);tratamientos_ofrecidos.forEach(t=>{t.label=\"\".concat(t.tratamiento,\" - $\").concat(t.costo);t.value=t.costo;t.title=t.tratamiento;t.key=t._id;});const{configuracion:{costo_cita=0}}=found;setCostoBaseCita(costo_cita);setServicios(tratamientos_ofrecidos);}else{setEnableCreateCita(false);setErrorMessage(\"No se puede crear la cita para este mÃ©dico, no cuenta con servicios\");if(props.enableCreateCita)props.enableCreateCita(false);}//   \n}};const onSwitch=checked=>{setIsOnline(checked);};// Handle change for select servicio\nconst handleServicioChange=selected=>{setCosto(selected.value);console.log(\"selected service\",selected);};const onSwitchCosoBase=checked=>{// if(checked)se\nconsole.log(\"switch to \".concat(checked));setUsesCostoBase(checked);};const timeOptions=[{label:'Media Hora',value:30},{label:'Una Hora',value:60},{label:'Una Hora y Media',value:90},{label:'Dos Horas',value:120},{label:'Dos Horas Y Media',value:150},{label:'Tres Horas',value:180},{label:'Cuatro Horas',value:210},{label:'Cuatro Horas y Media',value:240},{label:'Cinco Horas',value:270},{label:'Cinco Horas y Media',value:300}];const paymentOptions=[{value:'efectivo',label:'Efectivo'},{value:'tarjeta',label:'Tarjeta'},{value:'transferencia',label:'Transferencia'}];return/*#__PURE__*/_jsxs(Form,{name:\"nueva_cita_admin\",labelCol:{span:8},wrapperCol:{span:12},onFinish:onFinish,onFinishFailed:onFinishFailed,autoComplete:\"off\",initialValues:props.cita?props.cita:{isOnline:false,tratamiento:'Sin servicio',fecha_hora:props.fecha_hora,duracion:60},children:[/*#__PURE__*/_jsx(\"div\",{children:errorMessage}),/*#__PURE__*/_jsx(Form.Item,{label:\"Paciente\",name:\"usuario\",rules:[{required:true,message:'Selecciona Usuario'}],children:/*#__PURE__*/_jsx(Select,{options:props.pacientesData,onChange:handlePatientChange,optionFilterProp:\"children\",onSearch:onSearchPatient,showSearch:true,filterOption:(input,option)=>{var _option$label;return((_option$label=option===null||option===void 0?void 0:option.label)!==null&&_option$label!==void 0?_option$label:'').toLowerCase().includes(input.toLowerCase());}})}),/*#__PURE__*/_jsx(Form.Item,{label:\"Medico\",name:\"medico\",rules:[{required:true,message:'Selecciona Medico'}],children:/*#__PURE__*/_jsx(Select,{options:medicos,onChange:handleMedicochange})}),/*#__PURE__*/_jsx(Form.Item,{label:\"VideoLlamada\",name:\"isOnline\",children:/*#__PURE__*/_jsx(Switch,{onChange:onSwitch})}),/*#__PURE__*/_jsx(Form.Item,{label:\"Comentarios\",name:\"comentarios\",rules:[{required:false,message:'Ingresa Comentarios'}],children:/*#__PURE__*/_jsx(Input,{})}),/*#__PURE__*/_jsx(Form.Item,{label:\"Fecha y Hora\",name:\"fecha_hora\",rules:[{required:false,message:'Selecciona Fecha y Hora'}],children:/*#__PURE__*/_jsx(DatePicker,{showTime:true,format:\"DD/MM/YYYY HH:mm\",use12Hours:true})}),/*#__PURE__*/_jsx(Form.Item,{label:\"Duracion\",name:\"duracion\",rules:[{required:true,message:'Selecciona la duracion de la cita'}],children:/*#__PURE__*/_jsx(Select,{options:timeOptions})}),/*#__PURE__*/_jsx(Form.Item,{label:\"Servicio\",name:\"servicio\",rules:[{required:true,message:'Selecciona Medico'}],children:/*#__PURE__*/_jsx(Select,{options:servicios,onChange:handleServicioChange,labelInValue:true})}),isCreating&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Form.Item,{label:\"Tipo de pago\",name:\"tipo_pago\",rules:[{required:true,message:'Selecciona tipo de pago'}],children:/*#__PURE__*/_jsx(Select,{options:paymentOptions})}),/*#__PURE__*/_jsx(Form.Item,{label:\"costo de la cita $\".concat(costoBaseCita),children:/*#__PURE__*/_jsx(Switch,{onChange:onSwitchCosoBase})}),/*#__PURE__*/_jsx(Form.Item,{wrapperCol:{offset:8,span:16},children:/*#__PURE__*/_jsx(\"div\",{className:\"fila\",children:/*#__PURE__*/_jsxs(\"h6\",{children:[\"Costo Total: $\",usesCostoBase?costo+costoBaseCita:costo,\" \"]})})})]}),// Only if updating cita\nprops.cita&&/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(Form.Item,{wrapperCol:{offset:8,span:16},children:/*#__PURE__*/_jsx(Button,{type:\"primary\",htmlType:\"submit\",form:\"nueva_cita_admin\",disabled:!enableCreateCita,children:\"Guardar\"})})})]});}export default function CreateCita(props){const[enableCreate,setEnableCreate]=useState(true);// Handle Modal Visibility\nconst handCreateleOk=()=>{props.setIsModalOpen(false);};const handCreateleCancel=()=>{props.setIsModalOpen(false);};return/*#__PURE__*/_jsx(Modal,{title:\"Nueva Cita\",open:props.isOpenModal,onOk:handCreateleOk,onCancel:handCreateleCancel,destroyOnClose:true,footer:[/*#__PURE__*/_jsx(Button,{onClick:handCreateleCancel,children:\"Cancelar\"}),/*#__PURE__*/_jsx(Button,{type:\"primary\",htmlType:\"submit\",form:\"nueva_cita_admin\",disabled:!enableCreate,children:\"Guardar\"})],children:/*#__PURE__*/_jsx(CreateCitaForm,{...props})});}// Create the respective balance for cita\n// const createBalance = (_cita, monto) => {\n//     const balanceBody = {\n//         medico: medico,\n//         cita: _cita,\n//         monto: monto,\n//         forma_de_pago: 'efectivo',\n//         estado: 'pendiente',\n//     }\n//     console.log('Balance ready to send: ', balanceBody)\n//     sendDataBody('balances/add', balanceBody).then((rs) => console.log(rs))\n// }","map":{"version":3,"names":["React","useState","useEffect","Modal","Form","Select","Input","Button","message","Switch","DatePicker","sendDataBody","updateData","ids_hospitales","jsx","_jsx","jsxs","_jsxs","CreateCitaForm","props","isCreating","cita","Object","keys","length","medicos","setMedicos","servicios","setServicios","errorMessage","setErrorMessage","enableCreateCita","setEnableCreateCita","isOnline","setIsOnline","costo","setCosto","costoBaseCita","setCostoBaseCita","usesCostoBase","setUsesCostoBase","console","log","usuario","handlePatientChange","handleMedicochange","medico","onFinish","values","tipo_pago","sucursal","hospital","tratamiento","id_servicio","servicio","key","title","concat","_id","then","response","setIsModalOpen","setEditingCita","finally","getCitasData","success","error","createBalance","id_nueva_cita","fecha_hora","_cita","_fecha_hora","_concepto","balanceBody","tipo","monto","forma_de_pago","estado","concepto","rs","onFinishFailed","errorInfo","value","found","pacientesData","find","p","medicos_asignados","forEach","m","label","name","onSearchPatient","configuracion","tratamientos_ofrecidos","t","costo_cita","onSwitch","checked","handleServicioChange","selected","onSwitchCosoBase","timeOptions","paymentOptions","labelCol","span","wrapperCol","autoComplete","initialValues","duracion","children","Item","rules","required","options","onChange","optionFilterProp","onSearch","showSearch","filterOption","input","option","_option$label","toLowerCase","includes","showTime","format","use12Hours","labelInValue","offset","className","type","htmlType","form","disabled","CreateCita","enableCreate","setEnableCreate","handCreateleOk","handCreateleCancel","open","isOpenModal","onOk","onCancel","destroyOnClose","footer","onClick"],"sources":["C:/Users/Gil/Documents/ReCreaMed/src/recepcionViews/citas/create-cita-for-medic.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { Modal, Form, Select, Input, Button, message, Switch, DatePicker } from 'antd'\r\nimport { sendDataBody, updateData, ids_hospitales } from '../../resources';\r\n\r\nexport function CreateCitaForm(props) {\r\n\r\n    const isCreating = !props.cita || Object.keys(props.cita).length === 0;\r\n\r\n    // const [medicosLoading, setMedicosLoading] = useState(true)\r\n    const [medicos, setMedicos] = useState([])//Set Medicos for select\r\n    // const [medicosData, setMedicosData] = useState([]) // List of all Medicos\r\n    const [servicios, setServicios] = useState([])\r\n\r\n    const [errorMessage, setErrorMessage] = useState(\"\")\r\n    const [enableCreateCita, setEnableCreateCita] = useState(true)\r\n    // Body of cita\r\n    const [isOnline, setIsOnline] = useState(false)\r\n    const [costo, setCosto] = useState(0)\r\n\r\n    const [costoBaseCita, setCostoBaseCita] = useState(0)\r\n    const [usesCostoBase, setUsesCostoBase] = useState(false)\r\n\r\n\r\n    useEffect(() => {\r\n        // getDoctorsData()\r\n        console.log('Received Cita for edit', props.cita)\r\n        if (props.cita && props.cita.usuario) {\r\n            handlePatientChange(props.cita.usuario)\r\n\r\n            handleMedicochange(props.cita.medico)\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (props.cita && props.cita.medico) handleMedicochange(props.cita.medico)\r\n    }, [medicos])\r\n\r\n\r\n\r\n\r\n    // Form Methods\r\n    const onFinish = (values) => {\r\n        const tipo_pago = values.tipo_pago;\r\n        values.sucursal = props.hospital;\r\n        delete values.tratamiento;\r\n        values.id_servicio = values.servicio.key;\r\n        values.servicio = values.servicio.title;\r\n        delete values.tipo_pago;\r\n\r\n        // Handle if its updating or creating cita\r\n        console.log('cita ready', values)\r\n        if (props.cita) {\r\n            updateData(`citas/update/${props.cita._id}`, values).then((response) => {\r\n                // message.success(response.message || response.error);\r\n                props.setIsModalOpen(false);\r\n                props.setEditingCita(false);\r\n            }).finally(() => { props.getCitasData(); })\r\n        } else {\r\n            sendDataBody('citas/add', values).then((response) => {\r\n                message.success(response.message || response.error);\r\n                createBalance(response.id_nueva_cita, values.medico, values.fecha_hora, tipo_pago, values.servicio)\r\n            }).finally(() => { props.getCitasData(); props.setIsModalOpen(false) })\r\n        }\r\n    }\r\n\r\n    const createBalance = (_cita, medico, _fecha_hora, tipo_pago, _concepto) => {\r\n        const balanceBody = {\r\n            tipo: 'ingreso',\r\n            medico: medico,\r\n            cita: _cita,\r\n            monto: costo,\r\n            forma_de_pago: tipo_pago,\r\n            fecha_hora: _fecha_hora,\r\n            estado: 'pendiente',\r\n            concepto: _concepto\r\n        }\r\n        console.log('Balance ready to send: ', balanceBody)\r\n        sendDataBody('balances/add', balanceBody).then((rs) => { message.success(rs.message || rs.error); console.log(rs) })\r\n    }\r\n\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    const handlePatientChange = (value) => {\r\n        const found = props.pacientesData.find((p) => p._id === value);\r\n        if (found) {\r\n            setEnableCreateCita(true)\r\n            let { medicos_asignados } = found\r\n            medicos_asignados.forEach((m) => {\r\n                m.label = m.name; m.value = m._id\r\n            });\r\n\r\n            console.log('Found', found)\r\n            console.log('meds', medicos_asignados)\r\n            setMedicos(medicos_asignados);\r\n\r\n        } else {\r\n            setEnableCreateCita(false)\r\n            setErrorMessage(\"Usuario no encontrado\")\r\n        }\r\n    };\r\n\r\n    const onSearchPatient = (value) => { };\r\n\r\n    const handleMedicochange = (_id) => {\r\n        console.log('selected', _id)\r\n        console.log('all medics handle med chang', medicos)\r\n        // Populate the \"servicio\" select\r\n        if (medicos.length > 0) {\r\n            let found = medicos.find((m) => m._id === _id)\r\n            if (found && found.configuracion.tratamientos_ofrecidos) {\r\n                setErrorMessage(\"\")\r\n                setEnableCreateCita(true)\r\n                if (props.enableCreateCita) props.setEditingCita(false)\r\n                let { configuracion: { tratamientos_ofrecidos } } = found;\r\n                console.log(\"found tr\", tratamientos_ofrecidos)\r\n                tratamientos_ofrecidos.forEach(t => {\r\n                    t.label = `${t.tratamiento} - $${t.costo}`; t.value = t.costo; t.title = t.tratamiento; t.key = t._id\r\n                });\r\n                const { configuracion: { costo_cita = 0 } } = found;\r\n                setCostoBaseCita(costo_cita)\r\n                setServicios(tratamientos_ofrecidos)\r\n            }\r\n            else {\r\n                setEnableCreateCita(false);\r\n                setErrorMessage(\"No se puede crear la cita para este mÃ©dico, no cuenta con servicios\")\r\n                if (props.enableCreateCita) props.enableCreateCita(false)\r\n            }\r\n            //   \r\n\r\n        }\r\n    }\r\n\r\n    const onSwitch = (checked) => {\r\n        setIsOnline(checked)\r\n    };\r\n\r\n    // Handle change for select servicio\r\n    const handleServicioChange = (selected) => {\r\n\r\n        setCosto(selected.value)\r\n        console.log(`selected service`, selected);\r\n    };\r\n\r\n    const onSwitchCosoBase = (checked) => {\r\n        // if(checked)se\r\n        console.log(`switch to ${checked}`);\r\n        setUsesCostoBase(checked)\r\n    };\r\n\r\n    const timeOptions = [\r\n        { label: 'Media Hora', value: 30 },\r\n        { label: 'Una Hora', value: 60 },\r\n        { label: 'Una Hora y Media', value: 90 },\r\n        { label: 'Dos Horas', value: 120 },\r\n        { label: 'Dos Horas Y Media', value: 150 },\r\n        { label: 'Tres Horas', value: 180 },\r\n        { label: 'Cuatro Horas', value: 210 },\r\n        { label: 'Cuatro Horas y Media', value: 240 },\r\n        { label: 'Cinco Horas', value: 270 },\r\n        { label: 'Cinco Horas y Media', value: 300 },\r\n    ]\r\n\r\n    const paymentOptions = [\r\n        { value: 'efectivo', label: 'Efectivo' },\r\n        { value: 'tarjeta', label: 'Tarjeta' },\r\n        { value: 'transferencia', label: 'Transferencia' },\r\n    ]\r\n\r\n    return <Form name=\"nueva_cita_admin\" labelCol={{ span: 8 }} wrapperCol={{ span: 12 }} onFinish={onFinish} onFinishFailed={onFinishFailed} autoComplete=\"off\"\r\n        initialValues={props.cita ? props.cita : { isOnline: false, tratamiento: 'Sin servicio', fecha_hora: props.fecha_hora, duracion: 60 }}>\r\n\r\n        <div>{errorMessage}</div>\r\n\r\n        <Form.Item label=\"Paciente\" name=\"usuario\" rules={[{ required: true, message: 'Selecciona Usuario' }]} >\r\n            <Select options={props.pacientesData} onChange={handlePatientChange} optionFilterProp=\"children\" onSearch={onSearchPatient} showSearch\r\n                filterOption={(input, option) => (option?.label ?? '').toLowerCase().includes(input.toLowerCase())} />\r\n        </Form.Item>\r\n\r\n        <Form.Item label=\"Medico\" name=\"medico\" rules={[{ required: true, message: 'Selecciona Medico' }]} >\r\n            <Select options={medicos} onChange={handleMedicochange} />\r\n        </Form.Item>\r\n\r\n\r\n        <Form.Item label=\"VideoLlamada\" name=\"isOnline\" >\r\n            <Switch onChange={onSwitch} />\r\n        </Form.Item>\r\n\r\n        <Form.Item label=\"Comentarios\" name=\"comentarios\" rules={[{ required: false, message: 'Ingresa Comentarios' }]} >\r\n            <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item label=\"Fecha y Hora\" name=\"fecha_hora\" rules={[{ required: false, message: 'Selecciona Fecha y Hora' }]} >\r\n            <DatePicker showTime format=\"DD/MM/YYYY HH:mm\" use12Hours={true} />\r\n        </Form.Item>\r\n\r\n        <Form.Item label=\"Duracion\" name=\"duracion\" rules={[{ required: true, message: 'Selecciona la duracion de la cita' }]} >\r\n            <Select options={timeOptions} />\r\n        </Form.Item>\r\n\r\n        <Form.Item label=\"Servicio\" name=\"servicio\" rules={[{ required: true, message: 'Selecciona Medico' }]} >\r\n            <Select options={servicios} onChange={handleServicioChange} labelInValue />\r\n        </Form.Item>\r\n\r\n        {\r\n            isCreating && <div>\r\n\r\n                <Form.Item label=\"Tipo de pago\" name=\"tipo_pago\" rules={[{ required: true, message: 'Selecciona tipo de pago' }]} >\r\n                    <Select options={paymentOptions} />\r\n                </Form.Item>\r\n\r\n                <Form.Item label={`costo de la cita $${costoBaseCita}`} >\r\n                    <Switch onChange={onSwitchCosoBase} />\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                    wrapperCol={{\r\n                        offset: 8,\r\n                        span: 16,\r\n                    }}\r\n                >\r\n                    <div className='fila'>\r\n                        <h6>Costo Total: ${usesCostoBase ? (costo + costoBaseCita) : costo} </h6>\r\n                    </div>\r\n                </Form.Item>\r\n\r\n            </div>\r\n        }\r\n\r\n        {\r\n            // Only if updating cita\r\n            props.cita && <div>\r\n\r\n\r\n                <Form.Item\r\n                    wrapperCol={{\r\n                        offset: 8,\r\n                        span: 16,\r\n                    }}\r\n                >\r\n                    <Button type=\"primary\" htmlType=\"submit\" form='nueva_cita_admin' disabled={!enableCreateCita}>\r\n                        Guardar\r\n                    </Button>\r\n                </Form.Item>\r\n            </div>\r\n        }\r\n\r\n    </Form>\r\n}\r\n\r\nexport default function CreateCita(props) {\r\n\r\n    const [enableCreate, setEnableCreate] = useState(true)\r\n    // Handle Modal Visibility\r\n    const handCreateleOk = () => { props.setIsModalOpen(false) }\r\n    const handCreateleCancel = () => { props.setIsModalOpen(false) }\r\n\r\n\r\n    return (\r\n        <Modal title=\"Nueva Cita\" open={props.isOpenModal} onOk={handCreateleOk} onCancel={handCreateleCancel} destroyOnClose\r\n            footer={[\r\n                <Button onClick={handCreateleCancel}>Cancelar</Button>,\r\n                <Button type=\"primary\" htmlType=\"submit\" form='nueva_cita_admin' disabled={!enableCreate}>\r\n                    Guardar\r\n                </Button>\r\n            ]}\r\n        >\r\n            {/* <CreateCitaForm setIsModalOpen={props.setIsModalOpen} hospital={props.hospital} fecha_hora={props.fecha_hora} getCitasData={props.getCitasData} pacientesData={props.pacientesData} setEnableCreateCita={setEnableCreate} /> */}\r\n            <CreateCitaForm {...props} />\r\n\r\n        </Modal>\r\n    )\r\n}\r\n\r\n\r\n// Create the respective balance for cita\r\n// const createBalance = (_cita, monto) => {\r\n//     const balanceBody = {\r\n//         medico: medico,\r\n//         cita: _cita,\r\n//         monto: monto,\r\n//         forma_de_pago: 'efectivo',\r\n//         estado: 'pendiente',\r\n//     }\r\n//     console.log('Balance ready to send: ', balanceBody)\r\n//     sendDataBody('balances/add', balanceBody).then((rs) => console.log(rs))\r\n// }"],"mappings":"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"},"metadata":{},"sourceType":"module"}