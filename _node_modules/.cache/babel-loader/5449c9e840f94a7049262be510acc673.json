{"ast":null,"code":"import React,{useEffect,useState,useRef}from'react';import{getData,sendDataBody}from'../resources';import{Form,Button,Space,Select,message}from'antd';import{usuario,ids_hospitales}from'../resources';import QRCode from\"react-qr-code\";import{toBlob,toPng}from'html-to-image';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";const{Option}=Select;export default function EscalasCreateGeneralLink(props){const[misPacientes,setMisPacientes]=useState([]);const[selectedPatient,setSelectedPatient]=useState(null);const[link,setLink]=useState('');// Used to add a medico _id when the user is admin\nconst[medicosData,setMedicosData]=useState([]);const[medico,setMedico]=useState(null);const imageRef=useRef(null);const getPacientesOfDoctor=_id=>{//Para el caso que la sesion sea de Medico\ngetData(\"mispacientes/\".concat(_id)).then(rs=>{setSelectedPatient(null);setMisPacientes(rs);console.log(\"patients of \".concat(_id),rs);});};// If administrator or reception, filter medicos of hospital\nconst getDoctorsData=()=>{//Para el caso que la sesion sea de Administrador\n// const body = { ids: usuario.medicos_asignados }\n// sendDataBody(`users/getMany`, body).then(rs => { setMedicosData(rs); console.log('medicosData: ', rs); })\ngetData('users_by_rol/Medico').then(rs=>{setMedicosData(myDoctors(rs));});};const myDoctors=doctorsData=>{let doctorsFound=[];ids_hospitales.forEach(id_hospital=>{doctorsData.forEach(doctor=>{doctor.horarios.forEach(horario=>{if(!doctorsFound.includes(doctor)&&horario.sucursal._id===id_hospital)doctorsFound.push(doctor);});});console.log(\"Founds for \".concat(id_hospital,\": \"),doctorsFound);});return doctorsFound;};// End of medicos filtering\nuseEffect(()=>{usuario.rol==='Medico'?getPacientesOfDoctor(usuario._id):getDoctorsData();},[]);const handleDoctorChange=value=>{setMedico(value);getPacientesOfDoctor(value);};const handleChange=value=>{setLink(null);setSelectedPatient(value);};// Filter `option.label` match the user type `input`\nconst filterOption=(input,option)=>{var _option$label;return((_option$label=option===null||option===void 0?void 0:option.label)!==null&&_option$label!==void 0?_option$label:'').toLowerCase().includes(input.toLowerCase());};const generateLink=()=>{// let usr = usuario.rol === 'Administrador' ? medico : usuario._id;\nlet usr=usuario.rol==='Administrador'||usuario.rol==='Recepcion'||usuario.rol==='Enfermero'?medico:usuario._id;let l=\"https://sistema.recreamed.com/\".concat(props.tipo,\"_public/\").concat(usr,\"/\").concat(selectedPatient,\"/\").concat(Date.now());// let l = `http://localhost:3000/${props.tipo}_public/${usr}/${selectedPatient}/${Date.now()}`\nsetLink(l);};const copyLink=()=>{navigator.clipboard.writeText(link);message.success('Enlace Copiado al Portapapeles!');};const handleDownload=async()=>{const dataUrl=await toPng(imageRef.current,{width:288});// download image\nconst link=document.createElement('a');link.download=\"codigo-de-enlace.png\";link.href=dataUrl;link.click();};const handleCopy=async()=>{message.info('Espere mientras se copia el codigo...');toBlob(imageRef.current,{width:288}).then(async function(blob){try{await navigator.clipboard.write([// eslint-disable-next-line no-undef\nnew ClipboardItem({[blob.type]:blob})]);console.log(\"Image copied\");message.success('Codigo Copiado al Portapapeles');}catch(error){console.error(error);}});};return/*#__PURE__*/_jsxs(\"div\",{children:[(usuario.rol==='Administrador'||usuario.rol==='Recepcion'||usuario.rol==='Enfermero')&&/*#__PURE__*/_jsx(Form.Item,{label:\"Medico\",name:\"usuario\",rules:[{required:true,message:'Selecciona el paciente'}],style:{alignItems:'center',paddingTop:20},labelCol:{span:6},wrapperCol:{span:18},children:/*#__PURE__*/_jsx(Select,{showSearch:true,filterOption:filterOption,onChange:handleDoctorChange,placeholder:\"Selecciona un medico\",options:medicosData.map(p=>({...p,key:p._id,value:p._id,label:p.name}))})}),/*#__PURE__*/_jsx(Form.Item,{label:\"Paciente\",name:\"usuario\",rules:[{required:true,message:'Selecciona el paciente'}],style:{alignItems:'center',paddingTop:20},labelCol:{span:6},wrapperCol:{span:18},children:/*#__PURE__*/_jsx(Select,{showSearch:true,filterOption:filterOption,onChange:handleChange,placeholder:\"Selecciona un paciente\",value:selectedPatient,options:misPacientes.map(p=>({...p,key:p._id,value:p._id,label:p.name}))})}),/*#__PURE__*/_jsx(Button,{onClick:generateLink,disabled:!selectedPatient,children:\"Generar Enlace\"}),/*#__PURE__*/_jsx(\"br\",{}),selectedPatient&&link?/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Space,{align:\"center\"}),/*#__PURE__*/_jsx(\"p\",{style:{paddingTop:16,color:'#1890ff'},children:link}),/*#__PURE__*/_jsx(Button,{onClick:copyLink,children:\"Copiar Link\"}),usuario.rol==='Recepcion'&&/*#__PURE__*/_jsx(Button,{type:\"primary\",href:link,target:\"_blank\",rel:\"noreferrer\",style:{marginLeft:14},children:\"Contestar Ahora\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(\"div\",{ref:imageRef,style:{background:'white',padding:'16px'},children:[\" \",/*#__PURE__*/_jsx(QRCode,{value:link}),\" \"]}),/*#__PURE__*/_jsx(Button,{onClick:handleDownload,children:\"Descargar Codigo\"}),/*#__PURE__*/_jsx(Button,{onClick:handleCopy,style:{marginLeft:12},children:\"Copiar Codigo\"})]}):/*#__PURE__*/_jsx(_Fragment,{})]});}","map":{"version":3,"names":["React","useEffect","useState","useRef","getData","sendDataBody","Form","Button","Space","Select","message","usuario","ids_hospitales","QRCode","toBlob","toPng","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Option","EscalasCreateGeneralLink","props","misPacientes","setMisPacientes","selectedPatient","setSelectedPatient","link","setLink","medicosData","setMedicosData","medico","setMedico","imageRef","getPacientesOfDoctor","_id","concat","then","rs","console","log","getDoctorsData","myDoctors","doctorsData","doctorsFound","forEach","id_hospital","doctor","horarios","horario","includes","sucursal","push","rol","handleDoctorChange","value","handleChange","filterOption","input","option","_option$label","label","toLowerCase","generateLink","usr","l","tipo","Date","now","copyLink","navigator","clipboard","writeText","success","handleDownload","dataUrl","current","width","document","createElement","download","href","click","handleCopy","info","blob","write","ClipboardItem","type","error","children","Item","name","rules","required","style","alignItems","paddingTop","labelCol","span","wrapperCol","showSearch","onChange","placeholder","options","map","p","key","onClick","disabled","align","color","target","rel","marginLeft","ref","background","padding"],"sources":["C:/Users/Gil/Documents/ReCreaMed/src/escalas/escalasCreateGeneralLink.jsx"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react'\r\nimport { getData, sendDataBody } from '../resources';\r\nimport { Form, Button, Space, Select, message } from 'antd'\r\nimport { usuario, ids_hospitales } from '../resources';\r\nimport QRCode from \"react-qr-code\";\r\nimport { toBlob, toPng } from 'html-to-image';\r\nconst { Option } = Select;\r\n\r\n\r\n\r\nexport default function EscalasCreateGeneralLink(props) {\r\n\r\n    const [misPacientes, setMisPacientes] = useState([])\r\n    const [selectedPatient, setSelectedPatient] = useState(null)\r\n    const [link, setLink] = useState('')\r\n    // Used to add a medico _id when the user is admin\r\n    const [medicosData, setMedicosData] = useState([])\r\n    const [medico, setMedico] = useState(null)\r\n\r\n    const imageRef = useRef(null);\r\n\r\n\r\n    const getPacientesOfDoctor = (_id) => { //Para el caso que la sesion sea de Medico\r\n        getData(`mispacientes/${_id}`).then(rs => { setSelectedPatient(null); setMisPacientes(rs); console.log(`patients of ${_id}`, rs); })\r\n    }\r\n\r\n    // If administrator or reception, filter medicos of hospital\r\n    const getDoctorsData = () => { //Para el caso que la sesion sea de Administrador\r\n        // const body = { ids: usuario.medicos_asignados }\r\n        // sendDataBody(`users/getMany`, body).then(rs => { setMedicosData(rs); console.log('medicosData: ', rs); })\r\n        getData('users_by_rol/Medico').then((rs) => { setMedicosData(myDoctors(rs)) })\r\n    }\r\n\r\n    const myDoctors = (doctorsData) => {\r\n\r\n        let doctorsFound = [];\r\n        ids_hospitales.forEach(id_hospital => {\r\n            doctorsData.forEach(doctor => {\r\n                doctor.horarios.forEach(horario => {\r\n                    if (!doctorsFound.includes(doctor) && horario.sucursal._id === id_hospital) doctorsFound.push(doctor)\r\n                });\r\n            });\r\n            console.log(`Founds for ${id_hospital}: `, doctorsFound)\r\n        });\r\n\r\n        return doctorsFound;\r\n    }\r\n    // End of medicos filtering\r\n\r\n    useEffect(() => {\r\n        usuario.rol === 'Medico' ? getPacientesOfDoctor(usuario._id) : getDoctorsData()\r\n    }, [])\r\n\r\n    const handleDoctorChange = (value) => { setMedico(value); getPacientesOfDoctor(value) };\r\n    const handleChange = (value) => { setLink(null); setSelectedPatient(value) };\r\n    // Filter `option.label` match the user type `input`\r\n    const filterOption = (input, option) =>\r\n        (option?.label ?? '').toLowerCase().includes(input.toLowerCase());\r\n\r\n    const generateLink = () => {\r\n        // let usr = usuario.rol === 'Administrador' ? medico : usuario._id;\r\n        let usr = (usuario.rol === 'Administrador' || usuario.rol === 'Recepcion' || usuario.rol === 'Enfermero') ? medico : usuario._id;\r\n\r\n        let l = `https://sistema.recreamed.com/${props.tipo}_public/${usr}/${selectedPatient}/${Date.now()}`\r\n        // let l = `http://localhost:3000/${props.tipo}_public/${usr}/${selectedPatient}/${Date.now()}`\r\n        setLink(l)\r\n    }\r\n    const copyLink = () => {\r\n        navigator.clipboard.writeText(link)\r\n        message.success('Enlace Copiado al Portapapeles!')\r\n    }\r\n\r\n    const handleDownload = async () => {\r\n        const dataUrl = await toPng(imageRef.current, { width: 288 });\r\n\r\n        // download image\r\n        const link = document.createElement('a');\r\n        link.download = \"codigo-de-enlace.png\";\r\n        link.href = dataUrl;\r\n        link.click();\r\n    }\r\n\r\n    const handleCopy = async () => {\r\n        message.info('Espere mientras se copia el codigo...')\r\n        toBlob(imageRef.current, { width: 288 })\r\n            .then(async function (blob) {\r\n                try {\r\n                    await navigator.clipboard.write([\r\n                        // eslint-disable-next-line no-undef\r\n                        new ClipboardItem({\r\n                            [blob.type]: blob\r\n                        })\r\n                    ]);\r\n                    console.log(\"Image copied\");\r\n                    message.success('Codigo Copiado al Portapapeles')\r\n                } catch (error) {\r\n                    console.error(error);\r\n                }\r\n            });\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                (usuario.rol === 'Administrador' || usuario.rol === 'Recepcion' || usuario.rol === 'Enfermero') &&\r\n                <Form.Item label=\"Medico\" name=\"usuario\" rules={[{ required: true, message: 'Selecciona el paciente' }]}\r\n                    style={{ alignItems: 'center', paddingTop: 20 }}\r\n                    labelCol={{ span: 6 }} wrapperCol={{ span: 18 }}>\r\n                    {/* <Select\r\n                        showSearch\r\n                        filterOption={filterOption}\r\n                        style={{ width: 260, }}\r\n                        onChange={handleDoctorChange}\r\n                        placeholder='Selecciona un medico'\r\n                    >\r\n                        {\r\n                            medicosData.map((p) => {\r\n                                return <Option key={p._id} value={p._id}>{p.name}</Option>\r\n                            })\r\n                        }\r\n                    </Select> */}\r\n                    <Select\r\n                        showSearch\r\n                        filterOption={filterOption}\r\n                        onChange={handleDoctorChange}\r\n                        placeholder='Selecciona un medico'\r\n                        options={\r\n                            medicosData.map((p) => (\r\n                                {\r\n                                    ...p,\r\n                                    key: p._id,\r\n                                    value: p._id,\r\n                                    label: p.name\r\n                                }\r\n                            ))\r\n                        }\r\n                    />\r\n                </Form.Item>\r\n            }\r\n\r\n            <Form.Item label=\"Paciente\" name=\"usuario\" rules={[{ required: true, message: 'Selecciona el paciente' }]}\r\n                style={{ alignItems: 'center', paddingTop: 20 }}\r\n                labelCol={{ span: 6 }} wrapperCol={{ span: 18 }}>\r\n                {/* <Select\r\n                    showSearch\r\n                    style={{ width: 260, }}\r\n                    onChange={handleChange}\r\n                    placeholder='Selecciona un paciente'\r\n                    value={selectedPatient}\r\n                >\r\n                    {\r\n                        misPacientes.map((p) => {\r\n                            return <Option key={p._id} value={p._id}>{p.name}</Option>\r\n                        })\r\n                    }\r\n                </Select> */}\r\n                <Select\r\n                    showSearch\r\n                    filterOption={filterOption}\r\n                    onChange={handleChange}\r\n                    placeholder='Selecciona un paciente'\r\n                    value={selectedPatient}\r\n                    options={\r\n                        misPacientes.map((p) => (\r\n                            {\r\n                                ...p,\r\n                                key: p._id,\r\n                                value: p._id,\r\n                                label: p.name\r\n                            }\r\n                        ))\r\n                    }\r\n                />\r\n            </Form.Item>\r\n            <Button onClick={generateLink} disabled={!selectedPatient} >Generar Enlace</Button>\r\n\r\n\r\n            <br />\r\n\r\n            {\r\n                selectedPatient && link ? <div>\r\n                    <Space align='center'>\r\n                    </Space>\r\n                    <p style={{ paddingTop: 16, color: '#1890ff' }} >{link}</p>\r\n                    <Button onClick={copyLink}>Copiar Link</Button>\r\n\r\n                    {\r\n                        usuario.rol === 'Recepcion' && <Button type='primary' href={link} target='_blank' rel='noreferrer' style={{ marginLeft: 14 }}>Contestar Ahora</Button>\r\n                    }\r\n\r\n                    <br />\r\n                    <div ref={imageRef} style={{ background: 'white', padding: '16px' }}> <QRCode value={link} /> </div>\r\n                    <Button onClick={handleDownload}>Descargar Codigo</Button>\r\n                    <Button onClick={handleCopy} style={{ marginLeft: 12 }}>Copiar Codigo</Button>\r\n                </div> : <></>\r\n            }\r\n\r\n        </div >\r\n    )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}