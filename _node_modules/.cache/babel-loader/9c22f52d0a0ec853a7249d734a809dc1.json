{"ast":null,"code":"import { convertToPath, Path } from '@antv/g';\nimport { copyAttributes } from '../utils/helper';\nimport { attributeKeys, attributeOf } from './utils';\nfunction localBBoxOf(shape) {\n  const {\n    min,\n    max\n  } = shape.getLocalBounds();\n  const [x0, y0] = min;\n  const [x1, y1] = max;\n  const height = y1 - y0;\n  const width = x1 - x0;\n  return [x0, y0, width, height];\n}\nfunction d(bbox) {\n  const [x, y, width, height] = bbox;\n  return \"\\n    M \".concat(x, \" \").concat(y, \"\\n    L \").concat(x + width, \" \").concat(y, \"\\n    L \").concat(x + width, \" \").concat(y + height, \"\\n    L \").concat(x, \" \").concat(y + height, \"\\n    Z\\n  \");\n}\nfunction pack(shape, count) {\n  const [x0, y0, width, height] = localBBoxOf(shape);\n  const aspect = height / width;\n  const col = Math.ceil(Math.sqrt(count / aspect));\n  const row = Math.ceil(count / col);\n  const B = [];\n  const h = height / row;\n  let j = 0;\n  let n = count;\n  while (n > 0) {\n    const c = Math.min(n, col);\n    const w = width / c;\n    for (let i = 0; i < c; i++) {\n      const x = x0 + i * w;\n      const y = y0 + j * h;\n      B.push(d([x, y, w, h]));\n    }\n    n -= c;\n    j += 1;\n  }\n  return B;\n}\nfunction normalizeSplit() {\n  let split = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'pack';\n  if (typeof split == 'function') return split;\n  return pack;\n}\n/**\n * Translate and scale.\n */\nfunction shapeToShape(from, to, timeEffect) {\n  const [x0, y0, w0, h0] = localBBoxOf(from);\n  const {\n    transform: fromTransform\n  } = from.style;\n  const {\n    transform: toTransform\n  } = to.style;\n  // Replace first to get right bbox after mounting.\n  replaceChild(to, from);\n  // Apply translate and scale transform.\n  const [x1, y1, w1, h1] = localBBoxOf(to);\n  const dx = x0 - x1;\n  const dy = y0 - y1;\n  const sx = w0 / w1;\n  const sy = h0 / h1;\n  const keyframes = [Object.assign({\n    transform: \"\".concat(fromTransform ? fromTransform + ' ' : '', \"translate(\").concat(dx, \", \").concat(dy, \") scale(\").concat(sx, \", \").concat(sy, \")\")\n  }, attributeOf(from, attributeKeys)), Object.assign({\n    transform: \"\".concat(toTransform ? toTransform + ' ' : '', \"translate(0, 0) scale(1, 1)\")\n  }, attributeOf(to, attributeKeys))];\n  const animation = to.animate(keyframes, timeEffect);\n  return animation;\n}\n/**\n * Replace object and copy className and __data__\n */\nfunction replaceChild(newChild, oldChild) {\n  newChild['__data__'] = oldChild['__data__'];\n  newChild.className = oldChild.className;\n  // @ts-ignore\n  newChild.markType = oldChild.markType;\n  oldChild.parentNode.replaceChild(newChild, oldChild);\n}\n/**\n * Replace element with a path shape.\n */\nfunction maybePath(node, d) {\n  const {\n    nodeName\n  } = node;\n  if (nodeName === 'path') return node;\n  const path = new Path({\n    style: Object.assign(Object.assign({}, attributeOf(node, attributeKeys)), {\n      d\n    })\n  });\n  replaceChild(path, node);\n  return path;\n}\nfunction hasUniqueString(search, pattern) {\n  const first = search.indexOf(pattern);\n  const last = search.lastIndexOf(pattern);\n  return first === last;\n}\n// Path definition with multiple m and M command has sub path.\n// eg. 'M10,10...M20,20', 'm10,10...m20,20'\nfunction hasSubPath(path) {\n  return !hasUniqueString(path, 'm') || !hasUniqueString(path, 'M');\n}\nfunction shape2path(shape) {\n  const path = convertToPath(shape);\n  if (!path) return;\n  // Path definition with sub path can't do path morphing animation,\n  // so skip this kind of path.\n  if (hasSubPath(path)) return;\n  return path;\n}\nfunction oneToOne(shape, from, to, timeEffect) {\n  // If the nodeTypes of from and to are equal,\n  // or non of them can convert to path,\n  // the apply shape to shape animation.\n  const {\n    nodeName: fromName\n  } = from;\n  const {\n    nodeName: toName\n  } = to;\n  const fromPath = shape2path(from);\n  const toPath = shape2path(to);\n  const isSameNodes = fromName === toName && fromName !== 'path';\n  const hasNonPathNode = fromPath === undefined || toPath === undefined;\n  if (isSameNodes || hasNonPathNode) return shapeToShape(from, to, timeEffect);\n  const pathShape = maybePath(shape, fromPath);\n  // Convert Path will take transform, anchor, etc into account,\n  // so there is no need to specify these attributes in keyframes.\n  const keyframes = [Object.assign({\n    path: fromPath\n  }, attributeOf(from, attributeKeys)), Object.assign({\n    path: toPath\n  }, attributeOf(to, attributeKeys))];\n  const animation = pathShape.animate(keyframes, timeEffect);\n  animation.onfinish = () => {\n    pathShape.style.transform = 'none';\n    copyAttributes(pathShape, to);\n  };\n  // Remove transform because it already applied in path\n  // converted by convertToPath.\n  pathShape.style.transform = 'none';\n  return animation;\n}\nfunction oneToMultiple(from, to, timeEffect, split) {\n  // Hide the shape to be split before being removing.\n  from.style.visibility = 'hidden';\n  const D = split(from, to.length);\n  return to.map((shape, i) => {\n    const path = new Path({\n      style: Object.assign({\n        path: D[i]\n      }, attributeOf(from, attributeKeys))\n    });\n    return oneToOne(shape, path, shape, timeEffect);\n  });\n}\nfunction multipleToOne(from, to, timeEffect, split) {\n  const D = split(to, from.length);\n  const {\n    fillOpacity = 1,\n    strokeOpacity = 1,\n    opacity = 1\n  } = to.style;\n  const keyframes = [{\n    fillOpacity: 0,\n    strokeOpacity: 0,\n    opacity: 0\n  }, {\n    fillOpacity: 0,\n    strokeOpacity: 0,\n    opacity: 0,\n    offset: 0.99\n  }, {\n    fillOpacity,\n    strokeOpacity,\n    opacity\n  }];\n  const animation = to.animate(keyframes, timeEffect);\n  const animations = from.map((shape, i) => {\n    const path = new Path({\n      style: {\n        path: D[i],\n        fill: to.style.fill\n      }\n    });\n    return oneToOne(shape, shape, path, timeEffect);\n  });\n  return [...animations, animation];\n}\n/**\n * Morphing animations.\n * @todo Support more split function.\n */\nexport const Morphing = options => {\n  return (from, to, defaults) => {\n    const split = normalizeSplit(options.split);\n    const timeEffect = Object.assign(Object.assign({}, defaults), options);\n    const {\n      length: fl\n    } = from;\n    const {\n      length: tl\n    } = to;\n    if (fl === 1 && tl === 1 || fl > 1 && tl > 1) {\n      const [f] = from;\n      const [t] = to;\n      return oneToOne(f, f, t, timeEffect);\n    }\n    if (fl === 1 && tl > 1) {\n      const [f] = from;\n      return oneToMultiple(f, to, timeEffect, split);\n    }\n    if (fl > 1 && tl === 1) {\n      const [t] = to;\n      return multipleToOne(from, t, timeEffect, split);\n    }\n    return null;\n  };\n};\nMorphing.props = {};","map":{"version":3,"names":["convertToPath","Path","copyAttributes","attributeKeys","attributeOf","localBBoxOf","shape","min","max","getLocalBounds","x0","y0","x1","y1","height","width","d","bbox","x","y","concat","pack","count","aspect","col","Math","ceil","sqrt","row","B","h","j","n","c","w","i","push","normalizeSplit","split","arguments","length","undefined","shapeToShape","from","to","timeEffect","w0","h0","transform","fromTransform","style","toTransform","replaceChild","w1","h1","dx","dy","sx","sy","keyframes","animation","animate","newChild","oldChild","className","markType","parentNode","maybePath","node","nodeName","path","Object","assign","hasUniqueString","search","pattern","first","indexOf","last","lastIndexOf","hasSubPath","shape2path","oneToOne","fromName","toName","fromPath","toPath","isSameNodes","hasNonPathNode","pathShape","onfinish","oneToMultiple","visibility","D","map","multipleToOne","fillOpacity","strokeOpacity","opacity","offset","animations","fill","Morphing","options","defaults","fl","tl","f","t","props"],"sources":["src/animation/morphing.ts"],"sourcesContent":[null],"mappings":"AAAA,SACEA,aAAa,EAGbC,IAAI,QACC,SAAS;AAEhB,SAASC,cAAc,QAAQ,iBAAiB;AAEhD,SAASC,aAAa,EAAEC,WAAW,QAAQ,SAAS;AAQpD,SAASC,WAAWA,CAACC,KAAoB;EACvC,MAAM;IAAEC,GAAG;IAAEC;EAAG,CAAE,GAAGF,KAAK,CAACG,cAAc,EAAE;EAC3C,MAAM,CAACC,EAAE,EAAEC,EAAE,CAAC,GAAGJ,GAAG;EACpB,MAAM,CAACK,EAAE,EAAEC,EAAE,CAAC,GAAGL,GAAG;EACpB,MAAMM,MAAM,GAAGD,EAAE,GAAGF,EAAE;EACtB,MAAMI,KAAK,GAAGH,EAAE,GAAGF,EAAE;EACrB,OAAO,CAACA,EAAE,EAAEC,EAAE,EAAEI,KAAK,EAAED,MAAM,CAAC;AAChC;AAEA,SAASE,CAACA,CAACC,IAAU;EACnB,MAAM,CAACC,CAAC,EAAEC,CAAC,EAAEJ,KAAK,EAAED,MAAM,CAAC,GAAGG,IAAI;EAClC,kBAAAG,MAAA,CACMF,CAAC,OAAAE,MAAA,CAAID,CAAC,cAAAC,MAAA,CACNF,CAAC,GAAGH,KAAK,OAAAK,MAAA,CAAID,CAAC,cAAAC,MAAA,CACdF,CAAC,GAAGH,KAAK,OAAAK,MAAA,CAAID,CAAC,GAAGL,MAAM,cAAAM,MAAA,CACvBF,CAAC,OAAAE,MAAA,CAAID,CAAC,GAAGL,MAAM;AAGvB;AAEA,SAASO,IAAIA,CAACf,KAAoB,EAAEgB,KAAa;EAC/C,MAAM,CAACZ,EAAE,EAAEC,EAAE,EAAEI,KAAK,EAAED,MAAM,CAAC,GAAGT,WAAW,CAACC,KAAK,CAAC;EAClD,MAAMiB,MAAM,GAAGT,MAAM,GAAGC,KAAK;EAC7B,MAAMS,GAAG,GAAGC,IAAI,CAACC,IAAI,CAACD,IAAI,CAACE,IAAI,CAACL,KAAK,GAAGC,MAAM,CAAC,CAAC;EAChD,MAAMK,GAAG,GAAGH,IAAI,CAACC,IAAI,CAACJ,KAAK,GAAGE,GAAG,CAAC;EAClC,MAAMK,CAAC,GAAG,EAAE;EACZ,MAAMC,CAAC,GAAGhB,MAAM,GAAGc,GAAG;EACtB,IAAIG,CAAC,GAAG,CAAC;EACT,IAAIC,CAAC,GAAGV,KAAK;EACb,OAAOU,CAAC,GAAG,CAAC,EAAE;IACZ,MAAMC,CAAC,GAAGR,IAAI,CAAClB,GAAG,CAACyB,CAAC,EAAER,GAAG,CAAC;IAC1B,MAAMU,CAAC,GAAGnB,KAAK,GAAGkB,CAAC;IACnB,KAAK,IAAIE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,CAAC,EAAEE,CAAC,EAAE,EAAE;MAC1B,MAAMjB,CAAC,GAAGR,EAAE,GAAGyB,CAAC,GAAGD,CAAC;MACpB,MAAMf,CAAC,GAAGR,EAAE,GAAGoB,CAAC,GAAGD,CAAC;MACpBD,CAAC,CAACO,IAAI,CAACpB,CAAC,CAAC,CAACE,CAAC,EAAEC,CAAC,EAAEe,CAAC,EAAEJ,CAAC,CAAC,CAAC,CAAC;;IAEzBE,CAAC,IAAIC,CAAC;IACNF,CAAC,IAAI,CAAC;;EAER,OAAOF,CAAC;AACV;AAEA,SAASQ,cAAcA,CAAA,EACmB;EAAA,IAAxCC,KAAA,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAkC,MAAM;EAExC,IAAI,OAAOD,KAAK,IAAI,UAAU,EAAE,OAAOA,KAAK;EAC5C,OAAOjB,IAAI;AACb;AAEA;;;AAGA,SAASqB,YAAYA,CACnBC,IAAmB,EACnBC,EAAiB,EACjBC,UAA+B;EAE/B,MAAM,CAACnC,EAAE,EAAEC,EAAE,EAAEmC,EAAE,EAAEC,EAAE,CAAC,GAAG1C,WAAW,CAACsC,IAAI,CAAC;EAC1C,MAAM;IAAEK,SAAS,EAAEC;EAAa,CAAE,GAAGN,IAAI,CAACO,KAAK;EAC/C,MAAM;IAAEF,SAAS,EAAEG;EAAW,CAAE,GAAGP,EAAE,CAACM,KAAK;EAE3C;EACAE,YAAY,CAACR,EAAE,EAAED,IAAI,CAAC;EAEtB;EACA,MAAM,CAAC/B,EAAE,EAAEC,EAAE,EAAEwC,EAAE,EAAEC,EAAE,CAAC,GAAGjD,WAAW,CAACuC,EAAE,CAAC;EACxC,MAAMW,EAAE,GAAG7C,EAAE,GAAGE,EAAE;EAClB,MAAM4C,EAAE,GAAG7C,EAAE,GAAGE,EAAE;EAClB,MAAM4C,EAAE,GAAGX,EAAE,GAAGO,EAAE;EAClB,MAAMK,EAAE,GAAGX,EAAE,GAAGO,EAAE;EAClB,MAAMK,SAAS,GAAG,C;IAEdX,SAAS,KAAA5B,MAAA,CACP6B,aAAa,GAAGA,aAAa,GAAG,GAAG,GAAG,EACxC,gBAAA7B,MAAA,CAAamC,EAAE,QAAAnC,MAAA,CAAKoC,EAAE,cAAApC,MAAA,CAAWqC,EAAE,QAAArC,MAAA,CAAKsC,EAAE;EAAG,GAC1CtD,WAAW,CAACuC,IAAI,EAAExC,aAAa,CAAC,G;IAGnC6C,SAAS,KAAA5B,MAAA,CACP+B,WAAW,GAAGA,WAAW,GAAG,GAAG,GAAG,EACpC;EAA6B,GAC1B/C,WAAW,CAACwC,EAAE,EAAEzC,aAAa,CAAC,EAEpC;EACD,MAAMyD,SAAS,GAAGhB,EAAE,CAACiB,OAAO,CAACF,SAAS,EAAEd,UAAU,CAAC;EACnD,OAAOe,SAAS;AAClB;AAEA;;;AAGA,SAASR,YAAYA,CAACU,QAAuB,EAAEC,QAAuB;EACpED,QAAQ,CAAC,UAAU,CAAC,GAAGC,QAAQ,CAAC,UAAU,CAAC;EAC3CD,QAAQ,CAACE,SAAS,GAAGD,QAAQ,CAACC,SAAS;EACvC;EACAF,QAAQ,CAACG,QAAQ,GAAGF,QAAQ,CAACE,QAAQ;EACrCF,QAAQ,CAACG,UAAU,CAACd,YAAY,CAACU,QAAQ,EAAEC,QAAQ,CAAC;AACtD;AAEA;;;AAGA,SAASI,SAASA,CAACC,IAAmB,EAAEpD,CAAS;EAC/C,MAAM;IAAEqD;EAAQ,CAAE,GAAGD,IAAI;EACzB,IAAIC,QAAQ,KAAK,MAAM,EAAE,OAAOD,IAAI;EACpC,MAAME,IAAI,GAAG,IAAIrE,IAAI,CAAC;IACpBiD,KAAK,EAAAqB,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA,KACApE,WAAW,CAACgE,IAAI,EAAEjE,aAAa,CAAC;MACnCa;IAAC;GAEJ,CAAC;EACFoC,YAAY,CAACkB,IAAI,EAAEF,IAAI,CAAC;EACxB,OAAOE,IAAI;AACb;AAEA,SAASG,eAAeA,CAACC,MAAc,EAAEC,OAAe;EACtD,MAAMC,KAAK,GAAGF,MAAM,CAACG,OAAO,CAACF,OAAO,CAAC;EACrC,MAAMG,IAAI,GAAGJ,MAAM,CAACK,WAAW,CAACJ,OAAO,CAAC;EACxC,OAAOC,KAAK,KAAKE,IAAI;AACvB;AAEA;AACA;AACA,SAASE,UAAUA,CAACV,IAAY;EAC9B,OAAO,CAACG,eAAe,CAACH,IAAI,EAAE,GAAG,CAAC,IAAI,CAACG,eAAe,CAACH,IAAI,EAAE,GAAG,CAAC;AACnE;AAEA,SAASW,UAAUA,CAAC3E,KAAoB;EACtC,MAAMgE,IAAI,GAAGtE,aAAa,CAACM,KAAK,CAAC;EACjC,IAAI,CAACgE,IAAI,EAAE;EACX;EACA;EACA,IAAIU,UAAU,CAACV,IAAI,CAAC,EAAE;EACtB,OAAOA,IAAI;AACb;AAEA,SAASY,QAAQA,CACf5E,KAAoB,EACpBqC,IAAmB,EACnBC,EAAiB,EACjBC,UAA+B;EAE/B;EACA;EACA;EACA,MAAM;IAAEwB,QAAQ,EAAEc;EAAQ,CAAE,GAAGxC,IAAI;EACnC,MAAM;IAAE0B,QAAQ,EAAEe;EAAM,CAAE,GAAGxC,EAAE;EAC/B,MAAMyC,QAAQ,GAAGJ,UAAU,CAACtC,IAAI,CAAC;EACjC,MAAM2C,MAAM,GAAGL,UAAU,CAACrC,EAAE,CAAC;EAC7B,MAAM2C,WAAW,GAAGJ,QAAQ,KAAKC,MAAM,IAAID,QAAQ,KAAK,MAAM;EAC9D,MAAMK,cAAc,GAAGH,QAAQ,KAAK5C,SAAS,IAAI6C,MAAM,KAAK7C,SAAS;EACrE,IAAI8C,WAAW,IAAIC,cAAc,EAAE,OAAO9C,YAAY,CAACC,IAAI,EAAEC,EAAE,EAAEC,UAAU,CAAC;EAE5E,MAAM4C,SAAS,GAAGtB,SAAS,CAAC7D,KAAK,EAAE+E,QAAQ,CAAC;EAC5C;EACA;EACA,MAAM1B,SAAS,GAAG,C;IAEdW,IAAI,EAAEe;EAAQ,GACXjF,WAAW,CAACuC,IAAI,EAAExC,aAAa,CAAC,G;IAGnCmE,IAAI,EAAEgB;EAAM,GACTlF,WAAW,CAACwC,EAAE,EAAEzC,aAAa,CAAC,EAEpC;EACD,MAAMyD,SAAS,GAAG6B,SAAS,CAAC5B,OAAO,CAACF,SAAS,EAAEd,UAAU,CAAC;EAE1De,SAAS,CAAC8B,QAAQ,GAAG,MAAK;IACxBD,SAAS,CAACvC,KAAK,CAACF,SAAS,GAAG,MAAM;IAClC9C,cAAc,CAACuF,SAAS,EAAE7C,EAAE,CAAC;EAC/B,CAAC;EAED;EACA;EACA6C,SAAS,CAACvC,KAAK,CAACF,SAAS,GAAG,MAAM;EAClC,OAAOY,SAAS;AAClB;AAEA,SAAS+B,aAAaA,CACpBhD,IAAmB,EACnBC,EAAmB,EACnBC,UAA+B,EAC/BP,KAAoB;EAEpB;EACAK,IAAI,CAACO,KAAK,CAAC0C,UAAU,GAAG,QAAQ;EAChC,MAAMC,CAAC,GAAGvD,KAAK,CAACK,IAAI,EAAEC,EAAE,CAACJ,MAAM,CAAC;EAChC,OAAOI,EAAE,CAACkD,GAAG,CAAC,CAACxF,KAAK,EAAE6B,CAAC,KAAI;IACzB,MAAMmC,IAAI,GAAG,IAAIrE,IAAI,CAAC;MACpBiD,KAAK,EAAAqB,MAAA,CAAAC,MAAA;QACHF,IAAI,EAAEuB,CAAC,CAAC1D,CAAC;MAAC,GACP/B,WAAW,CAACuC,IAAI,EAAExC,aAAa,CAAC;KAEtC,CAAC;IACF,OAAO+E,QAAQ,CAAC5E,KAAK,EAAEgE,IAAI,EAAEhE,KAAK,EAAEuC,UAAU,CAAC;EACjD,CAAC,CAAC;AACJ;AAEA,SAASkD,aAAaA,CACpBpD,IAAqB,EACrBC,EAAiB,EACjBC,UAA+B,EAC/BP,KAAoB;EAEpB,MAAMuD,CAAC,GAAGvD,KAAK,CAACM,EAAE,EAAED,IAAI,CAACH,MAAM,CAAC;EAChC,MAAM;IAAEwD,WAAW,GAAG,CAAC;IAAEC,aAAa,GAAG,CAAC;IAAEC,OAAO,GAAG;EAAC,CAAE,GAAGtD,EAAE,CAACM,KAAK;EACpE,MAAMS,SAAS,GAAG,CAChB;IAAEqC,WAAW,EAAE,CAAC;IAAEC,aAAa,EAAE,CAAC;IAAEC,OAAO,EAAE;EAAC,CAAE,EAChD;IAAEF,WAAW,EAAE,CAAC;IAAEC,aAAa,EAAE,CAAC;IAAEC,OAAO,EAAE,CAAC;IAAEC,MAAM,EAAE;EAAI,CAAE,EAC9D;IACEH,WAAW;IACXC,aAAa;IACbC;GACD,CACF;EACD,MAAMtC,SAAS,GAAGhB,EAAE,CAACiB,OAAO,CAACF,SAAS,EAAEd,UAAU,CAAC;EACnD,MAAMuD,UAAU,GAAGzD,IAAI,CAACmD,GAAG,CAAC,CAACxF,KAAK,EAAE6B,CAAC,KAAI;IACvC,MAAMmC,IAAI,GAAG,IAAIrE,IAAI,CAAC;MACpBiD,KAAK,EAAE;QACLoB,IAAI,EAAEuB,CAAC,CAAC1D,CAAC,CAAC;QACVkE,IAAI,EAAEzD,EAAE,CAACM,KAAK,CAACmD;;KAElB,CAAC;IACF,OAAOnB,QAAQ,CAAC5E,KAAK,EAAEA,KAAK,EAAEgE,IAAI,EAAEzB,UAAU,CAAC;EACjD,CAAC,CAAC;EACF,OAAO,CAAC,GAAGuD,UAAU,EAAExC,SAAS,CAAC;AACnC;AAEA;;;;AAIA,OAAO,MAAM0C,QAAQ,GAAyBC,OAAO,IAAI;EACvD,OAAO,CAAC5D,IAAI,EAAEC,EAAE,EAAE4D,QAAQ,KAAI;IAC5B,MAAMlE,KAAK,GAAGD,cAAc,CAACkE,OAAO,CAACjE,KAAK,CAAC;IAC3C,MAAMO,UAAU,GAAA0B,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA,KAAQgC,QAAQ,GAAKD,OAAO,CAAE;IAC9C,MAAM;MAAE/D,MAAM,EAAEiE;IAAE,CAAE,GAAG9D,IAAI;IAC3B,MAAM;MAAEH,MAAM,EAAEkE;IAAE,CAAE,GAAG9D,EAAE;IACzB,IAAK6D,EAAE,KAAK,CAAC,IAAIC,EAAE,KAAK,CAAC,IAAMD,EAAE,GAAG,CAAC,IAAIC,EAAE,GAAG,CAAE,EAAE;MAChD,MAAM,CAACC,CAAC,CAAC,GAAGhE,IAAI;MAChB,MAAM,CAACiE,CAAC,CAAC,GAAGhE,EAAE;MACd,OAAOsC,QAAQ,CAACyB,CAAC,EAAEA,CAAC,EAAEC,CAAC,EAAE/D,UAAU,CAAC;;IAEtC,IAAI4D,EAAE,KAAK,CAAC,IAAIC,EAAE,GAAG,CAAC,EAAE;MACtB,MAAM,CAACC,CAAC,CAAC,GAAGhE,IAAI;MAChB,OAAOgD,aAAa,CAACgB,CAAC,EAAE/D,EAAE,EAAEC,UAAU,EAAEP,KAAK,CAAC;;IAEhD,IAAImE,EAAE,GAAG,CAAC,IAAIC,EAAE,KAAK,CAAC,EAAE;MACtB,MAAM,CAACE,CAAC,CAAC,GAAGhE,EAAE;MACd,OAAOmD,aAAa,CAACpD,IAAI,EAAEiE,CAAC,EAAE/D,UAAU,EAAEP,KAAK,CAAC;;IAElD,OAAO,IAAI;EACb,CAAC;AACH,CAAC;AAEDgE,QAAQ,CAACO,KAAK,GAAG,EAAE"},"metadata":{},"sourceType":"module"}