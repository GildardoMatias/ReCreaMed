{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Gil\\\\Documents\\\\ReCreaMed\\\\src\\\\escalas\\\\dolor_2\\\\dolor2_selector.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState, useEffect } from \"react\";\nimport \"./PainZoneSelector.css\";\nimport logo from '../../assets/Logo.jpeg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PainZoneSelector = () => {\n  _s();\n  const canvasRef = useRef(null);\n  const [point, setPoint] = useState(null);\n  const [arrows, setArrows] = useState([]);\n  const [drawingArrow, setDrawingArrow] = useState(false);\n  const [startPoint, setStartPoint] = useState(null);\n  const handleClick = event => {\n    if (drawingArrow) {\n      const rect = event.target.getBoundingClientRect();\n      const endPoint = {\n        x: event.clientX - rect.left,\n        y: event.clientY - rect.top\n      };\n      setArrows([...arrows, {\n        start: startPoint,\n        end: endPoint\n      }]);\n      setDrawingArrow(false);\n    } else {\n      const rect = event.target.getBoundingClientRect();\n      const x = event.clientX - rect.left;\n      const y = event.clientY - rect.top;\n      setPoint({\n        x,\n        y\n      });\n    }\n  };\n  const handleArrowStart = event => {\n    const rect = event.target.getBoundingClientRect();\n    const startPoint = {\n      x: event.clientX - rect.left,\n      y: event.clientY - rect.top\n    };\n    setStartPoint(startPoint);\n    setDrawingArrow(true);\n  };\n  const draw = context => {\n    context.clearRect(0, 0, context.canvas.width, context.canvas.height);\n    if (point) {\n      context.beginPath();\n      context.arc(point.x, point.y, 10, 0, 2 * Math.PI);\n      context.fillStyle = \"rgba(255, 0, 0, 0.5)\";\n      context.fill();\n      context.stroke();\n    }\n    arrows.forEach(({\n      start,\n      end\n    }) => {\n      context.beginPath();\n      context.moveTo(start.x, start.y);\n      context.lineTo(end.x, end.y);\n      context.strokeStyle = \"blue\";\n      context.lineWidth = 2;\n      context.stroke();\n\n      // Draw arrowhead\n      const angle = Math.atan2(end.y - start.y, end.x - start.x);\n      context.beginPath();\n      context.moveTo(end.x, end.y);\n      context.lineTo(end.x - 10 * Math.cos(angle - Math.PI / 6), end.y - 10 * Math.sin(angle - Math.PI / 6));\n      context.lineTo(end.x - 10 * Math.cos(angle + Math.PI / 6), end.y - 10 * Math.sin(angle + Math.PI / 6));\n      context.closePath();\n      context.fillStyle = \"blue\";\n      context.fill();\n    });\n  };\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const context = canvas.getContext(\"2d\");\n    draw(context);\n  }, [point, arrows]);\n  const handleSave = () => {\n    // Guardar las coordenadas en la base de datos\n    console.log(\"Selected Point:\", point);\n    console.log(\"Arrows:\", arrows);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pain-zone-selector\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Seleccione su zona de dolor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"canvas-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        alt: \"Cuerpo humano\",\n        className: \"background-image\",\n        onLoad: () => {\n          const canvas = canvasRef.current;\n          const context = canvas.getContext(\"2d\");\n          draw(context);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        width: 800,\n        height: 600,\n        onClick: handleClick,\n        onDoubleClick: handleArrowStart\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSave,\n      children: \"Guardar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n_s(PainZoneSelector, \"QubmpZECh1RXwDLU2UnVcnNfsXo=\");\n_c = PainZoneSelector;\nexport default PainZoneSelector;\nvar _c;\n$RefreshReg$(_c, \"PainZoneSelector\");","map":{"version":3,"names":["React","useRef","useState","useEffect","logo","jsxDEV","_jsxDEV","PainZoneSelector","_s","canvasRef","point","setPoint","arrows","setArrows","drawingArrow","setDrawingArrow","startPoint","setStartPoint","handleClick","event","rect","target","getBoundingClientRect","endPoint","x","clientX","left","y","clientY","top","start","end","handleArrowStart","draw","context","clearRect","canvas","width","height","beginPath","arc","Math","PI","fillStyle","fill","stroke","forEach","moveTo","lineTo","strokeStyle","lineWidth","angle","atan2","cos","sin","closePath","current","getContext","handleSave","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","onLoad","ref","onClick","onDoubleClick","_c","$RefreshReg$"],"sources":["C:/Users/Gil/Documents/ReCreaMed/src/escalas/dolor_2/dolor2_selector.jsx"],"sourcesContent":["import React, { useRef, useState, useEffect } from \"react\";\r\nimport \"./PainZoneSelector.css\";\r\nimport logo from '../../assets/Logo.jpeg'\r\n\r\nconst PainZoneSelector = () => {\r\n  const canvasRef = useRef(null);\r\n  const [point, setPoint] = useState(null);\r\n  const [arrows, setArrows] = useState([]);\r\n  const [drawingArrow, setDrawingArrow] = useState(false);\r\n  const [startPoint, setStartPoint] = useState(null);\r\n\r\n  const handleClick = (event) => {\r\n    if (drawingArrow) {\r\n      const rect = event.target.getBoundingClientRect();\r\n      const endPoint = { x: event.clientX - rect.left, y: event.clientY - rect.top };\r\n      setArrows([...arrows, { start: startPoint, end: endPoint }]);\r\n      setDrawingArrow(false);\r\n    } else {\r\n      const rect = event.target.getBoundingClientRect();\r\n      const x = event.clientX - rect.left;\r\n      const y = event.clientY - rect.top;\r\n      setPoint({ x, y });\r\n    }\r\n  };\r\n\r\n  const handleArrowStart = (event) => {\r\n    const rect = event.target.getBoundingClientRect();\r\n    const startPoint = { x: event.clientX - rect.left, y: event.clientY - rect.top };\r\n    setStartPoint(startPoint);\r\n    setDrawingArrow(true);\r\n  };\r\n\r\n  const draw = (context) => {\r\n    context.clearRect(0, 0, context.canvas.width, context.canvas.height);\r\n    \r\n    if (point) {\r\n      context.beginPath();\r\n      context.arc(point.x, point.y, 10, 0, 2 * Math.PI);\r\n      context.fillStyle = \"rgba(255, 0, 0, 0.5)\";\r\n      context.fill();\r\n      context.stroke();\r\n    }\r\n    \r\n    arrows.forEach(({ start, end }) => {\r\n      context.beginPath();\r\n      context.moveTo(start.x, start.y);\r\n      context.lineTo(end.x, end.y);\r\n      context.strokeStyle = \"blue\";\r\n      context.lineWidth = 2;\r\n      context.stroke();\r\n      \r\n      // Draw arrowhead\r\n      const angle = Math.atan2(end.y - start.y, end.x - start.x);\r\n      context.beginPath();\r\n      context.moveTo(end.x, end.y);\r\n      context.lineTo(end.x - 10 * Math.cos(angle - Math.PI / 6), end.y - 10 * Math.sin(angle - Math.PI / 6));\r\n      context.lineTo(end.x - 10 * Math.cos(angle + Math.PI / 6), end.y - 10 * Math.sin(angle + Math.PI / 6));\r\n      context.closePath();\r\n      context.fillStyle = \"blue\";\r\n      context.fill();\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    const context = canvas.getContext(\"2d\");\r\n    draw(context);\r\n  }, [point, arrows]);\r\n\r\n  const handleSave = () => {\r\n    // Guardar las coordenadas en la base de datos\r\n    console.log(\"Selected Point:\", point);\r\n    console.log(\"Arrows:\", arrows);\r\n  };\r\n\r\n  return (\r\n    <div className=\"pain-zone-selector\">\r\n      <h3>Seleccione su zona de dolor</h3>\r\n      <div className=\"canvas-container\">\r\n        <img\r\n          src={logo}\r\n          alt=\"Cuerpo humano\"\r\n          className=\"background-image\"\r\n          onLoad={() => {\r\n            const canvas = canvasRef.current;\r\n            const context = canvas.getContext(\"2d\");\r\n            draw(context);\r\n          }}\r\n        />\r\n        <canvas\r\n          ref={canvasRef}\r\n          width={800}\r\n          height={600}\r\n          onClick={handleClick}\r\n          onDoubleClick={handleArrowStart}\r\n        />\r\n      </div>\r\n      <button onClick={handleSave}>Guardar</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PainZoneSelector;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}