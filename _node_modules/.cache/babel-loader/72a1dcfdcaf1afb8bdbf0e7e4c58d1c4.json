{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Gil\\\\Documents\\\\ReCreaMed\\\\src\\\\recepcionViews\\\\ingresos\\\\ingresos.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Table, Tag, Button, Typography, Card, Modal, Row, Col } from 'antd';\nimport { CheckCircleTwoTone } from '@ant-design/icons';\nimport { getData, usuario, sendDataBody, ids_hospitales, deleteData } from '../../resources';\nimport CreateBalance from './create-ingreso';\nimport Loading from '../../loading';\nimport Ticket from './ticket-for-print';\nimport moment from 'moment/moment';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Text\n} = Typography;\nexport default function Ingresos() {\n  _s();\n  const [loading, setLoading] = useState(true);\n  const [medicosData, setMedicosData] = useState({}); // Populate the main select component\n  const [medico, setMedico] = useState(null);\n  const [ingresosData, setIngresosData] = useState([]);\n  const [ingresoForEdit, setIngresoForEdit] = useState({});\n  const [ingresoForPrint, setIngresoForPrint] = useState([]);\n\n  // Select logo for print in receta. Switches the modal view into select logo hospital/pdf recipe for print\n  const [logoHospital, setLogoHospital] = useState(null);\n  const [nombreHospital, setNombreHospital] = useState(null);\n  const [isLogoSelected, setIsLogoSelected] = useState(false);\n\n  // Modal For Edit Balance\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const showModal = () => {\n    setIsModalOpen(true);\n  };\n\n  // Modal For Ticket\n  const [isTicketModalOpen, setIsTicketModalOpen] = useState(false);\n  const showTicketModal = () => {\n    setIsTicketModalOpen(true);\n  };\n  const handleTicketOk = () => {\n    setIsTicketModalOpen(false);\n    setIsLogoSelected(false);\n  };\n  const handleTicketCancel = () => {\n    setIsTicketModalOpen(false);\n    setIsLogoSelected(false);\n  };\n\n  // Modal For Add/Edit Gasto\n  const [isEgresoModalOpen, setIsEgresoModalOpen] = useState(false);\n  const showEgresoModal = () => {\n    setIsEgresoModalOpen(true);\n  };\n\n  // Toggles between for medic/for hospital\n  const [viewTipeMedics, setViewTipeMedics] = useState(false);\n  useEffect(() => {\n    getIngresos();\n  }, []);\n  const getIngresos = async () => {\n    const medicos = await sendDataBody('users/getMany/hospitals', {\n      ids_hospitales: ids_hospitales\n    });\n    medicos.forEach(m => {\n      m.label = m.name;\n      m.value = m._id;\n    }); // to pass to create modal\n    setMedicosData(medicos); // to pass to create modal\n\n    const promises = medicos.map(medico => getData(`balances/medico/${medico._id}`));\n    Promise.all(promises).then(resultados => {\n      const ingresos = resultados.flat(); // concatenar todos los arrays de ingresos\n      console.log(ingresos);\n      // Doctor is for details, medico is for edit. Usuario is for details, paciente id for Edit\n      ingresos.forEach(i => {\n        i.doctor = i.medico;\n        i.medico = i.medico._id;\n        if (i.paciente) {\n          i.usuario = i.paciente;\n          i.paciente = i.paciente._id;\n        }\n      });\n      setIngresosData(ingresos.sort((a, b) => a.fecha_hora < b.fecha_hora));\n      setLoading(false);\n    }).catch(error => {\n      console.error(error);\n    });\n  };\n  const handleEditIngreso = record => {\n    record.fecha_hora = moment.utc(record.fecha_hora);\n    setIngresoForEdit(record);\n    showModal();\n  };\n  const columns = [{\n    title: 'MÃ©dico',\n    dataIndex: 'medico',\n    key: 'createdAt',\n    render: (_, {\n      doctor\n    }) => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: doctor.name\n      }, void 0, false);\n    }\n  }, {\n    title: 'Tipo',\n    dataIndex: 'tipo',\n    key: 'tipo',\n    render: (_, {\n      tipo\n    }) => {\n      let color = tipo && tipo === 'ingreso' ? 'geekblue' : 'volcano';\n      return tipo ? /*#__PURE__*/_jsxDEV(Tag, {\n        color: color,\n        children: tipo.toUpperCase()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 31\n      }, this) : /*#__PURE__*/_jsxDEV(Tag, {\n        color: color,\n        children: \"Indefinido\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 80\n      }, this);\n    }\n  }, {\n    title: 'Fecha',\n    dataIndex: 'fecha_hora',\n    key: 'fecha_hora',\n    render: (_, {\n      fecha_hora\n    }) => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: new Date(fecha_hora).toLocaleString()\n      }, void 0, false);\n    },\n    defaultSortOrder: 'descend',\n    sorter: (a, b) => a.fecha_hora > b.fecha_hora\n  }, {\n    title: 'Monto',\n    dataIndex: 'monto',\n    key: 'monto',\n    render: (_, {\n      monto\n    }) => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [\"$\", monto]\n      }, void 0, true);\n    }\n  }, {\n    title: 'Abono',\n    dataIndex: 'abono',\n    key: 'abono',\n    render: (_, {\n      abono\n    }) => {\n      return abono && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [\"$\", abono]\n      }, void 0, true);\n    }\n  }, {\n    title: 'Adeudo',\n    dataIndex: 'adeudo',\n    key: 'adeudo',\n    render: (_, record) => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [\"$\", record.monto - record.abono]\n      }, void 0, true);\n    }\n  }, {\n    title: 'Forma de pago',\n    key: 'forma_de_pago',\n    dataIndex: 'forma_de_pago',\n    render: (_, {\n      forma_de_pago\n    }) => {\n      let color = forma_de_pago === 'efectivo' ? 'green' : 'geekblue';\n      return /*#__PURE__*/_jsxDEV(Tag, {\n        color: color,\n        children: forma_de_pago.toUpperCase()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 24\n      }, this);\n    }\n  }, {\n    title: 'Paciente',\n    key: 'usuario',\n    dataIndex: 'usuario',\n    render: (_, record) => {\n      // if (record.cita) return <>{record.cita.usuario}</>\n      if (record.cita) return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: record.cita.usuario.name\n      }, void 0, false); //when populate is ready\n      else if (record.usuario) return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: record.usuario.name\n      }, void 0, false);else return /*#__PURE__*/_jsxDEV(Text, {\n        type: \"secondary\",\n        children: \" Sin Paciente\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 29\n      }, this);\n    }\n  }, {\n    title: 'Factura',\n    key: 'Factura',\n    dataIndex: 'factura',\n    render: (_, {\n      factura\n    }) => {\n      return factura && /*#__PURE__*/_jsxDEV(CheckCircleTwoTone, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 61\n      }, this);\n    }\n  }, {\n    title: 'Estado',\n    key: 'Estado',\n    dataIndex: 'estado',\n    // render: (_, { estado }) => {\n    //     let color = estado === 'pagado' ? 'geekblue' : 'green';\n    //     if (estado === 'pendiente' || estado === 'sin pagar') color = 'volcano';\n    //     return <Tag color={color}> {estado.toUpperCase()} </Tag>\n    // }\n    render: (_, {\n      abono,\n      monto\n    }) => {\n      const pagado = abono === monto;\n      let color = pagado ? 'green' : 'volcano';\n      return /*#__PURE__*/_jsxDEV(Tag, {\n        color: color,\n        children: [\" \", pagado ? 'PAGADO' : 'PENDIENTE', \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 24\n      }, this);\n    }\n  }, {\n    title: 'Acciones',\n    key: 'Editar',\n    render: (_, record) => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        gap: 2,\n        flexDirection: 'column'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        size: \"small\",\n        onClick: () => handleEditIngreso(record),\n        children: \"Editar Estado\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        size: \"small\",\n        onClick: () => {\n          setIngresoForPrint(record);\n          showTicketModal();\n        },\n        children: \"Imprimir Nota\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 36\n    }, this)\n  }];\n  const ingresos = [{\n    id: 1,\n    product: 'Ketamina 1',\n    quantity: 1,\n    price: 1200\n  }];\n  if (loading) return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 175,\n    columnNumber: 25\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mainContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fila\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Ingresos de todos los medicos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: showModal,\n        type: \"primary\",\n        style: {\n          marginBottom: 22\n        },\n        children: \"Agregar Nuevo Ingreso\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      columns: columns,\n      dataSource: ingresosData\n      // scroll={{ x: 950, y: \"calc(100vh - 220px)\" }}\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: 200\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CreateBalance, {\n      tipo: \"ingreso\",\n      balanceForEdit: ingresoForEdit,\n      setBalanceForEdit: setIngresoForEdit,\n      setIsModalOpen: setIsModalOpen,\n      isModalOpen: isModalOpen,\n      getIngresos: getIngresos,\n      medico: medico,\n      medicosData: medicosData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      title: \"Imprimir Nota de Venta\",\n      open: isTicketModalOpen,\n      onOk: handleTicketOk,\n      onCancel: handleTicketCancel,\n      width: 600,\n      children: isLogoSelected ?\n      /*#__PURE__*/\n      // Si ya hay logo seleccionado, se pasa a la receta y se muestra en pdf\n      _jsxDEV(Ticket, {\n        ingreso: ingresoForPrint,\n        logo: 'https://api.recreamed.com/images/' + logoHospital,\n        hospital: nombreHospital,\n        seller: \"M\\xE9dico: \",\n        buyer: \"Paciente: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          title: \"Selecciona un hospital\",\n          bordered: false,\n          children: usuario.horarios.map(h => {\n            return /*#__PURE__*/_jsxDEV(Card.Grid, {\n              style: {\n                width: '100%'\n              },\n              onClick: () => {\n                console.log(h.sucursal);\n                setLogoHospital(h.sucursal.logo);\n                setNombreHospital(h.sucursal.nombre);\n                setIsLogoSelected(true);\n              },\n              children: /*#__PURE__*/_jsxDEV(Row, {\n                align: \"middle\",\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  span: 6,\n                  offset: 4,\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    width: 64,\n                    src: 'https://api.recreamed.com/images/' + h.sucursal.logo,\n                    alt: \"Logo\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 211,\n                    columnNumber: 74\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 211,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  span: 10,\n                  children: [h.sucursal.nombre, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 212,\n                    columnNumber: 84\n                  }, this), \" \", h.horario]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 212,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 45\n              }, this)\n            }, h._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 48\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 178,\n    columnNumber: 9\n  }, this);\n}\n_s(Ingresos, \"sjcMlr4LxGeJUn/clxke7J+gEcE=\");\n_c = Ingresos;\nvar _c;\n$RefreshReg$(_c, \"Ingresos\");","map":{"version":3,"names":["React","useState","useEffect","Table","Tag","Button","Typography","Card","Modal","Row","Col","CheckCircleTwoTone","getData","usuario","sendDataBody","ids_hospitales","deleteData","CreateBalance","Loading","Ticket","moment","Fragment","_Fragment","jsxDEV","_jsxDEV","Text","Ingresos","_s","loading","setLoading","medicosData","setMedicosData","medico","setMedico","ingresosData","setIngresosData","ingresoForEdit","setIngresoForEdit","ingresoForPrint","setIngresoForPrint","logoHospital","setLogoHospital","nombreHospital","setNombreHospital","isLogoSelected","setIsLogoSelected","isModalOpen","setIsModalOpen","showModal","isTicketModalOpen","setIsTicketModalOpen","showTicketModal","handleTicketOk","handleTicketCancel","isEgresoModalOpen","setIsEgresoModalOpen","showEgresoModal","viewTipeMedics","setViewTipeMedics","getIngresos","medicos","forEach","m","label","name","value","_id","promises","map","Promise","all","then","resultados","ingresos","flat","console","log","i","doctor","paciente","sort","a","b","fecha_hora","catch","error","handleEditIngreso","record","utc","columns","title","dataIndex","key","render","_","children","tipo","color","toUpperCase","fileName","_jsxFileName","lineNumber","columnNumber","Date","toLocaleString","defaultSortOrder","sorter","monto","abono","forma_de_pago","cita","type","factura","pagado","style","display","gap","flexDirection","size","onClick","id","product","quantity","price","className","marginBottom","dataSource","height","balanceForEdit","setBalanceForEdit","open","onOk","onCancel","width","ingreso","logo","hospital","seller","buyer","bordered","horarios","h","Grid","sucursal","nombre","align","span","offset","src","alt","horario","_c","$RefreshReg$"],"sources":["C:/Users/Gil/Documents/ReCreaMed/src/recepcionViews/ingresos/ingresos.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Table, Tag, Button, Typography, Card, Modal, Row, Col } from 'antd';\r\nimport { CheckCircleTwoTone } from '@ant-design/icons'\r\nimport { getData, usuario, sendDataBody, ids_hospitales, deleteData } from '../../resources';\r\nimport CreateBalance from './create-ingreso';\r\nimport Loading from '../../loading';\r\nimport Ticket from './ticket-for-print';\r\nimport moment from 'moment/moment';\r\n\r\nconst { Text } = Typography;\r\n\r\nexport default function Ingresos() {\r\n    const [loading, setLoading] = useState(true)\r\n    const [medicosData, setMedicosData] = useState({}) // Populate the main select component\r\n    const [medico, setMedico] = useState(null)\r\n    const [ingresosData, setIngresosData] = useState([])\r\n    const [ingresoForEdit, setIngresoForEdit] = useState({})\r\n    const [ingresoForPrint, setIngresoForPrint] = useState([])\r\n\r\n    // Select logo for print in receta. Switches the modal view into select logo hospital/pdf recipe for print\r\n    const [logoHospital, setLogoHospital] = useState(null)\r\n    const [nombreHospital, setNombreHospital] = useState(null)\r\n    const [isLogoSelected, setIsLogoSelected] = useState(false)\r\n\r\n    // Modal For Edit Balance\r\n    const [isModalOpen, setIsModalOpen] = useState(false);\r\n    const showModal = () => { setIsModalOpen(true) };\r\n\r\n    // Modal For Ticket\r\n    const [isTicketModalOpen, setIsTicketModalOpen] = useState(false);\r\n    const showTicketModal = () => { setIsTicketModalOpen(true) };\r\n    const handleTicketOk = () => { setIsTicketModalOpen(false); setIsLogoSelected(false) };\r\n    const handleTicketCancel = () => { setIsTicketModalOpen(false); setIsLogoSelected(false) };\r\n\r\n    // Modal For Add/Edit Gasto\r\n    const [isEgresoModalOpen, setIsEgresoModalOpen] = useState(false)\r\n    const showEgresoModal = () => { setIsEgresoModalOpen(true) };\r\n\r\n    // Toggles between for medic/for hospital\r\n    const [viewTipeMedics, setViewTipeMedics] = useState(false)\r\n\r\n    useEffect(() => {\r\n        getIngresos()\r\n    }, [])\r\n\r\n    const getIngresos = async () => {\r\n        const medicos = await sendDataBody('users/getMany/hospitals', { ids_hospitales: ids_hospitales })\r\n\r\n        medicos.forEach(m => { m.label = m.name; m.value = m._id; })// to pass to create modal\r\n        setMedicosData(medicos) // to pass to create modal\r\n\r\n        const promises = medicos.map(medico => getData(`balances/medico/${medico._id}`));\r\n\r\n        Promise.all(promises)\r\n            .then(resultados => {\r\n                const ingresos = resultados.flat(); // concatenar todos los arrays de ingresos\r\n                console.log(ingresos);\r\n                // Doctor is for details, medico is for edit. Usuario is for details, paciente id for Edit\r\n                ingresos.forEach((i) => { i.doctor = i.medico; i.medico = i.medico._id; if (i.paciente) { i.usuario = i.paciente; i.paciente = i.paciente._id; } })\r\n                setIngresosData(ingresos.sort((a, b) => a.fecha_hora < b.fecha_hora))\r\n                setLoading(false)\r\n            })\r\n            .catch(error => {\r\n                console.error(error);\r\n            });\r\n    }\r\n\r\n    const handleEditIngreso = (record) => {\r\n        record.fecha_hora = moment.utc(record.fecha_hora)\r\n        setIngresoForEdit(record);\r\n        showModal()\r\n    }\r\n\r\n    const columns = [\r\n        {\r\n            title: 'MÃ©dico',\r\n            dataIndex: 'medico',\r\n            key: 'createdAt',\r\n            render: (_, { doctor }) => { return <>{doctor.name}</> }\r\n        },\r\n        {\r\n            title: 'Tipo',\r\n            dataIndex: 'tipo',\r\n            key: 'tipo',\r\n            render: (_, { tipo }) => {\r\n                let color = (tipo && tipo === 'ingreso') ? 'geekblue' : 'volcano';\r\n                return tipo ? <Tag color={color} >{tipo.toUpperCase()}</Tag> : <Tag color={color}>Indefinido</Tag>\r\n            },\r\n        },\r\n        {\r\n            title: 'Fecha',\r\n            dataIndex: 'fecha_hora',\r\n            key: 'fecha_hora',\r\n            render: (_, { fecha_hora }) => { return <>{new Date(fecha_hora).toLocaleString()}</> },\r\n            defaultSortOrder: 'descend',\r\n            sorter: (a, b) => a.fecha_hora > b.fecha_hora,\r\n        },\r\n        {\r\n            title: 'Monto',\r\n            dataIndex: 'monto',\r\n            key: 'monto',\r\n            render: (_, { monto }) => { return <>${monto}</> }\r\n        },\r\n        {\r\n            title: 'Abono',\r\n            dataIndex: 'abono',\r\n            key: 'abono',\r\n            render: (_, { abono }) => { return abono && <>${abono}</> }\r\n\r\n        },\r\n        {\r\n            title: 'Adeudo',\r\n            dataIndex: 'adeudo',\r\n            key: 'adeudo',\r\n            render: (_, record) => { return <>${record.monto - record.abono}</> }\r\n        },\r\n        {\r\n            title: 'Forma de pago',\r\n            key: 'forma_de_pago',\r\n            dataIndex: 'forma_de_pago',\r\n            render: (_, { forma_de_pago }) => {\r\n                let color = forma_de_pago === 'efectivo' ? 'green' : 'geekblue';\r\n                return <Tag color={color} >{forma_de_pago.toUpperCase()}</Tag>\r\n            },\r\n        },\r\n        {\r\n            title: 'Paciente',\r\n            key: 'usuario',\r\n            dataIndex: 'usuario',\r\n            render: (_, record) => {\r\n                // if (record.cita) return <>{record.cita.usuario}</>\r\n                if (record.cita) return <>{record.cita.usuario.name}</> //when populate is ready\r\n                else if (record.usuario) return <>{record.usuario.name}</>\r\n                else return <Text type=\"secondary\"> Sin Paciente</Text>\r\n            }\r\n        },\r\n        {\r\n            title: 'Factura',\r\n            key: 'Factura',\r\n            dataIndex: 'factura',\r\n            render: (_, { factura }) => { return factura && <CheckCircleTwoTone /> }\r\n\r\n        },\r\n        {\r\n            title: 'Estado',\r\n            key: 'Estado',\r\n            dataIndex: 'estado',\r\n            // render: (_, { estado }) => {\r\n            //     let color = estado === 'pagado' ? 'geekblue' : 'green';\r\n            //     if (estado === 'pendiente' || estado === 'sin pagar') color = 'volcano';\r\n            //     return <Tag color={color}> {estado.toUpperCase()} </Tag>\r\n            // }\r\n            render: (_, { abono, monto }) => {\r\n                const pagado = abono === monto;\r\n                let color = pagado ? 'green' : 'volcano';\r\n                return <Tag color={color}> {pagado ? 'PAGADO' : 'PENDIENTE'} </Tag>\r\n            }\r\n\r\n        },\r\n        {\r\n            title: 'Acciones',\r\n            key: 'Editar',\r\n            render: (_, record) => <div style={{ display: 'flex', gap: 2, flexDirection: 'column' }}>\r\n                {/* <Button onClick={() => { deleteData(`balances/remove/${record._id}`).then(()=>getIngresos()) }}>Eliminar</Button> */}\r\n                <Button size='small' onClick={() => handleEditIngreso(record)}>Editar Estado</Button>\r\n                <Button size='small' onClick={() => { setIngresoForPrint(record); showTicketModal() }}>Imprimir Nota</Button>\r\n            </div>\r\n        },\r\n    ];\r\n\r\n    const ingresos = [\r\n        { id: 1, product: 'Ketamina 1', quantity: 1, price: 1200 },\r\n    ];\r\n\r\n    if (loading) return <Loading />\r\n\r\n    return (\r\n        <div className='mainContainer'>\r\n\r\n            <div className='fila'>\r\n                <h4>Ingresos de todos los medicos</h4>\r\n                <Button onClick={showModal} type='primary' style={{ marginBottom: 22 }} >Agregar Nuevo Ingreso</Button>\r\n                {/* <Button ghost onClick={showEgresoModal} type='primary' style={{ marginBottom: 22, marginLeft: 6 }} >Agregar Nuevo Gasto</Button> */}\r\n            </div>\r\n\r\n            <Table columns={columns} dataSource={ingresosData}\r\n            // scroll={{ x: 950, y: \"calc(100vh - 220px)\" }}\r\n            />\r\n\r\n            <div style={{ height: 200 }}></div>\r\n\r\n            {/* Ingreso */}\r\n            <CreateBalance tipo='ingreso' balanceForEdit={ingresoForEdit} setBalanceForEdit={setIngresoForEdit} setIsModalOpen={setIsModalOpen} isModalOpen={isModalOpen} getIngresos={getIngresos} medico={medico} medicosData={medicosData} />\r\n\r\n            {/* Gasto */}\r\n            {/* <CreateBalance tipo='egreso' setBalanceForEdit={setIngresoForEdit} setIsModalOpen={setIsEgresoModalOpen} isModalOpen={isEgresoModalOpen} getIngresos={getIngresos} medicosData={medicosData} /> */}\r\n\r\n            {/* Ticket */}\r\n            <Modal title=\"Imprimir Nota de Venta\" open={isTicketModalOpen} onOk={handleTicketOk} onCancel={handleTicketCancel} width={600}>\r\n\r\n                {\r\n                    isLogoSelected ? // Si ya hay logo seleccionado, se pasa a la receta y se muestra en pdf\r\n                        <Ticket ingreso={ingresoForPrint} logo={'https://api.recreamed.com/images/' + logoHospital} hospital={nombreHospital} seller='MÃ©dico: ' buyer='Paciente: ' />\r\n                        :\r\n                        <div>\r\n                            <Card title='Selecciona un hospital' bordered={false}>\r\n                                {\r\n                                    usuario.horarios.map((h) => {\r\n                                        return <Card.Grid style={{ width: '100%' }} onClick={() => { console.log(h.sucursal); setLogoHospital(h.sucursal.logo); setNombreHospital(h.sucursal.nombre); setIsLogoSelected(true) }} key={h._id}>\r\n                                            <Row align=\"middle\">\r\n                                                <Col span={6} offset={4}><img width={64} src={'https://api.recreamed.com/images/' + h.sucursal.logo} alt=\"Logo\" /></Col>\r\n                                                <Col span={10}>{h.sucursal.nombre} <br /> {h.horario}</Col>\r\n                                            </Row>\r\n                                        </Card.Grid>\r\n                                    })\r\n                                }\r\n                            </Card>\r\n                        </div>\r\n                }\r\n\r\n            </Modal>\r\n        </div >\r\n    )\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}