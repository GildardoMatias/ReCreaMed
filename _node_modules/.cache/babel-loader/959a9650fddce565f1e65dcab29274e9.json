{"ast":null,"code":"import { uuid, toArray } from './util';\nfunction formatCSSText(style) {\n  const content = style.getPropertyValue('content');\n  return \"\".concat(style.cssText, \" content: '\").concat(content.replace(/'|\"/g, ''), \"';\");\n}\nfunction formatCSSProperties(style) {\n  return toArray(style).map(name => {\n    const value = style.getPropertyValue(name);\n    const priority = style.getPropertyPriority(name);\n    return \"\".concat(name, \": \").concat(value).concat(priority ? ' !important' : '', \";\");\n  }).join(' ');\n}\nfunction getPseudoElementStyle(className, pseudo, style) {\n  const selector = \".\".concat(className, \":\").concat(pseudo);\n  const cssText = style.cssText ? formatCSSText(style) : formatCSSProperties(style);\n  return document.createTextNode(\"\".concat(selector, \"{\").concat(cssText, \"}\"));\n}\nfunction clonePseudoElement(nativeNode, clonedNode, pseudo) {\n  const style = window.getComputedStyle(nativeNode, pseudo);\n  const content = style.getPropertyValue('content');\n  if (content === '' || content === 'none') {\n    return;\n  }\n  const className = uuid();\n  try {\n    clonedNode.className = \"\".concat(clonedNode.className, \" \").concat(className);\n  } catch (err) {\n    return;\n  }\n  const styleElement = document.createElement('style');\n  styleElement.appendChild(getPseudoElementStyle(className, pseudo, style));\n  clonedNode.appendChild(styleElement);\n}\nexport function clonePseudoElements(nativeNode, clonedNode) {\n  clonePseudoElement(nativeNode, clonedNode, ':before');\n  clonePseudoElement(nativeNode, clonedNode, ':after');\n}","map":{"version":3,"names":["uuid","toArray","formatCSSText","style","content","getPropertyValue","concat","cssText","replace","formatCSSProperties","map","name","value","priority","getPropertyPriority","join","getPseudoElementStyle","className","pseudo","selector","document","createTextNode","clonePseudoElement","nativeNode","clonedNode","window","getComputedStyle","err","styleElement","createElement","appendChild","clonePseudoElements"],"sources":["../src/clone-pseudos.ts"],"sourcesContent":[null],"mappings":"AAAA,SAASA,IAAI,EAAEC,OAAO,QAAQ,QAAQ;AAItC,SAASC,aAAaA,CAACC,KAA0B;EAC/C,MAAMC,OAAO,GAAGD,KAAK,CAACE,gBAAgB,CAAC,SAAS,CAAC;EACjD,UAAAC,MAAA,CAAUH,KAAK,CAACI,OAAO,iBAAAD,MAAA,CAAcF,OAAO,CAACI,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC;AAClE;AAEA,SAASC,mBAAmBA,CAACN,KAA0B;EACrD,OAAOF,OAAO,CAASE,KAAK,CAAC,CAC1BO,GAAG,CAAEC,IAAI,IAAI;IACZ,MAAMC,KAAK,GAAGT,KAAK,CAACE,gBAAgB,CAACM,IAAI,CAAC;IAC1C,MAAME,QAAQ,GAAGV,KAAK,CAACW,mBAAmB,CAACH,IAAI,CAAC;IAEhD,UAAAL,MAAA,CAAUK,IAAI,QAAAL,MAAA,CAAKM,KAAK,EAAAN,MAAA,CAAGO,QAAQ,GAAG,aAAa,GAAG,EAAE;EAC1D,CAAC,CAAC,CACDE,IAAI,CAAC,GAAG,CAAC;AACd;AAEA,SAASC,qBAAqBA,CAC5BC,SAAiB,EACjBC,MAAc,EACdf,KAA0B;EAE1B,MAAMgB,QAAQ,OAAAb,MAAA,CAAOW,SAAS,OAAAX,MAAA,CAAIY,MAAM,CAAE;EAC1C,MAAMX,OAAO,GAAGJ,KAAK,CAACI,OAAO,GACzBL,aAAa,CAACC,KAAK,CAAC,GACpBM,mBAAmB,CAACN,KAAK,CAAC;EAE9B,OAAOiB,QAAQ,CAACC,cAAc,IAAAf,MAAA,CAAIa,QAAQ,OAAAb,MAAA,CAAIC,OAAO,MAAG,CAAC;AAC3D;AAEA,SAASe,kBAAkBA,CACzBC,UAAa,EACbC,UAAa,EACbN,MAAc;EAEd,MAAMf,KAAK,GAAGsB,MAAM,CAACC,gBAAgB,CAACH,UAAU,EAAEL,MAAM,CAAC;EACzD,MAAMd,OAAO,GAAGD,KAAK,CAACE,gBAAgB,CAAC,SAAS,CAAC;EACjD,IAAID,OAAO,KAAK,EAAE,IAAIA,OAAO,KAAK,MAAM,EAAE;IACxC;;EAGF,MAAMa,SAAS,GAAGjB,IAAI,EAAE;EACxB,IAAI;IACFwB,UAAU,CAACP,SAAS,MAAAX,MAAA,CAAMkB,UAAU,CAACP,SAAS,OAAAX,MAAA,CAAIW,SAAS,CAAE;GAC9D,CAAC,OAAOU,GAAG,EAAE;IACZ;;EAGF,MAAMC,YAAY,GAAGR,QAAQ,CAACS,aAAa,CAAC,OAAO,CAAC;EACpDD,YAAY,CAACE,WAAW,CAACd,qBAAqB,CAACC,SAAS,EAAEC,MAAM,EAAEf,KAAK,CAAC,CAAC;EACzEqB,UAAU,CAACM,WAAW,CAACF,YAAY,CAAC;AACtC;AAEA,OAAM,SAAUG,mBAAmBA,CACjCR,UAAa,EACbC,UAAa;EAEbF,kBAAkB,CAACC,UAAU,EAAEC,UAAU,EAAE,SAAS,CAAC;EACrDF,kBAAkB,CAACC,UAAU,EAAEC,UAAU,EAAE,QAAQ,CAAC;AACtD"},"metadata":{},"sourceType":"module"}