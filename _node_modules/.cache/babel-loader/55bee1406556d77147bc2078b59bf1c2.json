{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Gil\\\\Documents\\\\ReCreaMed\\\\src\\\\escalas\\\\docs\\\\docs.encuesta.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Button, Divider, Form, Radio, message, Input } from \"antd\";\nimport { EncuestaLoading, ThanksMessage, checkEncuesta, onFinishFailed } from '../utils';\nimport { sendDataBody } from '../../resources';\nimport { docs_catalog_1, docs_catalog_2, docs_catalog_3, docs_catalog_4 } from './docs.catalog';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function DocsEncuesta({\n  idpaciente,\n  idmedico,\n  token,\n  protocolo,\n  momento\n}) {\n  _s();\n  const [encuestaNotExists, setEncuestaNotExists] = useState(null);\n  const [checking, setChecking] = useState(true);\n  const [pacienteData, setPacienteData] = useState({});\n  const [medicoData, setMedicoData] = useState({});\n  useEffect(() => {\n    init();\n  }, []);\n  function init() {\n    checkEncuesta(token, idpaciente, setPacienteData, idmedico, setMedicoData, setEncuestaNotExists, setChecking);\n  }\n  function convertirObjeto(objeto) {\n    const resultado = {};\n    for (const clave in objeto) {\n      const [categoria, indice] = clave.split('-');\n      if (!resultado[categoria]) {\n        resultado[categoria] = new Array(5).fill(0);\n      }\n      resultado[categoria][parseInt(indice) - 1] = objeto[clave];\n    }\n    return resultado;\n  }\n  const onFinish = values => {\n    console.log('Values: ', values);\n    const objetoConvertido = convertirObjeto(respuestas);\n    console.log('New', objetoConvertido);\n    const body = {\n      usuario: idpaciente,\n      medico: idmedico,\n      docs: objetoConvertido,\n      tipo: 'docs',\n      uuid: token,\n      cat: [protocolo, momento]\n    };\n    console.log('Body:', body);\n    sendDataBody('encuestas/add', body).then(rs => {\n      console.log('add enc resp', rs);\n      message.success(rs.message);\n    }).then(() => init());\n  };\n  const onDocsFinishFailed = errorInfo => {\n    console.log(errorInfo);\n    message.error('Revise el formulario y conteste todas las preguntas');\n  };\n  const onChange = e => {\n    message.info('radio checked ' + e.target.value);\n  };\n  const [respuestas, setRespuestas] = useState({});\n  const handleRespuestaChange = (n, value) => {\n    setRespuestas({\n      ...respuestas,\n      [n]: value\n    });\n  };\n  const InitialInstr = () => {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        textAlign: 'justify'\n      },\n      children: \"En este cuestionario se le pregunta sobre 4 tipos de preocupaciones diferentes que puede que usted est\\xE9 (o no est\\xE9) experimentando. Para cada tipo de preocupaci\\xF3n, hay una descripci\\xF3n del tipo de pensamientos (a veces llamados obsesiones) y conductas (a veces llamadas rituales o compulsiones) que son t\\xEDpicas de ese tipo de preocupaci\\xF3n en particular, seguida de 5 preguntas sobre sus experiencias en relaci\\xF3n con estos pensamientos y conductas. Por favor, lea cada descripci\\xF3n detenidamente y responda a las preguntas para cada categor\\xEDa bas\\xE1ndose en las experiencias que usted ha tenido durante el \\xFAltimo mes.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 16\n    }, this);\n  };\n  const Instr1 = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Preocupaciones relacionadas con g\\xE9rmenes y contaminaci\\xF3n.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 16\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          textAlign: 'justify'\n        },\n        children: [\"Ejemplos... \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 29\n        }, this), \"- Pensar o sentir que est\\xE1 contaminado/a porque estuvo en contacto con ciertos objetos o personas o estuvo cerca de ellos.  \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 41\n        }, this), \"- Sentir que est\\xE1 contaminado/a porque estuvo en ciertos lugares (por ejemplo, un cuarto de ba\\xF1o).  \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 117\n        }, this), \"- Pensar en g\\xE9rmenes, enfermedades o en la posibilidad de propagar la contaminaci\\xF3n.  \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 103\n        }, this), \"- Lavarse las manos, usar desinfectante de manos, ducharse, cambiarse de ropa o limpiar objetos contaminaci\\xF3n. \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 32\n        }, this), \"- Evitar ciertas personas, objetos o lugares debido a la contaminaci\\xF3n. \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 89\n        }, this), \"Las siguientes preguntas se refieren a sus experiencias con pensamientos y conductas relacionados con la contaminaci\\xF3n durante el \\xFAltimo mes. Recuerde que sus experiencias pueden ser diferentes de los ejemplos mencionados anteriormente. Por favor, rodee con un c\\xEDrculo el n\\xFAmero junto a su respuesta.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 16\n    }, this);\n  };\n  const Instr2 = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Preocupaciones relacionadas con causar da\\xF1o, provocar lesiones o traer mala suerte\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 16\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          textAlign: 'justify'\n        },\n        children: [\"Ejemplos... \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 29\n        }, this), \"- Dudar de si ha cometido un error que podr\\xEDa hacer que sucediera algo horrible o perjudicial. \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 112\n        }, this), \"- Pensar que pueda haber ocurrido un accidente, desastre o da\\xF1o f\\xEDsico terrible u otra desgracia y que usted no fue lo suficientemente precavido para evitarlo. \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 74\n        }, this), \"- Pensar que usted pod\\xEDa evitar alg\\xFAn da\\xF1o o desgracia haciendo las cosas de una determinada manera, contando hasta cierto n\\xFAmero o evitando determinados n\\xFAmeros o palabras \\\"negativos\\\". \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 110\n        }, this), \"- Pensar que pod\\xEDa perder algo importante que es poco probable que pierda (por ejemplo, la cartera, papeles, documentos personales...). \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 53\n        }, this), \"- Comprobar cosas como cerraduras, enchufes, la cartera, etc. m\\xE1s de lo necesario. \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 100\n        }, this), \"- Comprobar repetidamente o preguntar a otras personas para asegurarse de que no ha pasado (o no va a pasar) algo malo. \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 40\n        }, this), \"- Repasar mentalmente cosas del pasado para asegurarse de que no hizo nada malo. \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 98\n        }, this), \"- Necesitar hacer las cosas en una secuencia determinada para evitar que ocurran cosas da\\xF1inas o desastres. \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 28\n        }, this), \"- Necesitar contar hasta cierto n\\xFAmero o evitar ciertos n\\xFAmeros negativos por miedo a que ocurra algo malo. \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 23\n        }, this), \"Las siguientes preguntas se refieren a sus experiencias con los pensamientos y conductas relacionados con causar da\\xF1o o desastres durante el \\xFAltimo mes. Recuerde que sus experiencias pueden ser ligeramente diferentes de los ejemplos mencionados anteriormente. Por favor, seleccione una respuesta.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 16\n    }, this);\n  };\n  const Instr3 = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Pensamientos inaceptables/prohibidos\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 16\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          textAlign: 'justify'\n        },\n        children: [\"Ejemplos... \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 29\n        }, this), \"- Tener pensamientos desagradables sobre sexo, cosas inmorales o violencia que le vienen a la mente en contra de su voluntad. \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 40\n        }, this), \"- Pensar que podr\\xEDa hacer algo horrible, indecente o que le averg\\xFCence que en realidad usted no quiere hacer. \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 24\n        }, this), \"- Repetir una acci\\xF3n o hacer las cosas en una secuencia determinada debido a un mal pensamiento. \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 114\n        }, this), \"- Realizar mentalmente alguna acci\\xF3n o rezar para deshacerse de un pensamiento no deseado o desagradable. \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 31\n        }, this), \"- Evitar ciertas personas, lugares o situaciones que le provocan pensamientos no deseados o desagradables. \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 32\n        }, this), \"Las siguientes preguntas se refieren a sus experiencias con pensamientos no deseados que vienen a su mente en contra de su voluntad y a comportamientos dirigidos a afrontar este tipo de pensamientos durante el \\xFAltimo mes. Recuerde que sus experiencias pueden ser ligeramente diferentes de los ejemplos mencionados anteriormente. Por favor, seleccione respuesta.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 16\n    }, this);\n  };\n  const Instr4 = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Preocupaciones sobre simetr\\xEDa y la necesidad de que las cosas est\\xE9n \\u201Cbien\\u201D o \\u201Ccomo tienen que estar\\\".\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 16\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          textAlign: 'justify'\n        },\n        children: [\"Ejemplos... \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 29\n        }, this), \"- Necesitar que las cosas sean/est\\xE9n sim\\xE9tricas, uniformes, equilibradas o exactas.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 100\n        }, this), \"- Sentir que algo no est\\xE1 \\\"del todo bien\\\".\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 59\n        }, this), \"- Repetir algo del d\\xEDa a d\\xEDa hasta que tiene la sensaci\\xF3n de que lo ha hecho \\\"bien\\\" o \\\"equilibradamente\\\".\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 36\n        }, this), \"- Contar cosas absurdas (por ejemplo, azulejos del techo, el n\\xFAmero de palabras en una frase, etc.).\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 117\n        }, this), \"- Poner las cosas en un orden determinado cuando no es necesario.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 82\n        }, this), \"- Tener que repetir algo de una manera determinada hasta que est\\xE1 \\\"bien\\\".\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 90\n        }, this), \"Las siguientes preguntas se refieren a sus sensaciones de que algo no est\\xE1 \\\"bien\\\" y sus conductas dirigidas a conseguir una sensaci\\xF3n de orden, simetr\\xEDa o equilibrio durante el \\xFAltimo mes. Recuerde que sus experiencias pueden ser ligeramente diferentes a los ejemplos mencionados anteriormente. Por favor, seleccione una respuesta.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 16\n    }, this);\n  };\n  if (checking) return /*#__PURE__*/_jsxDEV(EncuestaLoading, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 178,\n    columnNumber: 26\n  }, this);\n  if (!encuestaNotExists) return /*#__PURE__*/_jsxDEV(ThanksMessage, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 180,\n    columnNumber: 36\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mainContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Encuesta DOCS\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n      children: [\"Medico: \", medicoData.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n      children: [\"Paciente: \", pacienteData.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      layout: \"vertical\",\n      name: \"docs_enc\"\n      // labelCol={{ span: 24 }}\n      // wrapperCol={{ span: 24 }}\n      ,\n      initialValues: [],\n      onFinish: onFinish,\n      onFinishFailed: onFinishFailed,\n      autoComplete: \"off\",\n      children: [/*#__PURE__*/_jsxDEV(InitialInstr, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {\n        children: \"Categoria 1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Instr1, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 17\n      }, this), docs_catalog_1.map((pregunta, i) => /*#__PURE__*/_jsxDEV(Form.Item, {\n        name: i,\n        label: pregunta.pregunta,\n        rules: [{\n          required: true,\n          message: 'Seleccione una respuesta'\n        }],\n        children: /*#__PURE__*/_jsxDEV(Radio.Group, {\n          onChange: e => handleRespuestaChange(pregunta.n, e.target.value),\n          value: respuestas[pregunta.n],\n          children: pregunta.respuestas.map((respuesta, index) => /*#__PURE__*/_jsxDEV(Radio, {\n            value: index,\n            children: respuesta\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 25\n        }, this)\n      }, pregunta.n, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {\n        children: \"Categoria 2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Instr2, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 17\n      }, this), docs_catalog_2.map((pregunta, ind) => /*#__PURE__*/_jsxDEV(Form.Item, {\n        name: ind + 5,\n        label: pregunta.pregunta,\n        rules: [{\n          required: true,\n          message: 'Seleccione una respuesta'\n        }],\n        children: /*#__PURE__*/_jsxDEV(Radio.Group, {\n          onChange: e => handleRespuestaChange(pregunta.n, e.target.value),\n          value: respuestas[pregunta.n],\n          children: pregunta.respuestas.map((respuesta, index) => /*#__PURE__*/_jsxDEV(Radio, {\n            value: index,\n            children: respuesta\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 25\n        }, this)\n      }, pregunta.n, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {\n        children: \"Categoria 3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Instr3, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 17\n      }, this), docs_catalog_3.map((pregunta, i) => /*#__PURE__*/_jsxDEV(Form.Item, {\n        name: i + 10,\n        label: pregunta.pregunta,\n        rules: [{\n          required: true,\n          message: 'Seleccione una respuesta'\n        }],\n        children: /*#__PURE__*/_jsxDEV(Radio.Group, {\n          onChange: e => handleRespuestaChange(pregunta.n, e.target.value),\n          value: respuestas[pregunta.n],\n          children: pregunta.respuestas.map((respuesta, index) => /*#__PURE__*/_jsxDEV(Radio, {\n            value: index,\n            children: respuesta\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 25\n        }, this)\n      }, pregunta.n, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {\n        children: \"Categoria 4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Instr4, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 17\n      }, this), docs_catalog_4.map((pregunta, i) => /*#__PURE__*/_jsxDEV(Form.Item, {\n        name: i + 15,\n        label: pregunta.pregunta,\n        rules: [{\n          required: true,\n          message: 'Seleccione una respuesta'\n        }],\n        children: /*#__PURE__*/_jsxDEV(Radio.Group, {\n          onChange: e => handleRespuestaChange(pregunta.n, e.target.value),\n          value: respuestas[pregunta.n],\n          children: pregunta.respuestas.map((respuesta, index) => /*#__PURE__*/_jsxDEV(Radio, {\n            value: index,\n            children: respuesta\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 25\n        }, this)\n      }, pregunta.n, false, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(Form.Item, {\n        wrapperCol: {\n          offset: 8,\n          span: 16\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          form: \"docs_enc\",\n          type: \"primary\",\n          htmlType: \"submit\",\n          children: \"Enviar respuestas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 182,\n    columnNumber: 9\n  }, this);\n}\n_s(DocsEncuesta, \"oLK1Ngm9szF6nahZ8nNcOjwhpwM=\");\n_c = DocsEncuesta;\nvar _c;\n$RefreshReg$(_c, \"DocsEncuesta\");","map":{"version":3,"names":["React","useEffect","useState","Button","Divider","Form","Radio","message","Input","EncuestaLoading","ThanksMessage","checkEncuesta","onFinishFailed","sendDataBody","docs_catalog_1","docs_catalog_2","docs_catalog_3","docs_catalog_4","jsxDEV","_jsxDEV","DocsEncuesta","idpaciente","idmedico","token","protocolo","momento","_s","encuestaNotExists","setEncuestaNotExists","checking","setChecking","pacienteData","setPacienteData","medicoData","setMedicoData","init","convertirObjeto","objeto","resultado","clave","categoria","indice","split","Array","fill","parseInt","onFinish","values","console","log","objetoConvertido","respuestas","body","usuario","medico","docs","tipo","uuid","cat","then","rs","success","onDocsFinishFailed","errorInfo","error","onChange","e","info","target","value","setRespuestas","handleRespuestaChange","n","InitialInstr","style","textAlign","children","fileName","_jsxFileName","lineNumber","columnNumber","Instr1","Instr2","Instr3","Instr4","className","name","layout","initialValues","autoComplete","map","pregunta","i","Item","label","rules","required","Group","respuesta","index","ind","wrapperCol","offset","span","form","type","htmlType","_c","$RefreshReg$"],"sources":["C:/Users/Gil/Documents/ReCreaMed/src/escalas/docs/docs.encuesta.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { Button, Divider, Form, Radio, message, Input } from \"antd\";\r\nimport { EncuestaLoading, ThanksMessage, checkEncuesta, onFinishFailed } from '../utils'\r\nimport { sendDataBody } from '../../resources'\r\nimport { docs_catalog_1, docs_catalog_2, docs_catalog_3, docs_catalog_4 } from './docs.catalog';\r\n\r\nexport default function DocsEncuesta({ idpaciente, idmedico, token, protocolo, momento }) {\r\n\r\n    const [encuestaNotExists, setEncuestaNotExists] = useState(null)\r\n    const [checking, setChecking] = useState(true)\r\n    const [pacienteData, setPacienteData] = useState({})\r\n    const [medicoData, setMedicoData] = useState({})\r\n\r\n\r\n    useEffect(() => {\r\n        init()\r\n    }, [])\r\n\r\n    function init() {\r\n        checkEncuesta(token, idpaciente, setPacienteData, idmedico, setMedicoData, setEncuestaNotExists, setChecking)\r\n    }\r\n\r\n    function convertirObjeto(objeto) {\r\n        const resultado = {};\r\n\r\n        for (const clave in objeto) {\r\n            const [categoria, indice] = clave.split('-');\r\n            if (!resultado[categoria]) {\r\n                resultado[categoria] = new Array(5).fill(0);\r\n            }\r\n            resultado[categoria][parseInt(indice) - 1] = objeto[clave];\r\n        }\r\n\r\n        return resultado;\r\n    }\r\n\r\n    const onFinish = (values) => {\r\n\r\n        console.log('Values: ', values)\r\n\r\n        const objetoConvertido = convertirObjeto(respuestas);\r\n        console.log('New', objetoConvertido)\r\n\r\n\r\n\r\n        const body = {\r\n            usuario: idpaciente,\r\n            medico: idmedico,\r\n            docs: objetoConvertido,\r\n            tipo: 'docs',\r\n            uuid: token,\r\n            cat: [protocolo, momento]\r\n        }\r\n\r\n        console.log('Body:', body);\r\n        sendDataBody('encuestas/add', body).then((rs) => {\r\n            console.log('add enc resp', rs)\r\n            message.success(rs.message)\r\n        }).then(() => init())\r\n    };\r\n\r\n    const onDocsFinishFailed = (errorInfo) => {\r\n        console.log(errorInfo)\r\n        message.error('Revise el formulario y conteste todas las preguntas')\r\n\r\n    }\r\n\r\n    const onChange = (e) => {\r\n        message.info('radio checked ' + e.target.value);\r\n    };\r\n\r\n    const [respuestas, setRespuestas] = useState({});\r\n\r\n    const handleRespuestaChange = (n, value) => {\r\n        setRespuestas({ ...respuestas, [n]: value });\r\n    };\r\n\r\n    const InitialInstr = () => {\r\n        return <p style={{ textAlign: 'justify' }}>\r\n            En este cuestionario se le pregunta sobre 4 tipos de preocupaciones diferentes que puede que usted esté\r\n            (o no esté) experimentando. Para cada tipo de preocupación, hay una descripción del tipo de\r\n            pensamientos (a veces llamados obsesiones) y conductas (a veces llamadas rituales o compulsiones) que\r\n            son típicas de ese tipo de preocupación en particular, seguida de 5 preguntas sobre sus experiencias en\r\n            relación con estos pensamientos y conductas. Por favor, lea cada descripción detenidamente y responda\r\n            a las preguntas para cada categoría basándose en las experiencias que usted ha tenido durante el\r\n            último mes.\r\n        </p>\r\n    }\r\n\r\n    const Instr1 = () => {\r\n        return <div>\r\n            <p><strong>Preocupaciones relacionadas con gérmenes y contaminación.</strong></p>\r\n            <p style={{ textAlign: 'justify' }}>\r\n                Ejemplos... <br />\r\n                - Pensar o sentir que está contaminado/a porque estuvo en contacto con ciertos objetos o personas o\r\n                estuvo cerca de ellos.  <br />\r\n                - Sentir que está contaminado/a porque estuvo en ciertos lugares (por ejemplo, un cuarto de baño).  <br />\r\n                - Pensar en gérmenes, enfermedades o en la posibilidad de propagar la contaminación.  <br />\r\n                - Lavarse las manos, usar desinfectante de manos, ducharse, cambiarse de ropa o limpiar objetos\r\n                contaminación. <br />\r\n                - Evitar ciertas personas, objetos o lugares debido a la contaminación. <br />\r\n                Las siguientes preguntas se refieren a sus experiencias con pensamientos y conductas relacionados con\r\n                la contaminación durante el último mes. Recuerde que sus experiencias pueden ser diferentes de los\r\n                ejemplos mencionados anteriormente. Por favor, rodee con un círculo el número junto a su respuesta.\r\n            </p>\r\n        </div>\r\n    }\r\n\r\n    const Instr2 = () => {\r\n        return <div>\r\n            <p><strong>Preocupaciones relacionadas con causar daño, provocar lesiones o traer mala suerte</strong></p>\r\n            <p style={{ textAlign: 'justify' }}>\r\n                Ejemplos... <br />\r\n                - Dudar de si ha cometido un error que podría hacer que sucediera algo horrible o perjudicial. <br />\r\n                - Pensar que pueda haber ocurrido un accidente, desastre o daño físico terrible u otra desgracia y que\r\n                usted no fue lo suficientemente precavido para evitarlo. <br />\r\n                - Pensar que usted podía evitar algún daño o desgracia haciendo las cosas de una determinada\r\n                manera, contando hasta cierto número o evitando determinados números o palabras \"negativos\". <br />\r\n                - Pensar que podía perder algo importante que es poco probable que pierda (por ejemplo, la cartera,\r\n                papeles, documentos personales...). <br />\r\n                - Comprobar cosas como cerraduras, enchufes, la cartera, etc. más de lo necesario. <br />\r\n                - Comprobar repetidamente o preguntar a otras personas para asegurarse de que no ha pasado (o no\r\n                va a pasar) algo malo. <br />\r\n                - Repasar mentalmente cosas del pasado para asegurarse de que no hizo nada malo. <br />\r\n                - Necesitar hacer las cosas en una secuencia determinada para evitar que ocurran cosas dañinas o\r\n                desastres. <br />\r\n                - Necesitar contar hasta cierto número o evitar ciertos números negativos por miedo a que ocurra algo\r\n                malo. <br />\r\n                Las siguientes preguntas se refieren a sus experiencias con los pensamientos y conductas relacionados\r\n                con causar daño o desastres durante el último mes. Recuerde que sus experiencias pueden ser\r\n                ligeramente diferentes de los ejemplos mencionados anteriormente. Por favor, seleccione una respuesta.\r\n            </p>\r\n        </div>\r\n    }\r\n\r\n    const Instr3 = () => {\r\n        return <div>\r\n            <p><strong>Pensamientos inaceptables/prohibidos</strong></p>\r\n            <p style={{ textAlign: 'justify' }}>\r\n                Ejemplos... <br />\r\n                - Tener pensamientos desagradables sobre sexo, cosas inmorales o violencia que le vienen a la mente en\r\n                contra de su voluntad. <br />\r\n                - Pensar que podría hacer algo horrible, indecente o que le avergüence que en realidad usted no quiere\r\n                hacer. <br />\r\n                - Repetir una acción o hacer las cosas en una secuencia determinada debido a un mal pensamiento. <br />\r\n                - Realizar mentalmente alguna acción o rezar para deshacerse de un pensamiento no deseado o\r\n                desagradable. <br />\r\n                - Evitar ciertas personas, lugares o situaciones que le provocan pensamientos no deseados o\r\n                desagradables. <br />\r\n                Las siguientes preguntas se refieren a sus experiencias con pensamientos no deseados que vienen a su\r\n                mente en contra de su voluntad y a comportamientos dirigidos a afrontar este tipo de pensamientos\r\n                durante el último mes. Recuerde que sus experiencias pueden ser ligeramente diferentes de los ejemplos\r\n                mencionados anteriormente. Por favor, seleccione respuesta.\r\n            </p>\r\n        </div>\r\n    }\r\n\r\n    const Instr4 = () => {\r\n        return <div>\r\n            <p><strong>Preocupaciones sobre simetría y la necesidad de que las cosas estén “bien” o “como tienen que estar\".</strong></p>\r\n            <p style={{ textAlign: 'justify' }}>\r\n                Ejemplos... <br /> \r\n                - Necesitar que las cosas sean/estén simétricas, uniformes, equilibradas o exactas.<br />\r\n                - Sentir que algo no está \"del todo bien\".<br />\r\n                - Repetir algo del día a día hasta que tiene la sensación de que lo ha hecho \"bien\" o\r\n                \"equilibradamente\".<br />\r\n                - Contar cosas absurdas (por ejemplo, azulejos del techo, el número de palabras en una frase, etc.).<br />\r\n                - Poner las cosas en un orden determinado cuando no es necesario.<br />\r\n                - Tener que repetir algo de una manera determinada hasta que está \"bien\".<br />\r\n                Las siguientes preguntas se refieren a sus sensaciones de que algo no está \"bien\" y sus conductas\r\n                dirigidas a conseguir una sensación de orden, simetría o equilibrio durante el último mes. Recuerde que\r\n                sus experiencias pueden ser ligeramente diferentes a los ejemplos mencionados anteriormente. Por favor, seleccione una respuesta.\r\n            </p>\r\n        </div>\r\n    }\r\n\r\n\r\n    if (checking) return <EncuestaLoading />\r\n\r\n    if (!encuestaNotExists) return <ThanksMessage />\r\n    return (\r\n        <div className='mainContainer'>\r\n            <h4>Encuesta DOCS</h4>\r\n            <br />\r\n            <h5>Medico: {medicoData.name}</h5>\r\n            <h5>Paciente: {pacienteData.name}</h5>\r\n            <br />\r\n\r\n            <Form\r\n                layout='vertical'\r\n                name=\"docs_enc\"\r\n                // labelCol={{ span: 24 }}\r\n                // wrapperCol={{ span: 24 }}\r\n                initialValues={[]}\r\n                onFinish={onFinish}\r\n                onFinishFailed={onFinishFailed}\r\n                autoComplete=\"off\">\r\n\r\n\r\n                <InitialInstr />\r\n                <Divider>Categoria 1</Divider>\r\n                <Instr1 />\r\n                {docs_catalog_1.map((pregunta, i) => (\r\n                    <Form.Item key={pregunta.n} name={i} label={pregunta.pregunta} rules={[{\r\n                        required: true,\r\n                        message: 'Seleccione una respuesta',\r\n                    },\r\n                    ]}>\r\n                        <Radio.Group\r\n                            onChange={(e) => handleRespuestaChange(pregunta.n, e.target.value)}\r\n                            value={respuestas[pregunta.n]}\r\n\r\n                        >\r\n                            {pregunta.respuestas.map((respuesta, index) => (\r\n                                <Radio key={index} value={index}>\r\n                                    {respuesta}\r\n                                </Radio>\r\n                            ))}\r\n                        </Radio.Group>\r\n                    </Form.Item>\r\n                ))}\r\n\r\n                <br />\r\n                <Divider>Categoria 2</Divider>\r\n                <Instr2 />\r\n                {docs_catalog_2.map((pregunta, ind) => (\r\n                    <Form.Item key={pregunta.n} name={ind + 5} label={pregunta.pregunta} rules={[{\r\n                        required: true,\r\n                        message: 'Seleccione una respuesta',\r\n                    },\r\n                    ]}>\r\n                        <Radio.Group\r\n                            onChange={(e) => handleRespuestaChange(pregunta.n, e.target.value)}\r\n                            value={respuestas[pregunta.n]}\r\n                        >\r\n                            {pregunta.respuestas.map((respuesta, index) => (\r\n                                <Radio key={index} value={index}>\r\n                                    {respuesta}\r\n                                </Radio>\r\n                            ))}\r\n                        </Radio.Group>\r\n                    </Form.Item>\r\n                ))}\r\n\r\n                <br />\r\n                <Divider>Categoria 3</Divider>\r\n                <Instr3 />\r\n                {docs_catalog_3.map((pregunta, i) => (\r\n                    <Form.Item key={pregunta.n} name={i + 10} label={pregunta.pregunta} rules={[{\r\n                        required: true,\r\n                        message: 'Seleccione una respuesta',\r\n                    },\r\n                    ]}>\r\n                        <Radio.Group\r\n                            onChange={(e) => handleRespuestaChange(pregunta.n, e.target.value)}\r\n                            value={respuestas[pregunta.n]}\r\n                        >\r\n                            {pregunta.respuestas.map((respuesta, index) => (\r\n                                <Radio key={index} value={index}>\r\n                                    {respuesta}\r\n                                </Radio>\r\n                            ))}\r\n                        </Radio.Group>\r\n                    </Form.Item>\r\n                ))}\r\n\r\n                <br />\r\n                <Divider>Categoria 4</Divider>\r\n                <Instr4/>\r\n                {docs_catalog_4.map((pregunta, i) => (\r\n                    <Form.Item key={pregunta.n} name={i + 15} label={pregunta.pregunta} rules={[{\r\n                        required: true,\r\n                        message: 'Seleccione una respuesta',\r\n                    },\r\n                    ]}>\r\n                        <Radio.Group\r\n                            onChange={(e) => handleRespuestaChange(pregunta.n, e.target.value)}\r\n                            value={respuestas[pregunta.n]}\r\n                        >\r\n                            {pregunta.respuestas.map((respuesta, index) => (\r\n                                <Radio key={index} value={index}>\r\n                                    {respuesta}\r\n                                </Radio>\r\n                            ))}\r\n                        </Radio.Group>\r\n                    </Form.Item>\r\n                ))}\r\n\r\n\r\n\r\n                <Form.Item\r\n                    wrapperCol={{\r\n                        offset: 8,\r\n                        span: 16,\r\n                    }}\r\n                >\r\n                    <Button form='docs_enc' type=\"primary\" htmlType=\"submit\">\r\n                    Enviar respuestas\r\n                    </Button>\r\n                </Form.Item>\r\n\r\n\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}