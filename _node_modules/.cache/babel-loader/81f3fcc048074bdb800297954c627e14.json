{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar _asyncToGenerator = require('@babel/runtime/helpers/asyncToGenerator');\nvar _extends = require('@babel/runtime/helpers/extends');\nvar _regeneratorRuntime = require('@babel/runtime/regenerator');\nvar _objectWithoutPropertiesLoose = require('@babel/runtime/helpers/objectWithoutPropertiesLoose');\nrequire('is-url');\nvar fetch = require('cross-fetch');\nvar fontkit = require('@react-pdf/fontkit');\nfunction _interopDefaultLegacy(e) {\n  return e && typeof e === 'object' && 'default' in e ? e : {\n    'default': e\n  };\n}\nvar _asyncToGenerator__default = /*#__PURE__*/_interopDefaultLegacy(_asyncToGenerator);\nvar _extends__default = /*#__PURE__*/_interopDefaultLegacy(_extends);\nvar _regeneratorRuntime__default = /*#__PURE__*/_interopDefaultLegacy(_regeneratorRuntime);\nvar _objectWithoutPropertiesLoose__default = /*#__PURE__*/_interopDefaultLegacy(_objectWithoutPropertiesLoose);\nvar fetch__default = /*#__PURE__*/_interopDefaultLegacy(fetch);\nvar fontkit__default = /*#__PURE__*/_interopDefaultLegacy(fontkit);\nvar _excluded = [\"src\", \"fontWeight\", \"fontStyle\"];\nvar FONT_WEIGHTS = {\n  thin: 100,\n  hairline: 100,\n  ultralight: 200,\n  extralight: 200,\n  light: 300,\n  normal: 400,\n  medium: 500,\n  semibold: 600,\n  demibold: 600,\n  bold: 700,\n  ultrabold: 800,\n  extrabold: 800,\n  heavy: 900,\n  black: 900\n};\nvar fetchFont = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator__default[\"default\"]( /*#__PURE__*/_regeneratorRuntime__default[\"default\"].mark(function _callee(src, options) {\n    var response, buffer;\n    return _regeneratorRuntime__default[\"default\"].wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return fetch__default[\"default\"](src, options);\n          case 2:\n            response = _context.sent;\n            _context.next = 5;\n            return response.buffer ? response.buffer() : response.arrayBuffer();\n          case 5:\n            buffer = _context.sent;\n            return _context.abrupt(\"return\", buffer.constructor.name === 'Buffer' ? buffer : Buffer.from(buffer));\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return function fetchFont(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\nvar isDataUrl = function isDataUrl(dataUrl) {\n  var header = dataUrl.split(',')[0];\n  var hasDataPrefix = header.substring(0, 5) === 'data:';\n  var hasBase64Prefix = header.split(';')[1] === 'base64';\n  return hasDataPrefix && hasBase64Prefix;\n};\nvar resolveFontWeight = function resolveFontWeight(value) {\n  return typeof value === 'string' ? FONT_WEIGHTS[value] : value;\n};\nvar sortByFontWeight = function sortByFontWeight(a, b) {\n  return a.fontWeight - b.fontWeight;\n};\nvar FontSource = /*#__PURE__*/function () {\n  function FontSource(src, fontFamily, fontStyle, fontWeight, options) {\n    this.src = src;\n    this.fontFamily = fontFamily;\n    this.fontStyle = fontStyle || 'normal';\n    this.fontWeight = fontWeight || 400;\n    this.data = null;\n    this.loading = false;\n    this.options = options;\n  }\n  var _proto = FontSource.prototype;\n  _proto.load = /*#__PURE__*/function () {\n    var _load = _asyncToGenerator__default[\"default\"]( /*#__PURE__*/_regeneratorRuntime__default[\"default\"].mark(function _callee2() {\n      var _this = this;\n      var postscriptName, _this$options, headers, body, _this$options$method, method, data;\n      return _regeneratorRuntime__default[\"default\"].wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              this.loading = true;\n              postscriptName = this.options.postscriptName;\n              if (!isDataUrl(this.src)) {\n                _context2.next = 6;\n                break;\n              }\n              this.data = fontkit__default[\"default\"].create(Buffer.from(this.src.split(',')[1], 'base64'), postscriptName);\n              _context2.next = 17;\n              break;\n            case 6:\n              _this$options = this.options, headers = _this$options.headers, body = _this$options.body, _this$options$method = _this$options.method, method = _this$options$method === void 0 ? 'GET' : _this$options$method;\n              _context2.next = 10;\n              return fetchFont(this.src, {\n                method: method,\n                body: body,\n                headers: headers\n              });\n            case 10:\n              data = _context2.sent;\n              this.data = fontkit__default[\"default\"].create(data, postscriptName);\n              _context2.next = 17;\n              break;\n            case 14:\n              _context2.next = 16;\n              return new Promise(function (resolve, reject) {\n                return fontkit__default[\"default\"].open(_this.src, postscriptName, function (err, data) {\n                  return err ? reject(err) : resolve(data);\n                });\n              });\n            case 16:\n              this.data = _context2.sent;\n            case 17:\n              this.loading = false;\n            case 18:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, this);\n    }));\n    function load() {\n      return _load.apply(this, arguments);\n    }\n    return load;\n  }();\n  return FontSource;\n}();\nvar Font = /*#__PURE__*/function () {\n  Font.create = function create(family) {\n    return new Font(family);\n  };\n  function Font(family) {\n    this.family = family;\n    this.sources = [];\n  }\n  var _proto2 = Font.prototype;\n  _proto2.register = function register(_ref2) {\n    var src = _ref2.src,\n      fontWeight = _ref2.fontWeight,\n      fontStyle = _ref2.fontStyle,\n      options = _objectWithoutPropertiesLoose__default[\"default\"](_ref2, _excluded);\n    var numericFontWeight = resolveFontWeight(fontWeight);\n    this.sources.push(new FontSource(src, this.family, fontStyle, numericFontWeight, options));\n  };\n  _proto2.resolve = function resolve(descriptor) {\n    var _descriptor$fontWeigh = descriptor.fontWeight,\n      fontWeight = _descriptor$fontWeigh === void 0 ? 400 : _descriptor$fontWeigh,\n      _descriptor$fontStyle = descriptor.fontStyle,\n      fontStyle = _descriptor$fontStyle === void 0 ? 'normal' : _descriptor$fontStyle;\n    var styleSources = this.sources.filter(function (s) {\n      return s.fontStyle === fontStyle;\n    }); // Weight resolution. https://developer.mozilla.org/en-US/docs/Web/CSS/font-weight#Fallback_weights\n\n    var exactFit = styleSources.find(function (s) {\n      return s.fontWeight === fontWeight;\n    });\n    if (exactFit) return exactFit;\n    var res;\n    if (fontWeight >= 400 && fontWeight <= 500) {\n      var leftOffset = styleSources.filter(function (s) {\n        return s.fontWeight <= fontWeight;\n      });\n      var rightOffset = styleSources.filter(function (s) {\n        return s.fontWeight > 500;\n      });\n      var fit = styleSources.filter(function (s) {\n        return s.fontWeight >= fontWeight && s.fontWeight < 500;\n      });\n      res = fit[0] || leftOffset[leftOffset.length - 1] || rightOffset[0];\n    }\n    var lt = styleSources.filter(function (s) {\n      return s.fontWeight < fontWeight;\n    }).sort(sortByFontWeight);\n    var gt = styleSources.filter(function (s) {\n      return s.fontWeight > fontWeight;\n    }).sort(sortByFontWeight);\n    if (fontWeight < 400) {\n      res = lt[lt.length - 1] || gt[0];\n    }\n    if (fontWeight > 500) {\n      res = gt[0] || lt[lt.length - 1];\n    }\n    if (!res) {\n      throw new Error(\"Could not resolve font for \" + this.family + \", fontWeight \" + fontWeight);\n    }\n    return res;\n  };\n  return Font;\n}();\nvar standard = ['Courier', 'Courier-Bold', 'Courier-Oblique', 'Courier-BoldOblique', 'Helvetica', 'Helvetica-Bold', 'Helvetica-Oblique', 'Helvetica-BoldOblique', 'Times-Roman', 'Times-Bold', 'Times-Italic', 'Times-BoldItalic'];\nfunction FontStore() {\n  var _this = this;\n  var fonts = {};\n  var emojiSource = null;\n  var hyphenationCallback = null;\n  this.register = function (data) {\n    var family = data.family;\n    if (!fonts[family]) {\n      fonts[family] = Font.create(family);\n    } // Bulk loading\n\n    if (data.fonts) {\n      for (var i = 0; i < data.fonts.length; i += 1) {\n        fonts[family].register(_extends__default[\"default\"]({\n          family: family\n        }, data.fonts[i]));\n      }\n    } else {\n      fonts[family].register(data);\n    }\n  };\n  this.registerEmojiSource = function (_ref) {\n    var url = _ref.url,\n      _ref$format = _ref.format,\n      format = _ref$format === void 0 ? 'png' : _ref$format;\n    emojiSource = {\n      url: url,\n      format: format\n    };\n  };\n  this.registerHyphenationCallback = function (callback) {\n    hyphenationCallback = callback;\n  };\n  this.getFont = function (descriptor) {\n    var fontFamily = descriptor.fontFamily;\n    var isStandard = standard.includes(fontFamily);\n    if (isStandard) return null;\n    if (!fonts[fontFamily]) {\n      throw new Error(\"Font family not registered: \" + fontFamily + \". Please register it calling Font.register() method.\");\n    }\n    return fonts[fontFamily].resolve(descriptor);\n  };\n  this.load = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator__default[\"default\"]( /*#__PURE__*/_regeneratorRuntime__default[\"default\"].mark(function _callee(descriptor) {\n      var fontFamily, isStandard, f;\n      return _regeneratorRuntime__default[\"default\"].wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              fontFamily = descriptor.fontFamily;\n              isStandard = standard.includes(fontFamily);\n              if (!isStandard) {\n                _context.next = 4;\n                break;\n              }\n              return _context.abrupt(\"return\");\n            case 4:\n              f = _this.getFont(descriptor); // We cache the font to avoid fetching it many times\n\n              if (!(!f.data && !f.loading)) {\n                _context.next = 8;\n                break;\n              }\n              _context.next = 8;\n              return f.load();\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return function (_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  this.reset = function () {\n    var keys = Object.keys(fonts);\n    for (var i = 0; i < keys.length; i += 1) {\n      var key = keys[i];\n      fonts[key].data = null;\n    }\n  };\n  this.clear = function () {\n    fonts = {};\n  };\n  this.getRegisteredFonts = function () {\n    return fonts;\n  };\n  this.getEmojiSource = function () {\n    return emojiSource;\n  };\n  this.getHyphenationCallback = function () {\n    return hyphenationCallback;\n  };\n  this.getRegisteredFontFamilies = function () {\n    return Object.keys(fonts);\n  };\n}\nexports[\"default\"] = FontStore;","map":{"version":3,"names":["FONT_WEIGHTS","thin","hairline","ultralight","extralight","light","normal","medium","semibold","demibold","bold","ultrabold","extrabold","heavy","black","fetchFont","_ref","_asyncToGenerator__default","_regeneratorRuntime__default","mark","_callee","src","options","response","buffer","wrap","_callee$","_context","prev","next","fetch__default","sent","arrayBuffer","abrupt","constructor","name","Buffer","from","stop","_x","_x2","apply","arguments","isDataUrl","dataUrl","header","split","hasDataPrefix","substring","hasBase64Prefix","resolveFontWeight","value","sortByFontWeight","a","b","fontWeight","FontSource","fontFamily","fontStyle","data","loading","load","_callee2","_this","postscriptName","_this$options","headers","body","_this$options$method","method","_callee2$","_context2","fontkit__default","create","Promise","resolve","reject","open","err","Font","family","sources","register","_ref2","_objectWithoutPropertiesLoose__default","_excluded","numericFontWeight","push","descriptor","_descriptor$fontWeigh","_descriptor$fontStyle","styleSources","filter","s","exactFit","find","res","leftOffset","rightOffset","fit","length","lt","sort","gt","Error","standard","FontStore","fonts","emojiSource","hyphenationCallback","i","_extends__default","registerEmojiSource","url","_ref$format","format","registerHyphenationCallback","callback","getFont","isStandard","includes","f","reset","keys","Object","key","clear","getRegisteredFonts","getEmojiSource","getHyphenationCallback","getRegisteredFontFamilies"],"sources":["../src/font.js","../src/standard.js","../src/index.js"],"sourcesContent":["/* eslint-disable max-classes-per-file */\n\nimport isUrl from 'is-url';\nimport fetch from 'cross-fetch';\nimport fontkit from '@react-pdf/fontkit';\n\nconst FONT_WEIGHTS = {\n  thin: 100,\n  hairline: 100,\n  ultralight: 200,\n  extralight: 200,\n  light: 300,\n  normal: 400,\n  medium: 500,\n  semibold: 600,\n  demibold: 600,\n  bold: 700,\n  ultrabold: 800,\n  extrabold: 800,\n  heavy: 900,\n  black: 900,\n};\n\nconst fetchFont = async (src, options) => {\n  const response = await fetch(src, options);\n\n  const buffer = await (response.buffer\n    ? response.buffer()\n    : response.arrayBuffer());\n\n  return buffer.constructor.name === 'Buffer' ? buffer : Buffer.from(buffer);\n};\n\nconst isDataUrl = dataUrl => {\n  const header = dataUrl.split(',')[0];\n  const hasDataPrefix = header.substring(0, 5) === 'data:';\n  const hasBase64Prefix = header.split(';')[1] === 'base64';\n\n  return hasDataPrefix && hasBase64Prefix;\n};\n\nconst resolveFontWeight = value => {\n  return typeof value === 'string' ? FONT_WEIGHTS[value] : value;\n};\n\nconst sortByFontWeight = (a, b) => a.fontWeight - b.fontWeight;\n\nclass FontSource {\n  constructor(src, fontFamily, fontStyle, fontWeight, options) {\n    this.src = src;\n    this.fontFamily = fontFamily;\n    this.fontStyle = fontStyle || 'normal';\n    this.fontWeight = fontWeight || 400;\n\n    this.data = null;\n    this.loading = false;\n    this.options = options;\n  }\n\n  async load() {\n    this.loading = true;\n\n    const { postscriptName } = this.options;\n\n    if (isDataUrl(this.src)) {\n      this.data = fontkit.create(\n        Buffer.from(this.src.split(',')[1], 'base64'),\n        postscriptName,\n      );\n    } else if (BROWSER || isUrl(this.src)) {\n      const { headers, body, method = 'GET' } = this.options;\n      const data = await fetchFont(this.src, { method, body, headers });\n      this.data = fontkit.create(data, postscriptName);\n    } else {\n      this.data = await new Promise((resolve, reject) =>\n        fontkit.open(this.src, postscriptName, (err, data) =>\n          err ? reject(err) : resolve(data),\n        ),\n      );\n    }\n\n    this.loading = false;\n  }\n}\n\nclass Font {\n  static create(family) {\n    return new Font(family);\n  }\n\n  constructor(family) {\n    this.family = family;\n    this.sources = [];\n  }\n\n  register({ src, fontWeight, fontStyle, ...options }) {\n    const numericFontWeight = resolveFontWeight(fontWeight);\n\n    this.sources.push(\n      new FontSource(src, this.family, fontStyle, numericFontWeight, options),\n    );\n  }\n\n  resolve(descriptor) {\n    const { fontWeight = 400, fontStyle = 'normal' } = descriptor;\n    const styleSources = this.sources.filter(s => s.fontStyle === fontStyle);\n\n    // Weight resolution. https://developer.mozilla.org/en-US/docs/Web/CSS/font-weight#Fallback_weights\n    const exactFit = styleSources.find(s => s.fontWeight === fontWeight);\n\n    if (exactFit) return exactFit;\n\n    let res;\n\n    if (fontWeight >= 400 && fontWeight <= 500) {\n      const leftOffset = styleSources.filter(s => s.fontWeight <= fontWeight);\n      const rightOffset = styleSources.filter(s => s.fontWeight > 500);\n      const fit = styleSources.filter(\n        s => s.fontWeight >= fontWeight && s.fontWeight < 500,\n      );\n\n      res = fit[0] || leftOffset[leftOffset.length - 1] || rightOffset[0];\n    }\n\n    const lt = styleSources\n      .filter(s => s.fontWeight < fontWeight)\n      .sort(sortByFontWeight);\n    const gt = styleSources\n      .filter(s => s.fontWeight > fontWeight)\n      .sort(sortByFontWeight);\n\n    if (fontWeight < 400) {\n      res = lt[lt.length - 1] || gt[0];\n    }\n\n    if (fontWeight > 500) {\n      res = gt[0] || lt[lt.length - 1];\n    }\n\n    if (!res) {\n      throw new Error(\n        `Could not resolve font for ${this.family}, fontWeight ${fontWeight}`,\n      );\n    }\n\n    return res;\n  }\n}\n\nexport default Font;\n","export default [\n  'Courier',\n  'Courier-Bold',\n  'Courier-Oblique',\n  'Courier-BoldOblique',\n  'Helvetica',\n  'Helvetica-Bold',\n  'Helvetica-Oblique',\n  'Helvetica-BoldOblique',\n  'Times-Roman',\n  'Times-Bold',\n  'Times-Italic',\n  'Times-BoldItalic',\n];\n","import font from './font';\nimport standard from './standard';\n\nfunction FontStore() {\n  let fonts = {};\n\n  let emojiSource = null;\n\n  let hyphenationCallback = null;\n\n  this.register = data => {\n    const { family } = data;\n\n    if (!fonts[family]) {\n      fonts[family] = font.create(family);\n    }\n\n    // Bulk loading\n    if (data.fonts) {\n      for (let i = 0; i < data.fonts.length; i += 1) {\n        fonts[family].register({ family, ...data.fonts[i] });\n      }\n    } else {\n      fonts[family].register(data);\n    }\n  };\n\n  this.registerEmojiSource = ({ url, format = 'png' }) => {\n    emojiSource = { url, format };\n  };\n\n  this.registerHyphenationCallback = callback => {\n    hyphenationCallback = callback;\n  };\n\n  this.getFont = descriptor => {\n    const { fontFamily } = descriptor;\n    const isStandard = standard.includes(fontFamily);\n\n    if (isStandard) return null;\n\n    if (!fonts[fontFamily]) {\n      throw new Error(\n        `Font family not registered: ${fontFamily}. Please register it calling Font.register() method.`,\n      );\n    }\n\n    return fonts[fontFamily].resolve(descriptor);\n  };\n\n  this.load = async descriptor => {\n    const { fontFamily } = descriptor;\n    const isStandard = standard.includes(fontFamily);\n\n    if (isStandard) return;\n\n    const f = this.getFont(descriptor);\n\n    // We cache the font to avoid fetching it many times\n    if (!f.data && !f.loading) {\n      await f.load();\n    }\n  };\n\n  this.reset = () => {\n    const keys = Object.keys(fonts);\n\n    for (let i = 0; i < keys.length; i += 1) {\n      const key = keys[i];\n      fonts[key].data = null;\n    }\n  };\n\n  this.clear = () => {\n    fonts = {};\n  };\n\n  this.getRegisteredFonts = () => fonts;\n\n  this.getEmojiSource = () => emojiSource;\n\n  this.getHyphenationCallback = () => hyphenationCallback;\n\n  this.getRegisteredFontFamilies = () => Object.keys(fonts);\n}\n\nexport default FontStore;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}