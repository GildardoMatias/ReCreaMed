{"ast":null,"code":"import { Linear, createInterpolateValue } from '@antv/scale';\nimport { extent, max } from 'd3-array';\nimport * as d3ScaleChromatic from 'd3-scale-chromatic';\nimport { deepMix, omit, upperFirst } from '@antv/util';\nimport { firstOf, lastOf, unique } from '../utils/array';\nimport { defined, identity, isStrictObject } from '../utils/helper';\nimport { isTheta } from './coordinate';\nimport { useLibrary } from './library';\nexport function inferScale(name, values, options, coordinates, theme, library) {\n  const {\n    guide = {}\n  } = options;\n  const type = inferScaleType(name, values, options);\n  if (typeof type !== 'string') return options;\n  const expectedDomain = inferScaleDomain(type, name, values, options);\n  const actualDomain = maybeRatio(type, expectedDomain, options);\n  return Object.assign(Object.assign(Object.assign({}, options), inferScaleOptions(type, name, values, options, coordinates)), {\n    domain: actualDomain,\n    range: inferScaleRange(type, name, values, options, actualDomain, theme, library),\n    expectedDomain,\n    guide,\n    name,\n    type\n  });\n}\nexport function applyScale(channels, scale) {\n  const scaledValue = {};\n  for (const channel of channels) {\n    const {\n      values,\n      name: scaleName\n    } = channel;\n    const scaleInstance = scale[scaleName];\n    for (const value of values) {\n      const {\n        name,\n        value: V\n      } = value;\n      scaledValue[name] = V.map(d => scaleInstance.map(d));\n    }\n  }\n  return scaledValue;\n}\nexport function collectScales(states, options) {\n  var _a;\n  const {\n    components = []\n  } = options;\n  const NONE_STATIC_KEYS = ['scale', 'encode', 'axis', 'legend', 'data', 'transform'];\n  // From normal marks.\n  const scales = Array.from(new Set(states.flatMap(d => d.channels.map(d => d.scale))));\n  // From static marks.\n  const nameScale = new Map(scales.map(scale => [scale.name, scale]));\n  for (const component of components) {\n    const channels = inferChannelsForComponent(component);\n    for (const channel of channels) {\n      const scale = nameScale.get(channel);\n      const staticScale = ((_a = component.scale) === null || _a === void 0 ? void 0 : _a[channel]) || {};\n      const {\n        independent = false\n      } = staticScale;\n      if (scale && !independent) {\n        // Merged with exist scales if is not independent.\n        const {\n          guide\n        } = scale;\n        const guide1 = typeof guide === 'boolean' ? {} : guide;\n        scale.guide = deepMix({}, guide1, component);\n        Object.assign(scale, staticScale);\n      } else {\n        // Append new scales without exit scales or independent.\n        const options1 = Object.assign(Object.assign({}, staticScale), {\n          expectedDomain: staticScale.domain,\n          name: channel,\n          guide: omit(component, NONE_STATIC_KEYS)\n        });\n        scales.push(options1);\n      }\n    }\n  }\n  return scales;\n}\nexport function useRelation(relations) {\n  if (!relations || !Array.isArray(relations)) return [identity, identity];\n  // Store original map and invert.\n  let map;\n  let invert;\n  const conditionalize = scale => {\n    var _a;\n    map = scale.map.bind(scale);\n    invert = (_a = scale.invert) === null || _a === void 0 ? void 0 : _a.bind(scale);\n    // Distinguish functions[function, output] and value[vale, output] relations.\n    const funcRelations = relations.filter(_ref => {\n      let [v] = _ref;\n      return typeof v === 'function';\n    });\n    const valueRelations = relations.filter(_ref2 => {\n      let [v] = _ref2;\n      return typeof v !== 'function';\n    });\n    // Update scale.map\n    const valueOutput = new Map(valueRelations);\n    scale.map = x => {\n      for (const [verify, value] of funcRelations) {\n        if (verify(x)) return value;\n      }\n      if (valueOutput.has(x)) return valueOutput.get(x);\n      return map(x);\n    };\n    if (!invert) return scale;\n    // Update scale.invert\n    const outputValue = new Map(valueRelations.map(_ref3 => {\n      let [a, b] = _ref3;\n      return [b, a];\n    }));\n    const outputFunc = new Map(funcRelations.map(_ref4 => {\n      let [a, b] = _ref4;\n      return [b, a];\n    }));\n    scale.invert = x => {\n      if (outputFunc.has(x)) return x;\n      if (outputValue.has(x)) return outputValue.get(x);\n      return invert(x);\n    };\n    return scale;\n  };\n  const deconditionalize = scale => {\n    if (map !== null) scale.map = map;\n    if (invert !== null) scale.invert = invert;\n    return scale;\n  };\n  return [conditionalize, deconditionalize];\n}\nexport function assignScale(target, source) {\n  const keys = Object.keys(target);\n  for (const scale of Object.values(source)) {\n    const {\n      name\n    } = scale.getOptions();\n    if (!(name in target)) target[name] = scale;else {\n      const I = keys.filter(d => d.startsWith(name))\n      // Reg is for extract `1` from `x1`;\n      .map(d => +(d.replace(name, '') || 0));\n      const index = max(I) + 1;\n      const newKey = \"\".concat(name).concat(index);\n      target[newKey] = scale;\n      scale.getOptions().key = newKey;\n    }\n  }\n  return target;\n}\nexport function useRelationScale(options, library) {\n  const [useScale] = useLibrary('scale', library);\n  const {\n    relations\n  } = options;\n  const [conditionalize] = useRelation(relations);\n  const scale = useScale(options);\n  return conditionalize(scale);\n}\nexport function syncFacetsScales(states) {\n  const scales = states.flatMap(d => Array.from(d.values())).flatMap(d => d.channels.map(d => d.scale));\n  syncFacetsScaleByChannel(scales, 'x');\n  syncFacetsScaleByChannel(scales, 'y');\n}\nfunction inferChannelsForComponent(component) {\n  const {\n    channels = [],\n    type,\n    scale = {}\n  } = component;\n  const L = ['shape', 'color', 'opacity', 'size'];\n  if (channels.length !== 0) return channels;\n  if (type === 'axisX') return ['x'];\n  if (type === 'axisY') return ['y'];\n  if (type === 'legends') return Object.keys(scale).filter(d => L.includes(d));\n  return [];\n}\nfunction syncFacetsScaleByChannel(scales, channel) {\n  const S = scales.filter(_ref5 => {\n    let {\n      name,\n      facet = true\n    } = _ref5;\n    return facet && name === channel;\n  });\n  const D = S.flatMap(d => d.domain);\n  const syncedD = S.every(isQuantitativeScale) ? extent(D) : S.every(isDiscreteScale) ? Array.from(new Set(D)) : null;\n  if (syncedD === null) return;\n  for (const scale of S) {\n    scale.domain = syncedD;\n  }\n}\nfunction maybeRatio(type, domain, options) {\n  const {\n    ratio\n  } = options;\n  if (ratio === undefined || ratio === null) return domain;\n  if (isQuantitativeScale({\n    type\n  })) {\n    return clampQuantitativeScale(domain, ratio, type);\n  }\n  if (isDiscreteScale({\n    type\n  })) return clampDiscreteScale(domain, ratio);\n  return domain;\n}\nfunction clampQuantitativeScale(domain, ratio, type) {\n  const D = domain.map(Number);\n  const scale = new Linear({\n    domain: D,\n    range: [D[0], D[0] + (D[D.length - 1] - D[0]) * ratio]\n  });\n  if (type === 'time') return domain.map(d => new Date(scale.map(d)));\n  return domain.map(d => scale.map(d));\n}\nfunction clampDiscreteScale(domain, ratio) {\n  const index = Math.round(domain.length * ratio);\n  return domain.slice(0, index);\n}\nfunction isQuantitativeScale(scale) {\n  const {\n    type\n  } = scale;\n  if (typeof type !== 'string') return false;\n  // Do not take quantize, quantile or threshold scale into account,\n  // because they are not for position scales. If they are, there is\n  // no need to sync them.\n  const names = ['linear', 'log', 'pow', 'time'];\n  return names.includes(type);\n}\nfunction isDiscreteScale(scale) {\n  const {\n    type\n  } = scale;\n  if (typeof type !== 'string') return false;\n  const names = ['band', 'point', 'ordinal'];\n  return names.includes(type);\n}\n// @todo More accurate inference for different cases.\nfunction inferScaleType(name, values, options) {\n  const {\n    type,\n    domain,\n    range,\n    quantitative,\n    ordinal\n  } = options;\n  if (type !== undefined) return type;\n  if (isObject(values)) return 'identity';\n  if (typeof range === 'string') return 'linear';\n  if ((domain || range || []).length > 2) return asOrdinalType(name, ordinal);\n  if (domain !== undefined) {\n    if (isOrdinal([domain])) return asOrdinalType(name, ordinal);\n    if (isTemporal(values)) return 'time';\n    return asQuantitativeType(name, range, quantitative);\n  }\n  if (isOrdinal(values)) return asOrdinalType(name, ordinal);\n  if (isTemporal(values)) return 'time';\n  return asQuantitativeType(name, range, quantitative);\n}\nfunction inferScaleDomain(type, name, values, options) {\n  const {\n    domain\n  } = options;\n  if (domain !== undefined) return domain;\n  switch (type) {\n    case 'linear':\n    case 'time':\n    case 'log':\n    case 'pow':\n    case 'sqrt':\n    case 'quantize':\n    case 'threshold':\n      return maybeMinMax(inferDomainQ(values, options), options);\n    case 'band':\n    case 'ordinal':\n    case 'point':\n      return inferDomainC(values);\n    case 'quantile':\n      return inferDomainO(values);\n    case 'sequential':\n      return maybeMinMax(inferDomainS(values), options);\n    default:\n      return [];\n  }\n}\nfunction inferScaleRange(type, name, values, options, domain, theme, library) {\n  const {\n    range\n  } = options;\n  if (typeof range === 'string') return gradientColors(range);\n  if (range !== undefined) return range;\n  const {\n    rangeMin,\n    rangeMax\n  } = options;\n  switch (type) {\n    case 'linear':\n    case 'time':\n    case 'log':\n    case 'pow':\n    case 'sqrt':\n      {\n        const colors = categoricalColors(values, options, domain, theme, library);\n        const [r0, r1] = inferRangeQ(name, colors);\n        return [rangeMin || r0, rangeMax || r1];\n      }\n    case 'band':\n    case 'point':\n      {\n        const min = name === 'size' ? 5 : 0;\n        const max = name === 'size' ? 10 : 1;\n        return [rangeMin || min, rangeMax || max];\n      }\n    case 'ordinal':\n      {\n        return categoricalColors(values, options, domain, theme, library);\n      }\n    case 'sequential':\n      return undefined;\n    case 'constant':\n      return [values[0][0]];\n    default:\n      return [];\n  }\n}\nfunction inferScaleOptions(type, name, values, options, coordinates) {\n  switch (type) {\n    case 'linear':\n    case 'time':\n    case 'log':\n    case 'pow':\n    case 'sqrt':\n      return inferOptionsQ(coordinates, options);\n    case 'band':\n    case 'point':\n      return inferOptionsC(type, name, coordinates, options);\n    case 'sequential':\n      return inferOptionsS(options);\n    default:\n      return options;\n  }\n}\nfunction categoricalColors(values, options, domain, theme, library) {\n  const [usePalette] = useLibrary('palette', library);\n  const {\n    category10: c10,\n    category20: c20\n  } = theme;\n  const defaultPalette = unique(values.flat()).length <= c10.length ? c10 : c20;\n  const {\n    palette = defaultPalette,\n    offset\n  } = options;\n  if (Array.isArray(palette)) return palette;\n  // Built-in palettes have higher priority.\n  try {\n    return usePalette({\n      type: palette\n    });\n  } catch (e) {\n    const colors = interpolatedColors(palette, domain, offset);\n    if (colors) return colors;\n    throw new Error(\"Unknown Component: \".concat(palette, \" \"));\n  }\n}\nfunction gradientColors(range) {\n  return range.split('-');\n}\nfunction interpolatedColors(palette, domain) {\n  let offset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : d => d;\n  if (!palette) return null;\n  const fullName = upperFirst(palette);\n  // If scheme have enough colors, then return pre-defined colors.\n  const scheme = d3ScaleChromatic[\"scheme\".concat(fullName)];\n  const interpolator = d3ScaleChromatic[\"interpolate\".concat(fullName)];\n  if (!scheme && !interpolator) return null;\n  if (scheme) {\n    // If is a one dimension array, return it.\n    if (!scheme.some(Array.isArray)) return scheme;\n    const schemeColors = scheme[domain.length];\n    if (schemeColors) return schemeColors;\n  }\n  // Otherwise interpolate to get full colors.\n  return domain.map((_, i) => interpolator(offset(i / domain.length)));\n}\nfunction inferOptionsS(options) {\n  const {\n    palette = 'ylGnBu',\n    offset\n  } = options;\n  const name = upperFirst(palette);\n  const interpolator = d3ScaleChromatic[\"interpolate\".concat(name)];\n  if (!interpolator) throw new Error(\"Unknown palette: \".concat(name));\n  return {\n    interpolator: offset ? x => interpolator(offset(x)) : interpolator\n  };\n}\nfunction inferOptionsQ(coordinates, options) {\n  const {\n    interpolate = createInterpolateValue,\n    nice = false,\n    tickCount = 5\n  } = options;\n  return Object.assign(Object.assign({}, options), {\n    interpolate,\n    nice,\n    tickCount\n  });\n}\nfunction inferOptionsC(type, name, coordinates, options) {\n  if (options.padding !== undefined || options.paddingInner !== undefined || options.paddingOuter !== undefined) {\n    return Object.assign(Object.assign({}, options), {\n      unknown: NaN\n    });\n  }\n  const padding = inferPadding(type, name, coordinates);\n  const {\n    paddingInner = padding,\n    paddingOuter = padding\n  } = options;\n  return Object.assign(Object.assign({}, options), {\n    paddingInner,\n    paddingOuter,\n    padding,\n    unknown: NaN\n  });\n}\nfunction inferPadding(type, name, coordinates) {\n  // The scale for enterDelay and enterDuration should has zero padding by default.\n  // Because there is no need to add extra delay for the start and the end.\n  if (name === 'enterDelay' || name === 'enterDuration') return 0;\n  if (name === 'size') return 0;\n  if (type === 'band') return isTheta(coordinates) ? 0 : 0.1;\n  // Point scale need 0.5 padding to make interval between first and last point\n  // equal to other intervals in polar coordinate.\n  if (type === 'point') return 0.5;\n  return 0;\n}\nfunction asOrdinalType(name, defaults) {\n  if (defaults) return defaults;\n  return isQuantitative(name) ? 'point' : 'ordinal';\n}\nfunction asQuantitativeType(name, range, defaults) {\n  if (defaults) return defaults;\n  if (name !== 'color') return 'linear';\n  return range ? 'linear' : 'sequential';\n}\nfunction maybeMinMax(domain, options) {\n  if (domain.length === 0) return domain;\n  const {\n    domainMin,\n    domainMax\n  } = options;\n  const [d0, d1] = domain;\n  return [domainMin !== null && domainMin !== void 0 ? domainMin : d0, domainMax !== null && domainMax !== void 0 ? domainMax : d1];\n}\nfunction inferDomainQ(values, options) {\n  const {\n    zero = false\n  } = options;\n  let min = Infinity;\n  let max = -Infinity;\n  for (const value of values) {\n    for (const d of value) {\n      if (defined(d)) {\n        min = Math.min(min, +d);\n        max = Math.max(max, +d);\n      }\n    }\n  }\n  if (min === Infinity) return [];\n  return zero ? [Math.min(0, min), max] : [min, max];\n}\nfunction inferDomainC(values) {\n  return Array.from(new Set(values.flat()));\n}\nfunction inferDomainO(values) {\n  return inferDomainC(values).sort();\n}\nfunction inferDomainS(values) {\n  let min = Infinity;\n  let max = -Infinity;\n  for (const value of values) {\n    for (const d of value) {\n      if (defined(d)) {\n        min = Math.min(min, +d);\n        max = Math.max(max, +d);\n      }\n    }\n  }\n  if (min === Infinity) return [];\n  return [min < 0 ? -max : min, max];\n}\n/**\n * @todo More nice default range for enterDelay and enterDuration.\n * @todo Move these to channel definition.\n */\nfunction inferRangeQ(name, palette) {\n  if (name === 'enterDelay') return [0, 1000];\n  if (name == 'enterDuration') return [300, 1000];\n  if (name.startsWith('y') || name.startsWith('position')) return [1, 0];\n  if (name === 'color') return [firstOf(palette), lastOf(palette)];\n  if (name === 'opacity') return [0, 1];\n  if (name === 'size') return [1, 10];\n  return [0, 1];\n}\nfunction isOrdinal(values) {\n  return some(values, d => {\n    const type = typeof d;\n    return type === 'string' || type === 'boolean';\n  });\n}\nfunction isTemporal(values) {\n  return some(values, d => d instanceof Date);\n}\nfunction isObject(values) {\n  return some(values, isStrictObject);\n}\nfunction some(values, callback) {\n  for (const V of values) {\n    if (V.some(callback)) return true;\n  }\n  return false;\n}\nfunction isQuantitative(name) {\n  return name.startsWith('x') || name.startsWith('y') || name.startsWith('position') || name.startsWith('size');\n}\n// Spatial and temporal position.\nexport function isPosition(name) {\n  return name.startsWith('x') || name.startsWith('y') || name.startsWith('position') || name === 'enterDelay' || name === 'enterDuration' || name === 'updateDelay' || name === 'updateDuration' || name === 'exitDelay' || name === 'exitDuration';\n}\nexport function isValidScale(scale) {\n  if (!scale || !scale.type) return false;\n  if (typeof scale.type === 'function') return true;\n  const {\n    type,\n    domain,\n    range,\n    interpolator\n  } = scale;\n  const isValidDomain = domain && domain.length > 0;\n  const isValidRange = range && range.length > 0;\n  if (['linear', 'sqrt', 'log', 'time', 'pow', 'threshold', 'quantize', 'quantile', 'ordinal', 'band', 'point'].includes(type) && isValidDomain && isValidRange) {\n    return true;\n  }\n  if (['sequential'].includes(type) && isValidDomain && (isValidRange || interpolator)) {\n    return true;\n  }\n  if (['constant', 'identity'].includes(type) && isValidRange) return true;\n  return false;\n}","map":{"version":3,"names":["Linear","createInterpolateValue","extent","max","d3ScaleChromatic","deepMix","omit","upperFirst","firstOf","lastOf","unique","defined","identity","isStrictObject","isTheta","useLibrary","inferScale","name","values","options","coordinates","theme","library","guide","type","inferScaleType","expectedDomain","inferScaleDomain","actualDomain","maybeRatio","Object","assign","inferScaleOptions","domain","range","inferScaleRange","applyScale","channels","scale","scaledValue","channel","scaleName","scaleInstance","value","V","map","d","collectScales","states","components","NONE_STATIC_KEYS","scales","Array","from","Set","flatMap","nameScale","Map","component","inferChannelsForComponent","get","staticScale","_a","independent","guide1","options1","push","useRelation","relations","isArray","invert","conditionalize","bind","funcRelations","filter","_ref","v","valueRelations","_ref2","valueOutput","x","verify","has","outputValue","_ref3","a","b","outputFunc","_ref4","deconditionalize","assignScale","target","source","keys","getOptions","I","startsWith","replace","index","newKey","concat","key","useRelationScale","useScale","syncFacetsScales","syncFacetsScaleByChannel","L","length","includes","S","_ref5","facet","D","syncedD","every","isQuantitativeScale","isDiscreteScale","ratio","undefined","clampQuantitativeScale","clampDiscreteScale","Number","Date","Math","round","slice","names","quantitative","ordinal","isObject","asOrdinalType","isOrdinal","isTemporal","asQuantitativeType","maybeMinMax","inferDomainQ","inferDomainC","inferDomainO","inferDomainS","gradientColors","rangeMin","rangeMax","colors","categoricalColors","r0","r1","inferRangeQ","min","inferOptionsQ","inferOptionsC","inferOptionsS","usePalette","category10","c10","category20","c20","defaultPalette","flat","palette","offset","e","interpolatedColors","Error","split","arguments","fullName","scheme","interpolator","some","schemeColors","_","i","interpolate","nice","tickCount","padding","paddingInner","paddingOuter","unknown","NaN","inferPadding","defaults","isQuantitative","domainMin","domainMax","d0","d1","zero","Infinity","sort","callback","isPosition","isValidScale","isValidDomain","isValidRange"],"sources":["src/runtime/scale.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module"}