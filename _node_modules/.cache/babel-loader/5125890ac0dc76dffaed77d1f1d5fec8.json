{"ast":null,"code":"import React,{useEffect,useState}from'react';import{Statistic,Card}from'antd';import{sendDataBody}from'../../resources';import Loading from'../../loading';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function PatientsChart(_ref){let{ids_medicos}=_ref;const[percentsData,setPercentsData]=useState({});const[loading,setLoading]=useState(true);useEffect(()=>{getPercentsData();},[]);const getPercentsData=async()=>{await sendDataBody('pacientes/percents',{medicos:ids_medicos}).then(rs=>{setPercentsData(rs);}).finally(()=>setLoading(false));};const PieChart=()=>{const totalPorcentaje=percentsData.reduce((sum,item)=>sum+item.porcentaje,0);return/*#__PURE__*/_jsx(\"div\",{className:\"pie-chart\",children:percentsData.map((item,index)=>/*#__PURE__*/_jsx(\"div\",{className:\"pie-segment\",style:{backgroundColor:index%2===0?'#1677FF':'#FA8C16',// Colores alternados\ntransform:\"rotate(\".concat(item.porcentaje/totalPorcentaje*360,\"deg)\")// Calcula el ángulo proporcional al porcentaje\n}},index))});};if(loading)return/*#__PURE__*/_jsx(Loading,{});return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h5\",{children:\"Pacientes de los diferentes m\\xE9dicos\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"fila\",children:[/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsx(Statistic,{title:/*#__PURE__*/_jsx(\"span\",{style:{color:'black'},children:\"Gildardo Matias (40%)\"}),value:32})}),/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsx(Statistic,{title:/*#__PURE__*/_jsx(\"span\",{style:{color:'black'},children:\"Medico 2 (60%)\"}),value:28})})]}),/*#__PURE__*/_jsx(\"br\",{})]});}","map":{"version":3,"names":["React","useEffect","useState","Statistic","Card","sendDataBody","Loading","jsx","_jsx","jsxs","_jsxs","PatientsChart","_ref","ids_medicos","percentsData","setPercentsData","loading","setLoading","getPercentsData","medicos","then","rs","finally","PieChart","totalPorcentaje","reduce","sum","item","porcentaje","className","children","map","index","style","backgroundColor","transform","concat","title","color","value"],"sources":["C:/Users/Gil/Documents/ReCreaMed/src/admHospitalViews/ingresos/patients-chart.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { Statistic, Card } from 'antd'\r\nimport { sendDataBody } from '../../resources'\r\nimport Loading from '../../loading'\r\n\r\nexport default function PatientsChart({ ids_medicos }) {\r\n\r\n  const [percentsData, setPercentsData] = useState({})\r\n  const [loading, setLoading] = useState(true)\r\n\r\n  useEffect(() => {\r\n    getPercentsData()\r\n  }, [])\r\n\r\n  const getPercentsData = async () => {\r\n    await sendDataBody('pacientes/percents', { medicos: ids_medicos }).then(rs => {\r\n      setPercentsData(rs)\r\n    }).finally(() => setLoading(false))\r\n  }\r\n\r\n  const PieChart = () => {\r\n    const totalPorcentaje = percentsData.reduce((sum, item) => sum + item.porcentaje, 0);\r\n\r\n    return (\r\n      <div className=\"pie-chart\">\r\n        {percentsData.map((item, index) => (\r\n          <div\r\n            key={index}\r\n            className=\"pie-segment\"\r\n            style={{\r\n              backgroundColor: index % 2 === 0 ? '#1677FF' : '#FA8C16', // Colores alternados\r\n              transform: `rotate(${(item.porcentaje / totalPorcentaje) * 360}deg)`, // Calcula el ángulo proporcional al porcentaje\r\n            }}\r\n          ></div>\r\n        ))}\r\n      </div>)\r\n  }\r\n\r\n\r\n  if (loading) return <Loading />\r\n\r\n  return (\r\n    <div >\r\n      <h5>Pacientes de los diferentes médicos</h5>\r\n      <div className='fila'>\r\n        <Card>\r\n          <Statistic title={<span style={{ color: 'black' }}>Gildardo Matias (40%)</span>} value={32} />\r\n        </Card>\r\n        <Card>\r\n          <Statistic title={<span style={{ color: 'black' }}>Medico 2 (60%)</span>} value={28} />\r\n        </Card>\r\n      </div>\r\n      <br />\r\n    </div>\r\n  )\r\n}"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAClD,OAASC,SAAS,CAAEC,IAAI,KAAQ,MAAM,CACtC,OAASC,YAAY,KAAQ,iBAAiB,CAC9C,MAAO,CAAAC,OAAO,KAAM,eAAe,QAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAEnC,cAAe,SAAS,CAAAC,aAAaA,CAAAC,IAAA,CAAkB,IAAjB,CAAEC,WAAY,CAAC,CAAAD,IAAA,CAEnD,KAAM,CAACE,YAAY,CAAEC,eAAe,CAAC,CAAGb,QAAQ,CAAC,CAAC,CAAC,CAAC,CACpD,KAAM,CAACc,OAAO,CAAEC,UAAU,CAAC,CAAGf,QAAQ,CAAC,IAAI,CAAC,CAE5CD,SAAS,CAAC,IAAM,CACdiB,eAAe,CAAC,CAAC,CACnB,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAA,eAAe,CAAG,KAAAA,CAAA,GAAY,CAClC,KAAM,CAAAb,YAAY,CAAC,oBAAoB,CAAE,CAAEc,OAAO,CAAEN,WAAY,CAAC,CAAC,CAACO,IAAI,CAACC,EAAE,EAAI,CAC5EN,eAAe,CAACM,EAAE,CAAC,CACrB,CAAC,CAAC,CAACC,OAAO,CAAC,IAAML,UAAU,CAAC,KAAK,CAAC,CAAC,CACrC,CAAC,CAED,KAAM,CAAAM,QAAQ,CAAGA,CAAA,GAAM,CACrB,KAAM,CAAAC,eAAe,CAAGV,YAAY,CAACW,MAAM,CAAC,CAACC,GAAG,CAAEC,IAAI,GAAKD,GAAG,CAAGC,IAAI,CAACC,UAAU,CAAE,CAAC,CAAC,CAEpF,mBACEpB,IAAA,QAAKqB,SAAS,CAAC,WAAW,CAAAC,QAAA,CACvBhB,YAAY,CAACiB,GAAG,CAAC,CAACJ,IAAI,CAAEK,KAAK,gBAC5BxB,IAAA,QAEEqB,SAAS,CAAC,aAAa,CACvBI,KAAK,CAAE,CACLC,eAAe,CAAEF,KAAK,CAAG,CAAC,GAAK,CAAC,CAAG,SAAS,CAAG,SAAS,CAAE;AAC1DG,SAAS,WAAAC,MAAA,CAAaT,IAAI,CAACC,UAAU,CAAGJ,eAAe,CAAI,GAAG,QAAQ;AACxE,CAAE,EALGQ,KAMD,CACP,CAAC,CACC,CAAC,CACV,CAAC,CAGD,GAAIhB,OAAO,CAAE,mBAAOR,IAAA,CAACF,OAAO,GAAE,CAAC,CAE/B,mBACEI,KAAA,QAAAoB,QAAA,eACEtB,IAAA,OAAAsB,QAAA,CAAI,wCAAmC,CAAI,CAAC,cAC5CpB,KAAA,QAAKmB,SAAS,CAAC,MAAM,CAAAC,QAAA,eACnBtB,IAAA,CAACJ,IAAI,EAAA0B,QAAA,cACHtB,IAAA,CAACL,SAAS,EAACkC,KAAK,cAAE7B,IAAA,SAAMyB,KAAK,CAAE,CAAEK,KAAK,CAAE,OAAQ,CAAE,CAAAR,QAAA,CAAC,uBAAqB,CAAM,CAAE,CAACS,KAAK,CAAE,EAAG,CAAE,CAAC,CAC1F,CAAC,cACP/B,IAAA,CAACJ,IAAI,EAAA0B,QAAA,cACHtB,IAAA,CAACL,SAAS,EAACkC,KAAK,cAAE7B,IAAA,SAAMyB,KAAK,CAAE,CAAEK,KAAK,CAAE,OAAQ,CAAE,CAAAR,QAAA,CAAC,gBAAc,CAAM,CAAE,CAACS,KAAK,CAAE,EAAG,CAAE,CAAC,CACnF,CAAC,EACJ,CAAC,cACN/B,IAAA,QAAK,CAAC,EACH,CAAC,CAEV"},"metadata":{},"sourceType":"module"}