{"ast":null,"code":"import React,{useEffect,useState,useRef}from'react';import{getData,sendDataBody}from'../resources';import{Form,Button,Space,Select,message}from'antd';import{usuario,ids_hospitales}from'../resources';import QRCode from\"react-qr-code\";import{toBlob,toPng}from'html-to-image';import Loading from'../loading';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";const{Option}=Select;export default function EscalasCreateGeneralLink(props){const[loading,setLoading]=useState(true);const[link,setLink]=useState('');// New Mode of first patient after medic selecting\nconst[medico,setMedico]=useState(null);// medico selected\nconst[medicos,setMedicos]=useState([]);// List of medicos able to select\nconst[selectedPatient,setSelectedPatient]=useState(null);const[allPacientes,setAllPacientes]=useState([]);// Added to determine the protocol and moment of application\nconst[protocolo,setProtocolo]=useState('default');const[momento,setMomento]=useState('default');useEffect(()=>{const getAllMedicos=async()=>{await getData(\"users/hospital/\".concat(ids_hospitales[0])).then(rs=>{getAllPacientes(rs);});};usuario.rol==='Medico'?getPacientesOfDoctor(usuario._id):getAllMedicos();},[]);const getAllPacientes=async medicos=>{const medicosFormatted=medicos.map(m=>m._id);await sendDataBody('pacientes/medicos',{medicos:medicosFormatted}).then(rs=>{setAllPacientes(rs);setLoading(false);});};const handlePatientChange=value=>{setLink(null);setSelectedPatient(value);const found=allPacientes.find(p=>p._id===value);if(found){let{medicos_asignados}=found;medicos_asignados.forEach(m=>{m.label=m.name;m.value=m._id;});setMedicos(medicos_asignados);}else{message.error('Paciente no encontrado');}};const handleProtocolChange=value=>setProtocolo(value);const handleMomentoChange=value=>setMomento(value);const handleDoctorChange=value=>{setMedico(value);setLink(null);};const getPacientesOfDoctor=_id=>{//Para el caso que la sesion sea de Medico\ngetData(\"mispacientes/\".concat(_id)).then(rs=>{setSelectedPatient(null);setAllPacientes(rs);setLoading(false);console.log(\"patients of \".concat(_id),rs);});};// End New Mode of first patient after medic selecting\nconst imageRef=useRef(null);// Filter `option.label` match the user type `input`\nconst filterOption=(input,option)=>{var _option$label;return((_option$label=option===null||option===void 0?void 0:option.label)!==null&&_option$label!==void 0?_option$label:'').toLowerCase().includes(input.toLowerCase());};const generateLink=()=>{let usr=usuario.rol==='Administrador'||usuario.rol==='Recepcion'||usuario.rol==='Enfermero'?medico:usuario._id;// let l = `https://sistema.recreamed.com/${props.tipo}_public/${usr}/${selectedPatient}/${Date.now()}/${protocolo}/${momento}`\nlet l=\"http://localhost:3000/\".concat(props.tipo,\"_public/\").concat(usr,\"/\").concat(selectedPatient,\"/\").concat(Date.now(),\"/\").concat(protocolo,\"/\").concat(momento);setLink(l);};const copyLink=()=>{navigator.clipboard.writeText(link);message.success('Enlace Copiado al Portapapeles!');};const handleDownload=async()=>{const dataUrl=await toPng(imageRef.current,{width:288});// download image\nconst link=document.createElement('a');link.download=\"codigo-de-enlace.png\";link.href=dataUrl;link.click();};const handleCopy=async()=>{message.info('Espere mientras se copia el codigo...');toBlob(imageRef.current,{width:288}).then(async function(blob){try{await navigator.clipboard.write([// eslint-disable-next-line no-undef\nnew ClipboardItem({[blob.type]:blob})]);console.log(\"Image copied\");message.success('Codigo Copiado al Portapapeles');}catch(error){console.error(error);}});};if(loading)return/*#__PURE__*/_jsx(Loading,{});return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Form.Item,{label:\"Paciente\",name:\"usuario\",rules:[{required:true,message:'Selecciona el paciente'}],style:{alignItems:'center',paddingTop:20},labelCol:{span:6},wrapperCol:{span:18},children:/*#__PURE__*/_jsx(Select,{showSearch:true,filterOption:filterOption,onChange:handlePatientChange,placeholder:\"Selecciona un paciente\",value:selectedPatient,options:allPacientes.map(p=>({...p,key:p._id,value:p._id,label:p.name}))})}),(usuario.rol==='Administrador'||usuario.rol==='Recepcion'||usuario.rol==='Enfermero')&&/*#__PURE__*/_jsx(Form.Item,{label:\"Medico\",name:\"usuario\",rules:[{required:true,message:'Selecciona el paciente'}],style:{alignItems:'center',paddingTop:20},labelCol:{span:6},wrapperCol:{span:18},children:/*#__PURE__*/_jsx(Select,{showSearch:true,filterOption:filterOption,onChange:handleDoctorChange,placeholder:\"Selecciona un medico\",options:medicos.map(p=>({...p,key:p._id,value:p._id,label:p.name}))})}),/*#__PURE__*/_jsx(Form.Item,{label:\"Protocolo\",name:\"protocolo\",rules:[{required:true,message:'Selecciona el paciente'}],style:{alignItems:'center',paddingTop:20},labelCol:{span:6},wrapperCol:{span:18},children:/*#__PURE__*/_jsx(Select,{showSearch:true,filterOption:filterOption,onChange:handleProtocolChange,placeholder:\"Selecciona protocolo\",value:selectedPatient,options:[{key:'p1',value:'depreres',label:\"Depresón resistente al tratamiento\"},{key:'p2',value:'Tinnitus',label:\"Tinnitus\"},{key:'p3',value:'Toc',label:\"Trastorno obsesivo compulsivo (TOC)\"},{key:'p4',value:'Alcoholismo',label:\"Alcoholismo\"},{key:'p5',value:'Opioides',label:\"Opioides\"},{key:'p6',value:'Dolor',label:\"Dolor\"},{key:'p7',value:'estrespt',label:\"Estrés post traumatico\"}]})}),/*#__PURE__*/_jsx(Form.Item,{label:\"Momento\",name:\"momento\",rules:[{required:true,message:'Selecciona el paciente'}],style:{alignItems:'center',paddingTop:20},labelCol:{span:6},wrapperCol:{span:18},children:/*#__PURE__*/_jsx(Select,{showSearch:true,filterOption:filterOption,onChange:handleMomentoChange,placeholder:\"Selecciona momento de la aplicaci\\xF3n\",value:selectedPatient,options:[{key:'m1',value:'inicial',label:\"Aplicación inicial\"},{key:'m2',value:'final',label:\"Aplicación final\"},{key:'m3',value:'mant1',label:\"Aplicación inicio manenimiento\"},{key:'m4',value:'mant2',label:\"Aplicación final manenimiento\"}]})}),/*#__PURE__*/_jsx(Button,{style:{alignSelf:'flex-end'},onClick:generateLink,disabled:usuario.rol==='Medico'?!selectedPatient:!medico,children:\"Generar Enlace\"}),/*#__PURE__*/_jsx(\"br\",{}),selectedPatient&&link?/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"p\",{style:{paddingTop:16,color:'#1890ff'},children:link}),/*#__PURE__*/_jsx(Button,{onClick:copyLink,children:\"Copiar Link\"}),usuario.rol==='Recepcion'&&/*#__PURE__*/_jsx(Button,{type:\"primary\",href:link,target:\"_blank\",rel:\"noreferrer\",style:{marginLeft:14},children:\"Contestar Ahora\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(\"div\",{className:\"columna\",children:[/*#__PURE__*/_jsxs(\"div\",{ref:imageRef,style:{background:'white',padding:'16px'},children:[\" \",/*#__PURE__*/_jsx(QRCode,{value:link}),\" \"]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Button,{onClick:handleDownload,children:\"Descargar Codigo\"}),/*#__PURE__*/_jsx(Button,{onClick:handleCopy,style:{marginLeft:12},children:\"Copiar Codigo\"})]})]})]}):/*#__PURE__*/_jsx(_Fragment,{})]});}","map":{"version":3,"names":["React","useEffect","useState","useRef","getData","sendDataBody","Form","Button","Space","Select","message","usuario","ids_hospitales","QRCode","toBlob","toPng","Loading","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Option","EscalasCreateGeneralLink","props","loading","setLoading","link","setLink","medico","setMedico","medicos","setMedicos","selectedPatient","setSelectedPatient","allPacientes","setAllPacientes","protocolo","setProtocolo","momento","setMomento","getAllMedicos","concat","then","rs","getAllPacientes","rol","getPacientesOfDoctor","_id","medicosFormatted","map","m","handlePatientChange","value","found","find","p","medicos_asignados","forEach","label","name","error","handleProtocolChange","handleMomentoChange","handleDoctorChange","console","log","imageRef","filterOption","input","option","_option$label","toLowerCase","includes","generateLink","usr","l","tipo","Date","now","copyLink","navigator","clipboard","writeText","success","handleDownload","dataUrl","current","width","document","createElement","download","href","click","handleCopy","info","blob","write","ClipboardItem","type","children","Item","rules","required","style","alignItems","paddingTop","labelCol","span","wrapperCol","showSearch","onChange","placeholder","options","key","alignSelf","onClick","disabled","color","target","rel","marginLeft","className","ref","background","padding"],"sources":["C:/Users/Gil/Documents/ReCreaMed/src/escalas/escalasCreateGeneralLink.jsx"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react'\r\nimport { getData, sendDataBody } from '../resources';\r\nimport { Form, Button, Space, Select, message } from 'antd'\r\nimport { usuario, ids_hospitales } from '../resources';\r\nimport QRCode from \"react-qr-code\";\r\nimport { toBlob, toPng } from 'html-to-image';\r\nimport Loading from '../loading';\r\nconst { Option } = Select;\r\n\r\n\r\n\r\nexport default function EscalasCreateGeneralLink(props) {\r\n\r\n    const [loading, setLoading] = useState(true)\r\n\r\n    const [link, setLink] = useState('')\r\n\r\n    // New Mode of first patient after medic selecting\r\n    const [medico, setMedico] = useState(null) // medico selected\r\n    const [medicos, setMedicos] = useState([]) // List of medicos able to select\r\n    const [selectedPatient, setSelectedPatient] = useState(null)\r\n    const [allPacientes, setAllPacientes] = useState([])\r\n\r\n    // Added to determine the protocol and moment of application\r\n    const [protocolo, setProtocolo] = useState('default')\r\n    const [momento, setMomento] = useState('default')\r\n\r\n    useEffect(() => {\r\n        const getAllMedicos = async () => {\r\n            await getData(`users/hospital/${ids_hospitales[0]}`).then(rs => { getAllPacientes(rs) })\r\n        }\r\n\r\n        usuario.rol === 'Medico' ? getPacientesOfDoctor(usuario._id) : getAllMedicos()\r\n\r\n    }, [])\r\n\r\n    const getAllPacientes = async (medicos) => {\r\n        const medicosFormatted = medicos.map(m => m._id)\r\n        await sendDataBody('pacientes/medicos', { medicos: medicosFormatted }).then(rs => { setAllPacientes(rs); setLoading(false) })\r\n    }\r\n\r\n    const handlePatientChange = (value) => {\r\n        setLink(null);\r\n        setSelectedPatient(value)\r\n        const found = allPacientes.find((p) => p._id === value);\r\n        if (found) {\r\n\r\n            let { medicos_asignados } = found\r\n            medicos_asignados.forEach((m) => {\r\n                m.label = m.name; m.value = m._id\r\n            });\r\n\r\n            setMedicos(medicos_asignados);\r\n\r\n        } else {\r\n            message.error('Paciente no encontrado')\r\n        }\r\n    };\r\n\r\n    const handleProtocolChange = value => setProtocolo(value)\r\n    const handleMomentoChange = value => setMomento(value)\r\n\r\n    const handleDoctorChange = (value) => { setMedico(value); setLink(null); };\r\n\r\n    const getPacientesOfDoctor = (_id) => { //Para el caso que la sesion sea de Medico\r\n        getData(`mispacientes/${_id}`).then(rs => { setSelectedPatient(null); setAllPacientes(rs); setLoading(false); console.log(`patients of ${_id}`, rs); })\r\n    }\r\n    // End New Mode of first patient after medic selecting\r\n\r\n    const imageRef = useRef(null);\r\n\r\n    // Filter `option.label` match the user type `input`\r\n    const filterOption = (input, option) =>\r\n        (option?.label ?? '').toLowerCase().includes(input.toLowerCase());\r\n\r\n    const generateLink = () => {\r\n        let usr = (usuario.rol === 'Administrador' || usuario.rol === 'Recepcion' || usuario.rol === 'Enfermero') ? medico : usuario._id;\r\n\r\n        // let l = `https://sistema.recreamed.com/${props.tipo}_public/${usr}/${selectedPatient}/${Date.now()}/${protocolo}/${momento}`\r\n        let l = `http://localhost:3000/${props.tipo}_public/${usr}/${selectedPatient}/${Date.now()}/${protocolo}/${momento}`\r\n        setLink(l)\r\n    }\r\n    const copyLink = () => {\r\n        navigator.clipboard.writeText(link)\r\n        message.success('Enlace Copiado al Portapapeles!')\r\n    }\r\n\r\n    const handleDownload = async () => {\r\n        const dataUrl = await toPng(imageRef.current, { width: 288 });\r\n\r\n        // download image\r\n        const link = document.createElement('a');\r\n        link.download = \"codigo-de-enlace.png\";\r\n        link.href = dataUrl;\r\n        link.click();\r\n    }\r\n\r\n    const handleCopy = async () => {\r\n        message.info('Espere mientras se copia el codigo...')\r\n        toBlob(imageRef.current, { width: 288 })\r\n            .then(async function (blob) {\r\n                try {\r\n                    await navigator.clipboard.write([\r\n                        // eslint-disable-next-line no-undef\r\n                        new ClipboardItem({\r\n                            [blob.type]: blob\r\n                        })\r\n                    ]);\r\n                    console.log(\"Image copied\");\r\n                    message.success('Codigo Copiado al Portapapeles')\r\n                } catch (error) {\r\n                    console.error(error);\r\n                }\r\n            });\r\n    }\r\n\r\n    if (loading) return <Loading />\r\n\r\n    return (\r\n        <div>\r\n\r\n            <Form.Item label=\"Paciente\" name=\"usuario\" rules={[{ required: true, message: 'Selecciona el paciente' }]}\r\n                style={{ alignItems: 'center', paddingTop: 20 }}\r\n                labelCol={{ span: 6 }} wrapperCol={{ span: 18 }}>\r\n\r\n                <Select\r\n                    showSearch\r\n                    filterOption={filterOption}\r\n                    onChange={handlePatientChange}\r\n                    placeholder='Selecciona un paciente'\r\n                    value={selectedPatient}\r\n                    options={\r\n                        allPacientes.map((p) => (\r\n                            {\r\n                                ...p,\r\n                                key: p._id,\r\n                                value: p._id,\r\n                                label: p.name\r\n                            }\r\n                        ))\r\n                    }\r\n                />\r\n            </Form.Item>\r\n\r\n\r\n            {\r\n                (usuario.rol === 'Administrador' || usuario.rol === 'Recepcion' || usuario.rol === 'Enfermero') &&\r\n                <Form.Item label=\"Medico\" name=\"usuario\" rules={[{ required: true, message: 'Selecciona el paciente' }]}\r\n                    style={{ alignItems: 'center', paddingTop: 20 }}\r\n                    labelCol={{ span: 6 }} wrapperCol={{ span: 18 }}>\r\n\r\n                    <Select\r\n                        showSearch\r\n                        filterOption={filterOption}\r\n                        onChange={handleDoctorChange}\r\n                        placeholder='Selecciona un medico'\r\n                        options={\r\n                            medicos.map((p) => (\r\n                                {\r\n                                    ...p,\r\n                                    key: p._id,\r\n                                    value: p._id,\r\n                                    label: p.name\r\n                                }\r\n                            ))\r\n                        }\r\n                    />\r\n                </Form.Item>\r\n            }\r\n\r\n\r\n            <Form.Item label=\"Protocolo\" name=\"protocolo\" rules={[{ required: true, message: 'Selecciona el paciente' }]}\r\n                style={{ alignItems: 'center', paddingTop: 20 }}\r\n                labelCol={{ span: 6 }} wrapperCol={{ span: 18 }}>\r\n\r\n                <Select\r\n                    showSearch\r\n                    filterOption={filterOption}\r\n                    onChange={handleProtocolChange}\r\n                    placeholder='Selecciona protocolo'\r\n                    value={selectedPatient}\r\n                    options={[\r\n                        {\r\n                           \r\n                            key: 'p1',\r\n                            value: 'depreres',\r\n                            label:\"Depresón resistente al tratamiento\"\r\n                        },\r\n                        {\r\n                           \r\n                            key: 'p2',\r\n                            value: 'Tinnitus',\r\n                            label:\"Tinnitus\"\r\n                        },\r\n                        {\r\n                           \r\n                            key: 'p3',\r\n                            value: 'Toc',\r\n                            label:\"Trastorno obsesivo compulsivo (TOC)\"\r\n                        },\r\n                         {\r\n                           \r\n                            key: 'p4',\r\n                            value: 'Alcoholismo',\r\n                            label:\"Alcoholismo\"\r\n                        },\r\n                        {\r\n                           \r\n                            key: 'p5',\r\n                            value: 'Opioides',\r\n                            label:\"Opioides\"\r\n                        },\r\n                        {\r\n                           \r\n                            key: 'p6',\r\n                            value: 'Dolor',\r\n                            label:\"Dolor\"\r\n                        },\r\n                        {\r\n                           \r\n                            key: 'p7',\r\n                            value: 'estrespt',\r\n                            label:\"Estrés post traumatico\"\r\n                        },\r\n                       \r\n                    ]}\r\n                />\r\n            </Form.Item>\r\n\r\n\r\n            <Form.Item label=\"Momento\" name=\"momento\" rules={[{ required: true, message: 'Selecciona el paciente' }]}\r\n                style={{ alignItems: 'center', paddingTop: 20 }}\r\n                labelCol={{ span: 6 }} wrapperCol={{ span: 18 }}>\r\n\r\n                <Select\r\n                    showSearch\r\n                    filterOption={filterOption}\r\n                    onChange={handleMomentoChange}\r\n                    placeholder='Selecciona momento de la aplicación'\r\n                    value={selectedPatient}\r\n                    options={[\r\n                        {\r\n                           \r\n                            key: 'm1',\r\n                            value: 'inicial',\r\n                            label:\"Aplicación inicial\"\r\n                        },\r\n                        {\r\n                           \r\n                            key: 'm2',\r\n                            value: 'final',\r\n                            label:\"Aplicación final\"\r\n                        },\r\n                        {\r\n                           \r\n                            key: 'm3',\r\n                            value: 'mant1',\r\n                            label:\"Aplicación inicio manenimiento\"\r\n                        },\r\n                        {\r\n                           \r\n                            key: 'm4',\r\n                            value: 'mant2',\r\n                            label:\"Aplicación final manenimiento\"\r\n                        },\r\n                    ]}\r\n                />\r\n            </Form.Item>\r\n\r\n\r\n            <Button style={{alignSelf: 'flex-end'}} onClick={generateLink} disabled={usuario.rol === 'Medico' ? !selectedPatient : !medico} >Generar Enlace</Button>\r\n\r\n\r\n            <br />\r\n\r\n            {\r\n                selectedPatient && link ? <div>\r\n\r\n                    <p style={{ paddingTop: 16, color: '#1890ff' }} >{link}</p>\r\n                    <Button onClick={copyLink}>Copiar Link</Button>\r\n\r\n                    {\r\n                        usuario.rol === 'Recepcion' && <Button type='primary' href={link} target='_blank' rel='noreferrer' style={{ marginLeft: 14 }}>Contestar Ahora</Button>\r\n                    }\r\n\r\n                    <br />\r\n                    \r\n                    <div className='columna'>\r\n                        <div ref={imageRef} style={{ background: 'white', padding: '16px' }}> <QRCode value={link} /> </div>\r\n                        <div>\r\n                            <Button onClick={handleDownload}>Descargar Codigo</Button>\r\n                            <Button onClick={handleCopy} style={{ marginLeft: 12 }}>Copiar Codigo</Button>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div> : <></>\r\n            }\r\n\r\n        </div >\r\n    )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}