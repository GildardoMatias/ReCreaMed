{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Gil\\\\Documents\\\\ReCreaMed\\\\src\\\\escalas\\\\escalasCreateGeneralLink.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport { getData, sendDataBody } from '../resources';\nimport { Form, Button, Space, Select, message } from 'antd';\nimport { usuario, ids_hospitales } from '../resources';\nimport QRCode from \"react-qr-code\";\nimport { toBlob, toPng } from 'html-to-image';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  Option\n} = Select;\nexport default function EscalasCreateGeneralLink(props) {\n  _s();\n  const [misPacientes, setMisPacientes] = useState([]);\n  const [selectedPatient, setSelectedPatient] = useState(null);\n  const [link, setLink] = useState('');\n  // Used to add a medico _id when the user is admin\n  const [medicosData, setMedicosData] = useState([]);\n  const [medico, setMedico] = useState(null);\n  const imageRef = useRef(null);\n  const getPacientesOfDoctor = _id => {\n    //Para el caso que la sesion sea de Medico\n    getData(`mispacientes/${_id}`).then(rs => {\n      setSelectedPatient(null);\n      setMisPacientes(rs);\n      console.log(`patients of ${_id}`, rs);\n    });\n  };\n\n  // If administrator or reception, filter medicos of hospital\n  const getDoctorsData = () => {\n    //Para el caso que la sesion sea de Administrador\n    // const body = { ids: usuario.medicos_asignados }\n    // sendDataBody(`users/getMany`, body).then(rs => { setMedicosData(rs); console.log('medicosData: ', rs); })\n    getData('users_by_rol/Medico').then(rs => {\n      setMedicosData(myDoctors(rs));\n    });\n  };\n  const myDoctors = doctorsData => {\n    let doctorsFound = [];\n    ids_hospitales.forEach(id_hospital => {\n      doctorsData.forEach(doctor => {\n        doctor.horarios.forEach(horario => {\n          if (!doctorsFound.includes(doctor) && horario.sucursal._id === id_hospital) doctorsFound.push(doctor);\n        });\n      });\n      console.log(`Founds for ${id_hospital}: `, doctorsFound);\n    });\n    return doctorsFound;\n  };\n  // End of medicos filtering\n\n  useEffect(() => {\n    usuario.rol === 'Medico' ? getPacientesOfDoctor(usuario._id) : getDoctorsData();\n  }, []);\n  const handleDoctorChange = value => {\n    setMedico(value);\n    getPacientesOfDoctor(value);\n  };\n  const handleChange = value => {\n    setLink(null);\n    setSelectedPatient(value);\n  };\n  // Filter `option.label` match the user type `input`\n  const filterOption = (input, option) => {\n    var _option$label;\n    return ((_option$label = option === null || option === void 0 ? void 0 : option.label) !== null && _option$label !== void 0 ? _option$label : '').toLowerCase().includes(input.toLowerCase());\n  };\n  const generateLink = () => {\n    // let usr = usuario.rol === 'Administrador' ? medico : usuario._id;\n    let usr = usuario.rol === 'Administrador' || usuario.rol === 'Recepcion' || usuario.rol === 'Enfermero' ? medico : usuario._id;\n    let l = `https://sistema.recreamed.com/${props.tipo}_public/${usr}/${selectedPatient}/${Date.now()}`;\n    // let l = `http://localhost:3000/${props.tipo}_public/${usr}/${selectedPatient}/${Date.now()}`\n    setLink(l);\n  };\n  const copyLink = () => {\n    navigator.clipboard.writeText(link);\n    message.success('Enlace Copiado al Portapapeles!');\n  };\n  const handleDownload = async () => {\n    const dataUrl = await toPng(imageRef.current, {\n      width: 288\n    });\n\n    // download image\n    const link = document.createElement('a');\n    link.download = \"codigo-de-enlace.png\";\n    link.href = dataUrl;\n    link.click();\n  };\n  const handleCopy = async () => {\n    message.info('Espere mientras se copia el codigo...');\n    toBlob(imageRef.current, {\n      width: 288\n    }).then(async function (blob) {\n      try {\n        await navigator.clipboard.write([\n        // eslint-disable-next-line no-undef\n        new ClipboardItem({\n          [blob.type]: blob\n        })]);\n        console.log(\"Image copied\");\n        message.success('Codigo Copiado al Portapapeles');\n      } catch (error) {\n        console.error(error);\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [(usuario.rol === 'Administrador' || usuario.rol === 'Recepcion' || usuario.rol === 'Enfermero') && /*#__PURE__*/_jsxDEV(Form.Item, {\n      label: \"Medico\",\n      name: \"usuario\",\n      rules: [{\n        required: true,\n        message: 'Selecciona el paciente'\n      }],\n      style: {\n        alignItems: 'center',\n        paddingTop: 20\n      },\n      labelCol: {\n        span: 8\n      },\n      wrapperCol: {\n        span: 16\n      },\n      children: /*#__PURE__*/_jsxDEV(Select, {\n        showSearch: true,\n        filterOption: filterOption,\n        onChange: handleDoctorChange,\n        placeholder: \"Selecciona un medico\",\n        options: medicosData.map(p => ({\n          ...p,\n          key: p._id,\n          value: p._id,\n          label: p.name\n        }))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      label: \"Paciente\",\n      name: \"usuario\",\n      rules: [{\n        required: true,\n        message: 'Selecciona el paciente'\n      }],\n      style: {\n        alignItems: 'center',\n        paddingTop: 20\n      },\n      children: /*#__PURE__*/_jsxDEV(Select, {\n        showSearch: true,\n        filterOption: filterOption,\n        onChange: handleChange,\n        placeholder: \"Selecciona un paciente\",\n        value: selectedPatient,\n        options: misPacientes.map(p => ({\n          ...p,\n          key: p._id,\n          value: p._id,\n          label: p.name\n        }))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: generateLink,\n      disabled: !selectedPatient,\n      children: \"Generar Enlace\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 13\n    }, this), selectedPatient && link ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Space, {\n        align: \"center\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          paddingTop: 16,\n          color: '#1890ff'\n        },\n        children: link\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: copyLink,\n        children: \"Copiar Link\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 21\n      }, this), usuario.rol === 'Recepcion' && /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        href: link,\n        target: \"_blank\",\n        rel: \"noreferrer\",\n        style: {\n          marginLeft: 14\n        },\n        children: \"Contestar Ahora\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 56\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: imageRef,\n        style: {\n          background: 'white',\n          padding: '16px'\n        },\n        children: [\" \", /*#__PURE__*/_jsxDEV(QRCode, {\n          value: link\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 91\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleDownload,\n        children: \"Descargar Codigo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleCopy,\n        style: {\n          marginLeft: 12\n        },\n        children: \"Copiar Codigo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 43\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 9\n  }, this);\n}\n_s(EscalasCreateGeneralLink, \"wN4vMu7rjnYUHVIFigqOndW4AeU=\");\n_c = EscalasCreateGeneralLink;\nvar _c;\n$RefreshReg$(_c, \"EscalasCreateGeneralLink\");","map":{"version":3,"names":["React","useEffect","useState","useRef","getData","sendDataBody","Form","Button","Space","Select","message","usuario","ids_hospitales","QRCode","toBlob","toPng","jsxDEV","_jsxDEV","Fragment","_Fragment","Option","EscalasCreateGeneralLink","props","_s","misPacientes","setMisPacientes","selectedPatient","setSelectedPatient","link","setLink","medicosData","setMedicosData","medico","setMedico","imageRef","getPacientesOfDoctor","_id","then","rs","console","log","getDoctorsData","myDoctors","doctorsData","doctorsFound","forEach","id_hospital","doctor","horarios","horario","includes","sucursal","push","rol","handleDoctorChange","value","handleChange","filterOption","input","option","_option$label","label","toLowerCase","generateLink","usr","l","tipo","Date","now","copyLink","navigator","clipboard","writeText","success","handleDownload","dataUrl","current","width","document","createElement","download","href","click","handleCopy","info","blob","write","ClipboardItem","type","error","children","Item","name","rules","required","style","alignItems","paddingTop","labelCol","span","wrapperCol","showSearch","onChange","placeholder","options","map","p","key","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","align","color","target","rel","marginLeft","ref","background","padding","_c","$RefreshReg$"],"sources":["C:/Users/Gil/Documents/ReCreaMed/src/escalas/escalasCreateGeneralLink.jsx"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react'\r\nimport { getData, sendDataBody } from '../resources';\r\nimport { Form, Button, Space, Select, message } from 'antd'\r\nimport { usuario, ids_hospitales } from '../resources';\r\nimport QRCode from \"react-qr-code\";\r\nimport { toBlob, toPng } from 'html-to-image';\r\nconst { Option } = Select;\r\n\r\n\r\n\r\nexport default function EscalasCreateGeneralLink(props) {\r\n\r\n    const [misPacientes, setMisPacientes] = useState([])\r\n    const [selectedPatient, setSelectedPatient] = useState(null)\r\n    const [link, setLink] = useState('')\r\n    // Used to add a medico _id when the user is admin\r\n    const [medicosData, setMedicosData] = useState([])\r\n    const [medico, setMedico] = useState(null)\r\n\r\n    const imageRef = useRef(null);\r\n\r\n\r\n    const getPacientesOfDoctor = (_id) => { //Para el caso que la sesion sea de Medico\r\n        getData(`mispacientes/${_id}`).then(rs => { setSelectedPatient(null); setMisPacientes(rs); console.log(`patients of ${_id}`, rs); })\r\n    }\r\n\r\n    // If administrator or reception, filter medicos of hospital\r\n    const getDoctorsData = () => { //Para el caso que la sesion sea de Administrador\r\n        // const body = { ids: usuario.medicos_asignados }\r\n        // sendDataBody(`users/getMany`, body).then(rs => { setMedicosData(rs); console.log('medicosData: ', rs); })\r\n        getData('users_by_rol/Medico').then((rs) => { setMedicosData(myDoctors(rs)) })\r\n    }\r\n\r\n    const myDoctors = (doctorsData) => {\r\n\r\n        let doctorsFound = [];\r\n        ids_hospitales.forEach(id_hospital => {\r\n            doctorsData.forEach(doctor => {\r\n                doctor.horarios.forEach(horario => {\r\n                    if (!doctorsFound.includes(doctor) && horario.sucursal._id === id_hospital) doctorsFound.push(doctor)\r\n                });\r\n            });\r\n            console.log(`Founds for ${id_hospital}: `, doctorsFound)\r\n        });\r\n\r\n        return doctorsFound;\r\n    }\r\n    // End of medicos filtering\r\n\r\n    useEffect(() => {\r\n        usuario.rol === 'Medico' ? getPacientesOfDoctor(usuario._id) : getDoctorsData()\r\n    }, [])\r\n\r\n    const handleDoctorChange = (value) => { setMedico(value); getPacientesOfDoctor(value) };\r\n    const handleChange = (value) => { setLink(null); setSelectedPatient(value) };\r\n    // Filter `option.label` match the user type `input`\r\n    const filterOption = (input, option) =>\r\n        (option?.label ?? '').toLowerCase().includes(input.toLowerCase());\r\n\r\n    const generateLink = () => {\r\n        // let usr = usuario.rol === 'Administrador' ? medico : usuario._id;\r\n        let usr = (usuario.rol === 'Administrador' || usuario.rol === 'Recepcion' || usuario.rol === 'Enfermero') ? medico : usuario._id;\r\n\r\n        let l = `https://sistema.recreamed.com/${props.tipo}_public/${usr}/${selectedPatient}/${Date.now()}`\r\n        // let l = `http://localhost:3000/${props.tipo}_public/${usr}/${selectedPatient}/${Date.now()}`\r\n        setLink(l)\r\n    }\r\n    const copyLink = () => {\r\n        navigator.clipboard.writeText(link)\r\n        message.success('Enlace Copiado al Portapapeles!')\r\n    }\r\n\r\n    const handleDownload = async () => {\r\n        const dataUrl = await toPng(imageRef.current, { width: 288 });\r\n\r\n        // download image\r\n        const link = document.createElement('a');\r\n        link.download = \"codigo-de-enlace.png\";\r\n        link.href = dataUrl;\r\n        link.click();\r\n    }\r\n\r\n    const handleCopy = async () => {\r\n        message.info('Espere mientras se copia el codigo...')\r\n        toBlob(imageRef.current, { width: 288 })\r\n            .then(async function (blob) {\r\n                try {\r\n                    await navigator.clipboard.write([\r\n                        // eslint-disable-next-line no-undef\r\n                        new ClipboardItem({\r\n                            [blob.type]: blob\r\n                        })\r\n                    ]);\r\n                    console.log(\"Image copied\");\r\n                    message.success('Codigo Copiado al Portapapeles')\r\n                } catch (error) {\r\n                    console.error(error);\r\n                }\r\n            });\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                (usuario.rol === 'Administrador' || usuario.rol === 'Recepcion' || usuario.rol === 'Enfermero') &&\r\n                <Form.Item label=\"Medico\" name=\"usuario\" rules={[{ required: true, message: 'Selecciona el paciente' }]}\r\n                    style={{ alignItems: 'center', paddingTop: 20 }}\r\n                    labelCol={{ span: 8 }} wrapperCol={{ span: 16 }}>\r\n                    {/* <Select\r\n                        showSearch\r\n                        filterOption={filterOption}\r\n                        style={{ width: 260, }}\r\n                        onChange={handleDoctorChange}\r\n                        placeholder='Selecciona un medico'\r\n                    >\r\n                        {\r\n                            medicosData.map((p) => {\r\n                                return <Option key={p._id} value={p._id}>{p.name}</Option>\r\n                            })\r\n                        }\r\n                    </Select> */}\r\n                    <Select\r\n                        showSearch\r\n                        filterOption={filterOption}\r\n                        onChange={handleDoctorChange}\r\n                        placeholder='Selecciona un medico'\r\n                        options={\r\n                            medicosData.map((p) => (\r\n                                {\r\n                                    ...p,\r\n                                    key: p._id,\r\n                                    value: p._id,\r\n                                    label: p.name\r\n                                }\r\n                            ))\r\n                        }\r\n                    />\r\n                </Form.Item>\r\n            }\r\n\r\n            <Form.Item label=\"Paciente\" name=\"usuario\" rules={[{ required: true, message: 'Selecciona el paciente' }]}\r\n                style={{ alignItems: 'center', paddingTop: 20 }}>\r\n                {/* <Select\r\n                    showSearch\r\n                    style={{ width: 260, }}\r\n                    onChange={handleChange}\r\n                    placeholder='Selecciona un paciente'\r\n                    value={selectedPatient}\r\n                >\r\n                    {\r\n                        misPacientes.map((p) => {\r\n                            return <Option key={p._id} value={p._id}>{p.name}</Option>\r\n                        })\r\n                    }\r\n                </Select> */}\r\n                <Select\r\n                    showSearch\r\n                    filterOption={filterOption}\r\n                    onChange={handleChange}\r\n                    placeholder='Selecciona un paciente'\r\n                    value={selectedPatient}\r\n                    options={\r\n                        misPacientes.map((p) => (\r\n                            {\r\n                                ...p,\r\n                                key: p._id,\r\n                                value: p._id,\r\n                                label: p.name\r\n                            }\r\n                        ))\r\n                    }\r\n                />\r\n            </Form.Item>\r\n            <Button onClick={generateLink} disabled={!selectedPatient} >Generar Enlace</Button>\r\n\r\n\r\n            <br />\r\n\r\n            {\r\n                selectedPatient && link ? <div>\r\n                    <Space align='center'>\r\n                    </Space>\r\n                    <p style={{ paddingTop: 16, color: '#1890ff' }} >{link}</p>\r\n                    <Button onClick={copyLink}>Copiar Link</Button>\r\n\r\n                    {\r\n                        usuario.rol === 'Recepcion' && <Button type='primary' href={link} target='_blank' rel='noreferrer' style={{ marginLeft: 14 }}>Contestar Ahora</Button>\r\n                    }\r\n\r\n                    <br />\r\n                    <div ref={imageRef} style={{ background: 'white', padding: '16px' }}> <QRCode value={link} /> </div>\r\n                    <Button onClick={handleDownload}>Descargar Codigo</Button>\r\n                    <Button onClick={handleCopy} style={{ marginLeft: 12 }}>Copiar Codigo</Button>\r\n                </div> : <></>\r\n            }\r\n\r\n        </div >\r\n    )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}