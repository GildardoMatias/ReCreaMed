{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Gil\\\\Documents\\\\ReCreaMed\\\\src\\\\admHospitalViews\\\\doctors\\\\dash.doctors.hospitalTab.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Table, Avatar, Button, message } from 'antd';\nimport { UserOutlined } from '@ant-design/icons';\nimport { getData } from '../../resources';\nimport Loading from '../../loading';\nimport ReportsDoctors from './reports.doctors';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function HospitalTab(props) {\n  _s();\n  const [doctorsData, setDoctorsData] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  // Modal for details\n  const [medicForDetails, setMedicForDetails] = useState(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const handleOk = () => {\n    setIsModalOpen(false);\n  };\n\n  // Before all, get DoctorsData\n  useEffect(() => {\n    getDoctorsData();\n  }, []);\n  const getDoctorsData = () => {\n    getData(`users/hospital/${props.id_hospital}`).then(rs => {\n      setDoctorsData(rs);\n    }).finally(() => setLoading(false));\n  };\n  const columns = [{\n    title: 'Avatar',\n    dataIndex: 'avatar',\n    key: 'avatar',\n    render: (_, {\n      avatar\n    }) => {\n      return avatar.length > 9 ? /*#__PURE__*/_jsxDEV(\"img\", {\n        width: 64,\n        src: 'https://api.recreamed.com/images/' + avatar,\n        alt: \"ProfilePic\",\n        style: {\n          borderRadius: 6\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Avatar, {\n        size: 64,\n        icon: /*#__PURE__*/_jsxDEV(UserOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 35\n        }, this),\n        className: \"btnIconCentered\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this);\n    }\n  }, {\n    title: 'Nombre',\n    dataIndex: 'name',\n    key: 'name'\n  }, {\n    title: 'Correo',\n    dataIndex: 'email',\n    key: 'email'\n  }, {\n    title: 'Telefono',\n    dataIndex: 'telefono',\n    key: 'telefono'\n  }, {\n    title: 'Reporte mensual de citas',\n    dataIndex: 'reporte',\n    key: 'reporte',\n    render: (_, {\n      _id\n    }) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => {\n            message.info(_id);\n            setMedicForDetails(_id);\n            setIsModalOpen(true);\n          },\n          children: \"Ver reporte\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 16\n      }, this);\n    }\n  }];\n  if (loading) return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n      children: [\"Doctores del hospital \", props.hospital]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      dataSource: doctorsData,\n      columns: columns\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(ReportsDoctors, {\n      isModalOpen: isModalOpen,\n      handleOk: handleOk,\n      id_medico: medicForDetails\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 10\n  }, this);\n}\n_s(HospitalTab, \"o6CrvIdzzQz+XcmGJQZt0JEd2TQ=\");\n_c = HospitalTab;\nvar _c;\n$RefreshReg$(_c, \"HospitalTab\");","map":{"version":3,"names":["React","useEffect","useState","Table","Avatar","Button","message","UserOutlined","getData","Loading","ReportsDoctors","jsxDEV","_jsxDEV","HospitalTab","props","_s","doctorsData","setDoctorsData","loading","setLoading","medicForDetails","setMedicForDetails","isModalOpen","setIsModalOpen","handleOk","getDoctorsData","id_hospital","then","rs","finally","columns","title","dataIndex","key","render","_","avatar","length","width","src","alt","style","borderRadius","fileName","_jsxFileName","lineNumber","columnNumber","size","icon","className","_id","children","onClick","info","hospital","dataSource","id_medico","_c","$RefreshReg$"],"sources":["C:/Users/Gil/Documents/ReCreaMed/src/admHospitalViews/doctors/dash.doctors.hospitalTab.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { Table, Avatar, Button,message } from 'antd'\r\nimport { UserOutlined } from '@ant-design/icons'\r\nimport { getData } from '../../resources'\r\nimport Loading from '../../loading'\r\nimport ReportsDoctors from './reports.doctors'\r\n\r\nexport default function HospitalTab(props) {\r\n  const [doctorsData, setDoctorsData] = useState([])\r\n  const [loading, setLoading] = useState(false)\r\n\r\n  // Modal for details\r\n  const [medicForDetails, setMedicForDetails] = useState(null)\r\n  const [isModalOpen, setIsModalOpen] = useState(false)\r\n  const handleOk = () => {\r\n    setIsModalOpen(false);\r\n  };\r\n\r\n  // Before all, get DoctorsData\r\n  useEffect(() => { getDoctorsData() }, [])\r\n  const getDoctorsData = () => {\r\n    getData(`users/hospital/${props.id_hospital}`).then((rs) => { setDoctorsData(rs) }).finally(() => setLoading(false))\r\n  }\r\n  const columns = [\r\n    {\r\n      title: 'Avatar',\r\n      dataIndex: 'avatar',\r\n      key: 'avatar',\r\n      render: (_, { avatar }) => {\r\n        return avatar.length > 9 ?\r\n          <img width={64} src={'https://api.recreamed.com/images/' + avatar} alt='ProfilePic' style={{borderRadius: 6}} /> :\r\n          <Avatar size={64} icon={<UserOutlined />} className='btnIconCentered' />\r\n      }\r\n    },\r\n    {\r\n      title: 'Nombre',\r\n      dataIndex: 'name',\r\n      key: 'name',\r\n    },\r\n    {\r\n      title: 'Correo',\r\n      dataIndex: 'email',\r\n      key: 'email',\r\n    },\r\n    {\r\n      title: 'Telefono',\r\n      dataIndex: 'telefono',\r\n      key: 'telefono',\r\n    },\r\n    {\r\n      title: 'Reporte mensual de citas',\r\n      dataIndex: 'reporte',\r\n      key: 'reporte',\r\n      render: (_, { _id }) => {\r\n        return <div>\r\n          <Button onClick={() => {message.info(_id) ; setMedicForDetails(_id); setIsModalOpen(true) }}>\r\n            Ver reporte\r\n          </Button>\r\n        </div>\r\n      }\r\n    },\r\n\r\n  ];\r\n\r\n  if (loading) return <Loading />\r\n\r\n  return <div>\r\n    <h6>Doctores del hospital {props.hospital}</h6>\r\n\r\n    <Table dataSource={doctorsData} columns={columns} />\r\n\r\n    <ReportsDoctors isModalOpen={isModalOpen} handleOk={handleOk} id_medico={medicForDetails} />\r\n  </div>\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,KAAK,EAAEC,MAAM,EAAEC,MAAM,EAACC,OAAO,QAAQ,MAAM;AACpD,SAASC,YAAY,QAAQ,mBAAmB;AAChD,SAASC,OAAO,QAAQ,iBAAiB;AACzC,OAAOC,OAAO,MAAM,eAAe;AACnC,OAAOC,cAAc,MAAM,mBAAmB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE9C,eAAe,SAASC,WAAWA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACzC,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACgB,OAAO,EAAEC,UAAU,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;;EAE7C;EACA,MAAM,CAACkB,eAAe,EAAEC,kBAAkB,CAAC,GAAGnB,QAAQ,CAAC,IAAI,CAAC;EAC5D,MAAM,CAACoB,WAAW,EAAEC,cAAc,CAAC,GAAGrB,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAMsB,QAAQ,GAAGA,CAAA,KAAM;IACrBD,cAAc,CAAC,KAAK,CAAC;EACvB,CAAC;;EAED;EACAtB,SAAS,CAAC,MAAM;IAAEwB,cAAc,CAAC,CAAC;EAAC,CAAC,EAAE,EAAE,CAAC;EACzC,MAAMA,cAAc,GAAGA,CAAA,KAAM;IAC3BjB,OAAO,CAAE,kBAAiBM,KAAK,CAACY,WAAY,EAAC,CAAC,CAACC,IAAI,CAAEC,EAAE,IAAK;MAAEX,cAAc,CAACW,EAAE,CAAC;IAAC,CAAC,CAAC,CAACC,OAAO,CAAC,MAAMV,UAAU,CAAC,KAAK,CAAC,CAAC;EACtH,CAAC;EACD,MAAMW,OAAO,GAAG,CACd;IACEC,KAAK,EAAE,QAAQ;IACfC,SAAS,EAAE,QAAQ;IACnBC,GAAG,EAAE,QAAQ;IACbC,MAAM,EAAEA,CAACC,CAAC,EAAE;MAAEC;IAAO,CAAC,KAAK;MACzB,OAAOA,MAAM,CAACC,MAAM,GAAG,CAAC,gBACtBzB,OAAA;QAAK0B,KAAK,EAAE,EAAG;QAACC,GAAG,EAAE,mCAAmC,GAAGH,MAAO;QAACI,GAAG,EAAC,YAAY;QAACC,KAAK,EAAE;UAACC,YAAY,EAAE;QAAC;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,gBAChHlC,OAAA,CAACR,MAAM;QAAC2C,IAAI,EAAE,EAAG;QAACC,IAAI,eAAEpC,OAAA,CAACL,YAAY;UAAAoC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAE;QAACG,SAAS,EAAC;MAAiB;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAC5E;EACF,CAAC,EACD;IACEf,KAAK,EAAE,QAAQ;IACfC,SAAS,EAAE,MAAM;IACjBC,GAAG,EAAE;EACP,CAAC,EACD;IACEF,KAAK,EAAE,QAAQ;IACfC,SAAS,EAAE,OAAO;IAClBC,GAAG,EAAE;EACP,CAAC,EACD;IACEF,KAAK,EAAE,UAAU;IACjBC,SAAS,EAAE,UAAU;IACrBC,GAAG,EAAE;EACP,CAAC,EACD;IACEF,KAAK,EAAE,0BAA0B;IACjCC,SAAS,EAAE,SAAS;IACpBC,GAAG,EAAE,SAAS;IACdC,MAAM,EAAEA,CAACC,CAAC,EAAE;MAAEe;IAAI,CAAC,KAAK;MACtB,oBAAOtC,OAAA;QAAAuC,QAAA,eACLvC,OAAA,CAACP,MAAM;UAAC+C,OAAO,EAAEA,CAAA,KAAM;YAAC9C,OAAO,CAAC+C,IAAI,CAACH,GAAG,CAAC;YAAG7B,kBAAkB,CAAC6B,GAAG,CAAC;YAAE3B,cAAc,CAAC,IAAI,CAAC;UAAC,CAAE;UAAA4B,QAAA,EAAC;QAE7F;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IACR;EACF,CAAC,CAEF;EAED,IAAI5B,OAAO,EAAE,oBAAON,OAAA,CAACH,OAAO;IAAAkC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;EAE/B,oBAAOlC,OAAA;IAAAuC,QAAA,gBACLvC,OAAA;MAAAuC,QAAA,GAAI,wBAAsB,EAACrC,KAAK,CAACwC,QAAQ;IAAA;MAAAX,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAE/ClC,OAAA,CAACT,KAAK;MAACoD,UAAU,EAAEvC,WAAY;MAACc,OAAO,EAAEA;IAAQ;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAEpDlC,OAAA,CAACF,cAAc;MAACY,WAAW,EAAEA,WAAY;MAACE,QAAQ,EAAEA,QAAS;MAACgC,SAAS,EAAEpC;IAAgB;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzF,CAAC;AACR;AAAC/B,EAAA,CAlEuBF,WAAW;AAAA4C,EAAA,GAAX5C,WAAW;AAAA,IAAA4C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}