{"ast":null,"code":"import React,{useState,useEffect}from'react';import{API,deleteData,sendDataBody}from'../../resources';import{Calendar,dayjsLocalizer}from'react-big-calendar';import'react-big-calendar/lib/css/react-big-calendar.css';import{Modal,Popconfirm,Button}from'antd';import dayjs from'dayjs';import CreateCita,{CreateCitaForm}from'./create-cita-for-medic';import Loading from'../../loading';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const localizer=dayjsLocalizer(dayjs);// admin and receipt shares hospital-tab.citas and create-cita-for-medic\n// ONLY RECEIPT CANT DELETE, SO, FIRST EDIT RECEIPTIONIST\nconst HospitalTab=_ref=>{let{id_hospital,hospital}=_ref;const[citaForEdit,setCitaForEdit]=useState({});const[loading,setLoading]=useState(true);const[isModalOpen,setIsModalOpen]=useState(false);const showModal=()=>{setIsModalOpen(true);};const handleOk=()=>{setIsModalOpen(false);setEditingCita(false);};const handleCancel=()=>{setIsModalOpen(false);setEditingCita(false);};const[editingCita,setEditingCita]=useState(false);// Tools for createCita Modal\nconst[fecha_hora,setFecha_hora]=useState('');const[isCreateModalOpen,setIsCreateModalOpen]=useState(false);// for pass to create cita model\nconst[pacientesData,setPacientesData]=useState([]);const[serviceList,setServiceList]=useState(null);const[citasData,setCitasData]=useState(null);const[loadedSuccessfully,setLoadedSuccessfully]=useState(false);const[initialDates,setInitialDates]=useState(null);useEffect(()=>{fetch(API+\"users/hospital/\".concat(id_hospital)).then(response=>response.json()).then(medicosResponse=>{console.log('medicos response: ',medicosResponse);let allServices=[];const idmeds=medicosResponse.map(doc=>{allServices=allServices.concat(doc.configuracion.tratamientos_ofrecidos);// Extract tratamientos ofrecdos to create an unique list\nreturn doc._id;});console.log('Services: ',allServices);setServiceList(allServices);// Llamada al segundo API\nreturn fetch(API+'pacientes/medicos',{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({medicos:idmeds})});}).then(response=>response.json()).then(pacientesResponse=>{console.log('Pacientes response: ',pacientesResponse);pacientesResponse.forEach(paciente=>{paciente.label=paciente.name;paciente.value=paciente._id;});setPacientesData(pacientesResponse);}).catch(error=>{// Manejar errores\nconsole.error('Error:',error);});},[]);useEffect(()=>{// Verificar si ambos sets de datos están disponibles y tienen contenido\nif(serviceList!==null&&serviceList.length>0&&pacientesData!==null){const fechaActual=new Date();// Calcular la fecha de hace una semana\nconst fechaHaceUnaSemana=new Date();fechaHaceUnaSemana.setDate(fechaActual.getDate()-7);// Calcular la fecha dentro de una semana\nconst fechaDentroDeUnaSemana=new Date();fechaDentroDeUnaSemana.setDate(fechaActual.getDate()+31);setInitialDates({start_date:fechaHaceUnaSemana,end_date:fechaDentroDeUnaSemana});// Nos servirá más adelante al crear citas\ngetCitasData(fechaHaceUnaSemana,fechaDentroDeUnaSemana);// setLoadedSuccessfully(true);\n}},[serviceList,pacientesData]);const getCitasData=async function(){let _start_date=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialDates.start_date;let _end_date=arguments.length>1&&arguments[1]!==undefined?arguments[1]:initialDates.end_date;const body={start_date:_start_date,end_date:_end_date};await sendDataBody(\"citas/sucursal/\".concat(id_hospital),body).then(rs=>{// console.log('resp ', rs)\nrs.forEach(cita=>{var _cita$duracion,_cita$usuario;const servicio=cita.id_servicio;// Colorze cita\nconst servicioInfo=serviceList.find(servicioItem=>servicioItem._id===servicio);if(servicioInfo){cita.color=servicioInfo.color;}cita.start=new Date(Date.parse(cita.fecha_hora));const endDate=new Date(Date.parse(cita.fecha_hora));endDate.setTime(endDate.getTime()+1*((_cita$duracion=cita.duracion)!==null&&_cita$duracion!==void 0?_cita$duracion:60)*60*1000);cita.end=new Date(Date.parse(endDate));cita.title=(_cita$usuario=cita.usuario)===null||_cita$usuario===void 0?void 0:_cita$usuario.name;cita.key=cita._id;});setCitasData(rs);console.log('Citas data at end ',citasData);setLoadedSuccessfully(true);// setLoading(false)\n});};// Select cita to show details and show confirm button\nconst selectEvent=e=>{console.log('For eedit',e);if(!e.doctor)e.doctor=e.medico;// For details\nif(!e.paciente)e.paciente=e.usuario;// For details\nif(e.medico&&e.medico._id)e.medico=e.medico._id;// For edit\nif(e.usuario&&e.usuario._id)e.usuario=e.usuario._id;// For edit\ne.fecha_hora=dayjs(e.fecha_hora);//For edit \nsetCitaForEdit(e);if(citaForEdit)showModal();};const handleSlotSelection=_ref2=>{let{start,end,action}=_ref2;setFecha_hora(dayjs(start));setIsCreateModalOpen(true);return{style:{backgroundColor:'red'}};};// Delete button\nconst confirm=e=>{deleteData(\"citas/remove/\".concat(citaForEdit._id)).then(rs=>{console.log(rs);getCitasData();handleCancel();});deleteData(\"balances/remove/cita/\".concat(citaForEdit._id));};const cancel=e=>{console.log(e);};const eventStyleGetter=(event,start,end,isSelected)=>{var style={backgroundColor:event.color,borderRadius:'4px',opacity:0.8,color:'white',border:'0px',display:'block'};return{style:style};};if(serviceList===null||pacientesData===null){// Muestra un mensaje de carga mientras se obtienen los datos\nreturn/*#__PURE__*/_jsx(Loading,{});}if(loadedSuccessfully){// Mostrar el alert solo si los datos cargaron correctamente\nreturn/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Calendar,{scrollToTime:new Date(Date.now()),selectable:\"true\",localizer:localizer,events:citasData,eventPropGetter:eventStyleGetter,startAccessor:\"start\",endAccessor:\"end\",style:{height:500},messages:{next:\"Sig\",previous:\"Ant\",today:\"Hoy\",month:\"Mes\",week:\"Semana\",day:\"Día\"},defaultView:\"week\",onDoubleClickEvent:e=>console.log(e),onSelectEvent:selectEvent,onSelecting:e=>console.log(e)// onSelectSlot={handleSlotSelection}\n,onSelectSlot:handleSlotSelection,onRangeChange:range=>{console.log('Start ',range);console.log('End ',range.end);}}),/*#__PURE__*/_jsx(Modal,{title:\"Detalles Cita\",open:isModalOpen,onOk:handleOk,onCancel:handleCancel,destroyOnClose:true,width:900,footer:[/*#__PURE__*/_jsx(Popconfirm,{title:\"Eliminar Cita\",description:\"Seguro que quiere eliminar la cita?\",onConfirm:confirm,onCancel:cancel,okText:\"Si\",cancelText:\"No\",children:/*#__PURE__*/_jsx(Button,{danger:true,children:\"Eliminar\"})}),/*#__PURE__*/_jsx(Button,{onClick:()=>setEditingCita(!editingCita),children:editingCita?\"Cancelar\":\"Modificar\"}),/*#__PURE__*/_jsx(Button,{onClick:handleCancel,children:\"Cerrar\"})],children:editingCita?/*#__PURE__*/_jsx(CreateCitaForm,{cita:citaForEdit,setIsModalOpen:setIsModalOpen,getCitasData:getCitasData,setEditingCita:setEditingCita,hospital:id_hospital,pacientesData:pacientesData}):/*#__PURE__*/_jsx(\"div\",{children:citaForEdit&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Medico \"}),citaForEdit.doctor?citaForEdit.doctor.name:'Sin medico']}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Paciente \"}),citaForEdit.paciente?citaForEdit.paciente.name:'Sin paciente']}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Fecha \"}),new Date(citaForEdit.fecha_hora).toLocaleDateString()]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Hora \"}),new Date(citaForEdit.fecha_hora).toLocaleTimeString()]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Servicio \"}),citaForEdit.servicio]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Comentarios \"}),citaForEdit.comentarios]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Color \"}),\" \",/*#__PURE__*/_jsx(\"div\",{style:{width:18,height:8,backgroundColor:citaForEdit.color}}),\" \"]})]})})}),/*#__PURE__*/_jsx(CreateCita,{setIsModalOpen:setIsCreateModalOpen,isOpenModal:isCreateModalOpen,hospital:id_hospital,fecha_hora:fecha_hora,getCitasData:getCitasData,pacientesData:pacientesData})]});}// Si los datos no cargaron correctamente, muestra un mensaje de error\nreturn/*#__PURE__*/_jsx(\"p\",{children:\"Citas no cargadas correctamente\"});};export default HospitalTab;","map":{"version":3,"names":["React","useState","useEffect","API","deleteData","sendDataBody","Calendar","dayjsLocalizer","Modal","Popconfirm","Button","dayjs","CreateCita","CreateCitaForm","Loading","jsx","_jsx","jsxs","_jsxs","localizer","HospitalTab","_ref","id_hospital","hospital","citaForEdit","setCitaForEdit","loading","setLoading","isModalOpen","setIsModalOpen","showModal","handleOk","setEditingCita","handleCancel","editingCita","fecha_hora","setFecha_hora","isCreateModalOpen","setIsCreateModalOpen","pacientesData","setPacientesData","serviceList","setServiceList","citasData","setCitasData","loadedSuccessfully","setLoadedSuccessfully","initialDates","setInitialDates","fetch","concat","then","response","json","medicosResponse","console","log","allServices","idmeds","map","doc","configuracion","tratamientos_ofrecidos","_id","method","headers","body","JSON","stringify","medicos","pacientesResponse","forEach","paciente","label","name","value","catch","error","length","fechaActual","Date","fechaHaceUnaSemana","setDate","getDate","fechaDentroDeUnaSemana","start_date","end_date","getCitasData","_start_date","arguments","undefined","_end_date","rs","cita","_cita$duracion","_cita$usuario","servicio","id_servicio","servicioInfo","find","servicioItem","color","start","parse","endDate","setTime","getTime","duracion","end","title","usuario","key","selectEvent","e","doctor","medico","handleSlotSelection","_ref2","action","style","backgroundColor","confirm","cancel","eventStyleGetter","event","isSelected","borderRadius","opacity","border","display","children","scrollToTime","now","selectable","events","eventPropGetter","startAccessor","endAccessor","height","messages","next","previous","today","month","week","day","defaultView","onDoubleClickEvent","onSelectEvent","onSelecting","onSelectSlot","onRangeChange","range","open","onOk","onCancel","destroyOnClose","width","footer","description","onConfirm","okText","cancelText","danger","onClick","toLocaleDateString","toLocaleTimeString","comentarios","isOpenModal"],"sources":["C:/Users/Gil/Documents/ReCreaMed/src/admHospitalViews/citas/hospital-tab.citas.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { API, deleteData, sendDataBody } from '../../resources';\r\nimport { Calendar, dayjsLocalizer } from 'react-big-calendar';\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\nimport { Modal, Popconfirm, Button } from 'antd'\r\nimport dayjs from 'dayjs';\r\nimport CreateCita, { CreateCitaForm } from './create-cita-for-medic';\r\nimport Loading from '../../loading';\r\n\r\nconst localizer = dayjsLocalizer(dayjs)\r\n\r\n// admin and receipt shares hospital-tab.citas and create-cita-for-medic\r\n// ONLY RECEIPT CANT DELETE, SO, FIRST EDIT RECEIPTIONIST\r\n\r\nconst HospitalTab = ({ id_hospital, hospital }) => {\r\n\r\n    const [citaForEdit, setCitaForEdit] = useState({})\r\n    const [loading, setLoading] = useState(true)\r\n    const [isModalOpen, setIsModalOpen] = useState(false);\r\n    const showModal = () => { setIsModalOpen(true) }\r\n    const handleOk = () => { setIsModalOpen(false); setEditingCita(false) }\r\n    const handleCancel = () => { setIsModalOpen(false); setEditingCita(false) }\r\n    const [editingCita, setEditingCita] = useState(false)\r\n\r\n    // Tools for createCita Modal\r\n    const [fecha_hora, setFecha_hora] = useState('')\r\n    const [isCreateModalOpen, setIsCreateModalOpen] = useState(false)\r\n    // for pass to create cita model\r\n    const [pacientesData, setPacientesData] = useState([])\r\n\r\n    const [serviceList, setServiceList] = useState(null);\r\n\r\n    const [citasData, setCitasData] = useState(null)\r\n\r\n    const [loadedSuccessfully, setLoadedSuccessfully] = useState(false);\r\n\r\n    const [initialDates, setInitialDates] = useState(null)\r\n\r\n\r\n    useEffect(() => {\r\n        fetch(API + `users/hospital/${id_hospital}`)\r\n            .then(response => response.json())\r\n            .then(medicosResponse => {\r\n                console.log('medicos response: ', medicosResponse)\r\n                let allServices = [];\r\n                const idmeds = medicosResponse.map(doc => {\r\n                    allServices = allServices.concat(doc.configuracion.tratamientos_ofrecidos) // Extract tratamientos ofrecdos to create an unique list\r\n                    return doc._id\r\n                })\r\n                console.log('Services: ', allServices)\r\n                setServiceList(allServices)\r\n\r\n                // Llamada al segundo API\r\n                return fetch(API + 'pacientes/medicos', {\r\n                    method: \"POST\",\r\n                    headers: { \"Content-Type\": \"application/json\" },\r\n                    body: JSON.stringify({ medicos: idmeds })\r\n                });\r\n            })\r\n            .then(response => response.json())\r\n            .then(pacientesResponse => {\r\n                console.log('Pacientes response: ', pacientesResponse)\r\n                pacientesResponse.forEach(paciente => {\r\n                    paciente.label = paciente.name; paciente.value = paciente._id;\r\n                })\r\n                setPacientesData(pacientesResponse);\r\n            })\r\n            .catch(error => {\r\n                // Manejar errores\r\n                console.error('Error:', error);\r\n            });\r\n    }, []);\r\n\r\n\r\n    useEffect(() => {\r\n        // Verificar si ambos sets de datos están disponibles y tienen contenido\r\n        if (serviceList !== null && serviceList.length > 0 && pacientesData !== null) {\r\n\r\n            const fechaActual = new Date();\r\n\r\n            // Calcular la fecha de hace una semana\r\n            const fechaHaceUnaSemana = new Date();\r\n            fechaHaceUnaSemana.setDate(fechaActual.getDate() - 7);\r\n\r\n            // Calcular la fecha dentro de una semana\r\n            const fechaDentroDeUnaSemana = new Date();\r\n            fechaDentroDeUnaSemana.setDate(fechaActual.getDate() + 31);\r\n            setInitialDates({ start_date: fechaHaceUnaSemana, end_date: fechaDentroDeUnaSemana }) // Nos servirá más adelante al crear citas\r\n            getCitasData(fechaHaceUnaSemana, fechaDentroDeUnaSemana)\r\n            // setLoadedSuccessfully(true);\r\n        }\r\n    }, [serviceList, pacientesData]);\r\n\r\n    const getCitasData = async (_start_date = initialDates.start_date, _end_date = initialDates.end_date) => {\r\n        const body = { start_date: _start_date, end_date: _end_date }\r\n\r\n        await sendDataBody(`citas/sucursal/${id_hospital}`, body).then((rs) => {\r\n            // console.log('resp ', rs)\r\n            rs.forEach((cita) => {\r\n                const servicio = cita.id_servicio; // Colorze cita\r\n                const servicioInfo = serviceList.find(servicioItem => servicioItem._id === servicio);\r\n                if (servicioInfo) {\r\n                    cita.color = servicioInfo.color;\r\n                }\r\n\r\n                cita.start = new Date(Date.parse(cita.fecha_hora));\r\n                const endDate = new Date(Date.parse(cita.fecha_hora));\r\n                endDate.setTime(endDate.getTime() + 1 * (cita.duracion ?? 60) * 60 * 1000)\r\n                cita.end = new Date(Date.parse(endDate));\r\n                cita.title = cita.usuario?.name;\r\n                cita.key = cita._id;\r\n            });\r\n            setCitasData(rs)\r\n            console.log('Citas data at end ', citasData)\r\n            setLoadedSuccessfully(true);\r\n\r\n            // setLoading(false)\r\n        })\r\n    }\r\n\r\n    // Select cita to show details and show confirm button\r\n    const selectEvent = (e) => {\r\n        console.log('For eedit', e)\r\n        if (!e.doctor) e.doctor = e.medico; // For details\r\n        if (!e.paciente) e.paciente = e.usuario; // For details\r\n        if (e.medico && e.medico._id) e.medico = e.medico._id;  // For edit\r\n        if (e.usuario && e.usuario._id) e.usuario = e.usuario._id;  // For edit\r\n        e.fecha_hora = dayjs(e.fecha_hora) //For edit \r\n        setCitaForEdit(e)\r\n        if (citaForEdit) showModal()\r\n    }\r\n\r\n\r\n    const handleSlotSelection = ({ start, end, action }) => {\r\n        setFecha_hora(dayjs(start))\r\n        setIsCreateModalOpen(true)\r\n        return { style: { backgroundColor: 'red' } };\r\n    };\r\n\r\n    // Delete button\r\n    const confirm = (e) => {\r\n        deleteData(`citas/remove/${citaForEdit._id}`).then((rs) => { console.log(rs); getCitasData(); handleCancel() })\r\n        deleteData(`balances/remove/cita/${citaForEdit._id}`)\r\n    };\r\n\r\n    const cancel = (e) => { console.log(e) }\r\n\r\n    const eventStyleGetter = (event, start, end, isSelected) => {\r\n\r\n        var style = {\r\n            backgroundColor: event.color,\r\n            borderRadius: '4px',\r\n            opacity: 0.8,\r\n            color: 'white',\r\n            border: '0px',\r\n            display: 'block'\r\n        };\r\n        return {\r\n            style: style\r\n        };\r\n    }\r\n\r\n    if (serviceList === null || pacientesData === null) {\r\n        // Muestra un mensaje de carga mientras se obtienen los datos\r\n        return <Loading />\r\n    }\r\n\r\n    if (loadedSuccessfully) {\r\n        // Mostrar el alert solo si los datos cargaron correctamente\r\n        return (\r\n            <div>\r\n\r\n                <Calendar\r\n                    scrollToTime={new Date(Date.now())}\r\n                    selectable='true'\r\n                    localizer={localizer}\r\n                    events={citasData}\r\n                    eventPropGetter={eventStyleGetter}\r\n                    startAccessor=\"start\"\r\n                    endAccessor=\"end\"\r\n                    style={{ height: 500 }}\r\n                    messages={{\r\n                        next: \"Sig\",\r\n                        previous: \"Ant\",\r\n                        today: \"Hoy\",\r\n                        month: \"Mes\",\r\n                        week: \"Semana\",\r\n                        day: \"Día\"\r\n                    }}\r\n                    defaultView=\"week\"\r\n                    onDoubleClickEvent={(e) => console.log(e)}\r\n                    onSelectEvent={selectEvent}\r\n                    onSelecting={(e) => console.log(e)}\r\n                    // onSelectSlot={handleSlotSelection}\r\n                    onSelectSlot={handleSlotSelection}\r\n                    onRangeChange={(range) => {\r\n\r\n                        console.log('Start ', range)\r\n                        console.log('End ', range.end)\r\n\r\n                    }}\r\n                />\r\n\r\n                <Modal title=\"Detalles Cita\" open={isModalOpen} onOk={handleOk} onCancel={handleCancel} destroyOnClose width={900}\r\n                    footer={[\r\n                        <Popconfirm\r\n                            title=\"Eliminar Cita\"\r\n                            description=\"Seguro que quiere eliminar la cita?\"\r\n                            onConfirm={confirm}\r\n                            onCancel={cancel}\r\n                            okText=\"Si\"\r\n                            cancelText=\"No\"\r\n                        >\r\n                            <Button danger>Eliminar</Button>\r\n                        </Popconfirm>,\r\n                        <Button onClick={() => setEditingCita(!editingCita)}>{editingCita ? \"Cancelar\" : \"Modificar\"}</Button>,\r\n                        <Button onClick={handleCancel}>Cerrar</Button>\r\n                    ]}>\r\n\r\n\r\n                    {editingCita ?\r\n                        <CreateCitaForm cita={citaForEdit} setIsModalOpen={setIsModalOpen} getCitasData={getCitasData} setEditingCita={setEditingCita} hospital={id_hospital} pacientesData={pacientesData} />\r\n                        : <div>{citaForEdit && <div>\r\n                            <p><strong>Medico </strong>{citaForEdit.doctor ? citaForEdit.doctor.name : 'Sin medico'}</p>\r\n                            <p><strong>Paciente </strong>{citaForEdit.paciente ? citaForEdit.paciente.name : 'Sin paciente'}</p>\r\n                            <p><strong>Fecha </strong>{new Date(citaForEdit.fecha_hora).toLocaleDateString()}</p>\r\n                            <p><strong>Hora </strong>{new Date(citaForEdit.fecha_hora).toLocaleTimeString()}</p>\r\n                            <p><strong>Servicio </strong>{citaForEdit.servicio}</p>\r\n                            <p><strong>Comentarios </strong>{citaForEdit.comentarios}</p>\r\n                            {/* <p><strong>Servicio ID </strong>{citaForEdit.id_servicio}</p> */}\r\n                            <p><strong>Color </strong> <div style={{ width: 18, height: 8, backgroundColor: citaForEdit.color }}></div> </p>\r\n                            {/* <Button type='primary' onClick={confirmService}>Confirmar Servicio</Button>, */}\r\n                        </div>\r\n                        }\r\n                        </div>\r\n                    }\r\n                </Modal>\r\n\r\n                <CreateCita setIsModalOpen={setIsCreateModalOpen} isOpenModal={isCreateModalOpen} hospital={id_hospital} fecha_hora={fecha_hora} getCitasData={getCitasData} pacientesData={pacientesData} />\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n    // Si los datos no cargaron correctamente, muestra un mensaje de error\r\n    return <p>Citas no cargadas correctamente</p>;\r\n};\r\n\r\nexport default HospitalTab;"],"mappings":"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"},"metadata":{},"sourceType":"module"}