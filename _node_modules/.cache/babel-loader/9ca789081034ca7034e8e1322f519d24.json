{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Gil\\\\Documents\\\\ReCreaMed\\\\src\\\\recepcionViews\\\\citas\\\\hospital-tab.citas.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Modal, Button, Popconfirm } from \"antd\";\nimport { deleteData, getData, pre_colors } from '../../resources';\nimport Loading from '../../loading';\nimport { Calendar, dayjsLocalizer } from 'react-big-calendar';\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport CreateCita, { CreateCitaForm } from './create-cita-for-medic';\nimport dayjs from 'dayjs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst localizer = dayjsLocalizer(dayjs);\n// admin and receipt shares citas and create citas\n// ONLY RECEIPT CANT DELETE, SO, FIRST EDIT RECEIPT\nexport default function HospitalTab(props) {\n  _s();\n  const [citaForEdit, setCitaForEdit] = useState({});\n  const [citasData, setCitasData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const showModal = () => {\n    setIsModalOpen(true);\n  };\n  const handleOk = () => {\n    setIsModalOpen(false);\n    setEditingCita(false);\n  };\n  const handleCancel = () => {\n    setIsModalOpen(false);\n    setEditingCita(false);\n  };\n  const [editingCita, setEditingCita] = useState(false);\n  const [serviceList, setserviceList] = useState([]);\n\n  // Tools for createCita Modal\n  const [fecha_hora, setFecha_hora] = useState('');\n  const [isCreateModalOpen, setIsCreateModalOpen] = useState(false);\n  // for pass to create cita model\n  const [pacientesData, setPacientesData] = useState([]);\n  const [medicosData, setMedicosData] = useState([]);\n  const findPatientsOfMyMedicos = pacientesData => {\n    let dl = [];\n    // Check on each horario of each medico of medicos asignados of patient to see if share sucursal with my horarios as admin\n    pacientesData.forEach(paciente => {\n      paciente.medicos_asignados.forEach(med => {\n        med.horarios.forEach(h => {\n          if (h.sucursal === props.id_hospital && !dl.includes(paciente)) {\n            paciente.label = paciente.name;\n            paciente.value = paciente._id;\n            dl.push(paciente);\n          }\n        });\n      });\n    });\n    return dl;\n  };\n  const getPacientesData = () => {\n    // First of all, get pacientes data for pass to the create cita component\n    getData('users_by_rol/Paciente').then(rs => {\n      setPacientesData(findPatientsOfMyMedicos(rs));\n    });\n  };\n  useEffect(() => {\n    getPacientesData();\n    getCitasData();\n  }, []);\n  const getCitasData = () => {\n    const list = []; // For colorize\n    getData(`citas/sucursal/${props.id_hospital}`).then(rs => {\n      console.log('resp ', rs);\n      rs.forEach(cita => {\n        var _cita$duracion, _cita$usuario;\n        const servicio = cita.id_servicio; // for colorize slots\n        if (!list.includes(servicio)) {\n          list.push(servicio);\n        }\n        cita.start = new Date(Date.parse(cita.fecha_hora));\n        const endDate = new Date(Date.parse(cita.fecha_hora));\n        endDate.setTime(endDate.getTime() + 1 * ((_cita$duracion = cita.duracion) !== null && _cita$duracion !== void 0 ? _cita$duracion : 60) * 60 * 1000);\n        cita.end = new Date(Date.parse(endDate));\n        cita.title = (_cita$usuario = cita.usuario) === null || _cita$usuario === void 0 ? void 0 : _cita$usuario.name;\n        cita.key = cita._id;\n      });\n      console.log('Services ', list);\n      setserviceList(list);\n      setCitasData(rs);\n    }).finally(() => setLoading(false));\n  };\n\n  // Select cita to show details and show confirm button\n  const selectEvent = e => {\n    if (!e.doctor) e.doctor = e.medico; // For details\n    if (!e.paciente) e.paciente = e.usuario; // For details\n    if (e.medico && e.medico._id) e.medico = e.medico._id; // For edit\n    if (e.usuario && e.usuario._id) e.usuario = e.usuario._id; // For edit\n    e.fecha_hora = dayjs(e.fecha_hora); //For edit\n    console.log('Fecha al editar: ', e.fecha_hora);\n    setCitaForEdit(e);\n    if (citaForEdit) showModal();\n  };\n  const handleSlotSelection = ({\n    start,\n    end,\n    action\n  }) => {\n    // setFecha_hora(new Date(start).toISOString())\n    setFecha_hora(dayjs(start));\n    console.log('Fecha al crear: ', dayjs(start));\n    setIsCreateModalOpen(true);\n    return {\n      style: {\n        backgroundColor: 'red'\n      }\n    };\n  };\n  // Delete button\n  const confirm = e => {\n    deleteData(`citas/remove/${citaForEdit._id}`).then(rs => {\n      getCitasData();\n      handleCancel();\n    });\n    deleteData(`balances/remove/cita/${citaForEdit._id}`);\n  };\n  const eventStyleGetter = (event, start, end, isSelected) => {\n    const index = serviceList.indexOf(event.id_servicio);\n    var backgroundColor = '#' + pre_colors[index];\n    var style = {\n      backgroundColor: backgroundColor,\n      borderRadius: '4px',\n      opacity: 0.8,\n      color: 'white',\n      border: '0px',\n      display: 'block'\n    };\n    return {\n      style: style\n    };\n  };\n  return loading ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 22\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n      children: [\"Citas del hospital \", props.hospital]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Calendar, {\n      scrollToTime: new Date(Date.now()),\n      selectable: \"true\",\n      localizer: localizer,\n      events: citasData,\n      eventPropGetter: eventStyleGetter,\n      startAccessor: \"start\",\n      endAccessor: \"end\",\n      style: {\n        height: 500\n      },\n      messages: {\n        next: \"Sig\",\n        previous: \"Ant\",\n        today: \"Hoy\",\n        month: \"Mes\",\n        week: \"Semana\",\n        day: \"DÃ­a\"\n      },\n      defaultView: \"week\",\n      onDoubleClickEvent: e => console.log(e),\n      onSelectEvent: selectEvent,\n      onSelecting: e => console.log(e)\n      // onSelectSlot={handleSlotSelection}\n      ,\n      onSelectSlot: handleSlotSelection\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      title: \"Detalles Cita\",\n      open: isModalOpen,\n      onOk: handleOk,\n      onCancel: handleCancel,\n      destroyOnClose: true,\n      footer: [\n      /*#__PURE__*/\n      // <Popconfirm\n      //     title=\"Eliminar Cita\"\n      //     description=\"Seguro que quiere eliminar la cita?\"\n      //     onConfirm={confirm}\n      //     onCancel={cancel}\n      //     okText=\"Si\"\n      //     cancelText=\"No\"\n      // >\n      //     <Button danger>Eliminar</Button>\n      // </Popconfirm>\n      //,\n      _jsxDEV(Button, {\n        onClick: () => setEditingCita(!editingCita),\n        children: editingCita ? \"Cancelar\" : \"Modificar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleCancel,\n        children: \"Cerrar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 17\n      }, this)],\n      children: editingCita ? /*#__PURE__*/_jsxDEV(CreateCitaForm, {\n        cita: citaForEdit,\n        setIsModalOpen: setIsModalOpen,\n        getCitasData: getCitasData,\n        setEditingCita: setEditingCita,\n        hospital: props.id_hospital,\n        pacientesData: pacientesData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: citaForEdit && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Medico \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 28\n            }, this), citaForEdit.doctor ? citaForEdit.doctor.name : 'Sin medico']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Paciente \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 28\n            }, this), citaForEdit.paciente ? citaForEdit.paciente.name : 'Sin paciente']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Fecha \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 28\n            }, this), new Date(citaForEdit.fecha_hora).toLocaleDateString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Hora \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 28\n            }, this), new Date(citaForEdit.fecha_hora).toLocaleTimeString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Servicio \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 28\n            }, this), citaForEdit.servicio]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Comentarios \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 28\n            }, this), citaForEdit.comentarios]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 44\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 23\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(CreateCita, {\n      setIsModalOpen: setIsCreateModalOpen,\n      isOpenModal: isCreateModalOpen,\n      hospital: props.id_hospital,\n      fecha_hora: fecha_hora,\n      getCitasData: getCitasData,\n      pacientesData: pacientesData,\n      setEditingCita: setEditingCita\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 36\n  }, this);\n}\n_s(HospitalTab, \"BPKQoMkN4cx+/F7ezXkeoo0qpzM=\");\n_c = HospitalTab;\nvar _c;\n$RefreshReg$(_c, \"HospitalTab\");","map":{"version":3,"names":["React","useState","useEffect","Modal","Button","Popconfirm","deleteData","getData","pre_colors","Loading","Calendar","dayjsLocalizer","CreateCita","CreateCitaForm","dayjs","jsxDEV","_jsxDEV","localizer","HospitalTab","props","_s","citaForEdit","setCitaForEdit","citasData","setCitasData","loading","setLoading","isModalOpen","setIsModalOpen","showModal","handleOk","setEditingCita","handleCancel","editingCita","serviceList","setserviceList","fecha_hora","setFecha_hora","isCreateModalOpen","setIsCreateModalOpen","pacientesData","setPacientesData","medicosData","setMedicosData","findPatientsOfMyMedicos","dl","forEach","paciente","medicos_asignados","med","horarios","h","sucursal","id_hospital","includes","label","name","value","_id","push","getPacientesData","then","rs","getCitasData","list","console","log","cita","_cita$duracion","_cita$usuario","servicio","id_servicio","start","Date","parse","endDate","setTime","getTime","duracion","end","title","usuario","key","finally","selectEvent","e","doctor","medico","handleSlotSelection","action","style","backgroundColor","confirm","eventStyleGetter","event","isSelected","index","indexOf","borderRadius","opacity","color","border","display","fileName","_jsxFileName","lineNumber","columnNumber","children","hospital","scrollToTime","now","selectable","events","eventPropGetter","startAccessor","endAccessor","height","messages","next","previous","today","month","week","day","defaultView","onDoubleClickEvent","onSelectEvent","onSelecting","onSelectSlot","open","onOk","onCancel","destroyOnClose","footer","onClick","toLocaleDateString","toLocaleTimeString","comentarios","isOpenModal","_c","$RefreshReg$"],"sources":["C:/Users/Gil/Documents/ReCreaMed/src/recepcionViews/citas/hospital-tab.citas.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Modal, Button, Popconfirm } from \"antd\";\r\nimport { deleteData, getData, pre_colors } from '../../resources';\r\nimport Loading from '../../loading';\r\nimport { Calendar, dayjsLocalizer } from 'react-big-calendar';\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\n\r\nimport CreateCita, { CreateCitaForm } from './create-cita-for-medic';\r\nimport dayjs from 'dayjs';\r\n\r\nconst localizer = dayjsLocalizer(dayjs)\r\n// admin and receipt shares citas and create citas\r\n// ONLY RECEIPT CANT DELETE, SO, FIRST EDIT RECEIPT\r\nexport default function HospitalTab(props) {\r\n    const [citaForEdit, setCitaForEdit] = useState({})\r\n    const [citasData, setCitasData] = useState([])\r\n    const [loading, setLoading] = useState(true)\r\n    const [isModalOpen, setIsModalOpen] = useState(false);\r\n    const showModal = () => { setIsModalOpen(true) }\r\n    const handleOk = () => { setIsModalOpen(false); setEditingCita(false) }\r\n    const handleCancel = () => { setIsModalOpen(false); setEditingCita(false) }\r\n    const [editingCita, setEditingCita] = useState(false)\r\n    const [serviceList, setserviceList] = useState([])\r\n\r\n    // Tools for createCita Modal\r\n    const [fecha_hora, setFecha_hora] = useState('')\r\n    const [isCreateModalOpen, setIsCreateModalOpen] = useState(false)\r\n    // for pass to create cita model\r\n    const [pacientesData, setPacientesData] = useState([])\r\n    const [medicosData, setMedicosData] = useState([])\r\n\r\n    const findPatientsOfMyMedicos = (pacientesData) => {\r\n        let dl = [];\r\n        // Check on each horario of each medico of medicos asignados of patient to see if share sucursal with my horarios as admin\r\n        pacientesData.forEach(paciente => {\r\n            paciente.medicos_asignados.forEach(med => {\r\n                med.horarios.forEach(h => {\r\n                    if (h.sucursal === props.id_hospital && !dl.includes(paciente)) { paciente.label = paciente.name; paciente.value = paciente._id; dl.push(paciente) }\r\n                })\r\n            });\r\n        });\r\n        return dl;\r\n    }\r\n\r\n    const getPacientesData = () => {\r\n        // First of all, get pacientes data for pass to the create cita component\r\n        getData('users_by_rol/Paciente').then((rs) => {\r\n            setPacientesData(findPatientsOfMyMedicos(rs))\r\n        })\r\n    }\r\n\r\n    useEffect(() => { getPacientesData(); getCitasData() }, [])\r\n\r\n    const getCitasData = () => {\r\n        const list = []; // For colorize\r\n        getData(`citas/sucursal/${props.id_hospital}`).then((rs) => {\r\n            console.log('resp ', rs)\r\n            rs.forEach((cita) => {\r\n                const servicio = cita.id_servicio; // for colorize slots\r\n                if (!list.includes(servicio)) {\r\n                    list.push(servicio);\r\n                }\r\n                cita.start = new Date(Date.parse(cita.fecha_hora));\r\n                const endDate = new Date(Date.parse(cita.fecha_hora));\r\n                endDate.setTime(endDate.getTime() + 1 * (cita.duracion ?? 60) * 60 * 1000)\r\n                cita.end = new Date(Date.parse(endDate));\r\n                cita.title = cita.usuario?.name;\r\n                cita.key = cita._id;\r\n            });\r\n            console.log('Services ', list)\r\n            setserviceList(list);\r\n            setCitasData(rs)\r\n        }).finally(() => setLoading(false))\r\n    }\r\n\r\n    // Select cita to show details and show confirm button\r\n    const selectEvent = (e) => {\r\n        if (!e.doctor) e.doctor = e.medico; // For details\r\n        if (!e.paciente) e.paciente = e.usuario; // For details\r\n        if (e.medico && e.medico._id) e.medico = e.medico._id;  // For edit\r\n        if (e.usuario && e.usuario._id) e.usuario = e.usuario._id;  // For edit\r\n        e.fecha_hora = dayjs(e.fecha_hora) //For edit\r\n        console.log('Fecha al editar: ', e.fecha_hora)\r\n        setCitaForEdit(e)\r\n        if (citaForEdit) showModal()\r\n    }\r\n\r\n    const handleSlotSelection = ({ start, end, action }) => {\r\n        // setFecha_hora(new Date(start).toISOString())\r\n        setFecha_hora(dayjs(start))\r\n        console.log('Fecha al crear: ', dayjs(start))\r\n        setIsCreateModalOpen(true)\r\n        return { style: { backgroundColor: 'red' } };\r\n    };\r\n    // Delete button\r\n    const confirm = (e) => {\r\n        deleteData(`citas/remove/${citaForEdit._id}`).then((rs) => { getCitasData(); handleCancel() })\r\n        deleteData(`balances/remove/cita/${citaForEdit._id}`)\r\n    };\r\n\r\n\r\n    \r\n    const eventStyleGetter = (event, start, end, isSelected) => {\r\n        const index = serviceList.indexOf(event.id_servicio);\r\n        var backgroundColor = '#' + pre_colors[index];\r\n        var style = {\r\n            backgroundColor: backgroundColor,\r\n            borderRadius: '4px',\r\n            opacity: 0.8,\r\n            color: 'white',\r\n            border: '0px',\r\n            display: 'block'\r\n        };\r\n        return {\r\n            style: style\r\n        };\r\n    }\r\n\r\n    return loading ? <Loading /> : <div>\r\n        <br />\r\n        <h6>Citas del hospital {props.hospital}</h6>\r\n        <br />\r\n        <Calendar\r\n            scrollToTime={new Date(Date.now())}\r\n            selectable='true'\r\n            localizer={localizer}\r\n            events={citasData}\r\n            eventPropGetter={eventStyleGetter}\r\n            startAccessor=\"start\"\r\n            endAccessor=\"end\"\r\n            style={{ height: 500 }}\r\n            messages={{\r\n                next: \"Sig\",\r\n                previous: \"Ant\",\r\n                today: \"Hoy\",\r\n                month: \"Mes\",\r\n                week: \"Semana\",\r\n                day: \"DÃ­a\"\r\n            }}\r\n            defaultView=\"week\"\r\n            onDoubleClickEvent={(e) => console.log(e)}\r\n            onSelectEvent={selectEvent}\r\n            onSelecting={(e) => console.log(e)}\r\n            // onSelectSlot={handleSlotSelection}\r\n            onSelectSlot={handleSlotSelection}\r\n        />\r\n\r\n\r\n        <Modal title=\"Detalles Cita\" open={isModalOpen} onOk={handleOk} onCancel={handleCancel} destroyOnClose\r\n            footer={[\r\n                // <Popconfirm\r\n                //     title=\"Eliminar Cita\"\r\n                //     description=\"Seguro que quiere eliminar la cita?\"\r\n                //     onConfirm={confirm}\r\n                //     onCancel={cancel}\r\n                //     okText=\"Si\"\r\n                //     cancelText=\"No\"\r\n                // >\r\n                //     <Button danger>Eliminar</Button>\r\n                // </Popconfirm>\r\n                //,\r\n\r\n                <Button onClick={() => setEditingCita(!editingCita)}>{editingCita ? \"Cancelar\" : \"Modificar\"}</Button>,\r\n                <Button onClick={handleCancel}>Cerrar</Button>\r\n            ]}>\r\n\r\n            {\r\n                editingCita ?\r\n                    <CreateCitaForm cita={citaForEdit} setIsModalOpen={setIsModalOpen} getCitasData={getCitasData} setEditingCita={setEditingCita} hospital={props.id_hospital} pacientesData={pacientesData} />\r\n                    : <div>{citaForEdit && <div>\r\n                        <p><strong>Medico </strong>{citaForEdit.doctor ? citaForEdit.doctor.name : 'Sin medico'}</p>\r\n                        <p><strong>Paciente </strong>{citaForEdit.paciente ? citaForEdit.paciente.name : 'Sin paciente'}</p>\r\n                        <p><strong>Fecha </strong>{new Date(citaForEdit.fecha_hora).toLocaleDateString()}</p>\r\n                        <p><strong>Hora </strong>{new Date(citaForEdit.fecha_hora).toLocaleTimeString()}</p>\r\n                        <p><strong>Servicio </strong>{citaForEdit.servicio}</p>\r\n                        <p><strong>Comentarios </strong>{citaForEdit.comentarios}</p>\r\n                        {/* <Button type='primary' onClick={confirmService}>Confirmar Servicio</Button>, */}\r\n                    </div>\r\n                    }\r\n                    </div>\r\n            }\r\n        </Modal>\r\n\r\n        <CreateCita setIsModalOpen={setIsCreateModalOpen} isOpenModal={isCreateModalOpen} hospital={props.id_hospital} fecha_hora={fecha_hora} getCitasData={getCitasData} pacientesData={pacientesData} setEditingCita={setEditingCita} />\r\n    </div>\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}