{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Gil\\\\Documents\\\\ReCreaMed\\\\src\\\\escalas\\\\dolor_2\\\\dolor2_selector.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState, useEffect } from \"react\";\nimport \"./PainZoneSelector.css\";\nimport body from '../../assets/body.jpg';\nimport { Button } from \"antd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PainZoneSelector = () => {\n  _s();\n  const canvasRef = useRef(null);\n  const [point, setPoint] = useState(null);\n  const [arrow, setArrow] = useState(null);\n  const [drawingArrow, setDrawingArrow] = useState(false);\n  const [radiates, setRadiates] = useState(false);\n  const fillColor = \"rgba(255, 0, 0, 0.5)\";\n  const strokeColor = \"rgba(255, 0, 0, 0.5)\";\n  const handleClick = event => {\n    if (!point || radiates && drawingArrow) {\n      const rect = event.target.getBoundingClientRect();\n      const x = event.clientX - rect.left;\n      const y = event.clientY - rect.top;\n      if (!point) {\n        setPoint({\n          x,\n          y\n        });\n      } else if (drawingArrow) {\n        setArrow({\n          start: point,\n          end: {\n            x,\n            y\n          }\n        });\n        setDrawingArrow(false);\n      }\n    }\n  };\n  const draw = context => {\n    context.clearRect(0, 0, context.canvas.width, context.canvas.height);\n    if (point) {\n      context.beginPath();\n      context.arc(point.x, point.y, 10, 0, 2 * Math.PI);\n      context.fillStyle = \"rgba(255, 0, 0, 0.5)\";\n      context.fill();\n      context.strokeStyle = strokeColor;\n      context.stroke();\n    }\n    if (arrow) {\n      const {\n        start,\n        end\n      } = arrow;\n      context.beginPath();\n      context.moveTo(start.x, start.y);\n      context.lineTo(end.x, end.y);\n      context.strokeStyle = \"blue\";\n      context.lineWidth = 2;\n      context.stroke();\n\n      // Draw arrowhead\n      const angle = Math.atan2(end.y - start.y, end.x - start.x);\n      context.beginPath();\n      context.moveTo(end.x, end.y);\n      context.lineTo(end.x - 10 * Math.cos(angle - Math.PI / 6), end.y - 10 * Math.sin(angle - Math.PI / 6));\n      context.lineTo(end.x - 10 * Math.cos(angle + Math.PI / 6), end.y - 10 * Math.sin(angle + Math.PI / 6));\n      context.closePath();\n      context.fillStyle = \"blue\";\n      context.fill();\n    }\n  };\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const context = canvas.getContext(\"2d\");\n    draw(context);\n  }, [point, arrow]);\n  const handleSave = () => {\n    // Guardar las coordenadas en la base de datos\n    console.log(\"Selected Point:\", point);\n    console.log(\"Arrow:\", arrow);\n  };\n  const handleReset = () => {\n    setPoint(null);\n    setArrow(null);\n    setDrawingArrow(false);\n    setRadiates(false);\n  };\n  const handleRadiatesChange = event => {\n    setRadiates(event.target.checked);\n    if (!event.target.checked) {\n      setArrow(null);\n      setDrawingArrow(false);\n    } else if (point) {\n      setDrawingArrow(true);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pain-zone-selector\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Seleccione su zona de dolor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"canvas-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: body,\n        alt: \"Cuerpo humano\",\n        className: \"background-image\",\n        onLoad: () => {\n          const canvas = canvasRef.current;\n          const context = canvas.getContext(\"2d\");\n          draw(context);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        width: 600,\n        height: 600,\n        onClick: handleClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: radiates,\n          onChange: handleRadiatesChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this), \"El dolor se irradia\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-container\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleReset,\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleSave,\n        children: \"Guardar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 9\n  }, this);\n};\n_s(PainZoneSelector, \"YQ3VCu937AlDFtteQuZFIBg3s94=\");\n_c = PainZoneSelector;\nexport default PainZoneSelector;\nvar _c;\n$RefreshReg$(_c, \"PainZoneSelector\");","map":{"version":3,"names":["React","useRef","useState","useEffect","body","Button","jsxDEV","_jsxDEV","PainZoneSelector","_s","canvasRef","point","setPoint","arrow","setArrow","drawingArrow","setDrawingArrow","radiates","setRadiates","fillColor","strokeColor","handleClick","event","rect","target","getBoundingClientRect","x","clientX","left","y","clientY","top","start","end","draw","context","clearRect","canvas","width","height","beginPath","arc","Math","PI","fillStyle","fill","strokeStyle","stroke","moveTo","lineTo","lineWidth","angle","atan2","cos","sin","closePath","current","getContext","handleSave","console","log","handleReset","handleRadiatesChange","checked","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","onLoad","ref","onClick","type","onChange","_c","$RefreshReg$"],"sources":["C:/Users/Gil/Documents/ReCreaMed/src/escalas/dolor_2/dolor2_selector.jsx"],"sourcesContent":["import React, { useRef, useState, useEffect } from \"react\";\r\nimport \"./PainZoneSelector.css\";\r\nimport body from '../../assets/body.jpg'\r\nimport { Button } from \"antd\";\r\n\r\nconst PainZoneSelector = () => {\r\n    const canvasRef = useRef(null);\r\n    const [point, setPoint] = useState(null);\r\n    const [arrow, setArrow] = useState(null);\r\n    const [drawingArrow, setDrawingArrow] = useState(false);\r\n    const [radiates, setRadiates] = useState(false);\r\n\r\n    const fillColor = \"rgba(255, 0, 0, 0.5)\";\r\n    const strokeColor = \"rgba(255, 0, 0, 0.5)\";\r\n\r\n    const handleClick = (event) => {\r\n        if (!point || (radiates && drawingArrow)) {\r\n            const rect = event.target.getBoundingClientRect();\r\n            const x = event.clientX - rect.left;\r\n            const y = event.clientY - rect.top;\r\n\r\n            if (!point) {\r\n                setPoint({ x, y });\r\n            } else if (drawingArrow) {\r\n                setArrow({ start: point, end: { x, y } });\r\n                setDrawingArrow(false);\r\n            }\r\n        }\r\n    };\r\n\r\n    const draw = (context) => {\r\n        context.clearRect(0, 0, context.canvas.width, context.canvas.height);\r\n\r\n        if (point) {\r\n            context.beginPath();\r\n            context.arc(point.x, point.y, 10, 0, 2 * Math.PI);\r\n            context.fillStyle = \"rgba(255, 0, 0, 0.5)\";\r\n            context.fill();\r\n            context.strokeStyle = strokeColor;\r\n            context.stroke();\r\n        }\r\n\r\n        if (arrow) {\r\n            const { start, end } = arrow;\r\n            context.beginPath();\r\n            context.moveTo(start.x, start.y);\r\n            context.lineTo(end.x, end.y);\r\n            context.strokeStyle = \"blue\";\r\n            context.lineWidth = 2;\r\n            context.stroke();\r\n\r\n            // Draw arrowhead\r\n            const angle = Math.atan2(end.y - start.y, end.x - start.x);\r\n            context.beginPath();\r\n            context.moveTo(end.x, end.y);\r\n            context.lineTo(end.x - 10 * Math.cos(angle - Math.PI / 6), end.y - 10 * Math.sin(angle - Math.PI / 6));\r\n            context.lineTo(end.x - 10 * Math.cos(angle + Math.PI / 6), end.y - 10 * Math.sin(angle + Math.PI / 6));\r\n            context.closePath();\r\n            context.fillStyle = \"blue\";\r\n            context.fill();\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        const canvas = canvasRef.current;\r\n        const context = canvas.getContext(\"2d\");\r\n        draw(context);\r\n    }, [point, arrow]);\r\n\r\n    const handleSave = () => {\r\n        // Guardar las coordenadas en la base de datos\r\n        console.log(\"Selected Point:\", point);\r\n        console.log(\"Arrow:\", arrow);\r\n    };\r\n\r\n    const handleReset = () => {\r\n        setPoint(null);\r\n        setArrow(null);\r\n        setDrawingArrow(false);\r\n        setRadiates(false);\r\n    };\r\n\r\n    const handleRadiatesChange = (event) => {\r\n        setRadiates(event.target.checked);\r\n        if (!event.target.checked) {\r\n            setArrow(null);\r\n            setDrawingArrow(false);\r\n        } else if (point) {\r\n            setDrawingArrow(true);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"pain-zone-selector\">\r\n            <h3>Seleccione su zona de dolor</h3>\r\n            <div className=\"canvas-container\">\r\n                <img\r\n                    src={body}\r\n                    alt=\"Cuerpo humano\"\r\n                    className=\"background-image\"\r\n                    onLoad={() => {\r\n                        const canvas = canvasRef.current;\r\n                        const context = canvas.getContext(\"2d\");\r\n                        draw(context);\r\n                    }}\r\n                />\r\n                <canvas\r\n                    ref={canvasRef}\r\n                    width={600}\r\n                    height={600}\r\n                    onClick={handleClick}\r\n                />\r\n            </div>\r\n            <div>\r\n                <label>\r\n                    <input\r\n                        type=\"checkbox\"\r\n                        checked={radiates}\r\n                        onChange={handleRadiatesChange}\r\n                    />\r\n                    El dolor se irradia\r\n                </label>\r\n            </div>\r\n            <div className=\"button-container\">\r\n                <Button onClick={handleReset}>Reset</Button>\r\n                <Button onClick={handleSave}>Guardar</Button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PainZoneSelector;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}