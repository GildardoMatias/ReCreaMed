{"ast":null,"code":"import React,{useState,useEffect}from'react';import{Table,Tag,Button,Typography,Modal,Card,Row,Col,Switch,Select}from'antd';import{CheckCircleTwoTone}from'@ant-design/icons';import moment from'moment/moment';import{getData,usuario,sendDataBody,ids_hospitales}from'../../resources';import CreateBalance from'./create-ingreso';import Loading from'../../loading';import Ticket from'./ticket-for-print';import IngersosHosptal from'./ingresos.hospital';import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const{Text}=Typography;export default function Ingresos(){const[loading,setLoading]=useState(true);const[medicosData,setMedicosData]=useState({});// Populate the main select component\nconst[medico,setMedico]=useState(null);const[ingresosData,setIngresosData]=useState([]);const[ingresoForEdit,setIngresoForEdit]=useState({});const[ingresoForPrint,setIngresoForPrint]=useState([]);// Modal For Add/Edit Inreso\nconst[isIngresoModalOpen,setIsIngresoModalOpen]=useState(false);const showIngresoModal=()=>{setIsIngresoModalOpen(true);};// Modal For Add/Edit Enreso\nconst[isEgresoModalOpen,setIsEgresoModalOpen]=useState(false);const showEgresoModal=()=>{setIsEgresoModalOpen(true);};// Select logo for print in receta. Switches the modal view into select logo hospital/pdf recipe for print\nconst[logoHospital,setLogoHospital]=useState(null);const[nombreHospital,setNombreHospital]=useState(null);const[isLogoSelected,setIsLogoSelected]=useState(false);const[idHospital,setIdHospital]=useState({});// Modal For Ticket\nconst[isTicketModalOpen,setIsTicketModalOpen]=useState(false);const showTicketModal=()=>{setIsTicketModalOpen(true);};const handleTicketOk=()=>{setIsTicketModalOpen(false);setIsLogoSelected(false);};const handleTicketCancel=()=>{setIsTicketModalOpen(false);;setIsLogoSelected(false);};const[lastFecha,setLastFecha]=useState(\"\");const[firstFecha,setFirstFecha]=useState(\"\");// Toggles between for medic/for hospital\nconst[viewTipeMedics,setViewTipeMedics]=useState(false);useEffect(()=>{getLastFechaCierre();},[]);useEffect(()=>{getIngresos();},[lastFecha]);function subtractMonths(date,months){date.setMonth(date.getMonth()-months);return date;}const getLastFechaCierre=async()=>{await getData(\"cortes/\".concat(usuario._id)).then(rs=>{setFirstFecha(rs.at(0).fecha_cierre);setLastFecha(rs.length>1?rs.at(-1).fecha_cierre:subtractMonths(new Date(),3));});};const getIngresos=async()=>{// First get List of medics\nconst medicos=await sendDataBody('users/getMany/hospitals',{ids_hospitales:ids_hospitales});medicos.forEach(m=>{m.label=m.name;m.value=m._id;});// to pass to create modal\nsetMedicosData(medicos);// to pass to create modal and select\n// const lastFechaCierre = await getData(`cortes/${usuario._id}`).then((rs) => {\n//     setFirstFecha(rs.at(0).fecha_cierre)\n//     setLastFecha(rs.length > 1 ? rs.at(-1).fecha_cierre : subtractMonths(new Date(), 3))\n//     return rs.length > 1 ? rs.at(-1).fecha_cierre : subtractMonths(new Date(), 3)\n// })\nconst ids=medicos.map(doc=>{return doc._id;});getBalancesData(ids);};const getBalancesData=medicos=>{const body={fecha_inicio:lastFecha,medico:medicos};// console.log('Balances body',body)\nsendDataBody('balances',body).then(rs=>{console.log('alances',rs);rs.forEach(i=>{i.doctor=i.medico;i.medico=i.medico._id;if(i.paciente){i.usuario=i.paciente;i.paciente=i.paciente._id;}});setIngresosData(rs);}).finally(()=>setLoading(false));};const handleEditIngreso=record=>{record.fecha_hora=moment.utc(record.fecha_hora);setIngresoForEdit(record);showIngresoModal();};const columns=[{title:'Médico',dataIndex:'medico',key:'createdAt',render:(_,_ref)=>{let{doctor}=_ref;return/*#__PURE__*/_jsx(_Fragment,{children:doctor.name});}},// {\n//     title: 'Concepto',\n//     dataIndex: 'concepto',\n//     key: 'concepto',\n// },\n{title:'Tipo',dataIndex:'tipo',key:'tipo',render:(_,_ref2)=>{let{tipo}=_ref2;let color=tipo&&tipo==='ingreso'?'geekblue':'volcano';return tipo?/*#__PURE__*/_jsx(Tag,{color:color,children:tipo.toUpperCase()}):/*#__PURE__*/_jsx(Tag,{color:color,children:\"Indefinido\"});}},{title:'Fecha',dataIndex:'fecha_hora',key:'fecha_hora',render:(_,_ref3)=>{let{fecha_hora}=_ref3;return/*#__PURE__*/_jsx(_Fragment,{children:new Date(fecha_hora).toLocaleString()});},defaultSortOrder:'descend'// sorter: (a, b) => a.fecha_hora > b.fecha_hora,\n},{title:'Monto',dataIndex:'monto',key:'monto',render:(_,_ref4)=>{let{monto}=_ref4;return/*#__PURE__*/_jsxs(_Fragment,{children:[\"$\",monto]});}},{title:'Abono',dataIndex:'abono',key:'abono',render:(_,_ref5)=>{let{abono}=_ref5;return abono&&/*#__PURE__*/_jsxs(_Fragment,{children:[\"$\",abono]});}},{title:'Adeudo',dataIndex:'adeudo',key:'adeudo',render:(_,record)=>{return/*#__PURE__*/_jsxs(_Fragment,{children:[\"$\",record.monto-record.abono]});}},{title:'Forma de pago',key:'forma_de_pago',dataIndex:'forma_de_pago',render:(_,_ref6)=>{let{forma_de_pago}=_ref6;let color=forma_de_pago==='efectivo'?'geekblue':'green';return/*#__PURE__*/_jsx(Tag,{color:color,children:forma_de_pago.toUpperCase()});}},{title:'Paciente',key:'usuario',dataIndex:'usuario',render:(_,record)=>{// if (record.cita) return <>{record.cita.usuario}</>\nif(record.cita)return/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',flexDirection:'column'},children:[record.cita.usuario.name,\" \",/*#__PURE__*/_jsx(\"span\",{style:{fontSize:9},children:\"Tomado de la cita\"})]});//when populate is ready\nelse if(record.usuario)return/*#__PURE__*/_jsx(_Fragment,{children:record.usuario.name});else return/*#__PURE__*/_jsx(Text,{type:\"secondary\",children:\" Sin Paciente\"});}},{title:'Factura',key:'Factura',dataIndex:'factura',render:(_,_ref7)=>{let{factura}=_ref7;return factura&&/*#__PURE__*/_jsx(CheckCircleTwoTone,{});}},{title:'Estado',key:'Estado',dataIndex:'estado',// render: (_, { estado }) => {\n//     let color = estado === 'pagado' ? 'green' : 'geekblue';\n//     if (estado === 'pendiente' || estado === 'sin pagar') color = 'volcano';\n//     return <Tag color={color}> {estado.toUpperCase()} </Tag>\n// }\nrender:(_,_ref8)=>{let{abono,monto}=_ref8;const pagado=abono===monto;let color=pagado?'green':'volcano';return/*#__PURE__*/_jsxs(Tag,{color:color,children:[\" \",pagado?'PAGADO':'PENDIENTE',\" \"]});}},{title:'Acciones',key:'Editar',render:(_,record)=>/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',gap:2,flexDirection:'column'},children:[/*#__PURE__*/_jsx(Button,{size:\"small\",onClick:()=>handleEditIngreso(record),children:\"Editar Monto\"}),/*#__PURE__*/_jsx(Button,{size:\"small\",onClick:()=>{setIngresoForPrint([record]);showTicketModal();},children:\"Imprimir Nota\"})]})}];// Toggle View Tipe medic/for all\nconst onSwitchChange=checked=>{setViewTipeMedics(checked);console.log(\"switch to \".concat(checked));if(!checked)getIngresos();};const handleDoctorChange=value=>{setMedico(value);getBalancesData([value]);};if(loading)return/*#__PURE__*/_jsx(Loading,{});return/*#__PURE__*/_jsxs(\"div\",{className:\"mainContainer\",children:[/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',flexDirection:'row',gap:12,alignItems:'center'},children:[/*#__PURE__*/_jsxs(\"h4\",{children:[\"Ingresos de\",viewTipeMedics?'l médico':' todos los medicos']}),/*#__PURE__*/_jsx(Button,{ghost:true,size:\"small\",onClick:showIngresoModal,type:\"primary\",children:\"Agregar Nuevo Ingreso\"}),/*#__PURE__*/_jsx(Button,{ghost:true,size:\"small\",onClick:showEgresoModal,type:\"primary\",children:\"Agregar Nuevo Gasto\"})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(\"div\",{children:[\"Hospital \",/*#__PURE__*/_jsx(Switch,{onChange:onSwitchChange}),\" Medico\",viewTipeMedics&&/*#__PURE__*/_jsx(Select,{options:medicosData,onChange:handleDoctorChange,style:{width:240,marginLeft:16},placeholder:\"Seleccione medico\"})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(Table,{columns:columns,dataSource:ingresosData,size:\"small\"}),/*#__PURE__*/_jsx(IngersosHosptal,{ids_hospitales:ids_hospitales}),/*#__PURE__*/_jsx(CreateBalance,{tipo:\"ingreso\",balanceForEdit:ingresoForEdit,setBalanceForEdit:setIngresoForEdit,setIsModalOpen:setIsIngresoModalOpen,isModalOpen:isIngresoModalOpen,getIngresos:getIngresos,medico:medico,medicosData:medicosData}),/*#__PURE__*/_jsx(CreateBalance,{tipo:\"egreso\",balanceForEdit:ingresoForEdit,setBalanceForEdit:setIngresoForEdit,setIsModalOpen:setIsEgresoModalOpen,isModalOpen:isEgresoModalOpen,getIngresos:getIngresos,medico:medico,medicosData:medicosData}),/*#__PURE__*/_jsx(Modal,{title:\"Imprimir Nota de Venta\",open:isTicketModalOpen,onOk:handleTicketOk,onCancel:handleTicketCancel,width:600,children:isLogoSelected?/*#__PURE__*/ // Si ya hay logo seleccionado, se pasa a la receta y se muestra en pdf\n_jsx(Ticket,{ingresos:ingresoForPrint,logo:'https://api.recreamed.com/images/'+logoHospital,hospital:nombreHospital,seller:\"M\\xE9dico: \",buyer:\"Paciente: \",idHospital:idHospital}):/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(Card,{title:\"Selecciona un hospital\",bordered:false,children:usuario.horarios.map(h=>{return/*#__PURE__*/_jsx(Card.Grid,{style:{width:'100%'},onClick:()=>{console.log(h.sucursal);setIdHospital(h.sucursal._id);setLogoHospital(h.sucursal.logo);setNombreHospital(h.sucursal.nombre);setIsLogoSelected(true);},children:/*#__PURE__*/_jsxs(Row,{align:\"middle\",children:[/*#__PURE__*/_jsx(Col,{span:6,offset:4,children:/*#__PURE__*/_jsx(\"img\",{width:64,src:'https://api.recreamed.com/images/'+h.sucursal.logo,alt:\"Logo\"})}),/*#__PURE__*/_jsxs(Col,{span:10,children:[h.sucursal.nombre,\" \",/*#__PURE__*/_jsx(\"br\",{}),\" \",h.horario]})]})},h._id);})})})})]});}","map":{"version":3,"names":["React","useState","useEffect","Table","Tag","Button","Typography","Modal","Card","Row","Col","Switch","Select","CheckCircleTwoTone","moment","getData","usuario","sendDataBody","ids_hospitales","CreateBalance","Loading","Ticket","IngersosHosptal","Fragment","_Fragment","jsx","_jsx","jsxs","_jsxs","Text","Ingresos","loading","setLoading","medicosData","setMedicosData","medico","setMedico","ingresosData","setIngresosData","ingresoForEdit","setIngresoForEdit","ingresoForPrint","setIngresoForPrint","isIngresoModalOpen","setIsIngresoModalOpen","showIngresoModal","isEgresoModalOpen","setIsEgresoModalOpen","showEgresoModal","logoHospital","setLogoHospital","nombreHospital","setNombreHospital","isLogoSelected","setIsLogoSelected","idHospital","setIdHospital","isTicketModalOpen","setIsTicketModalOpen","showTicketModal","handleTicketOk","handleTicketCancel","lastFecha","setLastFecha","firstFecha","setFirstFecha","viewTipeMedics","setViewTipeMedics","getLastFechaCierre","getIngresos","subtractMonths","date","months","setMonth","getMonth","concat","_id","then","rs","at","fecha_cierre","length","Date","medicos","forEach","m","label","name","value","ids","map","doc","getBalancesData","body","fecha_inicio","console","log","i","doctor","paciente","finally","handleEditIngreso","record","fecha_hora","utc","columns","title","dataIndex","key","render","_","_ref","children","_ref2","tipo","color","toUpperCase","_ref3","toLocaleString","defaultSortOrder","_ref4","monto","_ref5","abono","_ref6","forma_de_pago","cita","style","display","flexDirection","fontSize","type","_ref7","factura","_ref8","pagado","gap","size","onClick","onSwitchChange","checked","handleDoctorChange","className","alignItems","ghost","onChange","options","width","marginLeft","placeholder","dataSource","balanceForEdit","setBalanceForEdit","setIsModalOpen","isModalOpen","open","onOk","onCancel","ingresos","logo","hospital","seller","buyer","bordered","horarios","h","Grid","sucursal","nombre","align","span","offset","src","alt","horario"],"sources":["C:/Users/Gil/Documents/ReCreaMed/src/admHospitalViews/ingresos/ingresos.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Table, Tag, Button, Typography, Modal, Card, Row, Col, Switch, Select } from 'antd';\r\nimport { CheckCircleTwoTone } from '@ant-design/icons'\r\nimport moment from 'moment/moment';\r\n\r\nimport { getData, usuario, sendDataBody, ids_hospitales } from '../../resources';\r\nimport CreateBalance from './create-ingreso';\r\nimport Loading from '../../loading';\r\nimport Ticket from './ticket-for-print';\r\nimport IngersosHosptal from './ingresos.hospital';\r\n\r\nconst { Text } = Typography;\r\n\r\nexport default function Ingresos() {\r\n    const [loading, setLoading] = useState(true)\r\n    const [medicosData, setMedicosData] = useState({}) // Populate the main select component\r\n    const [medico, setMedico] = useState(null)\r\n    const [ingresosData, setIngresosData] = useState([])\r\n    const [ingresoForEdit, setIngresoForEdit] = useState({})\r\n    const [ingresoForPrint, setIngresoForPrint] = useState([])\r\n\r\n    // Modal For Add/Edit Inreso\r\n    const [isIngresoModalOpen, setIsIngresoModalOpen] = useState(false);\r\n    const showIngresoModal = () => { setIsIngresoModalOpen(true) };\r\n    // Modal For Add/Edit Enreso\r\n    const [isEgresoModalOpen, setIsEgresoModalOpen] = useState(false)\r\n    const showEgresoModal = () => { setIsEgresoModalOpen(true) };\r\n\r\n    // Select logo for print in receta. Switches the modal view into select logo hospital/pdf recipe for print\r\n    const [logoHospital, setLogoHospital] = useState(null)\r\n    const [nombreHospital, setNombreHospital] = useState(null)\r\n    const [isLogoSelected, setIsLogoSelected] = useState(false)\r\n    const [idHospital, setIdHospital] = useState({})\r\n\r\n    // Modal For Ticket\r\n    const [isTicketModalOpen, setIsTicketModalOpen] = useState(false);\r\n    const showTicketModal = () => { setIsTicketModalOpen(true); };\r\n    const handleTicketOk = () => { setIsTicketModalOpen(false); setIsLogoSelected(false) };\r\n    const handleTicketCancel = () => { setIsTicketModalOpen(false);; setIsLogoSelected(false) };\r\n\r\n    const [lastFecha, setLastFecha] = useState(\"\")\r\n    const [firstFecha, setFirstFecha] = useState(\"\")\r\n\r\n    // Toggles between for medic/for hospital\r\n    const [viewTipeMedics, setViewTipeMedics] = useState(false)\r\n\r\n    useEffect(() => {\r\n        getLastFechaCierre()\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        getIngresos()\r\n    }, [lastFecha])\r\n\r\n    function subtractMonths(date, months) { date.setMonth(date.getMonth() - months); return date; }\r\n\r\n    const getLastFechaCierre = async () => {\r\n        await getData(`cortes/${usuario._id}`).then((rs) => {\r\n            setFirstFecha(rs.at(0).fecha_cierre)\r\n            setLastFecha(rs.length > 1 ? rs.at(-1).fecha_cierre : subtractMonths(new Date(), 3))\r\n        })\r\n    }\r\n\r\n    const getIngresos = async () => {\r\n        // First get List of medics\r\n        const medicos = await sendDataBody('users/getMany/hospitals', { ids_hospitales: ids_hospitales })\r\n\r\n        medicos.forEach(m => { m.label = m.name; m.value = m._id; })// to pass to create modal\r\n        setMedicosData(medicos) // to pass to create modal and select\r\n\r\n        // const lastFechaCierre = await getData(`cortes/${usuario._id}`).then((rs) => {\r\n        //     setFirstFecha(rs.at(0).fecha_cierre)\r\n        //     setLastFecha(rs.length > 1 ? rs.at(-1).fecha_cierre : subtractMonths(new Date(), 3))\r\n        //     return rs.length > 1 ? rs.at(-1).fecha_cierre : subtractMonths(new Date(), 3)\r\n        // })\r\n\r\n        const ids = medicos.map(doc => {\r\n            return doc._id\r\n        });\r\n        getBalancesData(ids)\r\n    }\r\n\r\n    const getBalancesData = (medicos) => {\r\n        const body = {\r\n            fecha_inicio: lastFecha,\r\n            medico: medicos\r\n        }\r\n        // console.log('Balances body',body)\r\n        sendDataBody('balances', body).then((rs) => {\r\n            console.log('alances', rs)\r\n            rs.forEach((i) => { i.doctor = i.medico; i.medico = i.medico._id; if (i.paciente) { i.usuario = i.paciente; i.paciente = i.paciente._id; } })\r\n            setIngresosData(rs)\r\n        }).finally(() => setLoading(false))\r\n    }\r\n\r\n    const handleEditIngreso = (record) => {\r\n        record.fecha_hora = moment.utc(record.fecha_hora)\r\n        setIngresoForEdit(record);\r\n        showIngresoModal()\r\n    }\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Médico',\r\n            dataIndex: 'medico',\r\n            key: 'createdAt',\r\n            render: (_, { doctor }) => { return <>{doctor.name}</> }\r\n        },\r\n        // {\r\n        //     title: 'Concepto',\r\n        //     dataIndex: 'concepto',\r\n        //     key: 'concepto',\r\n        // },\r\n        {\r\n            title: 'Tipo',\r\n            dataIndex: 'tipo',\r\n            key: 'tipo',\r\n            render: (_, { tipo }) => {\r\n                let color = (tipo && tipo === 'ingreso') ? 'geekblue' : 'volcano';\r\n                return tipo ? <Tag color={color} >{tipo.toUpperCase()}</Tag> : <Tag color={color}>Indefinido</Tag>\r\n            },\r\n        },\r\n        {\r\n            title: 'Fecha',\r\n            dataIndex: 'fecha_hora',\r\n            key: 'fecha_hora',\r\n            render: (_, { fecha_hora }) => { return <>{new Date(fecha_hora).toLocaleString()}</> },\r\n            defaultSortOrder: 'descend',\r\n            // sorter: (a, b) => a.fecha_hora > b.fecha_hora,\r\n        },\r\n        {\r\n            title: 'Monto',\r\n            dataIndex: 'monto',\r\n            key: 'monto',\r\n            render: (_, { monto }) => { return <>${monto}</> }\r\n        },\r\n        {\r\n            title: 'Abono',\r\n            dataIndex: 'abono',\r\n            key: 'abono',\r\n            render: (_, { abono }) => { return abono && <>${abono}</> }\r\n        },\r\n        {\r\n            title: 'Adeudo',\r\n            dataIndex: 'adeudo',\r\n            key: 'adeudo',\r\n            render: (_, record) => { return <>${record.monto - record.abono}</> }\r\n\r\n        },\r\n        {\r\n            title: 'Forma de pago',\r\n            key: 'forma_de_pago',\r\n            dataIndex: 'forma_de_pago',\r\n            render: (_, { forma_de_pago }) => {\r\n                let color = forma_de_pago === 'efectivo' ? 'geekblue' : 'green';\r\n                return <Tag color={color} >{forma_de_pago.toUpperCase()}</Tag>\r\n            },\r\n        },\r\n        {\r\n            title: 'Paciente',\r\n            key: 'usuario',\r\n            dataIndex: 'usuario',\r\n            render: (_, record) => {\r\n                // if (record.cita) return <>{record.cita.usuario}</>\r\n                if (record.cita) return <div style={{ display: 'flex', flexDirection: 'column' }}>{record.cita.usuario.name} <span style={{ fontSize: 9 }}>Tomado de la cita</span></div> //when populate is ready\r\n                else if (record.usuario) return <>{record.usuario.name}</>\r\n                else return <Text type=\"secondary\"> Sin Paciente</Text>\r\n            },\r\n        },\r\n        {\r\n            title: 'Factura',\r\n            key: 'Factura',\r\n            dataIndex: 'factura',\r\n            render: (_, { factura }) => { return factura && <CheckCircleTwoTone /> }\r\n\r\n        },\r\n        {\r\n            title: 'Estado',\r\n            key: 'Estado',\r\n            dataIndex: 'estado',\r\n            // render: (_, { estado }) => {\r\n            //     let color = estado === 'pagado' ? 'green' : 'geekblue';\r\n            //     if (estado === 'pendiente' || estado === 'sin pagar') color = 'volcano';\r\n            //     return <Tag color={color}> {estado.toUpperCase()} </Tag>\r\n            // }\r\n            render: (_, { abono, monto }) => {\r\n                const pagado = abono === monto;\r\n                let color = pagado ? 'green' : 'volcano';\r\n                return <Tag color={color}> {pagado ? 'PAGADO' : 'PENDIENTE'} </Tag>\r\n            }\r\n\r\n        },\r\n        {\r\n            title: 'Acciones',\r\n            key: 'Editar',\r\n            render: (_, record) => <div style={{ display: 'flex', gap: 2, flexDirection: 'column' }}>\r\n                {/* <Button onClick={() => { deleteData(`balances/remove/${record._id}`).then(()=>getIngresos()) }}>Eliminar</Button> */}\r\n                <Button size='small' onClick={() => handleEditIngreso(record)}>Editar Monto</Button>\r\n                <Button size='small' onClick={() => { setIngresoForPrint([record]); showTicketModal() }}>Imprimir Nota</Button>\r\n            </div>\r\n        },\r\n    ];\r\n\r\n    // Toggle View Tipe medic/for all\r\n    const onSwitchChange = (checked) => {\r\n        setViewTipeMedics(checked)\r\n        console.log(`switch to ${checked}`);\r\n        if (!checked) getIngresos()\r\n    };\r\n\r\n    const handleDoctorChange = (value) => { setMedico(value); getBalancesData([value]); };\r\n\r\n\r\n    if (loading) return <Loading />\r\n\r\n    return (\r\n        <div className='mainContainer'>\r\n            {/* <div>first fecha cierre {firstFecha} </div>\r\n            <div>last fecha cierre {lastFecha} </div> */}\r\n\r\n            <div style={{ display: 'flex', flexDirection: 'row', gap: 12, alignItems: 'center' }}>\r\n                <h4>Ingresos de{viewTipeMedics ? 'l médico' : ' todos los medicos'}</h4>\r\n                <Button ghost size='small' onClick={showIngresoModal} type='primary'  >Agregar Nuevo Ingreso</Button>\r\n                <Button ghost size='small' onClick={showEgresoModal} type='primary'  >Agregar Nuevo Gasto</Button>\r\n            </div>\r\n\r\n            <br />\r\n\r\n            <div>\r\n                Hospital <Switch onChange={onSwitchChange} /> Medico\r\n                {\r\n                    viewTipeMedics && <Select options={medicosData} onChange={handleDoctorChange} style={{ width: 240, marginLeft: 16 }} placeholder='Seleccione medico' />\r\n                }\r\n            </div>\r\n\r\n            <br />\r\n\r\n            <Table columns={columns} dataSource={ingresosData} size='small' />\r\n\r\n            <IngersosHosptal ids_hospitales={ids_hospitales} />\r\n\r\n            {/* Ingreso */}\r\n            <CreateBalance tipo='ingreso' balanceForEdit={ingresoForEdit} setBalanceForEdit={setIngresoForEdit} setIsModalOpen={setIsIngresoModalOpen} isModalOpen={isIngresoModalOpen} getIngresos={getIngresos} medico={medico} medicosData={medicosData} />\r\n\r\n            {/* Gasto */}\r\n            <CreateBalance tipo='egreso' balanceForEdit={ingresoForEdit} setBalanceForEdit={setIngresoForEdit} setIsModalOpen={setIsEgresoModalOpen} isModalOpen={isEgresoModalOpen} getIngresos={getIngresos} medico={medico} medicosData={medicosData} />\r\n\r\n            <Modal title=\"Imprimir Nota de Venta\" open={isTicketModalOpen} onOk={handleTicketOk} onCancel={handleTicketCancel} width={600}>\r\n                {\r\n                    isLogoSelected ? // Si ya hay logo seleccionado, se pasa a la receta y se muestra en pdf\r\n                        <Ticket ingresos={ingresoForPrint} logo={'https://api.recreamed.com/images/' + logoHospital} hospital={nombreHospital} seller='Médico: ' buyer='Paciente: ' idHospital={idHospital} />\r\n                        :\r\n                        <div>\r\n                            <Card title='Selecciona un hospital' bordered={false}>\r\n                                {\r\n                                    usuario.horarios.map((h) => {\r\n                                        return <Card.Grid style={{ width: '100%' }} onClick={() => { console.log(h.sucursal); setIdHospital(h.sucursal._id); setLogoHospital(h.sucursal.logo); setNombreHospital(h.sucursal.nombre); setIsLogoSelected(true) }} key={h._id}>\r\n                                            <Row align=\"middle\">\r\n                                                <Col span={6} offset={4}><img width={64} src={'https://api.recreamed.com/images/' + h.sucursal.logo} alt=\"Logo\" /></Col>\r\n                                                <Col span={10}>{h.sucursal.nombre} <br /> {h.horario}</Col>\r\n                                            </Row>\r\n                                        </Card.Grid>\r\n                                    })\r\n                                }\r\n                            </Card>\r\n                        </div>\r\n                }\r\n\r\n            </Modal>\r\n        </div >\r\n    )\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}