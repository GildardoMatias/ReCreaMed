{"ast":null,"code":"import React,{useState,useEffect}from'react';import{Button,Modal,Form,Input,Select,message,DatePicker,InputNumber}from'antd';import{getData,sendDataBody,updateData}from'../../resources';// ADMIN CREATE INGRESO\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function CreateBalance(props){const isCreating=!props.balanceForEdit;const[pacientesData,setPacientesData]=useState([]);const[loading,setLoading]=useState(true);const handleOk=()=>{props.setIsModalOpen(false);};const handleCancel=()=>{props.setIsModalOpen(false);props.setBalanceForEdit(null);};useEffect(()=>{// console.log('receivd for edit nm', props.balanceForEdit)\n// console.log('receivd for edit nm', nombreDoctor)\nif(props.balanceForEdit&&props.balanceForEdit.medico){getPacientesData(props.balanceForEdit.medico);}},[props.balanceForEdit]);// Start of filtering patients to show in select\nconst getPacientesData=medico=>{// if (props.balanceForEdi) {\ngetData(\"mispacientes/\".concat(medico)).then(rs=>{if(rs){rs.forEach(patient=>{patient.value=patient._id;patient.label=patient.name;});console.log('Pacientes: ',rs);setPacientesData(rs);}}).finally(()=>{setLoading(false);});// }\n};// End of filtering patients to show in select\n// Form methods\nconst onFinish=values=>{// if (Object.keys(props.balanceForEdit).length === 0 || !props.balanceForEdit) {\n//     values.medico = props.medico;\n//     values.tipo = 'ingreso';\n//     values.fecha_hora = new Date();\n// }\nvalues.estado='pendiente';values.tipo=props.tipo;console.log('Ready to send:',values);console.log('For Edit: ',props.balanceForEdit);if(!props.balanceForEdit||Object.keys(props.balanceForEdit).length===0){sendDataBody(\"balances/add\",values).then(rs=>{console.log(rs);message.success(rs.message||rs.error);}).finally(()=>{props.getIngresos();props.setIsModalOpen(false);});}else{updateData(\"/balances/update/\".concat(props.balanceForEdit._id),values).then(rs=>{console.log(rs);props.setBalanceForEdit({});props.getIngresos();props.setIsModalOpen(false);});}};const onFinishFailed=errorInfo=>{console.log('Failed:',errorInfo);};const handleDoctorChange=value=>{getPacientesData(value);};// const EditingForm = () => {\n//     const { doctor: { name: nombreDoctor }, monto, forma_de_pago, fecha_hora, concepto } = props.balanceForEdit;\n// }\nreturn/*#__PURE__*/_jsx(Modal,{title:props.balanceForEdit?\"Editar Estado\":'Agregar Ingreso',open:props.isModalOpen,onOk:handleOk,onCancel:handleCancel,destroyOnClose:true,footer:[/*#__PURE__*/_jsx(Button,{type:\"primary\",htmlType:\"submit\",form:\"edit_balance\",children:\"Guardar\"}),/*#__PURE__*/_jsx(Button,{onClick:handleCancel,children:\"Cancelar\"})],children:/*#__PURE__*/_jsxs(Form,{name:\"edit_balance\",labelCol:{span:8},wrapperCol:{span:16},initialValues:props.balanceForEdit,onFinish:onFinish,onFinishFailed:onFinishFailed,autoComplete:\"off\",children:[isCreating?/*#__PURE__*/_jsxs(\"div\",{children:[\" \",/*#__PURE__*/_jsx(Form.Item,{label:\"Monto\",name:\"monto\",rules:[{required:true,message:'Ingresa el monto'}],children:/*#__PURE__*/_jsx(Input,{})}),/*#__PURE__*/_jsx(Form.Item,{label:\"Concepto\",name:\"concepto\",rules:[{required:true,message:'Ingresa el concepto'}],children:/*#__PURE__*/_jsx(Input,{})}),/*#__PURE__*/_jsx(Form.Item,{label:\"Medico\",name:\"medico\",children:/*#__PURE__*/_jsx(Select,{options:props.medicosData,onChange:handleDoctorChange})}),/*#__PURE__*/_jsx(Form.Item,{label:\"Paciente\",name:\"paciente\",children:/*#__PURE__*/_jsx(Select,{options:pacientesData})}),/*#__PURE__*/_jsx(Form.Item,{label:\"Fecha y Hora\",name:\"fecha_hora\",rules:[{required:true,message:'Selecciona Fecha y Hora'}],children:/*#__PURE__*/_jsx(DatePicker,{showTime:true,format:\"DD-MM-YYYY HH:mm\"})})]}):/*#__PURE__*/_jsx(\"div\",{}),/*#__PURE__*/_jsx(Form.Item,{label:\"abono\",name:\"abono\",rules:[{required:true,message:'Ingresa el abobo'}],children:/*#__PURE__*/_jsx(InputNumber,{style:{width:'100%'}})}),/*#__PURE__*/_jsx(Form.Item,{label:\"Forma de Pago\",name:\"forma_de_pago\",children:/*#__PURE__*/_jsx(Select,{options:[{value:'efectivo',label:'Efectivo'},{value:'tarjeta',label:'Tarjeta'},{value:'transferencia',label:'Transferencia'}]})})]})});}","map":{"version":3,"names":["React","useState","useEffect","Button","Modal","Form","Input","Select","message","DatePicker","InputNumber","getData","sendDataBody","updateData","jsx","_jsx","jsxs","_jsxs","CreateBalance","props","isCreating","balanceForEdit","pacientesData","setPacientesData","loading","setLoading","handleOk","setIsModalOpen","handleCancel","setBalanceForEdit","medico","getPacientesData","concat","then","rs","forEach","patient","value","_id","label","name","console","log","finally","onFinish","values","estado","tipo","Object","keys","length","success","error","getIngresos","onFinishFailed","errorInfo","handleDoctorChange","title","open","isModalOpen","onOk","onCancel","destroyOnClose","footer","type","htmlType","form","children","onClick","labelCol","span","wrapperCol","initialValues","autoComplete","Item","rules","required","options","medicosData","onChange","showTime","format","style","width"],"sources":["C:/Users/Gil/Documents/ReCreaMed/src/recepcionViews/ingresos/create-ingreso.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { Button, Modal, Form, Input, Select, message, DatePicker, InputNumber } from 'antd';\r\nimport { getData, sendDataBody, updateData } from '../../resources';\r\n// ADMIN CREATE INGRESO\r\nexport default function CreateBalance(props) {\r\n\r\n    const isCreating = !props.balanceForEdit;\r\n\r\n    const [pacientesData, setPacientesData] = useState([])\r\n    const [loading, setLoading] = useState(true)\r\n\r\n    const handleOk = () => { props.setIsModalOpen(false) };\r\n    const handleCancel = () => { props.setIsModalOpen(false); props.setBalanceForEdit(null) };\r\n\r\n    useEffect(() => {\r\n        // console.log('receivd for edit nm', props.balanceForEdit)\r\n        // console.log('receivd for edit nm', nombreDoctor)\r\n        if (props.balanceForEdit && props.balanceForEdit.medico) {\r\n            getPacientesData(props.balanceForEdit.medico)\r\n        }\r\n\r\n    }, [props.balanceForEdit])\r\n\r\n\r\n    // Start of filtering patients to show in select\r\n    const getPacientesData = (medico) => {\r\n        // if (props.balanceForEdi) {\r\n        getData(`mispacientes/${medico}`).then((rs) => {\r\n            if (rs) {\r\n                rs.forEach(patient => {\r\n                    patient.value = patient._id; patient.label = patient.name;\r\n                });\r\n                console.log('Pacientes: ', rs)\r\n                setPacientesData(rs)\r\n            }\r\n        }).finally(() => { setLoading(false) })\r\n        // }\r\n    }\r\n    // End of filtering patients to show in select\r\n\r\n    // Form methods\r\n    const onFinish = (values) => {\r\n        // if (Object.keys(props.balanceForEdit).length === 0 || !props.balanceForEdit) {\r\n        //     values.medico = props.medico;\r\n        //     values.tipo = 'ingreso';\r\n        //     values.fecha_hora = new Date();\r\n        // }\r\n\r\n        values.estado = 'pendiente';\r\n        values.tipo = props.tipo;\r\n        console.log('Ready to send:', values);\r\n        console.log('For Edit: ', props.balanceForEdit);\r\n        if (!props.balanceForEdit || Object.keys(props.balanceForEdit).length === 0) {\r\n            sendDataBody(`balances/add`, values).then((rs) => { console.log(rs); message.success(rs.message || rs.error) }).finally(() => { props.getIngresos(); props.setIsModalOpen(false) })\r\n        } else {\r\n            updateData(`/balances/update/${props.balanceForEdit._id}`, values).then((rs) => {\r\n                console.log(rs); props.setBalanceForEdit({}); props.getIngresos(); props.setIsModalOpen(false);\r\n            })\r\n        }\r\n        \r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => { console.log('Failed:', errorInfo) };\r\n\r\n    const handleDoctorChange = (value) => { getPacientesData(value) };\r\n\r\n    // const EditingForm = () => {\r\n    //     const { doctor: { name: nombreDoctor }, monto, forma_de_pago, fecha_hora, concepto } = props.balanceForEdit;\r\n\r\n    // }\r\n\r\n    return (\r\n        <Modal title={props.balanceForEdit ? \"Editar Estado\" : 'Agregar Ingreso'} open={props.isModalOpen} onOk={handleOk} onCancel={handleCancel} destroyOnClose\r\n            footer={[\r\n                <Button type=\"primary\" htmlType=\"submit\" form='edit_balance'>\r\n                    Guardar\r\n                </Button>,\r\n                <Button onClick={handleCancel}>\r\n                    Cancelar\r\n                </Button>\r\n            ]}>\r\n\r\n            <Form\r\n                name=\"edit_balance\"\r\n                labelCol={{ span: 8 }}\r\n                wrapperCol={{ span: 16 }}\r\n                initialValues={props.balanceForEdit}\r\n                onFinish={onFinish}\r\n                onFinishFailed={onFinishFailed}\r\n                autoComplete=\"off\"\r\n            >\r\n                {\r\n                    isCreating ? <div> <Form.Item label=\"Monto\" name=\"monto\" rules={[{ required: true, message: 'Ingresa el monto' }]} >\r\n                        <Input />\r\n                    </Form.Item>\r\n\r\n                        <Form.Item label=\"Concepto\" name=\"concepto\" rules={[{ required: true, message: 'Ingresa el concepto' }]}>\r\n                            <Input />\r\n                        </Form.Item>\r\n\r\n                        <Form.Item label=\"Medico\" name=\"medico\" >\r\n                            <Select options={props.medicosData} onChange={handleDoctorChange} />\r\n                        </Form.Item>\r\n\r\n                        <Form.Item label=\"Paciente\" name=\"paciente\" >\r\n                            <Select options={pacientesData} />\r\n                        </Form.Item>\r\n\r\n\r\n\r\n\r\n                        <Form.Item\r\n                            label=\"Fecha y Hora\"\r\n                            name=\"fecha_hora\"\r\n                            rules={[{ required: true, message: 'Selecciona Fecha y Hora' }]}\r\n                        >\r\n                            <DatePicker showTime format=\"DD-MM-YYYY HH:mm\" />\r\n                        </Form.Item></div> : <div></div>\r\n                }\r\n\r\n                <Form.Item label=\"abono\" name=\"abono\" rules={[{ required: true, message: 'Ingresa el abobo' }]} >\r\n                    <InputNumber style={{ width: '100%' }} />\r\n                </Form.Item>\r\n\r\n                <Form.Item label=\"Forma de Pago\" name=\"forma_de_pago\" >\r\n                    <Select\r\n                        options={[\r\n                            {\r\n                                value: 'efectivo',\r\n                                label: 'Efectivo',\r\n                            },\r\n                            {\r\n                                value: 'tarjeta',\r\n                                label: 'Tarjeta',\r\n                            },\r\n                            {\r\n                                value: 'transferencia',\r\n                                label: 'Transferencia',\r\n                            },\r\n                        ]}\r\n                    />\r\n                </Form.Item>\r\n\r\n\r\n\r\n                {/* <Form.Item\r\n                    label=\"Estado\"\r\n                    name=\"estado\"\r\n                    rules={[{ required: true, message: 'Selecciona el estado' }]}\r\n                >\r\n                    <Select\r\n                        // onChange={handleDoctorChange}\r\n                        options={[\r\n                            {\r\n                                value: 'pendiente',\r\n                                label: 'Pendiente',\r\n                            },\r\n                            {\r\n                                value: 'pagado',\r\n                                label: 'Pagado',\r\n                            },\r\n                            {\r\n                                value: 'pago parcial',\r\n                                label: 'Pago parcial',\r\n                            },\r\n                        ]}\r\n                    />\r\n                </Form.Item> */}\r\n\r\n            </Form>\r\n\r\n        </Modal>\r\n    )\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}