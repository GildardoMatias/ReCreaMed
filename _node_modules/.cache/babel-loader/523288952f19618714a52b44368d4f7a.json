{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Gil\\\\Documents\\\\ReCreaMed\\\\src\\\\escalas\\\\escalasCreateGeneralLink.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport { getData, sendDataBody } from '../resources';\nimport { Form, Button, Space, Select, message } from 'antd';\nimport { usuario, ids_hospitales } from '../resources';\nimport QRCode from \"react-qr-code\";\nimport { toBlob, toPng } from 'html-to-image';\nimport Loading from '../loading';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  Option\n} = Select;\nexport default function EscalasCreateGeneralLink(props) {\n  _s();\n  const [loading, setLoading] = useState(true);\n  const [link, setLink] = useState('');\n\n  // New Mode of first patient after medic selecting\n  const [medico, setMedico] = useState(null); // medico selected\n  const [medicos, setMedicos] = useState([]); // List of medicos able to select\n  const [selectedPatient, setSelectedPatient] = useState(null);\n  const [allPacientes, setAllPacientes] = useState([]);\n  useEffect(() => {\n    const getAllMedicos = async () => {\n      await getData(`users/hospital/${ids_hospitales[0]}`).then(rs => {\n        getAllPacientes(rs);\n      });\n    };\n    usuario.rol === 'Medico' ? getPacientesOfDoctor(usuario._id) : getAllMedicos();\n  }, []);\n  const getAllPacientes = async medicos => {\n    const medicosFormatted = medicos.map(m => m._id);\n    await sendDataBody('pacientes/medicos', {\n      medicos: medicosFormatted\n    }).then(rs => {\n      setAllPacientes(rs);\n      setLoading(false);\n    });\n  };\n  const handlePatientChange = value => {\n    setLink(null);\n    setSelectedPatient(value);\n    const found = allPacientes.find(p => p._id === value);\n    if (found) {\n      let {\n        medicos_asignados\n      } = found;\n      medicos_asignados.forEach(m => {\n        m.label = m.name;\n        m.value = m._id;\n      });\n      setMedicos(medicos_asignados);\n    } else {\n      message.error('Paciente no encontrado');\n    }\n  };\n  const handleDoctorChange = value => {\n    setMedico(value);\n    setLink(null);\n  };\n  const getPacientesOfDoctor = _id => {\n    //Para el caso que la sesion sea de Medico\n    getData(`mispacientes/${_id}`).then(rs => {\n      setSelectedPatient(null);\n      setAllPacientes(rs);\n      setLoading(false);\n      console.log(`patients of ${_id}`, rs);\n    });\n  };\n  // End New Mode of first patient after medic selecting\n\n  const imageRef = useRef(null);\n\n  // Filter `option.label` match the user type `input`\n  const filterOption = (input, option) => {\n    var _option$label;\n    return ((_option$label = option === null || option === void 0 ? void 0 : option.label) !== null && _option$label !== void 0 ? _option$label : '').toLowerCase().includes(input.toLowerCase());\n  };\n  const generateLink = () => {\n    let usr = usuario.rol === 'Administrador' || usuario.rol === 'Recepcion' || usuario.rol === 'Enfermero' ? medico : usuario._id;\n    let l = `https://sistema.recreamed.com/${props.tipo}_public/${usr}/${selectedPatient}/${Date.now()}`;\n    // let l = `http://localhost:3000/${props.tipo}_public/${usr}/${selectedPatient}/${Date.now()}`\n    setLink(l);\n  };\n  const copyLink = () => {\n    navigator.clipboard.writeText(link);\n    message.success('Enlace Copiado al Portapapeles!');\n  };\n  const handleDownload = async () => {\n    const dataUrl = await toPng(imageRef.current, {\n      width: 288\n    });\n\n    // download image\n    const link = document.createElement('a');\n    link.download = \"codigo-de-enlace.png\";\n    link.href = dataUrl;\n    link.click();\n  };\n  const handleCopy = async () => {\n    message.info('Espere mientras se copia el codigo...');\n    toBlob(imageRef.current, {\n      width: 288\n    }).then(async function (blob) {\n      try {\n        await navigator.clipboard.write([\n        // eslint-disable-next-line no-undef\n        new ClipboardItem({\n          [blob.type]: blob\n        })]);\n        console.log(\"Image copied\");\n        message.success('Codigo Copiado al Portapapeles');\n      } catch (error) {\n        console.error(error);\n      }\n    });\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 25\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n      label: \"Paciente\",\n      name: \"usuario\",\n      rules: [{\n        required: true,\n        message: 'Selecciona el paciente'\n      }],\n      style: {\n        alignItems: 'center',\n        paddingTop: 20\n      },\n      labelCol: {\n        span: 6\n      },\n      wrapperCol: {\n        span: 18\n      },\n      children: /*#__PURE__*/_jsxDEV(Select, {\n        showSearch: true,\n        filterOption: filterOption,\n        onChange: handlePatientChange,\n        placeholder: \"Selecciona un paciente\",\n        value: selectedPatient,\n        options: allPacientes.map(p => ({\n          ...p,\n          key: p._id,\n          value: p._id,\n          label: p.name\n        }))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this), (usuario.rol === 'Administrador' || usuario.rol === 'Recepcion' || usuario.rol === 'Enfermero') && /*#__PURE__*/_jsxDEV(Form.Item, {\n      label: \"Medico\",\n      name: \"usuario\",\n      rules: [{\n        required: true,\n        message: 'Selecciona el paciente'\n      }],\n      style: {\n        alignItems: 'center',\n        paddingTop: 20\n      },\n      labelCol: {\n        span: 6\n      },\n      wrapperCol: {\n        span: 18\n      },\n      children: /*#__PURE__*/_jsxDEV(Select, {\n        showSearch: true,\n        filterOption: filterOption,\n        onChange: handleDoctorChange,\n        placeholder: \"Selecciona un medico\",\n        options: medicos.map(p => ({\n          ...p,\n          key: p._id,\n          value: p._id,\n          label: p.name\n        }))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: generateLink,\n      disabled: usuario.rol === 'Medico' ? !selectedPatient : !medico,\n      children: \"Generar Enlace\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 13\n    }, this), selectedPatient && link ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          paddingTop: 16,\n          color: '#1890ff'\n        },\n        children: link\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: copyLink,\n        children: \"Copiar Link\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 21\n      }, this), usuario.rol === 'Recepcion' && /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        href: link,\n        target: \"_blank\",\n        rel: \"noreferrer\",\n        style: {\n          marginLeft: 14\n        },\n        children: \"Contestar Ahora\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 56\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"columna\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          ref: imageRef,\n          style: {\n            background: 'white',\n            padding: '16px'\n          },\n          children: [\" \", /*#__PURE__*/_jsxDEV(QRCode, {\n            value: link\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 95\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleDownload,\n            children: \"Descargar Codigo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleCopy,\n            style: {\n              marginLeft: 12\n            },\n            children: \"Copiar Codigo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 43\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 9\n  }, this);\n}\n_s(EscalasCreateGeneralLink, \"LWfbd/dNOjVSqwuoPkjXB8P7560=\");\n_c = EscalasCreateGeneralLink;\nvar _c;\n$RefreshReg$(_c, \"EscalasCreateGeneralLink\");","map":{"version":3,"names":["React","useEffect","useState","useRef","getData","sendDataBody","Form","Button","Space","Select","message","usuario","ids_hospitales","QRCode","toBlob","toPng","Loading","jsxDEV","_jsxDEV","Fragment","_Fragment","Option","EscalasCreateGeneralLink","props","_s","loading","setLoading","link","setLink","medico","setMedico","medicos","setMedicos","selectedPatient","setSelectedPatient","allPacientes","setAllPacientes","getAllMedicos","then","rs","getAllPacientes","rol","getPacientesOfDoctor","_id","medicosFormatted","map","m","handlePatientChange","value","found","find","p","medicos_asignados","forEach","label","name","error","handleDoctorChange","console","log","imageRef","filterOption","input","option","_option$label","toLowerCase","includes","generateLink","usr","l","tipo","Date","now","copyLink","navigator","clipboard","writeText","success","handleDownload","dataUrl","current","width","document","createElement","download","href","click","handleCopy","info","blob","write","ClipboardItem","type","fileName","_jsxFileName","lineNumber","columnNumber","children","Item","rules","required","style","alignItems","paddingTop","labelCol","span","wrapperCol","showSearch","onChange","placeholder","options","key","onClick","disabled","color","target","rel","marginLeft","className","ref","background","padding","_c","$RefreshReg$"],"sources":["C:/Users/Gil/Documents/ReCreaMed/src/escalas/escalasCreateGeneralLink.jsx"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react'\r\nimport { getData, sendDataBody } from '../resources';\r\nimport { Form, Button, Space, Select, message } from 'antd'\r\nimport { usuario, ids_hospitales } from '../resources';\r\nimport QRCode from \"react-qr-code\";\r\nimport { toBlob, toPng } from 'html-to-image';\r\nimport Loading from '../loading';\r\nconst { Option } = Select;\r\n\r\n\r\n\r\nexport default function EscalasCreateGeneralLink(props) {\r\n\r\n    const [loading, setLoading] = useState(true)\r\n\r\n    const [link, setLink] = useState('')\r\n\r\n    // New Mode of first patient after medic selecting\r\n    const [medico, setMedico] = useState(null) // medico selected\r\n    const [medicos, setMedicos] = useState([]) // List of medicos able to select\r\n    const [selectedPatient, setSelectedPatient] = useState(null)\r\n    const [allPacientes, setAllPacientes] = useState([])\r\n    useEffect(() => {\r\n        const getAllMedicos = async () => {\r\n            await getData(`users/hospital/${ids_hospitales[0]}`).then(rs => { getAllPacientes(rs) })\r\n        }\r\n\r\n        usuario.rol === 'Medico' ? getPacientesOfDoctor(usuario._id) : getAllMedicos()\r\n\r\n    }, [])\r\n\r\n    const getAllPacientes = async (medicos) => {\r\n        const medicosFormatted = medicos.map(m => m._id)\r\n        await sendDataBody('pacientes/medicos', { medicos: medicosFormatted }).then(rs => { setAllPacientes(rs); setLoading(false) })\r\n    }\r\n\r\n    const handlePatientChange = (value) => {\r\n        setLink(null);\r\n        setSelectedPatient(value)\r\n        const found = allPacientes.find((p) => p._id === value);\r\n        if (found) {\r\n\r\n            let { medicos_asignados } = found\r\n            medicos_asignados.forEach((m) => {\r\n                m.label = m.name; m.value = m._id\r\n            });\r\n\r\n            setMedicos(medicos_asignados);\r\n\r\n        } else {\r\n            message.error('Paciente no encontrado')\r\n        }\r\n    };\r\n\r\n    const handleDoctorChange = (value) => { setMedico(value); setLink(null); };\r\n\r\n    const getPacientesOfDoctor = (_id) => { //Para el caso que la sesion sea de Medico\r\n        getData(`mispacientes/${_id}`).then(rs => { setSelectedPatient(null); setAllPacientes(rs); setLoading(false); console.log(`patients of ${_id}`, rs); })\r\n    }\r\n    // End New Mode of first patient after medic selecting\r\n\r\n    const imageRef = useRef(null);\r\n\r\n    // Filter `option.label` match the user type `input`\r\n    const filterOption = (input, option) =>\r\n        (option?.label ?? '').toLowerCase().includes(input.toLowerCase());\r\n\r\n    const generateLink = () => {\r\n        let usr = (usuario.rol === 'Administrador' || usuario.rol === 'Recepcion' || usuario.rol === 'Enfermero') ? medico : usuario._id;\r\n\r\n        let l = `https://sistema.recreamed.com/${props.tipo}_public/${usr}/${selectedPatient}/${Date.now()}`\r\n        // let l = `http://localhost:3000/${props.tipo}_public/${usr}/${selectedPatient}/${Date.now()}`\r\n        setLink(l)\r\n    }\r\n    const copyLink = () => {\r\n        navigator.clipboard.writeText(link)\r\n        message.success('Enlace Copiado al Portapapeles!')\r\n    }\r\n\r\n    const handleDownload = async () => {\r\n        const dataUrl = await toPng(imageRef.current, { width: 288 });\r\n\r\n        // download image\r\n        const link = document.createElement('a');\r\n        link.download = \"codigo-de-enlace.png\";\r\n        link.href = dataUrl;\r\n        link.click();\r\n    }\r\n\r\n    const handleCopy = async () => {\r\n        message.info('Espere mientras se copia el codigo...')\r\n        toBlob(imageRef.current, { width: 288 })\r\n            .then(async function (blob) {\r\n                try {\r\n                    await navigator.clipboard.write([\r\n                        // eslint-disable-next-line no-undef\r\n                        new ClipboardItem({\r\n                            [blob.type]: blob\r\n                        })\r\n                    ]);\r\n                    console.log(\"Image copied\");\r\n                    message.success('Codigo Copiado al Portapapeles')\r\n                } catch (error) {\r\n                    console.error(error);\r\n                }\r\n            });\r\n    }\r\n\r\n    if (loading) return <Loading />\r\n\r\n    return (\r\n        <div>\r\n\r\n            <Form.Item label=\"Paciente\" name=\"usuario\" rules={[{ required: true, message: 'Selecciona el paciente' }]}\r\n                style={{ alignItems: 'center', paddingTop: 20 }}\r\n                labelCol={{ span: 6 }} wrapperCol={{ span: 18 }}>\r\n\r\n                <Select\r\n                    showSearch\r\n                    filterOption={filterOption}\r\n                    onChange={handlePatientChange}\r\n                    placeholder='Selecciona un paciente'\r\n                    value={selectedPatient}\r\n                    options={\r\n                        allPacientes.map((p) => (\r\n                            {\r\n                                ...p,\r\n                                key: p._id,\r\n                                value: p._id,\r\n                                label: p.name\r\n                            }\r\n                        ))\r\n                    }\r\n                />\r\n            </Form.Item>\r\n\r\n\r\n            {\r\n                (usuario.rol === 'Administrador' || usuario.rol === 'Recepcion' || usuario.rol === 'Enfermero') &&\r\n                <Form.Item label=\"Medico\" name=\"usuario\" rules={[{ required: true, message: 'Selecciona el paciente' }]}\r\n                    style={{ alignItems: 'center', paddingTop: 20 }}\r\n                    labelCol={{ span: 6 }} wrapperCol={{ span: 18 }}>\r\n\r\n                    <Select\r\n                        showSearch\r\n                        filterOption={filterOption}\r\n                        onChange={handleDoctorChange}\r\n                        placeholder='Selecciona un medico'\r\n                        options={\r\n                            medicos.map((p) => (\r\n                                {\r\n                                    ...p,\r\n                                    key: p._id,\r\n                                    value: p._id,\r\n                                    label: p.name\r\n                                }\r\n                            ))\r\n                        }\r\n                    />\r\n                </Form.Item>\r\n            }\r\n\r\n\r\n            <Button onClick={generateLink} disabled={usuario.rol === 'Medico' ? !selectedPatient : !medico} >Generar Enlace</Button>\r\n\r\n\r\n            <br />\r\n\r\n            {\r\n                selectedPatient && link ? <div>\r\n\r\n                    <p style={{ paddingTop: 16, color: '#1890ff' }} >{link}</p>\r\n                    <Button onClick={copyLink}>Copiar Link</Button>\r\n\r\n                    {\r\n                        usuario.rol === 'Recepcion' && <Button type='primary' href={link} target='_blank' rel='noreferrer' style={{ marginLeft: 14 }}>Contestar Ahora</Button>\r\n                    }\r\n\r\n                    <br />\r\n                    \r\n                    <div className='columna'>\r\n                        <div ref={imageRef} style={{ background: 'white', padding: '16px' }}> <QRCode value={link} /> </div>\r\n                        <div>\r\n                            <Button onClick={handleDownload}>Descargar Codigo</Button>\r\n                            <Button onClick={handleCopy} style={{ marginLeft: 12 }}>Copiar Codigo</Button>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div> : <></>\r\n            }\r\n\r\n        </div >\r\n    )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}