{"ast":null,"code":"import{useState,useEffect}from'react';import{Button,Modal,Form,Input,Select,InputNumber,message}from'antd';import{getData,sendDataBody,updateData,usuario}from'../../resources';// DOCTOR CREATE BALANCE\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function CreateBalance(props){const[pacientesData,setPacientesData]=useState({});const handleOk=()=>{props.setIsModalOpen(false);};const handleCancel=()=>{props.setIsModalOpen(false);props.setBalanceForEdit(null);};useEffect(()=>{console.log('received for edit ',props.balanceForEdit);return getPacientesData();},[]);useEffect(()=>{console.log('received for edit ',props.balanceForEdit);},[props.balanceForEdit]);const getPacientesData=()=>{getData(\"mispacientes/\".concat(usuario._id)).then(rs=>{rs.forEach(p=>{p.label=p.name;p.value=p._id;});setPacientesData(rs);});};// Form methods\nconst onFinish=values=>{if(!props.balanceForEdit||Object.keys(props.balanceForEdit).length===0){values.medico=usuario._id;values.fecha_hora=new Date();values.tipo=props.tipo;values.estado='pendiente';}console.log('Ready to send:',values);console.log('For Edit: ',props.balanceForEdit);props.balanceForEdit&&Object.keys(props.balanceForEdit).length>0?updateData(\"/balances/update/\".concat(props.balanceForEdit._id),values).then(rs=>{console.log(rs);props.setBalanceForEdit({});props.setIsModalOpen(false);props.getBalancesData();}):sendDataBody(\"balances/add\",values).then(rs=>{console.log(rs);message.success(rs.message||rs.error);}).finally(()=>{props.setBalanceForEdit({});props.setIsModalOpen(false);props.getBalancesData();});};const onFinishFailed=errorInfo=>{console.log('Failed:',errorInfo);};const handleChange=value=>{console.log(\"selected \".concat(value));};return/*#__PURE__*/_jsx(Modal,{title:props.balanceForEdit?\"Editar \".concat(props.tipo):\"Agregar \".concat(props.tipo),open:props.isModalOpen,onOk:handleOk,onCancel:handleCancel,destroyOnClose:true,footer:[/*#__PURE__*/_jsx(Button,{type:\"primary\",htmlType:\"submit\",form:\"edit_balance\",children:\"Guardar\"}),/*#__PURE__*/_jsx(Button,{onClick:handleCancel,children:\"Cancelar\"})],children:/*#__PURE__*/_jsxs(Form,{name:\"edit_balance\",labelCol:{span:8},wrapperCol:{span:16},initialValues:props.balanceForEdit,onFinish:onFinish,onFinishFailed:onFinishFailed,autoComplete:\"off\",children:[/*#__PURE__*/_jsx(Form.Item,{label:\"Monto\",name:\"monto\",rules:[{required:true,message:'Ingresa el monto'}],children:/*#__PURE__*/_jsx(InputNumber,{style:{width:'100%'}})}),/*#__PURE__*/_jsx(Form.Item,{label:\"Abono\"// name=\"abono\"\n,rules:[{required:true,message:'Ingresa el abono'}],children:/*#__PURE__*/_jsx(InputNumber,{style:{width:'100%'}})}),// Para el caso que sea un ingreso sin cita\n(!props.balanceForEdit||Object.keys(props.balanceForEdit).length===0)&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Form.Item,{label:\"Concepto\",name:\"concepto\",rules:[{required:true,message:'Ingresa el concepto'}],children:/*#__PURE__*/_jsx(Input,{})}),props.tipo==='ingreso'&&/*#__PURE__*/_jsx(Form.Item,{label:\"Paciente\",name:\"paciente\",children:/*#__PURE__*/_jsx(Select,{onChange:handleChange,options:pacientesData})})]}),/*#__PURE__*/_jsx(Form.Item,{label:\"Forma de Pago\",name:\"forma_de_pago\",children:/*#__PURE__*/_jsx(Select,{onChange:handleChange,options:[{value:'efectivo',label:'Efectivo'},{value:'tarjeta',label:'Tarjeta'},{value:'transferencia',label:'Transferencia'}]})}),/*#__PURE__*/_jsx(Form.Item,{wrapperCol:{offset:8,span:16}})]})});}","map":{"version":3,"names":["useState","useEffect","Button","Modal","Form","Input","Select","InputNumber","message","getData","sendDataBody","updateData","usuario","jsx","_jsx","jsxs","_jsxs","CreateBalance","props","pacientesData","setPacientesData","handleOk","setIsModalOpen","handleCancel","setBalanceForEdit","console","log","balanceForEdit","getPacientesData","concat","_id","then","rs","forEach","p","label","name","value","onFinish","values","Object","keys","length","medico","fecha_hora","Date","tipo","estado","getBalancesData","success","error","finally","onFinishFailed","errorInfo","handleChange","title","open","isModalOpen","onOk","onCancel","destroyOnClose","footer","type","htmlType","form","children","onClick","labelCol","span","wrapperCol","initialValues","autoComplete","Item","rules","required","style","width","onChange","options","offset"],"sources":["C:/Users/Gil/Documents/ReCreaMed/src/doctorViews/balances/create-balance.jsx"],"sourcesContent":["import { useState, useEffect } from 'react'\r\nimport { Button, Modal, Form, Input, Select, InputNumber, message } from 'antd';\r\nimport { getData, sendDataBody, updateData, usuario } from '../../resources';\r\n// DOCTOR CREATE BALANCE\r\nexport default function CreateBalance(props) {\r\n\r\n    const [pacientesData, setPacientesData] = useState({})\r\n    const handleOk = () => { props.setIsModalOpen(false) };\r\n    const handleCancel = () => { props.setIsModalOpen(false); props.setBalanceForEdit(null) };\r\n\r\n    useEffect(() => {\r\n        console.log('received for edit ', props.balanceForEdit)\r\n        return getPacientesData()\r\n    }, [])\r\n    useEffect(() => {\r\n        console.log('received for edit ', props.balanceForEdit)\r\n    }, [props.balanceForEdit])\r\n\r\n    const getPacientesData = () => {\r\n        getData(`mispacientes/${usuario._id}`).then((rs) => {\r\n            rs.forEach(p => { p.label = p.name; p.value = p._id; });\r\n            setPacientesData(rs);\r\n        })\r\n    }\r\n\r\n    // Form methods\r\n    const onFinish = (values) => {\r\n\r\n        if (!props.balanceForEdit || Object.keys(props.balanceForEdit).length === 0) {\r\n            values.medico = usuario._id\r\n            values.fecha_hora = new Date();\r\n            values.tipo = props.tipo;\r\n            values.estado = 'pendiente'\r\n        }\r\n\r\n\r\n        console.log('Ready to send:', values);\r\n        console.log('For Edit: ', props.balanceForEdit);\r\n\r\n        (props.balanceForEdit && Object.keys(props.balanceForEdit).length > 0) ?\r\n            updateData(`/balances/update/${props.balanceForEdit._id}`, values).then((rs) => {\r\n                console.log(rs); props.setBalanceForEdit({}); props.setIsModalOpen(false); props.getBalancesData()\r\n            })\r\n            :\r\n            sendDataBody(`balances/add`, values)\r\n                .then((rs) => { console.log(rs); message.success(rs.message || rs.error) })\r\n                .finally(() => {\r\n                    props.setBalanceForEdit({}); props.setIsModalOpen(false); props.getBalancesData()\r\n                })\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => { console.log('Failed:', errorInfo) };\r\n\r\n    const handleChange = (value) => { console.log(`selected ${value}`) };\r\n\r\n    return (\r\n        <Modal title={props.balanceForEdit ? `Editar ${props.tipo}` : `Agregar ${props.tipo}`} open={props.isModalOpen} onOk={handleOk} onCancel={handleCancel} destroyOnClose\r\n            footer={[\r\n                <Button type=\"primary\" htmlType=\"submit\" form='edit_balance'>\r\n                    Guardar\r\n                </Button>,\r\n                <Button onClick={handleCancel}>\r\n                    Cancelar\r\n                </Button>\r\n            ]}>\r\n            <Form\r\n                name=\"edit_balance\"\r\n                labelCol={{ span: 8 }}\r\n                wrapperCol={{ span: 16 }}\r\n                initialValues={props.balanceForEdit}\r\n                onFinish={onFinish}\r\n                onFinishFailed={onFinishFailed}\r\n                autoComplete=\"off\"\r\n            >\r\n\r\n\r\n                <Form.Item\r\n                    label=\"Monto\"\r\n                    name=\"monto\"\r\n                    rules={[{ required: true, message: 'Ingresa el monto' }]}\r\n                >\r\n                    <InputNumber style={{ width: '100%' }} />\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                    label=\"Abono\"\r\n                    // name=\"abono\"\r\n                    rules={[{ required: true, message: 'Ingresa el abono' }]}\r\n                >\r\n                    <InputNumber style={{ width: '100%' }} />\r\n                </Form.Item>\r\n\r\n                {\r\n                    // Para el caso que sea un ingreso sin cita\r\n                    (!props.balanceForEdit || Object.keys(props.balanceForEdit).length === 0) && <div>\r\n                        <Form.Item\r\n                            label=\"Concepto\"\r\n                            name=\"concepto\"\r\n                            rules={[{ required: true, message: 'Ingresa el concepto' }]}\r\n                        >\r\n                            <Input />\r\n                        </Form.Item>\r\n\r\n                        {\r\n                            props.tipo === 'ingreso' && <Form.Item\r\n                                label=\"Paciente\"\r\n                                name=\"paciente\"\r\n                            >\r\n                                <Select\r\n                                    onChange={handleChange}\r\n                                    options={pacientesData}\r\n                                />\r\n                            </Form.Item>\r\n                        }\r\n\r\n                    </div>\r\n                }\r\n\r\n                <Form.Item\r\n                    label=\"Forma de Pago\"\r\n                    name=\"forma_de_pago\"\r\n                >\r\n                    <Select\r\n                        onChange={handleChange}\r\n                        options={[\r\n                            {\r\n                                value: 'efectivo',\r\n                                label: 'Efectivo',\r\n                            },\r\n                            {\r\n                                value: 'tarjeta',\r\n                                label: 'Tarjeta',\r\n                            },\r\n                            {\r\n                                value: 'transferencia',\r\n                                label: 'Transferencia',\r\n                            },\r\n                        ]}\r\n                    />\r\n                </Form.Item>\r\n\r\n                {/* <Form.Item\r\n                    label=\"Estado\"\r\n                    name=\"estado\"\r\n                    rules={[{ required: true, message: 'Ingresa el monto' }]}\r\n                >\r\n                    <Select\r\n                        onChange={handleChange}\r\n                        options={[\r\n                            {\r\n                                value: 'pendiente',\r\n                                label: 'Pendiente',\r\n                            },\r\n                            {\r\n                                value: 'pagado',\r\n                                label: 'Pagado',\r\n                            },\r\n                            {\r\n                                value: 'pago parcial',\r\n                                label: 'Pago parcial',\r\n                            },\r\n                        ]}\r\n                    />\r\n                </Form.Item> */}\r\n\r\n                <Form.Item\r\n                    wrapperCol={{\r\n                        offset: 8,\r\n                        span: 16,\r\n                    }}\r\n                >\r\n\r\n                </Form.Item>\r\n            </Form>\r\n        </Modal>\r\n    )\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}